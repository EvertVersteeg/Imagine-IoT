Component: ARM Compiler 6.13 Tool: armlink [5d895400]

==============================================================================

Loading Objects.

Loading object BUILD/NUCLEO_L476RG/ARMC6/main.o.
              weak defn :  mbed::DigitalOut::read()
              weak defn :  mbed::DigitalOut::write(int)
              weak defn :  mbed::DigitalOut::DigitalOut__sub_object(PinName)
              weak defn :  mbed::DigitalOut::operator =(int)
              weak defn :  mbed::DigitalOut::operator int()
              definition:  __ARM_use_no_argv
              reference :  gpio_init_out
              definition:  main
              reference :  thread_sleep_for
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/cmsis/CMSIS_5/CMSIS/RTOS2/RTX/Config/RTX_Config.o.
              weak defn :  osRtxErrorNotify
              weak defn :  osRtxIdleThread
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/cmsis/CMSIS_5/CMSIS/RTOS2/RTX/Library/cmsis_os1.o.
              reference :  __aeabi_memclr
              definition:  osMailAlloc
              definition:  osMailCAlloc
              definition:  osMailCreate
              definition:  osMailFree
              definition:  osMailGet
              definition:  osMailPut
              reference :  osMemoryPoolAlloc
              reference :  osMemoryPoolDelete
              reference :  osMemoryPoolFree
              reference :  osMemoryPoolGetBlockSize
              reference :  osMemoryPoolNew
              definition:  osMessageCreate
              definition:  osMessageGet
              definition:  osMessagePut
              reference :  osMessageQueueDelete
              reference :  osMessageQueueGet
              reference :  osMessageQueueNew
              reference :  osMessageQueuePut
              definition:  osMutexCreate
              reference :  osMutexNew
              definition:  osPoolAlloc
              definition:  osPoolCAlloc
              definition:  osPoolCreate
              definition:  osPoolFree
              reference :  osSemaphoreAcquire
              definition:  osSemaphoreCreate
              reference :  osSemaphoreGetCount
              reference :  osSemaphoreNew
              definition:  osSemaphoreWait
              definition:  osSignalClear
              definition:  osSignalSet
              definition:  osSignalWait
              definition:  osThreadCreate
              reference :  osThreadFlagsClear
              reference :  osThreadFlagsSet
              reference :  osThreadFlagsWait
              reference :  osThreadGetId
              reference :  osThreadNew
              definition:  osTimerCreate
              reference :  osTimerNew
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/cmsis/CMSIS_5/CMSIS/RTOS2/RTX/Source/TOOLCHAIN_ARM/TARGET_RTOS_M4_M7/irq_cm4f.o.
              definition:  irqRtxLib
              definition:  SVC_Handler
              definition:  PendSV_Handler
              definition:  SysTick_Handler
              reference :  osRtxInfo
              reference :  osRtxPendSV_Handler
              reference :  osRtxTick_Handler
              reference :  osRtxUserSVC
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/cmsis/CMSIS_5/CMSIS/RTOS2/RTX/Source/rtx_delay.o.
              reference :  EvrRtxDelayError
              definition:  osDelay
              definition:  osDelayUntil
              reference :  osRtxInfo
              reference :  osRtxThreadWaitEnter
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/cmsis/CMSIS_5/CMSIS/RTOS2/RTX/Source/rtx_evflags.o.
              reference :  EvrRtxEventFlagsError
              definition:  osEventFlagsClear
              definition:  osEventFlagsDelete
              definition:  osEventFlagsGet
              definition:  osEventFlagsGetName
              definition:  osEventFlagsNew
              definition:  osEventFlagsSet
              definition:  osEventFlagsWait
              reference :  osRtxInfo
              reference :  osRtxMemoryAlloc
              reference :  osRtxMemoryFree
              reference :  osRtxMemoryPoolAlloc
              reference :  osRtxMemoryPoolFree
              reference :  osRtxPostProcess
              reference :  osRtxThreadDispatch
              reference :  osRtxThreadListGet
              reference :  osRtxThreadListPut
              reference :  osRtxThreadListRemove
              reference :  osRtxThreadWaitEnter
              reference :  osRtxThreadWaitExit
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/cmsis/CMSIS_5/CMSIS/RTOS2/RTX/Source/rtx_evr.o.
              weak defn :  EvrRtxDelayError
              weak defn :  EvrRtxEventFlagsError
              weak defn :  EvrRtxKernelError
              weak defn :  EvrRtxMemoryPoolError
              weak defn :  EvrRtxMessageQueueError
              weak defn :  EvrRtxMutexError
              weak defn :  EvrRtxSemaphoreError
              weak defn :  EvrRtxThreadError
              weak defn :  EvrRtxThreadExit
              weak defn :  EvrRtxThreadFlagsError
              weak defn :  EvrRtxThreadPriorityUpdated
              weak defn :  EvrRtxThreadTerminate
              weak defn :  EvrRtxTimerError
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/cmsis/CMSIS_5/CMSIS/RTOS2/RTX/Source/rtx_kernel.o.
              reference :  EvrRtxKernelError
              reference :  OS_Tick_Disable
              reference :  OS_Tick_Enable
              reference :  OS_Tick_GetClock
              reference :  OS_Tick_GetCount
              reference :  OS_Tick_GetIRQn
              reference :  OS_Tick_GetInterval
              reference :  OS_Tick_GetOverflow
              reference :  OS_Tick_Setup
              reference :  SysTick_Handler
              reference :  __aeabi_memclr4
              reference :  __aeabi_memcpy
              definition:  osKernelGetInfo
              definition:  osKernelGetState
              definition:  osKernelGetSysTimerCount
              definition:  osKernelGetSysTimerFreq
              definition:  osKernelGetTickCount
              definition:  osKernelGetTickFreq
              definition:  osKernelInitialize
              definition:  osKernelLock
              definition:  osKernelRestoreLock
              definition:  osKernelResume
              definition:  osKernelStart
              definition:  osKernelSuspend
              definition:  osKernelUnlock
              reference :  osRtxConfig
              definition:  osRtxInfo
              weak defn :  osRtxKernelPreInit
              reference :  osRtxMemoryInit
              reference :  osRtxMemoryPoolInit
              reference :  osRtxThreadDelayTick
              reference :  osRtxThreadDispatch
              reference :  osRtxThreadListGet
              reference :  osRtxThreadStartup
              reference :  osRtxThreadSwitch
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/cmsis/CMSIS_5/CMSIS/RTOS2/RTX/Source/rtx_lib.o.
              weak ref  :  .bss.os.evflags.cb$$Base
              weak ref  :  .bss.os.evflags.cb$$Limit
              weak ref  :  .bss.os.mempool.cb$$Base
              weak ref  :  .bss.os.mempool.cb$$Limit
              weak ref  :  .bss.os.msgqueue.cb$$Base
              weak ref  :  .bss.os.msgqueue.cb$$Limit
              weak ref  :  .bss.os.mutex.cb$$Base
              weak ref  :  .bss.os.mutex.cb$$Limit
              weak ref  :  .bss.os.semaphore.cb$$Base
              weak ref  :  .bss.os.semaphore.cb$$Limit
              weak ref  :  .bss.os.thread.cb$$Base
              weak ref  :  .bss.os.thread.cb$$Limit
              weak ref  :  .bss.os.timer.cb$$Base
              weak ref  :  .bss.os.timer.cb$$Limit
              weak defn :  _platform_post_stackheap_init
              reference :  irqRtxLib
              definition:  irqRtxLibRef
              reference :  osKernelInitialize
              definition:  osRtxConfig
              weak defn :  osRtxUserSVC
              definition:  os_cb_sections
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/cmsis/CMSIS_5/CMSIS/RTOS2/RTX/Source/rtx_memory.o.
              weak defn :  osRtxMemoryAlloc
              weak defn :  osRtxMemoryFree
              weak defn :  osRtxMemoryInit
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/cmsis/CMSIS_5/CMSIS/RTOS2/RTX/Source/rtx_mempool.o.
              reference :  EvrRtxMemoryPoolError
              reference :  __aeabi_memclr
              definition:  osMemoryPoolAlloc
              definition:  osMemoryPoolDelete
              definition:  osMemoryPoolFree
              definition:  osMemoryPoolGetBlockSize
              definition:  osMemoryPoolGetCapacity
              definition:  osMemoryPoolGetCount
              definition:  osMemoryPoolGetName
              definition:  osMemoryPoolGetSpace
              definition:  osMemoryPoolNew
              reference :  osRtxInfo
              reference :  osRtxMemoryAlloc
              reference :  osRtxMemoryFree
              definition:  osRtxMemoryPoolAlloc
              definition:  osRtxMemoryPoolFree
              definition:  osRtxMemoryPoolInit
              reference :  osRtxPostProcess
              reference :  osRtxThreadDispatch
              reference :  osRtxThreadListGet
              reference :  osRtxThreadListPut
              reference :  osRtxThreadWaitEnter
              reference :  osRtxThreadWaitExit
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/cmsis/CMSIS_5/CMSIS/RTOS2/RTX/Source/rtx_msgqueue.o.
              reference :  EvrRtxMessageQueueError
              reference :  __aeabi_memclr
              reference :  __aeabi_memcpy
              definition:  osMessageQueueDelete
              definition:  osMessageQueueGet
              definition:  osMessageQueueGetCapacity
              definition:  osMessageQueueGetCount
              definition:  osMessageQueueGetMsgSize
              definition:  osMessageQueueGetName
              definition:  osMessageQueueGetSpace
              definition:  osMessageQueueNew
              definition:  osMessageQueuePut
              definition:  osMessageQueueReset
              reference :  osRtxInfo
              reference :  osRtxMemoryAlloc
              reference :  osRtxMemoryFree
              reference :  osRtxMemoryPoolAlloc
              reference :  osRtxMemoryPoolFree
              reference :  osRtxMemoryPoolInit
              reference :  osRtxPostProcess
              reference :  osRtxThreadDispatch
              reference :  osRtxThreadListGet
              reference :  osRtxThreadListPut
              reference :  osRtxThreadRegPtr
              reference :  osRtxThreadWaitEnter
              reference :  osRtxThreadWaitExit
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/cmsis/CMSIS_5/CMSIS/RTOS2/RTX/Source/rtx_mutex.o.
              reference :  EvrRtxMutexError
              definition:  osMutexAcquire
              definition:  osMutexDelete
              definition:  osMutexGetName
              definition:  osMutexGetOwner
              definition:  osMutexNew
              definition:  osMutexRelease
              reference :  osRtxInfo
              reference :  osRtxMemoryAlloc
              reference :  osRtxMemoryFree
              reference :  osRtxMemoryPoolAlloc
              reference :  osRtxMemoryPoolFree
              definition:  osRtxMutexOwnerRelease
              definition:  osRtxMutexOwnerRestore
              reference :  osRtxThreadDispatch
              reference :  osRtxThreadListGet
              reference :  osRtxThreadListPut
              reference :  osRtxThreadListSort
              reference :  osRtxThreadWaitEnter
              reference :  osRtxThreadWaitExit
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/cmsis/CMSIS_5/CMSIS/RTOS2/RTX/Source/rtx_semaphore.o.
              reference :  EvrRtxSemaphoreError
              reference :  osRtxInfo
              reference :  osRtxMemoryAlloc
              reference :  osRtxMemoryFree
              reference :  osRtxMemoryPoolAlloc
              reference :  osRtxMemoryPoolFree
              reference :  osRtxPostProcess
              reference :  osRtxThreadDispatch
              reference :  osRtxThreadListGet
              reference :  osRtxThreadListPut
              reference :  osRtxThreadWaitEnter
              reference :  osRtxThreadWaitExit
              definition:  osSemaphoreAcquire
              definition:  osSemaphoreDelete
              definition:  osSemaphoreGetCount
              definition:  osSemaphoreGetName
              definition:  osSemaphoreNew
              definition:  osSemaphoreRelease
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/cmsis/CMSIS_5/CMSIS/RTOS2/RTX/Source/rtx_system.o.
              reference :  OS_Tick_AcknowledgeIRQ
              reference :  osRtxErrorNotify
              reference :  osRtxInfo
              definition:  osRtxPendSV_Handler
              definition:  osRtxPostProcess
              reference :  osRtxThreadDelayTick
              reference :  osRtxThreadDispatch
              reference :  osRtxThreadListRemove
              reference :  osRtxThreadReadyPut
              reference :  osRtxThreadSwitch
              definition:  osRtxTick_Handler
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/cmsis/CMSIS_5/CMSIS/RTOS2/RTX/Source/rtx_thread.o.
              reference :  EvrRtxThreadError
              reference :  EvrRtxThreadExit
              reference :  EvrRtxThreadFlagsError
              reference :  EvrRtxThreadPriorityUpdated
              reference :  EvrRtxThreadTerminate
              reference :  __aeabi_memclr4
              reference :  __aeabi_memset4
              reference :  osRtxConfig
              reference :  osRtxErrorNotify
              reference :  osRtxIdleThread
              reference :  osRtxInfo
              reference :  osRtxMemoryAlloc
              reference :  osRtxMemoryFree
              reference :  osRtxMemoryPoolAlloc
              reference :  osRtxMemoryPoolFree
              reference :  osRtxMutexOwnerRelease
              reference :  osRtxMutexOwnerRestore
              reference :  osRtxPostProcess
              definition:  osRtxThreadDelayTick
              definition:  osRtxThreadDispatch
              definition:  osRtxThreadListGet
              definition:  osRtxThreadListPut
              definition:  osRtxThreadListRemove
              definition:  osRtxThreadListSort
              definition:  osRtxThreadReadyPut
              definition:  osRtxThreadRegPtr
              weak defn :  osRtxThreadStackCheck
              definition:  osRtxThreadStartup
              definition:  osRtxThreadSwitch
              definition:  osRtxThreadWaitEnter
              definition:  osRtxThreadWaitExit
              reference :  osRtxTimerThread
              definition:  osThreadDetach
              definition:  osThreadEnumerate
              definition:  osThreadExit
              definition:  osThreadFlagsClear
              definition:  osThreadFlagsGet
              definition:  osThreadFlagsSet
              definition:  osThreadFlagsWait
              definition:  osThreadGetCount
              definition:  osThreadGetId
              definition:  osThreadGetName
              definition:  osThreadGetPriority
              definition:  osThreadGetStackSize
              definition:  osThreadGetStackSpace
              definition:  osThreadGetState
              definition:  osThreadJoin
              definition:  osThreadNew
              definition:  osThreadResume
              definition:  osThreadSetPriority
              definition:  osThreadSuspend
              definition:  osThreadTerminate
              definition:  osThreadYield
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/cmsis/CMSIS_5/CMSIS/RTOS2/RTX/Source/rtx_timer.o.
              reference :  EvrRtxTimerError
              reference :  osMessageQueueGet
              reference :  osMessageQueueNew
              reference :  osMessageQueuePut
              reference :  osRtxConfig
              reference :  osRtxErrorNotify
              reference :  osRtxInfo
              reference :  osRtxMemoryAlloc
              reference :  osRtxMemoryFree
              reference :  osRtxMemoryPoolAlloc
              reference :  osRtxMemoryPoolFree
              weak defn :  osRtxTimerThread
              definition:  osTimerDelete
              definition:  osTimerGetName
              definition:  osTimerIsRunning
              definition:  osTimerNew
              definition:  osTimerStart
              definition:  osTimerStop
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/cmsis/CMSIS_5/CMSIS/RTOS2/Source/os_systick.o.
              weak defn :  OS_Tick_AcknowledgeIRQ
              weak defn :  OS_Tick_Disable
              weak defn :  OS_Tick_Enable
              weak defn :  OS_Tick_GetClock
              weak defn :  OS_Tick_GetCount
              weak defn :  OS_Tick_GetIRQn
              weak defn :  OS_Tick_GetInterval
              weak defn :  OS_Tick_GetOverflow
              weak defn :  OS_Tick_Setup
              reference :  SystemCoreClock
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/cmsis/CMSIS_5/CMSIS/RTOS2/Source/os_tick_ptim.o.
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/cmsis/CMSIS_5/CMSIS/TARGET_CORTEX_M/Source/mbed_tz_context.o.
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/cmsis/device/rtos/TOOLCHAIN_ARM_STD/mbed_boot_arm_std.o.
              reference :  Image$$ARM_LIB_STACK$$ZI$$Base
              reference :  Image$$ARM_LIB_STACK$$ZI$$Length
              reference :  Image$$RW_IRAM1$$ZI$$Limit
              definition:  __rt_entry
              reference :  __rt_lib_init
              reference :  __use_no_semihosting
              reference :  __use_two_region_memory
              definition:  __user_perthread_libspace
              definition:  _mutex_acquire
              definition:  _mutex_free
              definition:  _mutex_initialize
              definition:  _mutex_release
              reference :  _platform_post_stackheap_init
              definition:  _static_mutexes
              definition:  _static_mutexes_mem
              reference :  core_util_critical_section_enter
              reference :  core_util_critical_section_exit
              reference :  free
              reference :  malloc
              reference :  mbed_heap_size
              reference :  mbed_heap_start
              reference :  mbed_init
              reference :  mbed_rtos_start
              reference :  mbed_stack_isr_size
              reference :  mbed_stack_isr_start
              definition:  mbed_toolchain_init
              reference :  osKernelGetState
              reference :  osMutexAcquire
              reference :  osMutexDelete
              reference :  osMutexNew
              reference :  osMutexRelease
              reference :  osRtxErrorNotify
              reference :  osThreadGetId
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/cmsis/device/rtos/source/mbed_boot.o.
              reference :  main
              reference :  mbed_error_initialize
              definition:  mbed_init
              weak defn :  mbed_main
              reference :  mbed_mpu_init
              reference :  mbed_rtos_init
              reference :  mbed_rtos_init_singleton_mutex
              weak defn :  mbed_sdk_init
              definition:  mbed_stack_isr_size
              definition:  mbed_stack_isr_start
              definition:  mbed_start
              weak defn :  mbed_tfm_init
              reference :  mbed_toolchain_init
              weak defn :  software_init_hook_rtos
              reference :  us_ticker_init
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/cmsis/device/rtos/source/mbed_rtos_rtx.o.
              definition:  _main_obj
              definition:  _main_stack
              definition:  _main_thread_attr
              reference :  mbed_error
              definition:  mbed_rtos_init
              definition:  mbed_rtos_init_singleton_mutex
              definition:  mbed_rtos_start
              reference :  mbed_start
              reference :  osKernelInitialize
              reference :  osKernelStart
              reference :  osMutexNew
              reference :  osThreadNew
              definition:  singleton_mutex_id
              definition:  singleton_mutex_obj
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/cmsis/device/rtos/source/mbed_rtx_handlers.o.
              definition:  EvrRtxEventFlagsError
              definition:  EvrRtxKernelError
              definition:  EvrRtxMemoryPoolError
              definition:  EvrRtxMessageQueueError
              definition:  EvrRtxMutexError
              definition:  EvrRtxSemaphoreError
              definition:  EvrRtxThreadError
              definition:  EvrRtxThreadExit
              definition:  EvrRtxThreadTerminate
              definition:  EvrRtxTimerError
              reference :  mbed_error
              reference :  mbed_get_error_in_progress
              definition:  osRtxErrorNotify
              definition:  osRtxIdleThread
              reference :  osThreadGetId
              definition:  rtos_attach_thread_terminate_hook
              reference :  rtos_idle_loop
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/cmsis/device/rtos/source/mbed_rtx_idle.o.
              definition:  OS_Tick_AcknowledgeIRQ
              definition:  OS_Tick_Disable
              definition:  OS_Tick_Enable
              definition:  OS_Tick_GetClock
              definition:  OS_Tick_GetCount
              definition:  OS_Tick_GetIRQn
              definition:  OS_Tick_GetInterval
              definition:  OS_Tick_GetOverflow
              definition:  OS_Tick_Setup
              reference :  mbed::internal::init_os_timer()
              reference :  mbed::internal::do_timed_sleep_relative_to_acknowledged_ticks(std::__1::chrono::duration<unsigned, std::__1::ratio<(long long)1, (long long)1000>>, bool(*)(void*), void*)
              reference :  mbed::internal::SysTimer<std::__1::ratio<(long long)1, (long long)1000>, (bool)1>::start_tick()
              reference :  mbed::internal::SysTimer<std::__1::ratio<(long long)1, (long long)1000>, (bool)1>::cancel_tick()
              reference :  mbed::internal::SysTimer<std::__1::ratio<(long long)1, (long long)1000>, (bool)1>::get_irq_number()
              reference :  mbed::internal::SysTimer<std::__1::ratio<(long long)1, (long long)1000>, (bool)1>::acknowledge_tick()
              reference :  mbed::internal::os_timer
              reference :  mbed::internal::SysTimer<std::__1::ratio<(long long)1, (long long)1000>, (bool)1>::get_time_since_tick() const
              reference :  mbed_assert_internal
              reference :  osKernelResume
              reference :  osKernelSuspend
              reference :  osRtxInfo
              definition:  rtos_attach_idle_hook
              definition:  rtos_idle_loop
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/cellular/source/framework/AT/AT_CellularContext.o.
              reference :  SocketAddress::set_ip_address(const char*)
              weak defn :  SocketAddress::SocketAddress__sub_object()
              weak defn :  SocketAddress::~SocketAddress__sub_object()
              reference :  NetworkInterface::get_gateway(SocketAddress*)
              reference :  NetworkInterface::get_netmask(SocketAddress*)
              reference :  NetworkInterface::getaddrinfo(const char*, SocketAddress*, SocketAddress**, const char*)
              reference :  NetworkInterface::set_network(const SocketAddress&, const SocketAddress&, const SocketAddress&)
              weak defn :  NetworkInterface::ethInterface()
              weak defn :  NetworkInterface::emacInterface()
              reference :  NetworkInterface::gethostbyname(const char*, SocketAddress*, nsapi_version, const char*)
              weak defn :  NetworkInterface::meshInterface()
              weak defn :  NetworkInterface::wifiInterface()
              reference :  NetworkInterface::add_dns_server(const SocketAddress&, const char*)
              reference :  NetworkInterface::get_dns_server(int, SocketAddress*, const char*)
              reference :  NetworkInterface::set_as_default()
              reference :  NetworkInterface::get_mac_address()
              reference :  NetworkInterface::getaddrinfo_async(const char*, SocketAddress*, mbed::Callback<void(int, SocketAddress*)>, const char*)
              reference :  NetworkInterface::gethostbyname_async(const char*, mbed::Callback<void(int, SocketAddress*)>, nsapi_version, const char*)
              reference :  NetworkInterface::gethostbyname_async_cancel(int)
              reference :  NetworkInterface::get_ipv6_link_local_address(SocketAddress*)
              reference :  NetworkInterface::set_dhcp(bool)
              reference :  NetworkInterface::~NetworkInterface__sub_object()
              weak defn :  CellularInterface::cellularInterface()
              reference :  CellularInterface::set_default_parameters()
              reference :  mbed_cellular_util::separate_ip_addresses(char*, char*, unsigned, char*, unsigned)
              weak defn :  mbed::CellularList<mbed::CellularContext::pdpcontext_params_t>::add_new()
              weak defn :  mbed::CellularList<mbed::CellularContext::pdpcontext_params_t>::get_head()
              weak defn :  mbed::CellularList<mbed::CellularContext::pdpcontext_params_t>::CellularList__sub_object()
              weak defn :  mbed::CellularList<mbed::CellularContext::pdpcontext_params_t>::~CellularList__sub_object()
              reference :  mbed::BufferedSerial::set_data_carrier_detect(PinName, bool)
              reference :  mbed::CellularDevice::set_sim_pin(const char*)
              reference :  mbed::CellularDevice::set_sim_ready()
              reference :  mbed::CellularDevice::set_device_ready()
              reference :  mbed::CellularDevice::attach_to_network()
              reference :  mbed::CellularDevice::register_to_network()
              reference :  mbed::CellularDevice::set_plmn(const char*)
              reference :  mbed::CellularContext::call_network_cb(nsapi_connection_status)
              reference :  mbed::CellularContext::string_to_pdp_type(const char*)
              weak defn :  mbed::CellularContext::pdpcontext_params_t::pdpcontext_params_t__sub_object()
              reference :  mbed::CellularContext::do_connect_with_retry()
              reference :  mbed::CellularContext::CellularContext__sub_object()
              weak defn :  mbed::CellularContext::~CellularContext__sub_object()
              weak defn :  mbed::CellularNetwork::registration_params_t::registration_params_t__sub_object()
              reference :  mbed::AT_CellularStack::set_cid(int)
              reference :  mbed::AT_CellularDevice::get_property(mbed::AT_CellularDevice::CellularProperty)
              definition:  mbed::AT_CellularContext::disconnect()
              definition:  mbed::AT_CellularContext::do_connect()
              definition:  mbed::AT_CellularContext::enable_hup(bool)
              definition:  mbed::AT_CellularContext::ciot_opt_cb(mbed::CellularNetwork::CIoT_Supported_Opt)
              definition:  mbed::AT_CellularContext::get_context()
              definition:  mbed::AT_CellularContext::set_sim_pin(const char*)
              definition:  mbed::AT_CellularContext::get_cp_netif()
              definition:  mbed::AT_CellularContext::is_connected()
              definition:  mbed::AT_CellularContext::set_blocking(bool)
              definition:  mbed::AT_CellularContext::configure_hup(PinName, bool)
              definition:  mbed::AT_CellularContext::do_disconnect()
              definition:  mbed::AT_CellularContext::set_sim_ready()
              definition:  mbed::AT_CellularContext::get_ip_address(SocketAddress*)
              definition:  mbed::AT_CellularContext::set_disconnect()
              definition:  mbed::AT_CellularContext::check_operation(int, mbed::CellularContext::ContextOperation)
              definition:  mbed::AT_CellularContext::set_credentials(const char*, const char*, const char*)
              definition:  mbed::AT_CellularContext::set_new_context(int)
              definition:  mbed::AT_CellularContext::activate_context()
              definition:  mbed::AT_CellularContext::get_rate_control(mbed::CellularContext::RateControlExceptionReports&, mbed::CellularContext::RateControlUplinkTimeUnit&, int&)
              definition:  mbed::AT_CellularContext::set_device_ready()
              definition:  mbed::AT_CellularContext::attach_to_network()
              definition:  mbed::AT_CellularContext::cellular_callback(nsapi_event, int)
              definition:  mbed::AT_CellularContext::deactivate_context()
              definition:  mbed::AT_CellularContext::get_interface_name(char*)
              definition:  mbed::AT_CellularContext::activate_ip_context()
              definition:  mbed::AT_CellularContext::do_activate_context()
              definition:  mbed::AT_CellularContext::register_to_network()
              definition:  mbed::AT_CellularContext::deactivate_ip_context()
              definition:  mbed::AT_CellularContext::do_connect_with_retry()
              definition:  mbed::AT_CellularContext::get_apn_backoff_timer(int&)
              definition:  mbed::AT_CellularContext::get_pdpcontext_params(mbed::CellularList<mbed::CellularContext::pdpcontext_params_t>&)
              definition:  mbed::AT_CellularContext::delete_current_context()
              definition:  mbed::AT_CellularContext::do_user_authentication()
              definition:  mbed::AT_CellularContext::activate_non_ip_context()
              definition:  mbed::AT_CellularContext::setup_control_plane_opt()
              definition:  mbed::AT_CellularContext::deactivate_non_ip_context()
              definition:  mbed::AT_CellularContext::find_and_activate_context()
              definition:  mbed::AT_CellularContext::get_nonip_context_type_str()
              definition:  mbed::AT_CellularContext::check_and_deactivate_context()
              definition:  mbed::AT_CellularContext::pdp_type_t_to_cellular_property(mbed::CellularContext::pdp_type_t)
              definition:  mbed::AT_CellularContext::attach(mbed::Callback<void(nsapi_event, int)>)
              definition:  mbed::AT_CellularContext::connect(const char*, const char*, const char*, const char*)
              definition:  mbed::AT_CellularContext::connect()
              definition:  mbed::AT_CellularContext::set_cid(int)
              definition:  mbed::AT_CellularContext::set_plmn(const char*)
              definition:  mbed::AT_CellularContext::get_stack()
              definition:  mbed::AT_CellularContext::AT_CellularContext(mbed::ATHandler&, mbed::CellularDevice*, const char*, bool, bool)
              definition:  mbed::AT_CellularContext::AT_CellularContext__sub_object(mbed::ATHandler&, mbed::CellularDevice*, const char*, bool, bool)
              definition:  mbed::AT_CellularContext::~AT_CellularContext__deallocating()
              definition:  mbed::AT_CellularContext::~AT_CellularContext()
              definition:  mbed::AT_CellularContext::~AT_CellularContext__sub_object()
              reference :  mbed::AT_ControlPlane_netif::AT_ControlPlane_netif(mbed::ATHandler&, int, mbed::AT_CellularDevice&)
              weak defn :  T1 mbed::detail::invoke_r<void, void(mbed::AT_CellularContext::*const &)(mbed::CellularNetwork::CIoT_Supported_Opt), <mbed::AT_CellularContext*const &, mbed::CellularNetwork::CIoT_Supported_Opt>, (int)0>(T2&&, T3&&...)
              weak defn :  T1 mbed::detail::invoke_r<void, void(mbed::AT_CellularContext::*const &)(), <mbed::AT_CellularContext*const &>, (int)0>(T2&&, T3&&...)
              weak defn :  T1 mbed::detail::invoke_r<void, mbed::Callback<void(mbed::CellularNetwork::CIoT_Supported_Opt)>::Callback<mbed::AT_CellularContext*, void(mbed::AT_CellularContext::*)(mbed::CellularNetwork::CIoT_Supported_Opt), (int)0>(T1, T2)::[lambda(mbed::CellularNetwork::CIoT_Supported_Opt) (instance 1)]&, <mbed::CellularNetwork::CIoT_Supported_Opt>, (int)0>(T2&&, T3&&...)
              weak defn :  T1 mbed::detail::invoke_r<void, mbed::Callback<void()>::Callback<mbed::AT_CellularContext*, void(mbed::AT_CellularContext::*)(), (int)0>(T1, T2)::[lambda() (instance 1)]&, <>, (int)0>(T2&&, T3&&...)
              weak defn :  void mbed::Callback<void(mbed::CellularNetwork::CIoT_Supported_Opt)>::target_call<mbed::Callback<void(mbed::CellularNetwork::CIoT_Supported_Opt)>::Callback<mbed::AT_CellularContext*, void(mbed::AT_CellularContext::*)(mbed::CellularNetwork::CIoT_Supported_Opt), (int)0>(T1, T2)::[lambda(mbed::CellularNetwork::CIoT_Supported_Opt) (instance 1)]>(const mbed::detail::CallbackBase*, mbed::CellularNetwork::CIoT_Supported_Opt)
              weak defn :  void mbed::Callback<void(mbed::CellularNetwork::CIoT_Supported_Opt)>::generate<mbed::Callback<void(mbed::CellularNetwork::CIoT_Supported_Opt)>::Callback<mbed::AT_CellularContext*, void(mbed::AT_CellularContext::*)(mbed::CellularNetwork::CIoT_Supported_Opt), (int)0>(T1, T2)::[lambda(mbed::CellularNetwork::CIoT_Supported_Opt) (instance 1)], void>(T1&&)
              weak defn :  mbed::Callback<void(mbed::CellularNetwork::CIoT_Supported_Opt)>::Callback__sub_object<mbed::AT_CellularContext*, void(mbed::AT_CellularContext::*)(mbed::CellularNetwork::CIoT_Supported_Opt), (int)0>(T1, T2)
              weak defn :  void mbed::Callback<void()>::target_call<mbed::Callback<void()>::Callback<mbed::AT_CellularContext*, void(mbed::AT_CellularContext::*)(), (int)0>(T1, T2)::[lambda() (instance 1)]>(const mbed::detail::CallbackBase*)
              weak defn :  void mbed::Callback<void()>::generate<mbed::Callback<void()>::Callback<mbed::AT_CellularContext*, void(mbed::AT_CellularContext::*)(), (int)0>(T1, T2)::[lambda() (instance 1)], void>(T1&&)
              weak defn :  mbed::Callback<void()>::Callback__sub_object<mbed::AT_CellularContext*, void(mbed::AT_CellularContext::*)(), (int)0>(T1, T2)
              weak defn :  mbed::Callback<T3(T4...)> mbed::callback<mbed::AT_CellularContext, mbed::AT_CellularContext, void, <>>(T2*, T3(T1::*)(T4...))
              weak defn :  mbed::Callback<T3(T4...)> mbed::callback<mbed::AT_CellularContext, mbed::AT_CellularContext, void, <mbed::CellularNetwork::CIoT_Supported_Opt>>(T2*, T3(T1::*)(T4...))
              reference :  mbed::ATHandler::resp_start(const char*, bool)
              reference :  mbed::ATHandler::skip_param(unsigned)
              reference :  mbed::ATHandler::clear_error()
              reference :  mbed::ATHandler::read_string(char*, unsigned, bool)
              reference :  mbed::ATHandler::at_cmd_discard(const char*, const char*, const char*, ...)
              reference :  mbed::ATHandler::cmd_start_stop(const char*, const char*, const char*, ...)
              reference :  mbed::ATHandler::set_at_timeout(std::__1::chrono::duration<unsigned, std::__1::ratio<(long long)1, (long long)1000>>, bool)
              reference :  mbed::ATHandler::get_file_handle()
              reference :  mbed::ATHandler::restore_at_timeout()
              reference :  mbed::ATHandler::unlock_return_error()
              reference :  mbed::ATHandler::lock()
              reference :  mbed::ATHandler::unlock()
              reference :  mbed::ATHandler::read_int()
              reference :  mbed::ATHandler::info_resp()
              reference :  mbed::ATHandler::resp_stop()
              reference :  mbed::ATHandler::set_debug(bool)
              weak defn :  std::__1::enable_if<((std::is_function<T2>::value&&(!std::is_base_of<T1, std::__1::decay<T3>::type>::value))&&(!is_reference_wrapper<std::__1::decay<T3>::type>::value)), decltype((((*std::forward<T3>(param#2)).*param#1)(std::forward<T4>(param#3)...)))>::type mstd::impl::INVOKE<mbed::AT_CellularContext, void(mbed::CellularNetwork::CIoT_Supported_Opt), mbed::AT_CellularContext*const &, <mbed::CellularNetwork::CIoT_Supported_Opt>>(T2T1::*, T3&&, T4&&...)
              weak defn :  std::__1::enable_if<((std::is_function<T2>::value&&(!std::is_base_of<T1, std::__1::decay<T3>::type>::value))&&(!is_reference_wrapper<std::__1::decay<T3>::type>::value)), decltype((((*std::forward<T3>(param#2)).*param#1)(std::forward<T4>(param#3)...)))>::type mstd::impl::INVOKE<mbed::AT_CellularContext, void(), mbed::AT_CellularContext*const &, <>>(T2T1::*, T3&&, T4&&...)
              weak defn :  std::__1::enable_if<((!std::is_member_pointer<std::__1::decay<T1>::type>::value)||(std::is_member_object_pointer<std::__1::decay<T1>::type>::value&&(sizeof...(param#2)!=(int)1))), decltype((std::forward<T1>(param#1)(std::forward<T2>(param#2)...)))>::type mstd::impl::INVOKE<mbed::Callback<void(mbed::CellularNetwork::CIoT_Supported_Opt)>::Callback<mbed::AT_CellularContext*, void(mbed::AT_CellularContext::*)(mbed::CellularNetwork::CIoT_Supported_Opt), (int)0>(T1, T2)::[lambda(mbed::CellularNetwork::CIoT_Supported_Opt) (instance 1)]&, <mbed::CellularNetwork::CIoT_Supported_Opt>>(T1&&, T2&&...)
              weak defn :  std::__1::enable_if<((!std::is_member_pointer<std::__1::decay<T1>::type>::value)||(std::is_member_object_pointer<std::__1::decay<T1>::type>::value&&(sizeof...(param#2)!=(int)1))), decltype((std::forward<T1>(param#1)(std::forward<T2>(param#2)...)))>::type mstd::impl::INVOKE<mbed::Callback<void()>::Callback<mbed::AT_CellularContext*, void(mbed::AT_CellularContext::*)(), (int)0>(T1, T2)::[lambda() (instance 1)]&, <>>(T1&&, T2&&...)
              weak defn :  mstd::invoke_result<T1, <T2...>>::type mstd::invoke<void(mbed::AT_CellularContext::*const &)(mbed::CellularNetwork::CIoT_Supported_Opt), <mbed::AT_CellularContext*const &, mbed::CellularNetwork::CIoT_Supported_Opt>>(T1&&, T2&&...)
              weak defn :  mstd::invoke_result<T1, <T2...>>::type mstd::invoke<void(mbed::AT_CellularContext::*const &)(), <mbed::AT_CellularContext*const &>>(T1&&, T2&&...)
              weak defn :  mstd::invoke_result<T1, <T2...>>::type mstd::invoke<mbed::Callback<void(mbed::CellularNetwork::CIoT_Supported_Opt)>::Callback<mbed::AT_CellularContext*, void(mbed::AT_CellularContext::*)(mbed::CellularNetwork::CIoT_Supported_Opt), (int)0>(T1, T2)::[lambda(mbed::CellularNetwork::CIoT_Supported_Opt) (instance 1)]&, <mbed::CellularNetwork::CIoT_Supported_Opt>>(T1&&, T2&&...)
              weak defn :  mstd::invoke_result<T1, <T2...>>::type mstd::invoke<mbed::Callback<void()>::Callback<mbed::AT_CellularContext*, void(mbed::AT_CellularContext::*)(), (int)0>(T1, T2)::[lambda() (instance 1)]&, <>>(T1&&, T2&&...)
              reference :  rtos::Semaphore::try_acquire_for(std::__1::chrono::duration<unsigned, std::__1::ratio<(long long)1, (long long)1000>>)
              reference :  rtos::Semaphore::release()
              reference :  rtos::Semaphore::Semaphore(int)
              reference :  rtos::Semaphore::~Semaphore()
              weak defn :  void events::EventQueue::function_call<mbed::Callback<void()>>(void*)
              weak defn :  void events::EventQueue::function_dtor<mbed::Callback<void()>>(void*)
              weak defn :  int events::EventQueue::call<mbed::AT_CellularContext, void, <>>(T1*, T2(T1::*)(T3...), T3...)
              weak defn :  int events::EventQueue::call<mbed::Callback<void()>>(T1)
              weak defn :  SocketAddress::get_addr() const
              reference :  mbed::CellularContext::get_device() const
              definition:  mbed::AT_CellularContext::get_device() const
              definition:  mbed::AT_CellularContext::get_connection_status() const
              definition:  mbed::AT_CellularContext::get_timeout_for_operation(mbed::CellularContext::ContextOperation) const
              weak defn :  mbed::detail::CallbackBase::call_fn() const
              weak defn :  mbed::detail::CallbackBase::control() const
              weak defn :  mbed::Callback<void(nsapi_event, int)>::call(nsapi_event, int) const
              weak defn :  mbed::Callback<void(nsapi_event, int)>::operator ()(nsapi_event, int) const
              weak defn :  mbed::Callback<void(nsapi_event, int)>::operator bool() const
              weak defn :  mbed::Callback<void()>::call() const
              weak defn :  mbed::Callback<void()>::operator ()() const
              weak defn :  mbed::Callback<void()>::operator bool() const
              reference :  mbed::ATHandler::get_last_error() const
              reference :  mbed::ATHandler::get_debug() const
              weak defn :  _ZNSt3__18literals15chrono_literalsli3minEy
              reference :  vtable for mbed::CellularContext
              definition:  vtable for mbed::AT_CellularContext
              weak defn :  mbed::Callback<void(mbed::CellularNetwork::CIoT_Supported_Opt)>::Callback<mbed::AT_CellularContext*, void(mbed::AT_CellularContext::*)(mbed::CellularNetwork::CIoT_Supported_Opt), (int)0>(T1, T2)::[lambda(mbed::CellularNetwork::CIoT_Supported_Opt) (instance 1)]::operator ()(mbed::CellularNetwork::CIoT_Supported_Opt) const
              weak defn :  mbed::Callback<void()>::Callback<mbed::AT_CellularContext*, void(mbed::AT_CellularContext::*)(), (int)0>(T1, T2)::[lambda() (instance 1)]::operator ()() const
              reference :  operator delete[] (void*)
              reference :  operator delete (void*)
              reference :  operator new[] (unsigned)
              reference :  operator new(unsigned)
              reference :  __2sprintf
              reference :  __aeabi_memcpy
              reference :  __aeabi_memset4
              reference :  _printf_d
              reference :  _printf_int_dec
              reference :  _printf_percent
              reference :  equeue_alloc
              reference :  equeue_event_dtor
              reference :  equeue_post
              reference :  mbed_assert_internal
              reference :  strcmp
              reference :  strncpy
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/cellular/source/framework/AT/AT_CellularDevice.o.
              reference :  mbed_cellular_util::uint_to_binary_str(unsigned, char*, int, int)
              reference :  mbed::CellularDevice::cellular_callback(nsapi_event, int, mbed::CellularContext*)
              reference :  mbed::CellularDevice::shutdown()
              reference :  mbed::CellularDevice::get_queue()
              reference :  mbed::CellularDevice::CellularDevice__sub_object()
              reference :  mbed::CellularDevice::~CellularDevice__sub_object()
              definition:  mbed::AT_CellularDevice::set_at_urcs()
              definition:  mbed::AT_CellularDevice::set_timeout(int)
              definition:  mbed::AT_CellularDevice::get_property(mbed::AT_CellularDevice::CellularProperty)
              definition:  mbed::AT_CellularDevice::open_network()
              definition:  mbed::AT_CellularDevice::set_ready_cb(mbed::Callback<void()>)
              definition:  mbed::AT_CellularDevice::urc_nw_deact()
              definition:  mbed::AT_CellularDevice::close_network()
              definition:  mbed::AT_CellularDevice::get_sim_state(mbed::CellularDevice::SimState&)
              definition:  mbed::AT_CellularDevice::hard_power_on()
              definition:  mbed::AT_CellularDevice::set_baud_rate(int)
              definition:  mbed::AT_CellularDevice::soft_power_on()
              definition:  mbed::AT_CellularDevice::urc_pdn_deact()
              definition:  mbed::AT_CellularDevice::create_context(const char*, bool, bool)
              definition:  mbed::AT_CellularDevice::delete_context(mbed::CellularContext*)
              definition:  mbed::AT_CellularDevice::get_at_handler()
              definition:  mbed::AT_CellularDevice::hard_power_off()
              definition:  mbed::AT_CellularDevice::modem_debug_on(bool)
              definition:  mbed::AT_CellularDevice::soft_power_off()
              definition:  mbed::AT_CellularDevice::open_information()
              definition:  mbed::AT_CellularDevice::set_at_urcs_impl()
              definition:  mbed::AT_CellularDevice::setup_at_handler()
              definition:  mbed::AT_CellularDevice::cellular_callback(nsapi_event, int, mbed::CellularContext*)
              definition:  mbed::AT_CellularDevice::close_information()
              definition:  mbed::AT_CellularDevice::open_network_impl(mbed::ATHandler&)
              definition:  mbed::AT_CellularDevice::set_baud_rate_impl(int)
              definition:  mbed::AT_CellularDevice::create_context_impl(mbed::ATHandler&, const char*, bool, bool)
              definition:  mbed::AT_CellularDevice::set_power_save_mode(int, int)
              definition:  mbed::AT_CellularDevice::open_information_impl(mbed::ATHandler&)
              definition:  mbed::AT_CellularDevice::set_cellular_properties(const int*)
              definition:  mbed::AT_CellularDevice::send_disconnect_to_context(int)
              definition:  mbed::AT_CellularDevice::init()
              definition:  mbed::AT_CellularDevice::clear()
              definition:  mbed::AT_CellularDevice::set_pin(const char*)
              definition:  mbed::AT_CellularDevice::is_ready()
              definition:  mbed::AT_CellularDevice::shutdown()
              definition:  mbed::AT_CellularDevice::AT_CellularDevice(mbed::FileHandle*)
              definition:  mbed::AT_CellularDevice::AT_CellularDevice__sub_object(mbed::FileHandle*)
              definition:  mbed::AT_CellularDevice::~AT_CellularDevice__deallocating()
              definition:  mbed::AT_CellularDevice::~AT_CellularDevice()
              definition:  mbed::AT_CellularDevice::~AT_CellularDevice__sub_object()
              reference :  mbed::AT_CellularContext::AT_CellularContext(mbed::ATHandler&, mbed::CellularDevice*, const char*, bool, bool)
              reference :  mbed::AT_CellularNetwork::AT_CellularNetwork(mbed::ATHandler&, mbed::AT_CellularDevice&)
              reference :  mbed::CellularStateMachine::set_timeout(std::__1::chrono::duration<int, std::__1::ratio<(long long)1, (long long)1000>>)
              reference :  mbed::AT_CellularInformation::AT_CellularInformation(mbed::ATHandler&, mbed::AT_CellularDevice&)
              weak defn :  mbed::detail::CallbackBase::CallbackBase__sub_object(std::nullptr_t)
              weak defn :  T1 mbed::detail::invoke_r<void, void(mbed::AT_CellularDevice::*const &)(), <mbed::AT_CellularDevice*const &>, (int)0>(T2&&, T3&&...)
              weak defn :  T1 mbed::detail::invoke_r<void, mbed::Callback<void()>::Callback<mbed::AT_CellularDevice*, void(mbed::AT_CellularDevice::*)(), (int)0>(T1, T2)::[lambda() (instance 1)]&, <>, (int)0>(T2&&, T3&&...)
              weak defn :  void mbed::Callback<void()>::target_call<mbed::Callback<void()>::Callback<mbed::AT_CellularDevice*, void(mbed::AT_CellularDevice::*)(), (int)0>(T1, T2)::[lambda() (instance 1)]>(const mbed::detail::CallbackBase*)
              weak defn :  void mbed::Callback<void()>::generate<mbed::Callback<void()>::Callback<mbed::AT_CellularDevice*, void(mbed::AT_CellularDevice::*)(), (int)0>(T1, T2)::[lambda() (instance 1)], void>(T1&&)
              weak defn :  mbed::Callback<void()>::Callback__sub_object(std::nullptr_t)
              weak defn :  mbed::Callback<void()>::Callback__sub_object()
              weak defn :  mbed::Callback<void()>::Callback__sub_object<mbed::AT_CellularDevice*, void(mbed::AT_CellularDevice::*)(), (int)0>(T1, T2)
              weak defn :  mbed::Callback<T3(T4...)> mbed::callback<mbed::AT_CellularDevice, mbed::AT_CellularDevice, void, <>>(T2*, T3(T1::*)(T4...))
              reference :  mbed::ATHandler::at_cmd_str(const char*, const char*, char*, unsigned, const char*, ...)
              reference :  mbed::ATHandler::skip_param(unsigned)
              reference :  mbed::ATHandler::clear_error()
              reference :  mbed::ATHandler::read_string(char*, unsigned, bool)
              reference :  mbed::ATHandler::set_delimiter(char)
              reference :  mbed::ATHandler::at_cmd_discard(const char*, const char*, const char*, ...)
              reference :  mbed::ATHandler::set_at_timeout(std::__1::chrono::duration<unsigned, std::__1::ratio<(long long)1, (long long)1000>>, bool)
              reference :  mbed::ATHandler::set_send_delay(unsigned short)
              reference :  mbed::ATHandler::set_urc_handler(const char*, mbed::Callback<void()>)
              reference :  mbed::ATHandler::unlock_return_error()
              reference :  mbed::ATHandler::lock()
              reference :  mbed::ATHandler::flush()
              reference :  mbed::ATHandler::unlock()
              reference :  mbed::ATHandler::read_int()
              reference :  mbed::ATHandler::set_baud(int)
              reference :  mbed::ATHandler::set_debug(bool)
              reference :  mbed::ATHandler::ATHandler(mbed::FileHandle*, events::EventQueue&, std::__1::chrono::duration<unsigned, std::__1::ratio<(long long)1, (long long)1000>>, const char*, std::__1::chrono::duration<unsigned short, std::__1::ratio<(long long)1, (long long)1000>>)
              reference :  mbed::ATHandler::~ATHandler()
              weak defn :  std::__1::enable_if<((std::is_function<T2>::value&&(!std::is_base_of<T1, std::__1::decay<T3>::type>::value))&&(!is_reference_wrapper<std::__1::decay<T3>::type>::value)), decltype((((*std::forward<T3>(param#2)).*param#1)(std::forward<T4>(param#3)...)))>::type mstd::impl::INVOKE<mbed::AT_CellularDevice, void(), mbed::AT_CellularDevice*const &, <>>(T2T1::*, T3&&, T4&&...)
              weak defn :  std::__1::enable_if<((!std::is_member_pointer<std::__1::decay<T1>::type>::value)||(std::is_member_object_pointer<std::__1::decay<T1>::type>::value&&(sizeof...(param#2)!=(int)1))), decltype((std::forward<T1>(param#1)(std::forward<T2>(param#2)...)))>::type mstd::impl::INVOKE<mbed::Callback<void()>::Callback<mbed::AT_CellularDevice*, void(mbed::AT_CellularDevice::*)(), (int)0>(T1, T2)::[lambda() (instance 1)]&, <>>(T1&&, T2&&...)
              weak defn :  mstd::invoke_result<T1, <T2...>>::type mstd::invoke<void(mbed::AT_CellularDevice::*const &)(), <mbed::AT_CellularDevice*const &>>(T1&&, T2&&...)
              weak defn :  mstd::invoke_result<T1, <T2...>>::type mstd::invoke<mbed::Callback<void()>::Callback<mbed::AT_CellularDevice*, void(mbed::AT_CellularDevice::*)(), (int)0>(T1, T2)::[lambda() (instance 1)]&, <>>(T1&&, T2&&...)
              reference :  rtos::ThisThread::sleep_for(std::__1::chrono::duration<unsigned, std::__1::ratio<(long long)1, (long long)1000>>)
              reference :  mbed::CellularContext::get_cid() const
              definition:  mbed::AT_CellularDevice::get_context_list() const
              reference :  mbed::ATHandler::get_last_error() const
              reference :  mbed::ATHandler::get_debug() const
              weak defn :  _ZNSt3__18literals15chrono_literalsli1sEy
              weak defn :  _ZNSt3__18literals15chrono_literalsli2msEy
              definition:  vtable for mbed::AT_CellularDevice
              weak defn :  mbed::Callback<void()>::Callback<mbed::AT_CellularDevice*, void(mbed::AT_CellularDevice::*)(), (int)0>(T1, T2)::[lambda() (instance 1)]::operator ()() const
              reference :  operator delete (void*)
              reference :  operator new(unsigned)
              reference :  __rt_ctype_table
              weak defn :  isalpha
              reference :  mbed_assert_internal
              reference :  memcmp
              reference :  strlen
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/cellular/source/framework/AT/AT_CellularInformation.o.
              reference :  mbed::AT_CellularDevice::get_property(mbed::AT_CellularDevice::CellularProperty)
              weak defn :  mbed::CellularInformation::CellularInformation__sub_object()
              weak defn :  mbed::CellularInformation::~CellularInformation__deallocating()
              weak defn :  mbed::CellularInformation::~CellularInformation__sub_object()
              definition:  mbed::AT_CellularInformation::get_revision(char*, unsigned)
              definition:  mbed::AT_CellularInformation::get_manufacturer(char*, unsigned)
              definition:  mbed::AT_CellularInformation::get_serial_number(char*, unsigned, mbed::CellularInformation::SerialNumberType)
              definition:  mbed::AT_CellularInformation::get_imsi(char*, unsigned)
              definition:  mbed::AT_CellularInformation::get_info(const char*, char*, unsigned)
              definition:  mbed::AT_CellularInformation::get_iccid(char*, unsigned)
              definition:  mbed::AT_CellularInformation::get_model(char*, unsigned)
              definition:  mbed::AT_CellularInformation::AT_CellularInformation(mbed::ATHandler&, mbed::AT_CellularDevice&)
              definition:  mbed::AT_CellularInformation::AT_CellularInformation__sub_object(mbed::ATHandler&, mbed::AT_CellularDevice&)
              definition:  mbed::AT_CellularInformation::~AT_CellularInformation__deallocating()
              definition:  mbed::AT_CellularInformation::~AT_CellularInformation()
              definition:  mbed::AT_CellularInformation::~AT_CellularInformation__sub_object()
              reference :  mbed::ATHandler::at_cmd_str(const char*, const char*, char*, unsigned, const char*, ...)
              reference :  mbed::ATHandler::resp_start(const char*, bool)
              reference :  mbed::ATHandler::read_string(char*, unsigned, bool)
              reference :  mbed::ATHandler::set_delimiter(char)
              reference :  mbed::ATHandler::cmd_start_stop(const char*, const char*, const char*, ...)
              reference :  mbed::ATHandler::unlock_return_error()
              reference :  mbed::ATHandler::set_default_delimiter()
              reference :  mbed::ATHandler::lock()
              reference :  mbed::ATHandler::cmd_stop()
              reference :  mbed::ATHandler::cmd_start(const char*)
              reference :  mbed::ATHandler::resp_stop()
              weak defn :  vtable for mbed::CellularInformation
              definition:  vtable for mbed::AT_CellularInformation
              reference :  operator delete (void*)
              reference :  __cxa_pure_virtual
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/cellular/source/framework/AT/AT_CellularNetwork.o.
              reference :  mbed_cellular_util::hex_str_to_int(const char*, int)
              reference :  mbed_cellular_util::binary_str_to_uint(const char*, int)
              reference :  mbed_cellular_util::uint_to_binary_str(unsigned, char*, int, int)
              weak defn :  cell_callback_data_t::cell_callback_data_t__sub_object()
              weak defn :  mbed::CellularList<mbed::CellularNetwork::operator_t>::delete_last()
              weak defn :  mbed::CellularList<mbed::CellularNetwork::operator_t>::add_new()
              weak defn :  mbed::CellularList<mbed::CellularNetwork::operator_names_t>::add_new()
              weak defn :  mbed::CellularNetwork::operator_t::operator_t__sub_object()
              weak defn :  mbed::CellularNetwork::operator_names_t::operator_names_t__sub_object()
              weak defn :  mbed::CellularNetwork::set_packet_domain_event_reporting(bool)
              weak defn :  mbed::CellularNetwork::CellularNetwork__sub_object()
              weak defn :  mbed::CellularNetwork::~CellularNetwork__deallocating()
              weak defn :  mbed::CellularNetwork::~CellularNetwork__sub_object()
              reference :  mbed::AT_CellularDevice::get_property(mbed::AT_CellularDevice::CellularProperty)
              definition:  mbed::AT_CellularNetwork::get_attach(mbed::CellularNetwork::AttachStatus&)
              definition:  mbed::AT_CellularNetwork::set_attach()
              definition:  mbed::AT_CellularNetwork::urc_cciotopti()
              definition:  mbed::AT_CellularNetwork::get_3gpp_error()
              definition:  mbed::AT_CellularNetwork::call_network_cb(nsapi_connection_status)
              definition:  mbed::AT_CellularNetwork::read_reg_params(mbed::CellularNetwork::RegistrationType, mbed::CellularNetwork::registration_params_t&)
              definition:  mbed::AT_CellularNetwork::set_registration(const char*)
              definition:  mbed::AT_CellularNetwork::is_active_context(int*, int)
              definition:  mbed::AT_CellularNetwork::get_operator_names(mbed::CellularList<mbed::CellularNetwork::operator_names_t>&)
              definition:  mbed::AT_CellularNetwork::get_signal_quality(int&, int*)
              definition:  mbed::AT_CellularNetwork::set_receive_period(int, mbed::CellularNetwork::EDRXAccessTechnology, unsigned char)
              definition:  mbed::AT_CellularNetwork::get_operator_params(int&, mbed::CellularNetwork::operator_t&)
              definition:  mbed::AT_CellularNetwork::set_registration_urc(mbed::CellularNetwork::RegistrationType, bool)
              definition:  mbed::AT_CellularNetwork::calculate_active_time(const char*, int)
              definition:  mbed::AT_CellularNetwork::set_access_technology(mbed::CellularNetwork::RadioAccessTechnology)
              definition:  mbed::AT_CellularNetwork::calculate_periodic_tau(const char*, int)
              definition:  mbed::AT_CellularNetwork::get_registration_params(mbed::CellularNetwork::RegistrationType, mbed::CellularNetwork::registration_params_t&)
              definition:  mbed::AT_CellularNetwork::get_registration_params(mbed::CellularNetwork::registration_params_t&)
              definition:  mbed::AT_CellularNetwork::get_context_state_command()
              definition:  mbed::AT_CellularNetwork::set_access_technology_impl(mbed::CellularNetwork::RadioAccessTechnology)
              definition:  mbed::AT_CellularNetwork::read_reg_params_and_compare(mbed::CellularNetwork::RegistrationType)
              definition:  mbed::AT_CellularNetwork::get_network_registering_mode(mbed::CellularNetwork::NWRegisteringMode&)
              definition:  mbed::AT_CellularNetwork::set_ciot_optimization_config(mbed::CellularNetwork::CIoT_Supported_Opt, mbed::CellularNetwork::CIoT_Preferred_UE_Opt, mbed::Callback<void(mbed::CellularNetwork::CIoT_Supported_Opt)>)
              definition:  mbed::AT_CellularNetwork::get_ciot_ue_optimization_config(mbed::CellularNetwork::CIoT_Supported_Opt&, mbed::CellularNetwork::CIoT_Preferred_UE_Opt&)
              definition:  mbed::AT_CellularNetwork::set_packet_domain_event_reporting(bool)
              definition:  mbed::AT_CellularNetwork::get_ciot_network_optimization_config(mbed::CellularNetwork::CIoT_Supported_Opt&)
              definition:  mbed::AT_CellularNetwork::clear()
              definition:  mbed::AT_CellularNetwork::attach(mbed::Callback<void(nsapi_event, int)>)
              definition:  mbed::AT_CellularNetwork::detach()
              definition:  mbed::AT_CellularNetwork::urc_cgev()
              definition:  mbed::AT_CellularNetwork::urc_creg()
              definition:  mbed::AT_CellularNetwork::scan_plmn(mbed::CellularList<mbed::CellularNetwork::operator_t>&, int&)
              definition:  mbed::AT_CellularNetwork::urc_cereg()
              definition:  mbed::AT_CellularNetwork::urc_cgreg()
              definition:  mbed::AT_CellularNetwork::AT_CellularNetwork(mbed::ATHandler&, mbed::AT_CellularDevice&)
              definition:  mbed::AT_CellularNetwork::AT_CellularNetwork__sub_object(mbed::ATHandler&, mbed::AT_CellularDevice&)
              definition:  mbed::AT_CellularNetwork::~AT_CellularNetwork__deallocating()
              definition:  mbed::AT_CellularNetwork::~AT_CellularNetwork()
              definition:  mbed::AT_CellularNetwork::~AT_CellularNetwork__sub_object()
              weak defn :  T1 mbed::detail::invoke_r<void, void(mbed::AT_CellularNetwork::*const &)(), <mbed::AT_CellularNetwork*const &>, (int)0>(T2&&, T3&&...)
              weak defn :  T1 mbed::detail::invoke_r<void, mbed::Callback<void()>::Callback<mbed::AT_CellularNetwork*, void(mbed::AT_CellularNetwork::*)(), (int)0>(T1, T2)::[lambda() (instance 1)]&, <>, (int)0>(T2&&, T3&&...)
              weak defn :  mbed::Callback<void(nsapi_event, int)>::Callback__sub_object()
              weak defn :  mbed::Callback<void(mbed::CellularNetwork::CIoT_Supported_Opt)>::Callback__sub_object()
              weak defn :  void mbed::Callback<void()>::target_call<mbed::Callback<void()>::Callback<mbed::AT_CellularNetwork*, void(mbed::AT_CellularNetwork::*)(), (int)0>(T1, T2)::[lambda() (instance 1)]>(const mbed::detail::CallbackBase*)
              weak defn :  void mbed::Callback<void()>::generate<mbed::Callback<void()>::Callback<mbed::AT_CellularNetwork*, void(mbed::AT_CellularNetwork::*)(), (int)0>(T1, T2)::[lambda() (instance 1)], void>(T1&&)
              weak defn :  mbed::Callback<void()>::Callback__sub_object<mbed::AT_CellularNetwork*, void(mbed::AT_CellularNetwork::*)(), (int)0>(T1, T2)
              weak defn :  mbed::Callback<T3(T4...)> mbed::callback<mbed::AT_CellularNetwork, mbed::AT_CellularNetwork, void, <>>(T2*, T3(T1::*)(T4...))
              reference :  mbed::ATHandler::at_cmd_int(const char*, const char*, int&, const char*, ...)
              reference :  mbed::ATHandler::resp_start(const char*, bool)
              reference :  mbed::ATHandler::skip_param(unsigned)
              reference :  mbed::ATHandler::read_string(char*, unsigned, bool)
              reference :  mbed::ATHandler::at_cmd_discard(const char*, const char*, const char*, ...)
              reference :  mbed::ATHandler::cmd_start_stop(const char*, const char*, const char*, ...)
              reference :  mbed::ATHandler::get_3gpp_error()
              reference :  mbed::ATHandler::set_urc_handler(const char*, mbed::Callback<void()>)
              reference :  mbed::ATHandler::unlock_return_error()
              reference :  mbed::ATHandler::lock()
              reference :  mbed::ATHandler::unlock()
              reference :  mbed::ATHandler::read_int()
              reference :  mbed::ATHandler::info_elem(char)
              reference :  mbed::ATHandler::info_resp()
              reference :  mbed::ATHandler::resp_stop()
              weak defn :  std::__1::enable_if<((std::is_function<T2>::value&&(!std::is_base_of<T1, std::__1::decay<T3>::type>::value))&&(!is_reference_wrapper<std::__1::decay<T3>::type>::value)), decltype((((*std::forward<T3>(param#2)).*param#1)(std::forward<T4>(param#3)...)))>::type mstd::impl::INVOKE<mbed::AT_CellularNetwork, void(), mbed::AT_CellularNetwork*const &, <>>(T2T1::*, T3&&, T4&&...)
              weak defn :  std::__1::enable_if<((!std::is_member_pointer<std::__1::decay<T1>::type>::value)||(std::is_member_object_pointer<std::__1::decay<T1>::type>::value&&(sizeof...(param#2)!=(int)1))), decltype((std::forward<T1>(param#1)(std::forward<T2>(param#2)...)))>::type mstd::impl::INVOKE<mbed::Callback<void()>::Callback<mbed::AT_CellularNetwork*, void(mbed::AT_CellularNetwork::*)(), (int)0>(T1, T2)::[lambda() (instance 1)]&, <>>(T1&&, T2&&...)
              weak defn :  mstd::invoke_result<T1, <T2...>>::type mstd::invoke<void(mbed::AT_CellularNetwork::*const &)(), <mbed::AT_CellularNetwork*const &>>(T1&&, T2&&...)
              weak defn :  mstd::invoke_result<T1, <T2...>>::type mstd::invoke<mbed::Callback<void()>::Callback<mbed::AT_CellularNetwork*, void(mbed::AT_CellularNetwork::*)(), (int)0>(T1, T2)::[lambda() (instance 1)]&, <>>(T1&&, T2&&...)
              weak defn :  mbed::Callback<void(mbed::CellularNetwork::CIoT_Supported_Opt)>::call(mbed::CellularNetwork::CIoT_Supported_Opt) const
              weak defn :  mbed::Callback<void(mbed::CellularNetwork::CIoT_Supported_Opt)>::operator ()(mbed::CellularNetwork::CIoT_Supported_Opt) const
              weak defn :  mbed::Callback<void(mbed::CellularNetwork::CIoT_Supported_Opt)>::operator bool() const
              reference :  mbed::ATHandler::get_last_error() const
              weak defn :  vtable for mbed::CellularNetwork
              definition:  vtable for mbed::AT_CellularNetwork
              weak defn :  mbed::Callback<void()>::Callback<mbed::AT_CellularNetwork*, void(mbed::AT_CellularNetwork::*)(), (int)0>(T1, T2)::[lambda() (instance 1)]::operator ()() const
              reference :  operator delete (void*)
              reference :  operator new(unsigned)
              reference :  __cxa_pure_virtual
              reference :  mbed_assert_internal
              reference :  mbed::CellularNetwork::registration_params_t::registration_params_t__sub_object()
              reference :  mbed::Callback<void()>::Callback__sub_object()
              reference :  mbed::detail::CallbackBase::CallbackBase__sub_object(std::nullptr_t)
              reference :  mbed::Callback<void()>::Callback__sub_object(std::nullptr_t)
              reference :  mbed::Callback<void(nsapi_event, int)>::operator bool() const
              reference :  mbed::Callback<void(nsapi_event, int)>::operator ()(nsapi_event, int) const
              reference :  mbed::detail::CallbackBase::control() const
              reference :  mbed::detail::CallbackBase::call_fn() const
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/cellular/source/framework/AT/AT_CellularSMS.o.
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/cellular/source/framework/AT/AT_CellularStack.o.
              reference :  NetworkStack::getsockopt(void*, int, int, void*, unsigned*)
              reference :  NetworkStack::setsockopt(void*, int, int, const void*, unsigned)
              reference :  NetworkStack::getaddrinfo(const char*, SocketAddress*, SocketAddress**, const char*)
              reference :  NetworkStack::getstackopt(int, int, void*, unsigned*)
              reference :  NetworkStack::setstackopt(int, int, const void*, unsigned)
              reference :  NetworkStack::gethostbyname(const char*, SocketAddress*, nsapi_version, const char*)
              reference :  NetworkStack::add_dns_server(const SocketAddress&, const char*)
              reference :  NetworkStack::get_dns_server(int, SocketAddress*, const char*)
              reference :  NetworkStack::get_ip_address_if(SocketAddress*, const char*)
              reference :  NetworkStack::getaddrinfo_async(const char*, SocketAddress*, mbed::Callback<void(int, SocketAddress*)>, const char*)
              reference :  NetworkStack::gethostbyname_async(const char*, mbed::Callback<void(int, SocketAddress*)>, nsapi_version, const char*)
              weak defn :  NetworkStack::onboardNetworkStack()
              reference :  NetworkStack::get_call_in_callback()
              reference :  NetworkStack::gethostbyname_async_cancel(int)
              reference :  NetworkStack::get_ipv6_link_local_address(SocketAddress*)
              reference :  NetworkStack::call_in(int, mbed::Callback<void()>)
              weak defn :  NetworkStack::NetworkStack__sub_object()
              weak defn :  NetworkStack::~NetworkStack__sub_object()
              reference :  SocketAddress::set_ip_address(const char*)
              weak defn :  SocketAddress::set_port(unsigned short)
              reference :  SocketAddress::SocketAddress(const char*, unsigned short)
              reference :  SocketAddress::operator =(const SocketAddress&)
              reference :  mbed_cellular_util::convert_ipv6(char*)
              reference :  mbed_cellular_util::get_dynamic_ip_port()
              weak defn :  DNS::DNS__sub_object()
              definition:  mbed::AT_CellularStack::find_socket(int)
              definition:  mbed::AT_CellularStack::socket_bind(void*, const SocketAddress&)
              definition:  mbed::AT_CellularStack::socket_open(void**, nsapi_protocol)
              definition:  mbed::AT_CellularStack::socket_recv(void*, void*, unsigned)
              definition:  mbed::AT_CellularStack::socket_send(void*, const void*, unsigned)
              definition:  mbed::AT_CellularStack::socket_close(void*)
              definition:  mbed::AT_CellularStack::socket_accept(void*, void**, SocketAddress*)
              definition:  mbed::AT_CellularStack::socket_attach(void*, void(*)(void*), void*)
              definition:  mbed::AT_CellularStack::socket_listen(void*, int)
              definition:  mbed::AT_CellularStack::socket_sendto(void*, const SocketAddress&, const void*, unsigned)
              weak defn :  mbed::AT_CellularStack::CellularSocket::CellularSocket__sub_object()
              weak defn :  mbed::AT_CellularStack::CellularSocket::~CellularSocket__sub_object()
              definition:  mbed::AT_CellularStack::get_ip_address(SocketAddress*)
              definition:  mbed::AT_CellularStack::socket_connect(void*, const SocketAddress&)
              definition:  mbed::AT_CellularStack::socket_recvfrom(void*, SocketAddress*, void*, unsigned)
              definition:  mbed::AT_CellularStack::find_socket_index(void*)
              definition:  mbed::AT_CellularStack::get_socket_index_by_port(unsigned short)
              definition:  mbed::AT_CellularStack::is_addr_stack_compatible(const SocketAddress&)
              definition:  mbed::AT_CellularStack::set_cid(int)
              definition:  mbed::AT_CellularStack::AT_CellularStack__sub_object(mbed::ATHandler&, int, nsapi_ip_stack, mbed::AT_CellularDevice&)
              definition:  mbed::AT_CellularStack::~AT_CellularStack__deallocating()
              definition:  mbed::AT_CellularStack::~AT_CellularStack()
              definition:  mbed::AT_CellularStack::~AT_CellularStack__sub_object()
              reference :  mbed::AT_CellularDevice::get_property(mbed::AT_CellularDevice::CellularProperty)
              reference :  mbed::ATHandler::resp_start(const char*, bool)
              reference :  mbed::ATHandler::skip_param(unsigned)
              reference :  mbed::ATHandler::read_string(char*, unsigned, bool)
              reference :  mbed::ATHandler::cmd_start_stop(const char*, const char*, const char*, ...)
              reference :  mbed::ATHandler::unlock_return_error()
              reference :  mbed::ATHandler::lock()
              reference :  mbed::ATHandler::unlock()
              reference :  mbed::ATHandler::info_resp()
              reference :  mbed::ATHandler::resp_stop()
              reference :  rtos::Mutex::lock()
              reference :  rtos::Mutex::unlock()
              reference :  rtos::Mutex::Mutex()
              reference :  rtos::Mutex::~Mutex()
              weak defn :  SocketAddress::get_ip_version() const
              weak defn :  SocketAddress::get_port() const
              reference :  SocketAddress::operator bool() const
              reference :  vtable for NetworkStack
              weak defn :  vtable for DNS
              definition:  vtable for mbed::AT_CellularStack
              reference :  operator delete[] (void*)
              reference :  operator delete (void*)
              reference :  operator new[] (unsigned)
              reference :  operator new(unsigned)
              reference :  __aeabi_memclr4
              reference :  __cxa_pure_virtual
              reference :  mbed_assert_internal
              reference :  SocketAddress::~SocketAddress__sub_object()
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/cellular/source/framework/AT/AT_ControlPlane_netif.o.
              weak defn :  mbed::CellularList<mbed::AT_ControlPlane_netif::packet_t>::count()
              weak defn :  mbed::CellularList<mbed::AT_ControlPlane_netif::packet_t>::add_new()
              weak defn :  mbed::CellularList<mbed::AT_ControlPlane_netif::packet_t>::dequeue()
              weak defn :  mbed::CellularList<mbed::AT_ControlPlane_netif::packet_t>::CellularList__sub_object()
              weak defn :  mbed::CellularList<mbed::AT_ControlPlane_netif::packet_t>::~CellularList__sub_object()
              weak defn :  mbed::ControlPlane_netif::ControlPlane_netif__sub_object()
              weak defn :  mbed::ControlPlane_netif::~ControlPlane_netif__deallocating()
              weak defn :  mbed::ControlPlane_netif::~ControlPlane_netif__sub_object()
              definition:  mbed::AT_ControlPlane_netif::urc_cp_recv()
              definition:  mbed::AT_ControlPlane_netif::data_received()
              definition:  mbed::AT_ControlPlane_netif::recv(void*, unsigned)
              definition:  mbed::AT_ControlPlane_netif::send(const void*, unsigned)
              definition:  mbed::AT_ControlPlane_netif::attach(void(*)(void*), void*)
              definition:  mbed::AT_ControlPlane_netif::AT_ControlPlane_netif(mbed::ATHandler&, int, mbed::AT_CellularDevice&)
              definition:  mbed::AT_ControlPlane_netif::AT_ControlPlane_netif__sub_object(mbed::ATHandler&, int, mbed::AT_CellularDevice&)
              definition:  mbed::AT_ControlPlane_netif::~AT_ControlPlane_netif__deallocating()
              definition:  mbed::AT_ControlPlane_netif::~AT_ControlPlane_netif()
              definition:  mbed::AT_ControlPlane_netif::~AT_ControlPlane_netif__sub_object()
              weak defn :  T1 mbed::detail::invoke_r<void, void(mbed::AT_ControlPlane_netif::*const &)(), <mbed::AT_ControlPlane_netif*const &>, (int)0>(T2&&, T3&&...)
              weak defn :  T1 mbed::detail::invoke_r<void, mbed::Callback<void()>::Callback<mbed::AT_ControlPlane_netif*, void(mbed::AT_ControlPlane_netif::*)(), (int)0>(T1, T2)::[lambda() (instance 1)]&, <>, (int)0>(T2&&, T3&&...)
              weak defn :  void mbed::Callback<void()>::target_call<mbed::Callback<void()>::Callback<mbed::AT_ControlPlane_netif*, void(mbed::AT_ControlPlane_netif::*)(), (int)0>(T1, T2)::[lambda() (instance 1)]>(const mbed::detail::CallbackBase*)
              weak defn :  void mbed::Callback<void()>::generate<mbed::Callback<void()>::Callback<mbed::AT_ControlPlane_netif*, void(mbed::AT_ControlPlane_netif::*)(), (int)0>(T1, T2)::[lambda() (instance 1)], void>(T1&&)
              weak defn :  mbed::Callback<void()>::Callback__sub_object<mbed::AT_ControlPlane_netif*, void(mbed::AT_ControlPlane_netif::*)(), (int)0>(T1, T2)
              reference :  mbed::ATHandler::read_hex_string(char*, unsigned)
              reference :  mbed::ATHandler::set_urc_handler(const char*, mbed::Callback<void()>)
              reference :  mbed::ATHandler::write_hex_string(const char*, unsigned)
              reference :  mbed::ATHandler::cmd_stop_read_resp()
              reference :  mbed::ATHandler::unlock_return_error()
              reference :  mbed::ATHandler::lock()
              reference :  mbed::ATHandler::unlock()
              reference :  mbed::ATHandler::read_int()
              reference :  mbed::ATHandler::cmd_start(const char*)
              reference :  mbed::ATHandler::write_int(int)
              weak defn :  std::__1::enable_if<((std::is_function<T2>::value&&(!std::is_base_of<T1, std::__1::decay<T3>::type>::value))&&(!is_reference_wrapper<std::__1::decay<T3>::type>::value)), decltype((((*std::forward<T3>(param#2)).*param#1)(std::forward<T4>(param#3)...)))>::type mstd::impl::INVOKE<mbed::AT_ControlPlane_netif, void(), mbed::AT_ControlPlane_netif*const &, <>>(T2T1::*, T3&&, T4&&...)
              weak defn :  std::__1::enable_if<((!std::is_member_pointer<std::__1::decay<T1>::type>::value)||(std::is_member_object_pointer<std::__1::decay<T1>::type>::value&&(sizeof...(param#2)!=(int)1))), decltype((std::forward<T1>(param#1)(std::forward<T2>(param#2)...)))>::type mstd::impl::INVOKE<mbed::Callback<void()>::Callback<mbed::AT_ControlPlane_netif*, void(mbed::AT_ControlPlane_netif::*)(), (int)0>(T1, T2)::[lambda() (instance 1)]&, <>>(T1&&, T2&&...)
              weak defn :  mstd::invoke_result<T1, <T2...>>::type mstd::invoke<void(mbed::AT_ControlPlane_netif::*const &)(), <mbed::AT_ControlPlane_netif*const &>>(T1&&, T2&&...)
              weak defn :  mstd::invoke_result<T1, <T2...>>::type mstd::invoke<mbed::Callback<void()>::Callback<mbed::AT_ControlPlane_netif*, void(mbed::AT_ControlPlane_netif::*)(), (int)0>(T1, T2)::[lambda() (instance 1)]&, <>>(T1&&, T2&&...)
              weak defn :  vtable for mbed::ControlPlane_netif
              definition:  vtable for mbed::AT_ControlPlane_netif
              weak defn :  mbed::Callback<void()>::Callback<mbed::AT_ControlPlane_netif*, void(mbed::AT_ControlPlane_netif::*)(), (int)0>(T1, T2)::[lambda() (instance 1)]::operator ()() const
              reference :  operator delete[] (void*)
              reference :  operator delete (void*)
              reference :  operator new[] (unsigned)
              reference :  operator new(unsigned)
              reference :  __aeabi_memcpy
              reference :  __cxa_pure_virtual
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/cellular/source/framework/common/APN_db.o.
              definition:  apnconfig(const char*)
              reference :  memcmp
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/cellular/source/framework/common/CellularLog.o.
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/cellular/source/framework/common/CellularUtil.o.
              definition:  mbed_cellular_util::hex_to_char(const char*, char&)
              definition:  mbed_cellular_util::prefer_ipv6(char*, unsigned, char*, unsigned)
              definition:  mbed_cellular_util::convert_ipv6(char*)
              definition:  mbed_cellular_util::hex_str_to_int(const char*, int)
              definition:  mbed_cellular_util::int_to_hex_str(unsigned char, char*)
              definition:  mbed_cellular_util::binary_str_to_uint(const char*, int)
              definition:  mbed_cellular_util::uint_to_binary_str(unsigned, char*, int, int)
              definition:  mbed_cellular_util::char_str_to_hex_str(const char*, unsigned short, char*, bool)
              definition:  mbed_cellular_util::get_dynamic_ip_port()
              definition:  mbed_cellular_util::hex_str_to_char_str(const char*, unsigned short, char*)
              definition:  mbed_cellular_util::separate_ip_addresses(char*, char*, unsigned, char*, unsigned)
              definition:  mbed_cellular_util::separate_ip4like_addresses(char*, char*, unsigned, char*, unsigned)
              reference :  __aeabi_memcpy
              reference :  randLIB_get_random_in_range
              reference :  randLIB_seed_random
              reference :  strchr
              reference :  strlen
              reference :  strncpy
              reference :  strtol
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/cellular/source/framework/device/ATHandler.o.
              definition:  CME_ERROR
              definition:  CMS_ERROR
              definition:  ERROR_
              reference :  mbed_cellular_util::hex_to_char(const char*, char&)
              weak defn :  mbed::ScopedLock<mbed::ATHandler>::ScopedLock__sub_object(mbed::ATHandler&)
              weak defn :  mbed::ScopedLock<mbed::ATHandler>::~ScopedLock__sub_object()
              reference :  mbed::BufferedSerial::set_baud(int)
              definition:  mbed::OK
              definition:  mbed::CRLF
              reference :  mbed::poll(mbed::pollfh*, unsigned, int)
              weak defn :  T1 mbed::detail::invoke_r<void, void(mbed::ATHandler::*const &)(), <mbed::ATHandler*const &>, (int)0>(T2&&, T3&&...)
              weak defn :  T1 mbed::detail::invoke_r<void, mbed::Callback<void()>::Callback<mbed::ATHandler*, void(mbed::ATHandler::*)(), (int)0>(T1, T2)::[lambda() (instance 1)]&, <>, (int)0>(T2&&, T3&&...)
              weak defn :  void mbed::Callback<void()>::target_call<mbed::Callback<void()>::Callback<mbed::ATHandler*, void(mbed::ATHandler::*)(), (int)0>(T1, T2)::[lambda() (instance 1)]>(const mbed::detail::CallbackBase*)
              weak defn :  void mbed::Callback<void()>::generate<mbed::Callback<void()>::Callback<mbed::ATHandler*, void(mbed::ATHandler::*)(), (int)0>(T1, T2)::[lambda() (instance 1)], void>(T1&&)
              weak defn :  mbed::Callback<void()>::Callback__sub_object<mbed::ATHandler*, void(mbed::ATHandler::*)(), (int)0>(T1, T2)
              weak defn :  mbed::Callback<T3(T4...)> mbed::callback<mbed::ATHandler, mbed::ATHandler, void, <>>(T2*, T3(T1::*)(T4...))
              definition:  mbed::ATHandler::at_cmd_int(const char*, const char*, int&, const char*, ...)
              definition:  mbed::ATHandler::at_cmd_str(const char*, const char*, char*, unsigned, const char*, ...)
              definition:  mbed::ATHandler::read_bytes(unsigned char*, unsigned)
              definition:  mbed::ATHandler::resp_start(const char*, bool)
              definition:  mbed::ATHandler::skip_param(int, unsigned)
              definition:  mbed::ATHandler::skip_param(unsigned)
              definition:  mbed::ATHandler::clear_error()
              definition:  mbed::ATHandler::debug_print(const char*, int, mbed::ATHandler::ATType)
              definition:  mbed::ATHandler::fill_buffer(bool)
              definition:  mbed::ATHandler::handle_args(const char*, std::__va_list)
              definition:  mbed::ATHandler::match_error()
              definition:  mbed::ATHandler::process_oob()
              definition:  mbed::ATHandler::read_string(char*, unsigned, bool)
              definition:  mbed::ATHandler::write_bytes(const unsigned char*, unsigned)
              definition:  mbed::ATHandler::consume_char(char)
              definition:  mbed::ATHandler::handle_start(const char*, const char*)
              definition:  mbed::ATHandler::poll_timeout(bool)
              definition:  mbed::ATHandler::reset_buffer()
              definition:  mbed::ATHandler::set_stop_tag(const char*)
              definition:  mbed::ATHandler::write_string(const char*, bool)
              definition:  mbed::ATHandler::ok_to_proceed()
              definition:  mbed::ATHandler::rewind_buffer()
              definition:  mbed::ATHandler::set_delimiter(char)
              definition:  mbed::ATHandler::use_delimiter(bool)
              definition:  mbed::ATHandler::at_cmd_discard(const char*, const char*, const char*, ...)
              definition:  mbed::ATHandler::check_cmd_send()
              definition:  mbed::ATHandler::cmd_start_stop(const char*, const char*, const char*, ...)
              definition:  mbed::ATHandler::consume_to_tag(const char*, bool)
              definition:  mbed::ATHandler::get_3gpp_error()
              definition:  mbed::ATHandler::set_3gpp_error(int, mbed::DeviceErrorType)
              definition:  mbed::ATHandler::set_at_timeout(std::__1::chrono::duration<unsigned, std::__1::ratio<(long long)1, (long long)1000>>, bool)
              definition:  mbed::ATHandler::set_at_timeout(unsigned, bool)
              definition:  mbed::ATHandler::set_send_delay(unsigned short)
              definition:  mbed::ATHandler::get_file_handle()
              definition:  mbed::ATHandler::read_hex_string(char*, unsigned)
              definition:  mbed::ATHandler::set_urc_handler(const char*, mbed::Callback<void()>)
              definition:  mbed::ATHandler::find_urc_handler(const char*)
              definition:  mbed::ATHandler::write_hex_string(const char*, unsigned)
              definition:  mbed::ATHandler::cmd_stop_read_resp()
              definition:  mbed::ATHandler::remove_urc_handler(const char*)
              definition:  mbed::ATHandler::restore_at_timeout()
              definition:  mbed::ATHandler::consume_to_stop_tag()
              definition:  mbed::ATHandler::unlock_return_error()
              definition:  mbed::ATHandler::set_default_delimiter()
              definition:  mbed::ATHandler::set_is_filehandle_usable(bool)
              definition:  mbed::ATHandler::information_response_stop()
              definition:  mbed::ATHandler::information_response_element_stop()
              definition:  mbed::ATHandler::lock()
              definition:  mbed::ATHandler::resp(const char*, bool)
              definition:  mbed::ATHandler::sync(std::__1::chrono::duration<int, std::__1::ratio<(long long)1, (long long)1000>>)
              definition:  mbed::ATHandler::sync(int)
              definition:  mbed::ATHandler::event()
              definition:  mbed::ATHandler::flush()
              definition:  mbed::ATHandler::match(const char*, unsigned)
              weak defn :  mbed::ATHandler::oob_t::oob_t__sub_object()
              definition:  mbed::ATHandler::write(const void*, unsigned)
              definition:  mbed::ATHandler::unlock()
              definition:  mbed::ATHandler::mem_str(const char*, unsigned, const char*, unsigned)
              definition:  mbed::ATHandler::set_tag(mbed::ATHandler::tag_t*, const char*)
              definition:  mbed::ATHandler::at_error(bool, mbed::DeviceErrorType)
              definition:  mbed::ATHandler::cmd_stop()
              definition:  mbed::ATHandler::get_char()
              definition:  mbed::ATHandler::read_int()
              definition:  mbed::ATHandler::set_baud(int)
              definition:  mbed::ATHandler::cmd_start(const char*)
              definition:  mbed::ATHandler::get_scope()
              definition:  mbed::ATHandler::info_elem(char)
              definition:  mbed::ATHandler::info_resp()
              definition:  mbed::ATHandler::match_urc()
              definition:  mbed::ATHandler::resp_stop()
              definition:  mbed::ATHandler::set_debug(bool)
              definition:  mbed::ATHandler::set_error(int)
              definition:  mbed::ATHandler::set_scope(mbed::ATHandler::ScopeType)
              definition:  mbed::ATHandler::write_int(int)
              definition:  mbed::ATHandler::ATHandler(mbed::FileHandle*, events::EventQueue&, std::__1::chrono::duration<unsigned, std::__1::ratio<(long long)1, (long long)1000>>, const char*, std::__1::chrono::duration<unsigned short, std::__1::ratio<(long long)1, (long long)1000>>)
              definition:  mbed::ATHandler::ATHandler(mbed::FileHandle*, events::EventQueue&, unsigned, const char*, unsigned short)
              definition:  mbed::ATHandler::ATHandler__sub_object(mbed::FileHandle*, events::EventQueue&, std::__1::chrono::duration<unsigned, std::__1::ratio<(long long)1, (long long)1000>>, const char*, std::__1::chrono::duration<unsigned short, std::__1::ratio<(long long)1, (long long)1000>>)
              definition:  mbed::ATHandler::ATHandler__sub_object(mbed::FileHandle*, events::EventQueue&, unsigned, const char*, unsigned short)
              definition:  mbed::ATHandler::~ATHandler()
              definition:  mbed::ATHandler::~ATHandler__sub_object()
              weak defn :  std::__1::enable_if<((std::is_function<T2>::value&&(!std::is_base_of<T1, std::__1::decay<T3>::type>::value))&&(!is_reference_wrapper<std::__1::decay<T3>::type>::value)), decltype((((*std::forward<T3>(param#2)).*param#1)(std::forward<T4>(param#3)...)))>::type mstd::impl::INVOKE<mbed::ATHandler, void(), mbed::ATHandler*const &, <>>(T2T1::*, T3&&, T4&&...)
              weak defn :  std::__1::enable_if<((!std::is_member_pointer<std::__1::decay<T1>::type>::value)||(std::is_member_object_pointer<std::__1::decay<T1>::type>::value&&(sizeof...(param#2)!=(int)1))), decltype((std::forward<T1>(param#1)(std::forward<T2>(param#2)...)))>::type mstd::impl::INVOKE<mbed::Callback<void()>::Callback<mbed::ATHandler*, void(mbed::ATHandler::*)(), (int)0>(T1, T2)::[lambda() (instance 1)]&, <>>(T1&&, T2&&...)
              weak defn :  mstd::invoke_result<T1, <T2...>>::type mstd::invoke<void(mbed::ATHandler::*const &)(), <mbed::ATHandler*const &>>(T1&&, T2&&...)
              weak defn :  mstd::invoke_result<T1, <T2...>>::type mstd::invoke<mbed::Callback<void()>::Callback<mbed::ATHandler*, void(mbed::ATHandler::*)(), (int)0>(T1, T2)::[lambda() (instance 1)]&, <>>(T1&&, T2&&...)
              reference :  rtos::ThisThread::sleep_until(std::__1::chrono::time_point<rtos::Kernel::Clock, std::__1::chrono::duration<long long, std::__1::ratio<(long long)1, (long long)1000>>>)
              reference :  rtos::ConditionVariable::notify_all()
              reference :  rtos::ConditionVariable::wait()
              reference :  rtos::ConditionVariable::ConditionVariable(rtos::Mutex&)
              reference :  rtos::ConditionVariable::~ConditionVariable()
              reference :  rtos::Mutex::lock()
              reference :  rtos::Mutex::unlock()
              reference :  rtos::Mutex::Mutex()
              reference :  rtos::Mutex::~Mutex()
              reference :  rtos::Kernel::impl::get_tick_count()
              weak defn :  rtos::Kernel::Clock::now()
              reference :  events::EventQueue::cancel(int)
              weak defn :  mbed::FileHandle::readable() const
              definition:  mbed::ATHandler::get_last_error() const
              definition:  mbed::ATHandler::get_last_device_error() const
              definition:  mbed::ATHandler::get_debug() const
              weak defn :  mbed::Callback<void()>::Callback<mbed::ATHandler*, void(mbed::ATHandler::*)(), (int)0>(T1, T2)::[lambda() (instance 1)]::operator ()() const
              reference :  operator delete[] (void*)
              reference :  operator delete (void*)
              reference :  operator new[] (unsigned)
              reference :  operator new(unsigned)
              reference :  __2sprintf
              reference :  __aeabi_errno_addr
              reference :  __aeabi_memcpy
              reference :  __aeabi_memmove
              reference :  _printf_i
              reference :  _printf_int_dec
              reference :  _printf_percent
              reference :  _printf_return_value
              reference :  equeue_alloc
              reference :  equeue_event_dtor
              reference :  equeue_post
              reference :  mbed_assert_internal
              reference :  memcmp
              reference :  strcmp
              reference :  strcpy
              reference :  strlen
              reference :  strncmp
              reference :  strtol
              reference :  _ZNSt3__18literals15chrono_literalsli1sEy
              reference :  mbed::Callback<void()>::Callback__sub_object(std::nullptr_t)
              reference :  int events::EventQueue::call<mbed::Callback<void()>>(T1)
              reference :  mbed::Callback<void()>::operator bool() const
              reference :  mbed::Callback<void()>::Callback__sub_object()
              reference :  _ZNSt3__18literals15chrono_literalsli2msEy
              reference :  mbed::Callback<void()>::operator ()() const
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/cellular/source/framework/device/CellularContext.o.
              reference :  NetworkInterface::get_gateway(SocketAddress*)
              reference :  NetworkInterface::get_netmask(SocketAddress*)
              reference :  NetworkInterface::getaddrinfo(const char*, SocketAddress*, SocketAddress**, const char*)
              reference :  NetworkInterface::set_network(const SocketAddress&, const SocketAddress&, const SocketAddress&)
              reference :  NetworkInterface::gethostbyname(const char*, SocketAddress*, nsapi_version, const char*)
              reference :  NetworkInterface::add_dns_server(const SocketAddress&, const char*)
              reference :  NetworkInterface::get_dns_server(int, SocketAddress*, const char*)
              reference :  NetworkInterface::set_as_default()
              reference :  NetworkInterface::get_mac_address()
              reference :  NetworkInterface::getaddrinfo_async(const char*, SocketAddress*, mbed::Callback<void(int, SocketAddress*)>, const char*)
              reference :  NetworkInterface::get_interface_name(char*)
              reference :  NetworkInterface::gethostbyname_async(const char*, mbed::Callback<void(int, SocketAddress*)>, nsapi_version, const char*)
              reference :  NetworkInterface::gethostbyname_async_cancel(int)
              reference :  NetworkInterface::get_ipv6_link_local_address(SocketAddress*)
              reference :  NetworkInterface::set_dhcp(bool)
              weak defn :  NetworkInterface::NetworkInterface__sub_object()
              reference :  NetworkInterface::~NetworkInterface__sub_object()
              reference :  CellularInterface::set_default_parameters()
              weak defn :  CellularInterface::get_target_default_instance()
              weak defn :  CellularInterface::CellularInterface__sub_object()
              reference :  mbed::CellularDevice::get_default_instance()
              definition:  mbed::CellularContext::do_connect()
              definition:  mbed::CellularContext::call_network_cb(nsapi_connection_status)
              definition:  mbed::CellularContext::cp_data_received()
              definition:  mbed::CellularContext::string_to_pdp_type(const char*)
              definition:  mbed::CellularContext::validate_ip_address()
              weak defn :  mbed::CellularContext::get_default_instance()
              definition:  mbed::CellularContext::do_connect_with_retry()
              definition:  mbed::CellularContext::set_authentication_type(mbed::CellularContext::AuthenticationType)
              weak defn :  mbed::CellularContext::get_default_nonip_instance()
              definition:  mbed::CellularContext::CellularContext__sub_object()
              weak defn :  mbed::CellularContext::~CellularContext__deallocating()
              weak defn :  T1 mbed::detail::invoke_r<void, void(mbed::CellularContext::*const &)(), <mbed::CellularContext*const &>, (int)0>(T2&&, T3&&...)
              weak defn :  T1 mbed::detail::invoke_r<void, mbed::Callback<void()>::Callback<mbed::CellularContext*, void(mbed::CellularContext::*)(), (int)0>(T1, T2)::[lambda() (instance 1)]&, <>, (int)0>(T2&&, T3&&...)
              weak defn :  void mbed::Callback<void()>::target_call<mbed::Callback<void()>::Callback<mbed::CellularContext*, void(mbed::CellularContext::*)(), (int)0>(T1, T2)::[lambda() (instance 1)]>(const mbed::detail::CallbackBase*)
              weak defn :  void mbed::Callback<void()>::generate<mbed::Callback<void()>::Callback<mbed::CellularContext*, void(mbed::CellularContext::*)(), (int)0>(T1, T2)::[lambda() (instance 1)], void>(T1&&)
              weak defn :  mbed::Callback<void()>::Callback__sub_object<mbed::CellularContext*, void(mbed::CellularContext::*)(), (int)0>(T1, T2)
              weak defn :  mbed::Callback<T3(T4...)> mbed::callback<mbed::CellularContext, mbed::CellularContext, void, <>>(T2*, T3(T1::*)(T4...))
              weak defn :  std::__1::enable_if<((std::is_function<T2>::value&&(!std::is_base_of<T1, std::__1::decay<T3>::type>::value))&&(!is_reference_wrapper<std::__1::decay<T3>::type>::value)), decltype((((*std::forward<T3>(param#2)).*param#1)(std::forward<T4>(param#3)...)))>::type mstd::impl::INVOKE<mbed::CellularContext, void(), mbed::CellularContext*const &, <>>(T2T1::*, T3&&, T4&&...)
              weak defn :  std::__1::enable_if<((!std::is_member_pointer<std::__1::decay<T1>::type>::value)||(std::is_member_object_pointer<std::__1::decay<T1>::type>::value&&(sizeof...(param#2)!=(int)1))), decltype((std::forward<T1>(param#1)(std::forward<T2>(param#2)...)))>::type mstd::impl::INVOKE<mbed::Callback<void()>::Callback<mbed::CellularContext*, void(mbed::CellularContext::*)(), (int)0>(T1, T2)::[lambda() (instance 1)]&, <>>(T1&&, T2&&...)
              weak defn :  mstd::invoke_result<T1, <T2...>>::type mstd::invoke<void(mbed::CellularContext::*const &)(), <mbed::CellularContext*const &>>(T1&&, T2&&...)
              weak defn :  mstd::invoke_result<T1, <T2...>>::type mstd::invoke<mbed::Callback<void()>::Callback<mbed::CellularContext*, void(mbed::CellularContext::*)(), (int)0>(T1, T2)::[lambda() (instance 1)]&, <>>(T1&&, T2&&...)
              reference :  rtos::ThisThread::sleep_for(std::__1::chrono::duration<unsigned, std::__1::ratio<(long long)1, (long long)1000>>)
              weak defn :  int events::EventQueue::call_in<mbed::CellularContext, void, <>>(std::__1::chrono::duration<int, std::__1::ratio<(long long)1, (long long)1000>>, T1*, T2(T1::*)(T3...), T3...)
              weak defn :  int events::EventQueue::call_in<mbed::Callback<void()>>(std::__1::chrono::duration<int, std::__1::ratio<(long long)1, (long long)1000>>, T1)
              reference :  SocketAddress::get_ip_address() const
              reference :  SocketAddress::operator bool() const
              reference :  NetworkInterface::get_connection_status() const
              reference :  mbed::CellularDevice::get_retry_timeout_array(unsigned short*, int&) const
              definition:  mbed::CellularContext::get_device() const
              definition:  mbed::CellularContext::get_cid() const
              reference :  vtable for NetworkInterface
              reference :  vtable for CellularInterface
              definition:  vtable for mbed::CellularContext
              weak defn :  mbed::Callback<void()>::Callback<mbed::CellularContext*, void(mbed::CellularContext::*)(), (int)0>(T1, T2)::[lambda() (instance 1)]::operator ()() const
              reference :  operator delete[] (void*)
              reference :  __aeabi_memclr4
              reference :  __cxa_guard_acquire
              reference :  __cxa_guard_release
              reference :  __cxa_pure_virtual
              reference :  equeue_alloc
              reference :  equeue_event_delay
              reference :  equeue_event_dtor
              reference :  equeue_post
              reference :  mbed_assert_internal
              reference :  memcmp
              reference :  strlen
              reference :  cell_callback_data_t::cell_callback_data_t__sub_object()
              reference :  mbed::Callback<void(nsapi_event, int)>::Callback__sub_object()
              reference :  SocketAddress::SocketAddress__sub_object()
              reference :  SocketAddress::~SocketAddress__sub_object()
              reference :  _ZNSt3__18literals15chrono_literalsli1sEy
              reference :  mbed::Callback<void(nsapi_event, int)>::operator bool() const
              reference :  mbed::Callback<void(nsapi_event, int)>::operator ()(nsapi_event, int) const
              reference :  DNS::DNS__sub_object()
              reference :  void events::EventQueue::function_dtor<mbed::Callback<void()>>(void*)
              reference :  void events::EventQueue::function_call<mbed::Callback<void()>>(void*)
              reference :  mbed::CellularContext::~CellularContext__sub_object()
              reference :  NetworkInterface::ethInterface()
              reference :  NetworkInterface::wifiInterface()
              reference :  NetworkInterface::meshInterface()
              reference :  NetworkInterface::emacInterface()
              reference :  CellularInterface::cellularInterface()
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/cellular/source/framework/device/CellularDevice.o.
              definition:  mbed::CellularDevice::set_sim_pin(const char*)
              definition:  mbed::CellularDevice::stm_callback(nsapi_event, int)
              definition:  mbed::CellularDevice::set_sim_ready()
              definition:  mbed::CellularDevice::set_device_ready()
              definition:  mbed::CellularDevice::attach_to_network()
              definition:  mbed::CellularDevice::cellular_callback(nsapi_event, int, mbed::CellularContext*)
              definition:  mbed::CellularDevice::register_to_network()
              definition:  mbed::CellularDevice::start_state_machine(mbed::CellularStateMachine::CellularState)
              definition:  mbed::CellularDevice::create_state_machine()
              weak defn :  mbed::CellularDevice::get_default_instance()
              definition:  mbed::CellularDevice::set_retry_timeout_array(const unsigned short*, int)
              weak defn :  mbed::CellularDevice::get_target_default_instance()
              definition:  mbed::CellularDevice::attach(mbed::Callback<void(nsapi_event, int)>)
              definition:  mbed::CellularDevice::set_plmn(const char*)
              definition:  mbed::CellularDevice::shutdown()
              definition:  mbed::CellularDevice::get_queue()
              definition:  mbed::CellularDevice::CellularDevice__sub_object()
              definition:  mbed::CellularDevice::~CellularDevice__deallocating()
              definition:  mbed::CellularDevice::~CellularDevice()
              definition:  mbed::CellularDevice::~CellularDevice__sub_object()
              reference :  mbed::CellularStateMachine::set_sim_pin(const char*)
              reference :  mbed::CellularStateMachine::run_to_state(mbed::CellularStateMachine::CellularState)
              reference :  mbed::CellularStateMachine::start_dispatch()
              reference :  mbed::CellularStateMachine::get_current_status(mbed::CellularStateMachine::CellularState&, mbed::CellularStateMachine::CellularState&)
              reference :  mbed::CellularStateMachine::set_cellular_callback(mbed::Callback<void(nsapi_event, int)>)
              reference :  mbed::CellularStateMachine::cellular_event_changed(nsapi_event, int)
              reference :  mbed::CellularStateMachine::set_retry_timeout_array(const unsigned short*, int)
              reference :  mbed::CellularStateMachine::stop()
              reference :  mbed::CellularStateMachine::reset()
              reference :  mbed::CellularStateMachine::set_plmn(const char*)
              reference :  mbed::CellularStateMachine::CellularStateMachine(mbed::CellularDevice&, events::EventQueue&, mbed::CellularNetwork&)
              reference :  mbed::CellularStateMachine::~CellularStateMachine()
              weak defn :  T1 mbed::detail::invoke_r<void, void(events::EventQueue::*const &)(), <events::EventQueue*const &>, (int)0>(T2&&, T3&&...)
              weak defn :  T1 mbed::detail::invoke_r<void, void(mbed::CellularDevice::*const &)(nsapi_event, int), <mbed::CellularDevice*const &, nsapi_event, int>, (int)0>(T2&&, T3&&...)
              weak defn :  T1 mbed::detail::invoke_r<void, mbed::Callback<void(nsapi_event, int)>::Callback<mbed::CellularDevice*, void(mbed::CellularDevice::*)(nsapi_event, int), (int)0>(T1, T2)::[lambda(nsapi_event, int) (instance 1)]&, <nsapi_event, int>, (int)0>(T2&&, T3&&...)
              weak defn :  T1 mbed::detail::invoke_r<void, mbed::Callback<void()>::Callback<events::EventQueue*, void(events::EventQueue::*)(), (int)0>(T1, T2)::[lambda() (instance 1)]&, <>, (int)0>(T2&&, T3&&...)
              weak defn :  void mbed::Callback<void(nsapi_event, int)>::target_call<mbed::Callback<void(nsapi_event, int)>::Callback<mbed::CellularDevice*, void(mbed::CellularDevice::*)(nsapi_event, int), (int)0>(T1, T2)::[lambda(nsapi_event, int) (instance 1)]>(const mbed::detail::CallbackBase*, nsapi_event, int)
              weak defn :  void mbed::Callback<void(nsapi_event, int)>::generate<mbed::Callback<void(nsapi_event, int)>::Callback<mbed::CellularDevice*, void(mbed::CellularDevice::*)(nsapi_event, int), (int)0>(T1, T2)::[lambda(nsapi_event, int) (instance 1)], void>(T1&&)
              weak defn :  mbed::Callback<void(nsapi_event, int)>::Callback__sub_object<mbed::CellularDevice*, void(mbed::CellularDevice::*)(nsapi_event, int), (int)0>(T1, T2)
              weak defn :  void mbed::Callback<void()>::target_call<mbed::Callback<void()>::Callback<events::EventQueue*, void(events::EventQueue::*)(), (int)0>(T1, T2)::[lambda() (instance 1)]>(const mbed::detail::CallbackBase*)
              weak defn :  void mbed::Callback<void()>::generate<mbed::Callback<void()>::Callback<events::EventQueue*, void(events::EventQueue::*)(), (int)0>(T1, T2)::[lambda() (instance 1)], void>(T1&&)
              weak defn :  mbed::Callback<void()>::Callback__sub_object<events::EventQueue*, void(events::EventQueue::*)(), (int)0>(T1, T2)
              weak defn :  mbed::Callback<T3(T4...)> mbed::callback<events::EventQueue, events::EventQueue, void, <>>(T2*, T3(T1::*)(T4...))
              weak defn :  mbed::Callback<T3(T4...)> mbed::callback<mbed::CellularDevice, mbed::CellularDevice, void, <nsapi_event, int>>(T2*, T3(T1::*)(T4...))
              weak defn :  std::__1::enable_if<((std::is_function<T2>::value&&(!std::is_base_of<T1, std::__1::decay<T3>::type>::value))&&(!is_reference_wrapper<std::__1::decay<T3>::type>::value)), decltype((((*std::forward<T3>(param#2)).*param#1)(std::forward<T4>(param#3)...)))>::type mstd::impl::INVOKE<mbed::CellularDevice, void(nsapi_event, int), mbed::CellularDevice*const &, <nsapi_event, int>>(T2T1::*, T3&&, T4&&...)
              weak defn :  std::__1::enable_if<((std::is_function<T2>::value&&(!std::is_base_of<T1, std::__1::decay<T3>::type>::value))&&(!is_reference_wrapper<std::__1::decay<T3>::type>::value)), decltype((((*std::forward<T3>(param#2)).*param#1)(std::forward<T4>(param#3)...)))>::type mstd::impl::INVOKE<events::EventQueue, void(), events::EventQueue*const &, <>>(T2T1::*, T3&&, T4&&...)
              weak defn :  std::__1::enable_if<((!std::is_member_pointer<std::__1::decay<T1>::type>::value)||(std::is_member_object_pointer<std::__1::decay<T1>::type>::value&&(sizeof...(param#2)!=(int)1))), decltype((std::forward<T1>(param#1)(std::forward<T2>(param#2)...)))>::type mstd::impl::INVOKE<mbed::Callback<void(nsapi_event, int)>::Callback<mbed::CellularDevice*, void(mbed::CellularDevice::*)(nsapi_event, int), (int)0>(T1, T2)::[lambda(nsapi_event, int) (instance 1)]&, <nsapi_event, int>>(T1&&, T2&&...)
              weak defn :  std::__1::enable_if<((!std::is_member_pointer<std::__1::decay<T1>::type>::value)||(std::is_member_object_pointer<std::__1::decay<T1>::type>::value&&(sizeof...(param#2)!=(int)1))), decltype((std::forward<T1>(param#1)(std::forward<T2>(param#2)...)))>::type mstd::impl::INVOKE<mbed::Callback<void()>::Callback<events::EventQueue*, void(events::EventQueue::*)(), (int)0>(T1, T2)::[lambda() (instance 1)]&, <>>(T1&&, T2&&...)
              weak defn :  mstd::invoke_result<T1, <T2...>>::type mstd::invoke<void(mbed::CellularDevice::*const &)(nsapi_event, int), <mbed::CellularDevice*const &, nsapi_event, int>>(T1&&, T2&&...)
              weak defn :  mstd::invoke_result<T1, <T2...>>::type mstd::invoke<void(events::EventQueue::*const &)(), <events::EventQueue*const &>>(T1&&, T2&&...)
              weak defn :  mstd::invoke_result<T1, <T2...>>::type mstd::invoke<mbed::Callback<void(nsapi_event, int)>::Callback<mbed::CellularDevice*, void(mbed::CellularDevice::*)(nsapi_event, int), (int)0>(T1, T2)::[lambda(nsapi_event, int) (instance 1)]&, <nsapi_event, int>>(T1&&, T2&&...)
              weak defn :  mstd::invoke_result<T1, <T2...>>::type mstd::invoke<mbed::Callback<void()>::Callback<events::EventQueue*, void(events::EventQueue::*)(), (int)0>(T1, T2)::[lambda() (instance 1)]&, <>>(T1&&, T2&&...)
              reference :  rtos::Mutex::lock()
              reference :  rtos::Mutex::unlock()
              reference :  rtos::Mutex::Mutex()
              reference :  rtos::Mutex::~Mutex()
              reference :  rtos::Thread::constructor(osPriority_t, unsigned, unsigned char*, const char*)
              reference :  rtos::Thread::start(mbed::Callback<void()>)
              weak defn :  rtos::Thread::Thread__sub_object(osPriority_t, unsigned, unsigned char*, const char*)
              reference :  rtos::Thread::~Thread()
              reference :  rtos::Semaphore::Semaphore(int)
              weak defn :  events::EventQueue::dispatch_forever()
              reference :  events::EventQueue::dispatch(int)
              reference :  events::EventQueue::EventQueue(unsigned, unsigned char*)
              reference :  events::EventQueue::~EventQueue()
              definition:  mbed::CellularDevice::get_retry_timeout_array(unsigned short*, int&) const
              reference :  mbed::CellularStateMachine::get_retry_timeout_array(unsigned short*, int&) const
              definition:  vtable for mbed::CellularDevice
              reference :  vtable for rtos::Thread
              weak defn :  mbed::Callback<void(nsapi_event, int)>::Callback<mbed::CellularDevice*, void(mbed::CellularDevice::*)(nsapi_event, int), (int)0>(T1, T2)::[lambda(nsapi_event, int) (instance 1)]::operator ()(nsapi_event, int) const
              weak defn :  mbed::Callback<void()>::Callback<events::EventQueue*, void(events::EventQueue::*)(), (int)0>(T1, T2)::[lambda() (instance 1)]::operator ()() const
              reference :  operator delete (void*)
              reference :  operator new(unsigned)
              reference :  __cxa_pure_virtual
              reference :  mbed_assert_internal
              reference :  strlen
              reference :  strncpy
              reference :  mbed::Callback<void(nsapi_event, int)>::Callback__sub_object()
              reference :  mbed::Callback<void()>::Callback__sub_object()
              reference :  mbed::Callback<void(nsapi_event, int)>::operator bool() const
              reference :  mbed::Callback<void(nsapi_event, int)>::operator ()(nsapi_event, int) const
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/cellular/source/framework/device/CellularStateMachine.o.
              weak defn :  cell_signal_quality_t::cell_signal_quality_t__sub_object()
              definition:  mbed::CellularStateMachine::state_init()
              definition:  mbed::CellularStateMachine::set_sim_pin(const char*)
              definition:  mbed::CellularStateMachine::set_timeout(std::__1::chrono::duration<int, std::__1::ratio<(long long)1, (long long)1000>>)
              definition:  mbed::CellularStateMachine::device_ready()
              definition:  mbed::CellularStateMachine::run_to_state(mbed::CellularStateMachine::CellularState)
              definition:  mbed::CellularStateMachine::is_registered()
              definition:  mbed::CellularStateMachine::send_event_cb(cellular_event_status)
              definition:  mbed::CellularStateMachine::state_sim_pin()
              definition:  mbed::CellularStateMachine::change_timeout(const std::__1::chrono::duration<int, std::__1::ratio<(long long)1, (long long)1000>>&)
              definition:  mbed::CellularStateMachine::enter_to_state(mbed::CellularStateMachine::CellularState)
              definition:  mbed::CellularStateMachine::report_failure(const char*)
              definition:  mbed::CellularStateMachine::start_dispatch()
              definition:  mbed::CellularStateMachine::state_power_on()
              definition:  mbed::CellularStateMachine::device_ready_cb()
              definition:  mbed::CellularStateMachine::state_attaching()
              definition:  mbed::CellularStateMachine::state_registering()
              definition:  mbed::CellularStateMachine::get_current_status(mbed::CellularStateMachine::CellularState&, mbed::CellularStateMachine::CellularState&)
              definition:  mbed::CellularStateMachine::state_device_ready()
              definition:  mbed::CellularStateMachine::continue_from_state(mbed::CellularStateMachine::CellularState)
              definition:  mbed::CellularStateMachine::retry_state_or_fail()
              definition:  mbed::CellularStateMachine::state_signal_quality()
              definition:  mbed::CellularStateMachine::set_cellular_callback(mbed::Callback<void(nsapi_event, int)>)
              definition:  mbed::CellularStateMachine::cellular_event_changed(nsapi_event, int)
              definition:  mbed::CellularStateMachine::check_is_target_reached()
              definition:  mbed::CellularStateMachine::set_retry_timeout_array(const unsigned short*, int)
              definition:  mbed::CellularStateMachine::get_network_registration(mbed::CellularNetwork::RegistrationType, mbed::CellularNetwork::RegistrationStatus&, bool&)
              definition:  mbed::CellularStateMachine::stop()
              definition:  mbed::CellularStateMachine::event()
              definition:  mbed::CellularStateMachine::reset()
              definition:  mbed::CellularStateMachine::open_sim()
              definition:  mbed::CellularStateMachine::power_on()
              definition:  mbed::CellularStateMachine::set_plmn(const char*)
              definition:  mbed::CellularStateMachine::pre_event(mbed::CellularStateMachine::CellularState)
              definition:  mbed::CellularStateMachine::CellularStateMachine(mbed::CellularDevice&, events::EventQueue&, mbed::CellularNetwork&)
              definition:  mbed::CellularStateMachine::CellularStateMachine__sub_object(mbed::CellularDevice&, events::EventQueue&, mbed::CellularNetwork&)
              definition:  mbed::CellularStateMachine::~CellularStateMachine()
              definition:  mbed::CellularStateMachine::~CellularStateMachine__sub_object()
              weak defn :  T1 mbed::detail::invoke_r<void, void(mbed::CellularStateMachine::*const &)(mbed::CellularStateMachine::CellularState), <mbed::CellularStateMachine*const &, mbed::CellularStateMachine::CellularState>, (int)0>(T2&&, T3&&...)
              weak defn :  T1 mbed::detail::invoke_r<void, void(mbed::CellularStateMachine::*const &)(), <mbed::CellularStateMachine*const &>, (int)0>(T2&&, T3&&...)
              weak defn :  T1 mbed::detail::invoke_r<void, mbed::Callback<void(mbed::CellularStateMachine::CellularState)>::Callback<mbed::CellularStateMachine*, void(mbed::CellularStateMachine::*)(mbed::CellularStateMachine::CellularState), (int)0>(T1, T2)::[lambda(mbed::CellularStateMachine::CellularState) (instance 1)]&, <mbed::CellularStateMachine::CellularState>, (int)0>(T2&&, T3&&...)
              weak defn :  T1 mbed::detail::invoke_r<void, mbed::Callback<void()>::Callback<mbed::CellularStateMachine*, void(mbed::CellularStateMachine::*)(), (int)0>(T1, T2)::[lambda() (instance 1)]&, <>, (int)0>(T2&&, T3&&...)
              weak defn :  void mbed::Callback<void(mbed::CellularStateMachine::CellularState)>::target_call<mbed::Callback<void(mbed::CellularStateMachine::CellularState)>::Callback<mbed::CellularStateMachine*, void(mbed::CellularStateMachine::*)(mbed::CellularStateMachine::CellularState), (int)0>(T1, T2)::[lambda(mbed::CellularStateMachine::CellularState) (instance 1)]>(const mbed::detail::CallbackBase*, mbed::CellularStateMachine::CellularState)
              weak defn :  void mbed::Callback<void(mbed::CellularStateMachine::CellularState)>::generate<mbed::Callback<void(mbed::CellularStateMachine::CellularState)>::Callback<mbed::CellularStateMachine*, void(mbed::CellularStateMachine::*)(mbed::CellularStateMachine::CellularState), (int)0>(T1, T2)::[lambda(mbed::CellularStateMachine::CellularState) (instance 1)], void>(T1&&)
              weak defn :  mbed::Callback<void(mbed::CellularStateMachine::CellularState)>::Callback__sub_object<mbed::CellularStateMachine*, void(mbed::CellularStateMachine::*)(mbed::CellularStateMachine::CellularState), (int)0>(T1, T2)
              weak defn :  void mbed::Callback<void()>::target_call<mbed::Callback<void()>::Callback<mbed::CellularStateMachine*, void(mbed::CellularStateMachine::*)(), (int)0>(T1, T2)::[lambda() (instance 1)]>(const mbed::detail::CallbackBase*)
              weak defn :  void mbed::Callback<void()>::generate<mbed::Callback<void()>::Callback<mbed::CellularStateMachine*, void(mbed::CellularStateMachine::*)(), (int)0>(T1, T2)::[lambda() (instance 1)], void>(T1&&)
              weak defn :  mbed::Callback<void()>::Callback__sub_object<mbed::CellularStateMachine*, void(mbed::CellularStateMachine::*)(), (int)0>(T1, T2)
              weak defn :  mbed::Callback<T3(T4...)> mbed::callback<mbed::CellularStateMachine, mbed::CellularStateMachine, void, <>>(T2*, T3(T1::*)(T4...))
              weak defn :  mbed::Callback<T3(T4...)> mbed::callback<mbed::CellularStateMachine, mbed::CellularStateMachine, void, <mbed::CellularStateMachine::CellularState>>(T2*, T3(T1::*)(T4...))
              weak defn :  std::__1::enable_if<((std::is_function<T2>::value&&(!std::is_base_of<T1, std::__1::decay<T3>::type>::value))&&(!is_reference_wrapper<std::__1::decay<T3>::type>::value)), decltype((((*std::forward<T3>(param#2)).*param#1)(std::forward<T4>(param#3)...)))>::type mstd::impl::INVOKE<mbed::CellularStateMachine, void(mbed::CellularStateMachine::CellularState), mbed::CellularStateMachine*const &, <mbed::CellularStateMachine::CellularState>>(T2T1::*, T3&&, T4&&...)
              weak defn :  std::__1::enable_if<((std::is_function<T2>::value&&(!std::is_base_of<T1, std::__1::decay<T3>::type>::value))&&(!is_reference_wrapper<std::__1::decay<T3>::type>::value)), decltype((((*std::forward<T3>(param#2)).*param#1)(std::forward<T4>(param#3)...)))>::type mstd::impl::INVOKE<mbed::CellularStateMachine, void(), mbed::CellularStateMachine*const &, <>>(T2T1::*, T3&&, T4&&...)
              weak defn :  std::__1::enable_if<((!std::is_member_pointer<std::__1::decay<T1>::type>::value)||(std::is_member_object_pointer<std::__1::decay<T1>::type>::value&&(sizeof...(param#2)!=(int)1))), decltype((std::forward<T1>(param#1)(std::forward<T2>(param#2)...)))>::type mstd::impl::INVOKE<mbed::Callback<void(mbed::CellularStateMachine::CellularState)>::Callback<mbed::CellularStateMachine*, void(mbed::CellularStateMachine::*)(mbed::CellularStateMachine::CellularState), (int)0>(T1, T2)::[lambda(mbed::CellularStateMachine::CellularState) (instance 1)]&, <mbed::CellularStateMachine::CellularState>>(T1&&, T2&&...)
              weak defn :  std::__1::enable_if<((!std::is_member_pointer<std::__1::decay<T1>::type>::value)||(std::is_member_object_pointer<std::__1::decay<T1>::type>::value&&(sizeof...(param#2)!=(int)1))), decltype((std::forward<T1>(param#1)(std::forward<T2>(param#2)...)))>::type mstd::impl::INVOKE<mbed::Callback<void()>::Callback<mbed::CellularStateMachine*, void(mbed::CellularStateMachine::*)(), (int)0>(T1, T2)::[lambda() (instance 1)]&, <>>(T1&&, T2&&...)
              weak defn :  mstd::invoke_result<T1, <T2...>>::type mstd::invoke<void(mbed::CellularStateMachine::*const &)(mbed::CellularStateMachine::CellularState), <mbed::CellularStateMachine*const &, mbed::CellularStateMachine::CellularState>>(T1&&, T2&&...)
              weak defn :  mstd::invoke_result<T1, <T2...>>::type mstd::invoke<void(mbed::CellularStateMachine::*const &)(), <mbed::CellularStateMachine*const &>>(T1&&, T2&&...)
              weak defn :  mstd::invoke_result<T1, <T2...>>::type mstd::invoke<mbed::Callback<void(mbed::CellularStateMachine::CellularState)>::Callback<mbed::CellularStateMachine*, void(mbed::CellularStateMachine::*)(mbed::CellularStateMachine::CellularState), (int)0>(T1, T2)::[lambda(mbed::CellularStateMachine::CellularState) (instance 1)]&, <mbed::CellularStateMachine::CellularState>>(T1&&, T2&&...)
              weak defn :  mstd::invoke_result<T1, <T2...>>::type mstd::invoke<mbed::Callback<void()>::Callback<mbed::CellularStateMachine*, void(mbed::CellularStateMachine::*)(), (int)0>(T1, T2)::[lambda() (instance 1)]&, <>>(T1&&, T2&&...)
              reference :  rtos::Mutex::lock()
              reference :  rtos::Mutex::unlock()
              reference :  rtos::Mutex::Mutex()
              reference :  rtos::Mutex::~Mutex()
              weak defn :  void events::EventQueue::function_call<events::EventQueue::context<mbed::Callback<void(mbed::CellularStateMachine::CellularState)>, <mbed::CellularStateMachine::CellularState>>>(void*)
              weak defn :  void events::EventQueue::function_dtor<events::EventQueue::context<mbed::Callback<void(mbed::CellularStateMachine::CellularState)>, <mbed::CellularStateMachine::CellularState>>>(void*)
              weak defn :  int events::EventQueue::call<mbed::CellularStateMachine, void, <>>(T1*, T2(T1::*)(T3...), T3...)
              weak defn :  int events::EventQueue::call<mbed::CellularStateMachine, void, <mbed::CellularStateMachine::CellularState>>(T1*, T2(T1::*)(T3...), T3...)
              weak defn :  int events::EventQueue::call<mbed::Callback<void(mbed::CellularStateMachine::CellularState)>, <mbed::CellularStateMachine::CellularState>>(T1, T2...)
              weak defn :  int events::EventQueue::call<events::EventQueue::context<mbed::Callback<void(mbed::CellularStateMachine::CellularState)>, <mbed::CellularStateMachine::CellularState>>>(T1)
              reference :  events::EventQueue::cancel(int)
              weak defn :  events::EventQueue::context<mbed::Callback<void(mbed::CellularStateMachine::CellularState)>, <mbed::CellularStateMachine::CellularState>>::context__sub_object(mbed::Callback<void(mbed::CellularStateMachine::CellularState)>, mbed::CellularStateMachine::CellularState)
              weak defn :  void events::EventQueue::context<mbed::Callback<void(mbed::CellularStateMachine::CellularState)>, <mbed::CellularStateMachine::CellularState>>::operator ()<<>>(T1...)
              definition:  mbed::CellularStateMachine::get_state_string(mbed::CellularStateMachine::CellularState) const
              definition:  mbed::CellularStateMachine::get_retry_timeout_array(unsigned short*, int&) const
              weak defn :  mbed::Callback<void(mbed::CellularStateMachine::CellularState)>::call(mbed::CellularStateMachine::CellularState) const
              weak defn :  mbed::Callback<void(mbed::CellularStateMachine::CellularState)>::operator ()(mbed::CellularStateMachine::CellularState) const
              weak defn :  mbed::Callback<void(mbed::CellularStateMachine::CellularState)>::operator bool() const
              weak defn :  mbed::Callback<void(mbed::CellularStateMachine::CellularState)>::Callback<mbed::CellularStateMachine*, void(mbed::CellularStateMachine::*)(mbed::CellularStateMachine::CellularState), (int)0>(T1, T2)::[lambda(mbed::CellularStateMachine::CellularState) (instance 1)]::operator ()(mbed::CellularStateMachine::CellularState) const
              weak defn :  mbed::Callback<void()>::Callback<mbed::CellularStateMachine*, void(mbed::CellularStateMachine::*)(), (int)0>(T1, T2)::[lambda() (instance 1)]::operator ()() const
              reference :  equeue_alloc
              reference :  equeue_event_delay
              reference :  equeue_event_dtor
              reference :  equeue_post
              reference :  mbed_assert_internal
              reference :  mbed::Callback<void(nsapi_event, int)>::Callback__sub_object()
              reference :  _ZNSt3__18literals15chrono_literalsli1sEy
              reference :  cell_callback_data_t::cell_callback_data_t__sub_object()
              reference :  _ZNSt3__18literals15chrono_literalsli3minEy
              reference :  mbed::Callback<void(nsapi_event, int)>::operator bool() const
              reference :  mbed::Callback<void(nsapi_event, int)>::operator ()(nsapi_event, int) const
              reference :  mbed::CellularNetwork::registration_params_t::registration_params_t__sub_object()
              reference :  mbed::Callback<void()>::Callback__sub_object(std::nullptr_t)
              reference :  int events::EventQueue::call<mbed::Callback<void()>>(T1)
              reference :  int events::EventQueue::call_in<mbed::Callback<void()>>(std::__1::chrono::duration<int, std::__1::ratio<(long long)1, (long long)1000>>, T1)
              reference :  mbed::detail::CallbackBase::call_fn() const
              reference :  mbed::detail::CallbackBase::control() const
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/drivers/802.15.4_RF/atmel-rf-driver/source/NanostackRfPhyAT86RF215.o.
              reference :  mbed::TickerBase::detach()
              reference :  mbed::TickerBase::attach_us(mbed::Callback<void()>, unsigned long long)
              reference :  mbed::InterruptIn::enable_irq()
              reference :  mbed::InterruptIn::rise(mbed::Callback<void()>)
              reference :  mbed::SPI::write(const char*, int, char*, int)
              reference :  mbed::SPI::frequency(int)
              weak defn :  mbed::detail::CallbackBase::clear()
              weak defn :  mbed::detail::CallbackBase::control()
              weak defn :  T1 mbed::detail::invoke_r<void, void(RFBits::*const &)(), <RFBits*const &>, (int)0>(T2&&, T3&&...)
              weak defn :  T1 mbed::detail::invoke_r<void, void(*&)(), <>, (int)0>(T2&&, T3&&...)
              weak defn :  T1 mbed::detail::invoke_r<void, mbed::Callback<void()>::Callback<RFBits*, void(RFBits::*)(), (int)0>(T1, T2)::[lambda() (instance 1)]&, <>, (int)0>(T2&&, T3&&...)
              weak defn :  void mbed::Callback<void()>::target_call<void(*)()>(const mbed::detail::CallbackBase*)
              weak defn :  void mbed::Callback<void()>::target_call<mbed::Callback<void()>::Callback<RFBits*, void(RFBits::*)(), (int)0>(T1, T2)::[lambda() (instance 1)]>(const mbed::detail::CallbackBase*)
              weak defn :  void mbed::Callback<void()>::generate<void(*)(), void>(T1&&)
              weak defn :  void mbed::Callback<void()>::generate<mbed::Callback<void()>::Callback<RFBits*, void(RFBits::*)(), (int)0>(T1, T2)::[lambda() (instance 1)], void>(T1&&)
              weak defn :  mbed::Callback<void()>::Callback__sub_object<RFBits*, void(RFBits::*)(), (int)0>(T1, T2)
              weak defn :  mbed::Callback<void()>::Callback__sub_object<void(*)(), (int)0>(T1)
              weak defn :  mbed::Callback<T3(T4...)> mbed::callback<RFBits, RFBits, void, <>>(T2*, T3(T1::*)(T4...))
              reference :  mbed::TimerBase::start()
              weak defn :  std::__1::enable_if<((std::is_function<T2>::value&&(!std::is_base_of<T1, std::__1::decay<T3>::type>::value))&&(!is_reference_wrapper<std::__1::decay<T3>::type>::value)), decltype((((*std::forward<T3>(param#2)).*param#1)(std::forward<T4>(param#3)...)))>::type mstd::impl::INVOKE<RFBits, void(), RFBits*const &, <>>(T2T1::*, T3&&, T4&&...)
              weak defn :  std::__1::enable_if<((!std::is_member_pointer<std::__1::decay<T1>::type>::value)||(std::is_member_object_pointer<std::__1::decay<T1>::type>::value&&(sizeof...(param#2)!=(int)1))), decltype((std::forward<T1>(param#1)(std::forward<T2>(param#2)...)))>::type mstd::impl::INVOKE<void(*&)(), <>>(T1&&, T2&&...)
              weak defn :  std::__1::enable_if<((!std::is_member_pointer<std::__1::decay<T1>::type>::value)||(std::is_member_object_pointer<std::__1::decay<T1>::type>::value&&(sizeof...(param#2)!=(int)1))), decltype((std::forward<T1>(param#1)(std::forward<T2>(param#2)...)))>::type mstd::impl::INVOKE<mbed::Callback<void()>::Callback<RFBits*, void(RFBits::*)(), (int)0>(T1, T2)::[lambda() (instance 1)]&, <>>(T1&&, T2&&...)
              weak defn :  mstd::invoke_result<T1, <T2...>>::type mstd::invoke<void(RFBits::*const &)(), <RFBits*const &>>(T1&&, T2&&...)
              weak defn :  mstd::invoke_result<T1, <T2...>>::type mstd::invoke<void(*&)(), <>>(T1&&, T2&&...)
              weak defn :  mstd::invoke_result<T1, <T2...>>::type mstd::invoke<mbed::Callback<void()>::Callback<RFBits*, void(RFBits::*)(), (int)0>(T1, T2)::[lambda() (instance 1)]&, <>>(T1&&, T2&&...)
              reference :  rtos::ThisThread::flags_wait_any(unsigned, bool)
              reference :  rtos::Thread::start(mbed::Callback<void()>)
              reference :  rtos::Thread::flags_set(unsigned)
              definition:  RFBits::rf_irq_task()
              definition:  RFBits::init_se2435_pa(Se2435Pins*)
              definition:  RFBits::init_215_driver(RFBits*, TestPins*, const unsigned char*, unsigned char*)
              reference :  mbed::TimerBase::read_us() const
              weak defn :  mbed::Callback<void()>::Callback<RFBits*, void(RFBits::*)(), (int)0>(T1, T2)::[lambda() (instance 1)]::operator ()() const
              reference :  arm_net_phy_register
              reference :  common_write_32_bit
              reference :  platform_enter_critical
              reference :  platform_exit_critical
              reference :  wait_us
              reference :  mbed::DigitalOut::operator =(int)
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/drivers/802.15.4_RF/atmel-rf-driver/source/NanostackRfPhyAtmel.o.
              reference :  CThunkBase::cthunk_free(void(*)())
              definition:  Se2435Pins::Se2435Pins(PinName, PinName)
              definition:  Se2435Pins::Se2435Pins__sub_object(PinName, PinName)
              weak defn :  UnlockedSPI::lock()
              weak defn :  UnlockedSPI::unlock()
              weak defn :  UnlockedSPI::UnlockedSPI__sub_object(PinName, PinName, PinName)
              weak defn :  UnlockedSPI::~UnlockedSPI__deallocating()
              weak defn :  NanostackPhy::nanostack_mac_phy()
              weak defn :  NanostackPhy::nanostack_ppp_phy()
              weak defn :  NanostackPhy::NanostackPhy__sub_object()
              weak defn :  NanostackPhy::~NanostackPhy__deallocating()
              weak defn :  NanostackPhy::~NanostackPhy__sub_object()
              weak defn :  NanostackRfPhy::unregister()
              weak defn :  NanostackRfPhy::phy_register()
              weak defn :  NanostackRfPhy::NanostackRfPhy__sub_object()
              weak defn :  NanostackRfPhy::~NanostackRfPhy__deallocating()
              weak defn :  NanostackMACPhy::nanostack_mac_phy()
              weak defn :  NanostackMACPhy::NanostackMACPhy__sub_object()
              weak defn :  NanostackMACPhy::~NanostackMACPhy__deallocating()
              definition:  NanostackRfPhyAtmel::rf_register()
              definition:  NanostackRfPhyAtmel::rf_unregister()
              definition:  NanostackRfPhyAtmel::get_mac_address(unsigned char*)
              definition:  NanostackRfPhyAtmel::set_mac_address(unsigned char*)
              definition:  NanostackRfPhyAtmel::NanostackRfPhyAtmel(PinName, PinName, PinName, PinName, PinName, PinName, PinName, PinName, PinName)
              definition:  NanostackRfPhyAtmel::NanostackRfPhyAtmel__sub_object(PinName, PinName, PinName, PinName, PinName, PinName, PinName, PinName, PinName)
              definition:  NanostackRfPhyAtmel::~NanostackRfPhyAtmel__deallocating()
              definition:  NanostackRfPhyAtmel::~NanostackRfPhyAtmel()
              definition:  NanostackRfPhyAtmel::~NanostackRfPhyAtmel__sub_object()
              reference :  mbed::TickerBase::attach(mbed::Callback<void()>, std::__1::chrono::duration<long long, std::__1::ratio<(long long)1, (long long)1000000>>)
              reference :  mbed::TickerBase::detach()
              weak defn :  mbed::TickerBase::~TickerBase__sub_object()
              reference :  mbed::TimerEvent::~TimerEvent__sub_object()
              reference :  mbed::InterruptIn::enable_irq()
              reference :  mbed::InterruptIn::disable_irq()
              reference :  mbed::InterruptIn::rise(mbed::Callback<void()>)
              reference :  mbed::InterruptIn::InterruptIn(PinName)
              reference :  mbed::InterruptIn::~InterruptIn()
              weak defn :  mbed::I2C::~I2C__sub_object()
              reference :  mbed::SPI::write(const char*, int, char*, int)
              reference :  mbed::SPI::write(int)
              reference :  mbed::SPI::frequency(int)
              reference :  mbed::SPI::SPI__sub_object(PinName, PinName, PinName, PinName)
              reference :  mbed::SPI::~SPI__sub_object()
              reference :  mbed::Timer::Timer()
              reference :  mbed::Timeout::Timeout()
              reference :  mbed::TimerBase::~TimerBase__sub_object()
              reference :  rtos::ThisThread::flags_wait_any(unsigned, bool)
              reference :  rtos::ThisThread::sleep_for(std::__1::chrono::duration<unsigned, std::__1::ratio<(long long)1, (long long)1000>>)
              reference :  rtos::Mutex::Mutex()
              reference :  rtos::Mutex::~Mutex()
              reference :  rtos::Thread::constructor(osPriority_t, unsigned, unsigned char*, const char*)
              reference :  rtos::Thread::start(mbed::Callback<void()>)
              reference :  rtos::Thread::flags_set(unsigned)
              reference :  rtos::Thread::~Thread()
              reference :  rtos::Semaphore::Semaphore(int)
              weak defn :  CThunk<mbed::I2C>::~CThunk__sub_object()
              reference :  RFBits::init_se2435_pa(Se2435Pins*)
              definition:  RFBits::rf_if_irq_task()
              reference :  RFBits::init_215_driver(RFBits*, TestPins*, const unsigned char*, unsigned char*)
              definition:  RFBits::RFBits(PinName, PinName, PinName, PinName, PinName, PinName, PinName)
              definition:  RFBits::RFBits__sub_object(PinName, PinName, PinName, PinName, PinName, PinName, PinName)
              weak defn :  RFBits::~RFBits__sub_object()
              reference :  AT24Mac::read_eui64(void*)
              reference :  AT24Mac::AT24Mac(PinName, PinName)
              weak defn :  AT24Mac::~AT24Mac__sub_object()
              definition:  TestPins::TestPins(PinName, PinName, PinName, PinName, PinName)
              definition:  TestPins::TestPins__sub_object(PinName, PinName, PinName, PinName, PinName)
              weak defn :  _ZNSt3__18literals15chrono_literalsli2usEy
              weak defn :  vtable for UnlockedSPI
              weak defn :  vtable for NanostackPhy
              weak defn :  vtable for NanostackRfPhy
              weak defn :  vtable for NanostackMACPhy
              definition:  vtable for NanostackRfPhyAtmel
              reference :  vtable for mbed::TickerBase
              reference :  vtable for mbed::I2C
              reference :  vtable for rtos::Thread
              reference :  operator delete (void*)
              reference :  operator new(unsigned)
              reference :  __cxa_pure_virtual
              reference :  arm_net_phy_register
              reference :  arm_net_phy_unregister
              reference :  error
              reference :  gpio_init_out
              reference :  platform_enter_critical
              reference :  platform_exit_critical
              reference :  randLIB_add_seed
              reference :  randLIB_get_random_in_range
              reference :  wait_ns
              reference :  mbed::DigitalOut::DigitalOut__sub_object(PinName)
              reference :  rtos::Thread::Thread__sub_object(osPriority_t, unsigned, unsigned char*, const char*)
              reference :  mbed::Callback<T3(T4...)> mbed::callback<RFBits, RFBits, void, <>>(T2*, T3(T1::*)(T4...))
              reference :  mbed::Callback<void()>::Callback__sub_object(std::nullptr_t)
              reference :  mbed::DigitalOut::operator =(int)
              reference :  _ZNSt3__18literals15chrono_literalsli2msEy
              reference :  mbed::Callback<void()>::Callback__sub_object<void(*)(), (int)0>(T1)
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/drivers/802.15.4_RF/atmel-rf-driver/source/at24mac.o.
              reference :  mbed::I2C::read(int, char*, int, bool)
              reference :  mbed::I2C::write(int, const char*, int, bool)
              reference :  mbed::I2C::I2C(PinName, PinName)
              definition:  AT24Mac::read_eui48(void*)
              definition:  AT24Mac::read_eui64(void*)
              definition:  AT24Mac::read_serial(void*)
              definition:  AT24Mac::AT24Mac(PinName, PinName)
              definition:  AT24Mac::AT24Mac__sub_object(PinName, PinName)
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/drivers/802.15.4_RF/mcr20a-rf-driver/source/MCR20Drv.o.
              definition:  MCR20Drv_DirectAccessSPIMultiByteRead
              definition:  MCR20Drv_DirectAccessSPIMultiByteWrite
              definition:  MCR20Drv_DirectAccessSPIRead
              definition:  MCR20Drv_DirectAccessSPIWrite
              definition:  MCR20Drv_IRQ_Disable
              definition:  MCR20Drv_IRQ_Enable
              definition:  MCR20Drv_IndirectAccessSPIMultiByteRead
              definition:  MCR20Drv_IndirectAccessSPIMultiByteWrite
              definition:  MCR20Drv_IndirectAccessSPIRead
              definition:  MCR20Drv_IndirectAccessSPIWrite
              definition:  MCR20Drv_Init
              definition:  MCR20Drv_IsIrqPending
              definition:  MCR20Drv_PB_SPIBurstRead
              definition:  MCR20Drv_PB_SPIBurstWrite
              definition:  MCR20Drv_PB_SPIByteWrite
              definition:  MCR20Drv_RESET
              definition:  MCR20Drv_RST_B_Assert
              definition:  MCR20Drv_RST_B_Deassert
              definition:  MCR20Drv_Set_CLK_OUT_Freq
              definition:  MCR20Drv_SoftRST_Assert
              definition:  MCR20Drv_SoftRST_Deassert
              definition:  MCR20Drv_Soft_RESET
              reference :  RF_IRQ_Disable
              reference :  RF_IRQ_Enable
              reference :  RF_IRQ_Init
              reference :  RF_RST_Set
              reference :  RF_isIRQ_Pending
              reference :  core_util_critical_section_enter
              reference :  core_util_critical_section_exit
              reference :  gXcvrAssertCS_d
              reference :  gXcvrDeassertCS_d
              definition:  mPhyIrqDisableCnt
              reference :  xcvr_spi_configure_speed
              reference :  xcvr_spi_init
              reference :  xcvr_spi_transfer
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/drivers/802.15.4_RF/mcr20a-rf-driver/source/NanostackRfPhyMcr20a.o.
              reference :  MCR20Drv_DirectAccessSPIMultiByteRead
              reference :  MCR20Drv_DirectAccessSPIMultiByteWrite
              reference :  MCR20Drv_DirectAccessSPIRead
              reference :  MCR20Drv_DirectAccessSPIWrite
              reference :  MCR20Drv_IRQ_Disable
              reference :  MCR20Drv_IRQ_Enable
              reference :  MCR20Drv_IndirectAccessSPIRead
              reference :  MCR20Drv_IndirectAccessSPIWrite
              reference :  MCR20Drv_Init
              reference :  MCR20Drv_PB_SPIBurstRead
              reference :  MCR20Drv_PB_SPIBurstWrite
              reference :  MCR20Drv_PB_SPIByteWrite
              reference :  MCR20Drv_RESET
              reference :  MCR20Drv_Set_CLK_OUT_Freq
              definition:  RF_IRQ_Disable
              definition:  RF_IRQ_Enable
              definition:  RF_IRQ_Init
              definition:  RF_RST_Set
              definition:  RF_isIRQ_Pending
              definition:  NanostackRfPhyMcr20a::_pins_clear()
              definition:  NanostackRfPhyMcr20a::rf_register()
              definition:  NanostackRfPhyMcr20a::rf_unregister()
              definition:  NanostackRfPhyMcr20a::get_mac_address(unsigned char*)
              definition:  NanostackRfPhyMcr20a::set_mac_address(unsigned char*)
              definition:  NanostackRfPhyMcr20a::_pins_set()
              definition:  NanostackRfPhyMcr20a::NanostackRfPhyMcr20a(PinName, PinName, PinName, PinName, PinName, PinName)
              definition:  NanostackRfPhyMcr20a::NanostackRfPhyMcr20a__sub_object(PinName, PinName, PinName, PinName, PinName, PinName)
              definition:  NanostackRfPhyMcr20a::~NanostackRfPhyMcr20a__deallocating()
              definition:  NanostackRfPhyMcr20a::~NanostackRfPhyMcr20a()
              definition:  NanostackRfPhyMcr20a::~NanostackRfPhyMcr20a__sub_object()
              weak defn :  mbed::DigitalOut::DigitalOut__sub_object(PinName, int)
              reference :  mbed::InterruptIn::enable_irq()
              reference :  mbed::InterruptIn::disable_irq()
              reference :  mbed::InterruptIn::fall(mbed::Callback<void()>)
              reference :  mbed::InterruptIn::mode(PinMode)
              reference :  mbed::InterruptIn::InterruptIn(PinName)
              reference :  mbed::InterruptIn::~InterruptIn()
              reference :  mbed::SPI::frequency(int)
              reference :  mbed::SPI::SPI(PinName, PinName, PinName, PinName)
              reference :  mbed::SPI::~SPI()
              weak defn :  mbed::Callback<T1(T2...)> mbed::callback<void, <>>(T1(*)(T2...))
              weak defn :  mbed::DigitalIn::DigitalIn__sub_object(PinName)
              reference :  rtos::ThisThread::flags_wait_all(unsigned, bool)
              reference :  rtos::Mutex::Mutex()
              reference :  rtos::Thread::constructor(osPriority_t, unsigned, unsigned char*, const char*)
              reference :  rtos::Thread::start(mbed::Callback<void()>)
              reference :  rtos::Thread::flags_set(unsigned)
              reference :  rtos::Thread::~Thread()
              reference :  rtos::Semaphore::Semaphore(int)
              definition:  vtable for NanostackRfPhyMcr20a
              reference :  vtable for rtos::Thread
              reference :  operator delete (void*)
              reference :  __cxa_pure_virtual
              reference :  arm_net_phy_register
              reference :  arm_net_phy_unregister
              definition:  gXcvrAssertCS_d
              definition:  gXcvrDeassertCS_d
              reference :  gpio_init_in
              reference :  gpio_init_out
              reference :  gpio_init_out_ex
              reference :  mbed_assert_internal
              reference :  mbed_mac_address
              reference :  platform_enter_critical
              reference :  platform_exit_critical
              definition:  xcvr_spi_configure_speed
              definition:  xcvr_spi_init
              definition:  xcvr_spi_transfer
              reference :  mbed::Callback<void()>::Callback__sub_object<void(*)(), (int)0>(T1)
              reference :  mbed::DigitalOut::operator =(int)
              reference :  NanostackRfPhy::NanostackRfPhy__sub_object()
              reference :  mbed::DigitalOut::DigitalOut__sub_object(PinName)
              reference :  rtos::Thread::Thread__sub_object(osPriority_t, unsigned, unsigned char*, const char*)
              reference :  NanostackPhy::~NanostackPhy__sub_object()
              reference :  NanostackRfPhy::phy_register()
              reference :  NanostackMACPhy::nanostack_mac_phy()
              reference :  NanostackPhy::nanostack_ppp_phy()
              reference :  NanostackRfPhy::unregister()
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/drivers/802.15.4_RF/stm-s2lp-rf-driver/source/NanostackRfPhys2lp.o.
              definition:  TestPins_S2LP::TestPins_S2LP(PinName, PinName, PinName, PinName, PinName)
              definition:  TestPins_S2LP::TestPins_S2LP__sub_object(PinName, PinName, PinName, PinName, PinName)
              definition:  NanostackRfPhys2lp::rf_register()
              definition:  NanostackRfPhys2lp::rf_unregister()
              definition:  NanostackRfPhys2lp::get_mac_address(unsigned char*)
              definition:  NanostackRfPhys2lp::set_mac_address(unsigned char*)
              definition:  NanostackRfPhys2lp::NanostackRfPhys2lp(PinName, PinName, PinName, PinName, PinName, PinName, PinName, PinName, PinName)
              definition:  NanostackRfPhys2lp::NanostackRfPhys2lp__sub_object(PinName, PinName, PinName, PinName, PinName, PinName, PinName, PinName, PinName)
              definition:  NanostackRfPhys2lp::~NanostackRfPhys2lp__deallocating()
              definition:  NanostackRfPhys2lp::~NanostackRfPhys2lp()
              definition:  NanostackRfPhys2lp::~NanostackRfPhys2lp__sub_object()
              reference :  mbed::TickerBase::attach(mbed::Callback<void()>, std::__1::chrono::duration<long long, std::__1::ratio<(long long)1, (long long)1000000>>)
              reference :  mbed::TickerBase::detach()
              reference :  mbed::TimerEvent::~TimerEvent__sub_object()
              reference :  mbed::InterruptIn::enable_irq()
              reference :  mbed::InterruptIn::fall(mbed::Callback<void()>)
              reference :  mbed::InterruptIn::mode(PinMode)
              reference :  mbed::InterruptIn::InterruptIn(PinName)
              reference :  mbed::InterruptIn::~InterruptIn()
              reference :  mbed::SPI::write(const char*, int, char*, int)
              reference :  mbed::SPI::write(int)
              reference :  mbed::SPI::frequency(int)
              reference :  mbed::SPI::SPI__sub_object(PinName, PinName, PinName, PinName)
              reference :  mbed::SPI::~SPI__sub_object()
              reference :  mbed::Timer::Timer()
              weak defn :  T1 mbed::detail::invoke_r<void, void(RFPins::*const &)(), <RFPins*const &>, (int)0>(T2&&, T3&&...)
              weak defn :  T1 mbed::detail::invoke_r<void, mbed::Callback<void()>::Callback<RFPins*, void(RFPins::*)(), (int)0>(T1, T2)::[lambda() (instance 1)]&, <>, (int)0>(T2&&, T3&&...)
              reference :  mbed::Timeout::Timeout()
              weak defn :  void mbed::Callback<void()>::target_call<mbed::Callback<void()>::Callback<RFPins*, void(RFPins::*)(), (int)0>(T1, T2)::[lambda() (instance 1)]>(const mbed::detail::CallbackBase*)
              weak defn :  void mbed::Callback<void()>::generate<mbed::Callback<void()>::Callback<RFPins*, void(RFPins::*)(), (int)0>(T1, T2)::[lambda() (instance 1)], void>(T1&&)
              weak defn :  mbed::Callback<void()>::Callback__sub_object<RFPins*, void(RFPins::*)(), (int)0>(T1, T2)
              weak defn :  mbed::Callback<T3(T4...)> mbed::callback<RFPins, RFPins, void, <>>(T2*, T3(T1::*)(T4...))
              reference :  mbed::TimerBase::start()
              reference :  mbed::TimerBase::~TimerBase__sub_object()
              weak defn :  std::__1::enable_if<((std::is_function<T2>::value&&(!std::is_base_of<T1, std::__1::decay<T3>::type>::value))&&(!is_reference_wrapper<std::__1::decay<T3>::type>::value)), decltype((((*std::forward<T3>(param#2)).*param#1)(std::forward<T4>(param#3)...)))>::type mstd::impl::INVOKE<RFPins, void(), RFPins*const &, <>>(T2T1::*, T3&&, T4&&...)
              weak defn :  std::__1::enable_if<((!std::is_member_pointer<std::__1::decay<T1>::type>::value)||(std::is_member_object_pointer<std::__1::decay<T1>::type>::value&&(sizeof...(param#2)!=(int)1))), decltype((std::forward<T1>(param#1)(std::forward<T2>(param#2)...)))>::type mstd::impl::INVOKE<mbed::Callback<void()>::Callback<RFPins*, void(RFPins::*)(), (int)0>(T1, T2)::[lambda() (instance 1)]&, <>>(T1&&, T2&&...)
              weak defn :  mstd::invoke_result<T1, <T2...>>::type mstd::invoke<void(RFPins::*const &)(), <RFPins*const &>>(T1&&, T2&&...)
              weak defn :  mstd::invoke_result<T1, <T2...>>::type mstd::invoke<mbed::Callback<void()>::Callback<RFPins*, void(RFPins::*)(), (int)0>(T1, T2)::[lambda() (instance 1)]&, <>>(T1&&, T2&&...)
              reference :  rtos::ThisThread::flags_wait_any(unsigned, bool)
              reference :  rtos::ThisThread::sleep_for(std::__1::chrono::duration<unsigned, std::__1::ratio<(long long)1, (long long)1000>>)
              reference :  rtos::Mutex::Mutex()
              reference :  rtos::Mutex::~Mutex()
              reference :  rtos::Thread::constructor(osPriority_t, unsigned, unsigned char*, const char*)
              reference :  rtos::Thread::start(mbed::Callback<void()>)
              reference :  rtos::Thread::flags_set(unsigned)
              reference :  rtos::Thread::~Thread()
              reference :  rtos::Semaphore::Semaphore(int)
              definition:  RFPins::rf_irq_task()
              definition:  RFPins::RFPins(PinName, PinName, PinName, PinName, PinName, PinName, PinName, PinName, PinName)
              definition:  RFPins::RFPins__sub_object(PinName, PinName, PinName, PinName, PinName, PinName, PinName, PinName, PinName)
              weak defn :  RFPins::~RFPins__sub_object()
              reference :  mbed::TimerBase::elapsed_time() const
              definition:  vtable for NanostackRfPhys2lp
              reference :  vtable for mbed::TickerBase
              reference :  vtable for rtos::Thread
              weak defn :  mbed::Callback<void()>::Callback<RFPins*, void(RFPins::*)(), (int)0>(T1, T2)::[lambda() (instance 1)]::operator ()() const
              reference :  operator delete (void*)
              reference :  operator new(unsigned)
              reference :  __cxa_pure_virtual
              reference :  arm_net_phy_register
              reference :  arm_net_phy_unregister
              reference :  common_read_32_bit
              reference :  common_write_32_bit
              reference :  error
              reference :  gpio_init_out
              reference :  memcmp
              reference :  platform_enter_critical
              reference :  platform_exit_critical
              reference :  randLIB_get_n_bytes_random
              reference :  randLIB_seed_random
              reference :  rf_conf_calculate_base_frequency_registers
              reference :  rf_conf_calculate_channel_spacing_registers
              reference :  rf_conf_calculate_datarate_registers
              reference :  rf_conf_calculate_deviation
              reference :  rf_conf_calculate_deviation_registers
              reference :  rf_conf_calculate_rssi_threshold_registers
              reference :  rf_conf_calculate_rx_filter_bandwidth_registers
              reference :  rf_conf_cca_threshold_percent_to_rssi
              reference :  wait_us
              reference :  UnlockedSPI::UnlockedSPI__sub_object(PinName, PinName, PinName)
              reference :  mbed::DigitalOut::DigitalOut__sub_object(PinName)
              reference :  rtos::Thread::Thread__sub_object(osPriority_t, unsigned, unsigned char*, const char*)
              reference :  NanostackRfPhy::NanostackRfPhy__sub_object()
              reference :  NanostackPhy::~NanostackPhy__sub_object()
              reference :  mbed::TickerBase::~TickerBase__sub_object()
              reference :  mbed::DigitalOut::operator =(int)
              reference :  mbed::Callback<void()>::Callback__sub_object<void(*)(), (int)0>(T1)
              reference :  _ZNSt3__18literals15chrono_literalsli2msEy
              reference :  NanostackRfPhy::phy_register()
              reference :  NanostackMACPhy::nanostack_mac_phy()
              reference :  NanostackPhy::nanostack_ppp_phy()
              reference :  NanostackRfPhy::unregister()
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/drivers/802.15.4_RF/stm-s2lp-rf-driver/source/at24mac_s2lp.o.
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/drivers/802.15.4_RF/stm-s2lp-rf-driver/source/rf_configuration.o.
              reference :  __aeabi_uldivmod
              definition:  rf_conf_calculate_base_frequency_registers
              definition:  rf_conf_calculate_channel_spacing_registers
              definition:  rf_conf_calculate_datarate_registers
              definition:  rf_conf_calculate_deviation
              definition:  rf_conf_calculate_deviation_registers
              definition:  rf_conf_calculate_rssi_threshold_registers
              definition:  rf_conf_calculate_rx_filter_bandwidth_registers
              definition:  rf_conf_cca_threshold_percent_to_rssi
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/drivers/cellular/Altair/ALT1250/PPP/ALT1250_PPP.o.
              definition:  mbed::ALT1250_PPP::soft_power_on()
              definition:  mbed::ALT1250_PPP::open_network_impl(mbed::ATHandler&)
              definition:  mbed::ALT1250_PPP::create_context_impl(mbed::ATHandler&, const char*, bool, bool)
              definition:  mbed::ALT1250_PPP::ALT1250_PPP(mbed::FileHandle*, PinName, PinDirection, PinMode, bool)
              definition:  mbed::ALT1250_PPP::ALT1250_PPP__sub_object(mbed::FileHandle*, PinName, PinDirection, PinMode, bool)
              weak defn :  mbed::ALT1250_PPP::~ALT1250_PPP__deallocating()
              weak defn :  mbed::DigitalInOut::is_connected()
              weak defn :  mbed::DigitalInOut::write(int)
              weak defn :  mbed::DigitalInOut::DigitalInOut__sub_object(PinName, PinDirection, PinMode, int)
              weak defn :  mbed::DigitalInOut::operator =(int)
              reference :  mbed::CellularDevice::get_queue()
              reference :  mbed::AT_CellularDevice::set_timeout(int)
              reference :  mbed::AT_CellularDevice::open_network()
              reference :  mbed::AT_CellularDevice::set_ready_cb(mbed::Callback<void()>)
              reference :  mbed::AT_CellularDevice::close_network()
              reference :  mbed::AT_CellularDevice::get_sim_state(mbed::CellularDevice::SimState&)
              reference :  mbed::AT_CellularDevice::hard_power_on()
              reference :  mbed::AT_CellularDevice::set_baud_rate(int)
              reference :  mbed::AT_CellularDevice::create_context(const char*, bool, bool)
              reference :  mbed::AT_CellularDevice::delete_context(mbed::CellularContext*)
              reference :  mbed::AT_CellularDevice::get_at_handler()
              reference :  mbed::AT_CellularDevice::hard_power_off()
              reference :  mbed::AT_CellularDevice::modem_debug_on(bool)
              reference :  mbed::AT_CellularDevice::soft_power_off()
              reference :  mbed::AT_CellularDevice::open_information()
              reference :  mbed::AT_CellularDevice::set_at_urcs_impl()
              reference :  mbed::AT_CellularDevice::cellular_callback(nsapi_event, int, mbed::CellularContext*)
              reference :  mbed::AT_CellularDevice::close_information()
              reference :  mbed::AT_CellularDevice::set_baud_rate_impl(int)
              reference :  mbed::AT_CellularDevice::set_power_save_mode(int, int)
              reference :  mbed::AT_CellularDevice::open_information_impl(mbed::ATHandler&)
              reference :  mbed::AT_CellularDevice::set_cellular_properties(const int*)
              reference :  mbed::AT_CellularDevice::init()
              reference :  mbed::AT_CellularDevice::clear()
              reference :  mbed::AT_CellularDevice::set_pin(const char*)
              reference :  mbed::AT_CellularDevice::is_ready()
              reference :  mbed::AT_CellularDevice::shutdown()
              reference :  mbed::AT_CellularDevice::AT_CellularDevice__sub_object(mbed::FileHandle*)
              reference :  mbed::AT_CellularDevice::~AT_CellularDevice__sub_object()
              reference :  mbed::ALT1250_PPP_CellularContext::ALT1250_PPP_CellularContext(mbed::ATHandler&, mbed::CellularDevice*, const char*, bool, bool)
              reference :  mbed::ALT1250_PPP_CellularNetwork::ALT1250_PPP_CellularNetwork(mbed::ATHandler&, mbed::AT_CellularDevice&)
              reference :  mbed::ATHandler::set_at_timeout(unsigned, bool)
              reference :  mbed::ATHandler::cmd_stop_read_resp()
              reference :  mbed::ATHandler::restore_at_timeout()
              reference :  mbed::ATHandler::lock()
              reference :  mbed::ATHandler::sync(int)
              reference :  mbed::ATHandler::flush()
              reference :  mbed::ATHandler::unlock()
              reference :  mbed::ATHandler::cmd_start(const char*)
              reference :  rtos::ThisThread::sleep_for(std::__1::chrono::duration<unsigned, std::__1::ratio<(long long)1, (long long)1000>>)
              reference :  mbed::AT_CellularDevice::get_context_list() const
              reference :  mbed::ATHandler::get_last_error() const
              definition:  vtable for mbed::ALT1250_PPP
              reference :  operator delete (void*)
              reference :  operator new(unsigned)
              reference :  gpio_init_inout
              reference :  _ZNSt3__18literals15chrono_literalsli2msEy
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/drivers/cellular/Altair/ALT1250/PPP/ALT1250_PPP_CellularContext.o.
              reference :  NetworkInterface::get_gateway(SocketAddress*)
              reference :  NetworkInterface::get_netmask(SocketAddress*)
              reference :  NetworkInterface::getaddrinfo(const char*, SocketAddress*, SocketAddress**, const char*)
              reference :  NetworkInterface::set_network(const SocketAddress&, const SocketAddress&, const SocketAddress&)
              reference :  NetworkInterface::gethostbyname(const char*, SocketAddress*, nsapi_version, const char*)
              reference :  NetworkInterface::add_dns_server(const SocketAddress&, const char*)
              reference :  NetworkInterface::get_dns_server(int, SocketAddress*, const char*)
              reference :  NetworkInterface::set_as_default()
              reference :  NetworkInterface::get_mac_address()
              reference :  NetworkInterface::getaddrinfo_async(const char*, SocketAddress*, mbed::Callback<void(int, SocketAddress*)>, const char*)
              reference :  NetworkInterface::gethostbyname_async(const char*, mbed::Callback<void(int, SocketAddress*)>, nsapi_version, const char*)
              reference :  NetworkInterface::gethostbyname_async_cancel(int)
              reference :  NetworkInterface::get_ipv6_link_local_address(SocketAddress*)
              reference :  NetworkInterface::set_dhcp(bool)
              reference :  CellularInterface::set_default_parameters()
              reference :  mbed::AT_CellularContext::disconnect()
              reference :  mbed::AT_CellularContext::do_connect()
              reference :  mbed::AT_CellularContext::enable_hup(bool)
              reference :  mbed::AT_CellularContext::get_context()
              reference :  mbed::AT_CellularContext::set_sim_pin(const char*)
              reference :  mbed::AT_CellularContext::get_cp_netif()
              reference :  mbed::AT_CellularContext::is_connected()
              reference :  mbed::AT_CellularContext::set_blocking(bool)
              reference :  mbed::AT_CellularContext::configure_hup(PinName, bool)
              reference :  mbed::AT_CellularContext::do_disconnect()
              reference :  mbed::AT_CellularContext::set_sim_ready()
              reference :  mbed::AT_CellularContext::get_ip_address(SocketAddress*)
              reference :  mbed::AT_CellularContext::set_disconnect()
              reference :  mbed::AT_CellularContext::set_credentials(const char*, const char*, const char*)
              reference :  mbed::AT_CellularContext::activate_context()
              reference :  mbed::AT_CellularContext::get_rate_control(mbed::CellularContext::RateControlExceptionReports&, mbed::CellularContext::RateControlUplinkTimeUnit&, int&)
              reference :  mbed::AT_CellularContext::set_device_ready()
              reference :  mbed::AT_CellularContext::attach_to_network()
              reference :  mbed::AT_CellularContext::cellular_callback(nsapi_event, int)
              reference :  mbed::AT_CellularContext::deactivate_context()
              reference :  mbed::AT_CellularContext::get_interface_name(char*)
              reference :  mbed::AT_CellularContext::register_to_network()
              reference :  mbed::AT_CellularContext::deactivate_ip_context()
              reference :  mbed::AT_CellularContext::do_connect_with_retry()
              reference :  mbed::AT_CellularContext::get_apn_backoff_timer(int&)
              reference :  mbed::AT_CellularContext::get_pdpcontext_params(mbed::CellularList<mbed::CellularContext::pdpcontext_params_t>&)
              reference :  mbed::AT_CellularContext::activate_non_ip_context()
              reference :  mbed::AT_CellularContext::setup_control_plane_opt()
              reference :  mbed::AT_CellularContext::deactivate_non_ip_context()
              reference :  mbed::AT_CellularContext::get_nonip_context_type_str()
              reference :  mbed::AT_CellularContext::attach(mbed::Callback<void(nsapi_event, int)>)
              reference :  mbed::AT_CellularContext::connect(const char*, const char*, const char*, const char*)
              reference :  mbed::AT_CellularContext::connect()
              reference :  mbed::AT_CellularContext::set_plmn(const char*)
              reference :  mbed::AT_CellularContext::get_stack()
              reference :  mbed::AT_CellularContext::AT_CellularContext__sub_object(mbed::ATHandler&, mbed::CellularDevice*, const char*, bool, bool)
              reference :  mbed::AT_CellularContext::~AT_CellularContext__sub_object()
              definition:  mbed::ALT1250_PPP_CellularContext::do_user_authentication()
              definition:  mbed::ALT1250_PPP_CellularContext::ALT1250_PPP_CellularContext(mbed::ATHandler&, mbed::CellularDevice*, const char*, bool, bool)
              definition:  mbed::ALT1250_PPP_CellularContext::ALT1250_PPP_CellularContext__sub_object(mbed::ATHandler&, mbed::CellularDevice*, const char*, bool, bool)
              definition:  mbed::ALT1250_PPP_CellularContext::~ALT1250_PPP_CellularContext__deallocating()
              definition:  mbed::ALT1250_PPP_CellularContext::~ALT1250_PPP_CellularContext()
              definition:  mbed::ALT1250_PPP_CellularContext::~ALT1250_PPP_CellularContext__sub_object()
              reference :  mbed::ATHandler::at_cmd_discard(const char*, const char*, const char*, ...)
              reference :  mbed::AT_CellularContext::get_connection_status() const
              reference :  mbed::AT_CellularContext::get_timeout_for_operation(mbed::CellularContext::ContextOperation) const
              definition:  vtable for mbed::ALT1250_PPP_CellularContext
              reference :  operator delete (void*)
              reference :  NetworkInterface::ethInterface()
              reference :  NetworkInterface::wifiInterface()
              reference :  NetworkInterface::meshInterface()
              reference :  NetworkInterface::emacInterface()
              reference :  CellularInterface::cellularInterface()
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/drivers/cellular/Altair/ALT1250/PPP/ALT1250_PPP_CellularNetwork.o.
              reference :  mbed::AT_CellularNetwork::get_attach(mbed::CellularNetwork::AttachStatus&)
              reference :  mbed::AT_CellularNetwork::set_attach()
              reference :  mbed::AT_CellularNetwork::get_3gpp_error()
              reference :  mbed::AT_CellularNetwork::set_registration(const char*)
              reference :  mbed::AT_CellularNetwork::is_active_context(int*, int)
              reference :  mbed::AT_CellularNetwork::get_operator_names(mbed::CellularList<mbed::CellularNetwork::operator_names_t>&)
              reference :  mbed::AT_CellularNetwork::get_signal_quality(int&, int*)
              reference :  mbed::AT_CellularNetwork::set_receive_period(int, mbed::CellularNetwork::EDRXAccessTechnology, unsigned char)
              reference :  mbed::AT_CellularNetwork::get_operator_params(int&, mbed::CellularNetwork::operator_t&)
              reference :  mbed::AT_CellularNetwork::set_registration_urc(mbed::CellularNetwork::RegistrationType, bool)
              reference :  mbed::AT_CellularNetwork::set_access_technology(mbed::CellularNetwork::RadioAccessTechnology)
              reference :  mbed::AT_CellularNetwork::get_registration_params(mbed::CellularNetwork::RegistrationType, mbed::CellularNetwork::registration_params_t&)
              reference :  mbed::AT_CellularNetwork::get_registration_params(mbed::CellularNetwork::registration_params_t&)
              reference :  mbed::AT_CellularNetwork::get_context_state_command()
              reference :  mbed::AT_CellularNetwork::get_network_registering_mode(mbed::CellularNetwork::NWRegisteringMode&)
              reference :  mbed::AT_CellularNetwork::set_ciot_optimization_config(mbed::CellularNetwork::CIoT_Supported_Opt, mbed::CellularNetwork::CIoT_Preferred_UE_Opt, mbed::Callback<void(mbed::CellularNetwork::CIoT_Supported_Opt)>)
              reference :  mbed::AT_CellularNetwork::get_ciot_ue_optimization_config(mbed::CellularNetwork::CIoT_Supported_Opt&, mbed::CellularNetwork::CIoT_Preferred_UE_Opt&)
              reference :  mbed::AT_CellularNetwork::set_packet_domain_event_reporting(bool)
              reference :  mbed::AT_CellularNetwork::get_ciot_network_optimization_config(mbed::CellularNetwork::CIoT_Supported_Opt&)
              reference :  mbed::AT_CellularNetwork::clear()
              reference :  mbed::AT_CellularNetwork::attach(mbed::Callback<void(nsapi_event, int)>)
              reference :  mbed::AT_CellularNetwork::detach()
              reference :  mbed::AT_CellularNetwork::scan_plmn(mbed::CellularList<mbed::CellularNetwork::operator_t>&, int&)
              reference :  mbed::AT_CellularNetwork::AT_CellularNetwork__sub_object(mbed::ATHandler&, mbed::AT_CellularDevice&)
              reference :  mbed::AT_CellularNetwork::~AT_CellularNetwork__sub_object()
              definition:  mbed::ALT1250_PPP_CellularNetwork::set_access_technology_impl(mbed::CellularNetwork::RadioAccessTechnology)
              definition:  mbed::ALT1250_PPP_CellularNetwork::ALT1250_PPP_CellularNetwork(mbed::ATHandler&, mbed::AT_CellularDevice&)
              definition:  mbed::ALT1250_PPP_CellularNetwork::ALT1250_PPP_CellularNetwork__sub_object(mbed::ATHandler&, mbed::AT_CellularDevice&)
              definition:  mbed::ALT1250_PPP_CellularNetwork::~ALT1250_PPP_CellularNetwork__deallocating()
              definition:  mbed::ALT1250_PPP_CellularNetwork::~ALT1250_PPP_CellularNetwork()
              definition:  mbed::ALT1250_PPP_CellularNetwork::~ALT1250_PPP_CellularNetwork__sub_object()
              reference :  mbed::ATHandler::at_cmd_str(const char*, const char*, char*, unsigned, const char*, ...)
              reference :  mbed::ATHandler::at_cmd_discard(const char*, const char*, const char*, ...)
              reference :  mbed::ATHandler::set_at_timeout(unsigned, bool)
              reference :  mbed::ATHandler::restore_at_timeout()
              reference :  mbed::ATHandler::unlock_return_error()
              reference :  mbed::ATHandler::lock()
              reference :  mbed::ATHandler::unlock()
              definition:  vtable for mbed::ALT1250_PPP_CellularNetwork
              reference :  operator delete (void*)
              reference :  memcmp
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/drivers/cellular/GEMALTO/CINTERION/GEMALTO_CINTERION.o.
              reference :  mbed::CellularDevice::get_queue()
              reference :  mbed::AT_CellularDevice::set_at_urcs()
              reference :  mbed::AT_CellularDevice::set_timeout(int)
              reference :  mbed::AT_CellularDevice::open_network()
              reference :  mbed::AT_CellularDevice::set_ready_cb(mbed::Callback<void()>)
              reference :  mbed::AT_CellularDevice::close_network()
              reference :  mbed::AT_CellularDevice::get_sim_state(mbed::CellularDevice::SimState&)
              reference :  mbed::AT_CellularDevice::hard_power_on()
              reference :  mbed::AT_CellularDevice::set_baud_rate(int)
              reference :  mbed::AT_CellularDevice::soft_power_on()
              reference :  mbed::AT_CellularDevice::create_context(const char*, bool, bool)
              reference :  mbed::AT_CellularDevice::delete_context(mbed::CellularContext*)
              reference :  mbed::AT_CellularDevice::get_at_handler()
              reference :  mbed::AT_CellularDevice::hard_power_off()
              reference :  mbed::AT_CellularDevice::modem_debug_on(bool)
              reference :  mbed::AT_CellularDevice::soft_power_off()
              reference :  mbed::AT_CellularDevice::open_information()
              reference :  mbed::AT_CellularDevice::set_at_urcs_impl()
              reference :  mbed::AT_CellularDevice::cellular_callback(nsapi_event, int, mbed::CellularContext*)
              reference :  mbed::AT_CellularDevice::close_information()
              reference :  mbed::AT_CellularDevice::open_network_impl(mbed::ATHandler&)
              reference :  mbed::AT_CellularDevice::set_baud_rate_impl(int)
              reference :  mbed::AT_CellularDevice::set_power_save_mode(int, int)
              reference :  mbed::AT_CellularDevice::open_information_impl(mbed::ATHandler&)
              reference :  mbed::AT_CellularDevice::set_cellular_properties(const int*)
              reference :  mbed::AT_CellularDevice::init()
              reference :  mbed::AT_CellularDevice::clear()
              reference :  mbed::AT_CellularDevice::set_pin(const char*)
              reference :  mbed::AT_CellularDevice::is_ready()
              reference :  mbed::AT_CellularDevice::shutdown()
              reference :  mbed::AT_CellularDevice::AT_CellularDevice__sub_object(mbed::FileHandle*)
              reference :  mbed::AT_CellularDevice::~AT_CellularDevice__sub_object()
              definition:  mbed::GEMALTO_CINTERION::get_module()
              definition:  mbed::GEMALTO_CINTERION::init_module_bgs2()
              definition:  mbed::GEMALTO_CINTERION::init_module_ehs5e()
              definition:  mbed::GEMALTO_CINTERION::init_module_els61()
              definition:  mbed::GEMALTO_CINTERION::init_module_ems31()
              definition:  mbed::GEMALTO_CINTERION::create_context_impl(mbed::ATHandler&, const char*, bool, bool)
              definition:  mbed::GEMALTO_CINTERION::open_information_impl(mbed::ATHandler&)
              definition:  mbed::GEMALTO_CINTERION::init()
              definition:  mbed::GEMALTO_CINTERION::_module
              definition:  mbed::GEMALTO_CINTERION::GEMALTO_CINTERION(mbed::FileHandle*)
              definition:  mbed::GEMALTO_CINTERION::GEMALTO_CINTERION__sub_object(mbed::FileHandle*)
              weak defn :  mbed::GEMALTO_CINTERION::~GEMALTO_CINTERION__deallocating()
              reference :  mbed::GEMALTO_CINTERION_CellularContext::GEMALTO_CINTERION_CellularContext(mbed::ATHandler&, mbed::CellularDevice*, const char*, bool, bool)
              reference :  mbed::GEMALTO_CINTERION_CellularInformation::GEMALTO_CINTERION_CellularInformation(mbed::ATHandler&, mbed::AT_CellularDevice&)
              reference :  mbed::AT_CellularDevice::get_context_list() const
              definition:  vtable for mbed::GEMALTO_CINTERION
              reference :  operator delete (void*)
              reference :  operator new(unsigned)
              reference :  memcmp
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/drivers/cellular/GEMALTO/CINTERION/GEMALTO_CINTERION_CellularContext.o.
              reference :  NetworkInterface::get_gateway(SocketAddress*)
              reference :  NetworkInterface::get_netmask(SocketAddress*)
              reference :  NetworkInterface::getaddrinfo(const char*, SocketAddress*, SocketAddress**, const char*)
              reference :  NetworkInterface::set_network(const SocketAddress&, const SocketAddress&, const SocketAddress&)
              reference :  NetworkInterface::gethostbyname(const char*, SocketAddress*, nsapi_version, const char*)
              reference :  NetworkInterface::add_dns_server(const SocketAddress&, const char*)
              reference :  NetworkInterface::get_dns_server(int, SocketAddress*, const char*)
              reference :  NetworkInterface::set_as_default()
              reference :  NetworkInterface::get_mac_address()
              reference :  NetworkInterface::getaddrinfo_async(const char*, SocketAddress*, mbed::Callback<void(int, SocketAddress*)>, const char*)
              reference :  NetworkInterface::gethostbyname_async(const char*, mbed::Callback<void(int, SocketAddress*)>, nsapi_version, const char*)
              reference :  NetworkInterface::gethostbyname_async_cancel(int)
              reference :  NetworkInterface::get_ipv6_link_local_address(SocketAddress*)
              reference :  NetworkInterface::set_dhcp(bool)
              reference :  CellularInterface::set_default_parameters()
              reference :  mbed::AT_CellularContext::disconnect()
              reference :  mbed::AT_CellularContext::do_connect()
              reference :  mbed::AT_CellularContext::enable_hup(bool)
              reference :  mbed::AT_CellularContext::get_context()
              reference :  mbed::AT_CellularContext::set_sim_pin(const char*)
              reference :  mbed::AT_CellularContext::get_cp_netif()
              reference :  mbed::AT_CellularContext::is_connected()
              reference :  mbed::AT_CellularContext::set_blocking(bool)
              reference :  mbed::AT_CellularContext::configure_hup(PinName, bool)
              reference :  mbed::AT_CellularContext::do_disconnect()
              reference :  mbed::AT_CellularContext::set_sim_ready()
              reference :  mbed::AT_CellularContext::get_ip_address(SocketAddress*)
              reference :  mbed::AT_CellularContext::set_disconnect()
              reference :  mbed::AT_CellularContext::set_credentials(const char*, const char*, const char*)
              reference :  mbed::AT_CellularContext::activate_context()
              reference :  mbed::AT_CellularContext::get_rate_control(mbed::CellularContext::RateControlExceptionReports&, mbed::CellularContext::RateControlUplinkTimeUnit&, int&)
              reference :  mbed::AT_CellularContext::set_device_ready()
              reference :  mbed::AT_CellularContext::attach_to_network()
              reference :  mbed::AT_CellularContext::cellular_callback(nsapi_event, int)
              reference :  mbed::AT_CellularContext::deactivate_context()
              reference :  mbed::AT_CellularContext::get_interface_name(char*)
              reference :  mbed::AT_CellularContext::register_to_network()
              reference :  mbed::AT_CellularContext::deactivate_ip_context()
              reference :  mbed::AT_CellularContext::do_connect_with_retry()
              reference :  mbed::AT_CellularContext::get_apn_backoff_timer(int&)
              reference :  mbed::AT_CellularContext::get_pdpcontext_params(mbed::CellularList<mbed::CellularContext::pdpcontext_params_t>&)
              reference :  mbed::AT_CellularContext::do_user_authentication()
              reference :  mbed::AT_CellularContext::activate_non_ip_context()
              reference :  mbed::AT_CellularContext::setup_control_plane_opt()
              reference :  mbed::AT_CellularContext::deactivate_non_ip_context()
              reference :  mbed::AT_CellularContext::get_nonip_context_type_str()
              reference :  mbed::AT_CellularContext::attach(mbed::Callback<void(nsapi_event, int)>)
              reference :  mbed::AT_CellularContext::connect(const char*, const char*, const char*, const char*)
              reference :  mbed::AT_CellularContext::connect()
              reference :  mbed::AT_CellularContext::set_plmn(const char*)
              reference :  mbed::AT_CellularContext::AT_CellularContext__sub_object(mbed::ATHandler&, mbed::CellularDevice*, const char*, bool, bool)
              reference :  mbed::AT_CellularContext::~AT_CellularContext__sub_object()
              reference :  mbed::GEMALTO_CINTERION_CellularStack::socket_stack_init()
              reference :  mbed::GEMALTO_CINTERION_CellularStack::GEMALTO_CINTERION_CellularStack(mbed::ATHandler&, const char*, const char*, const char*, int, nsapi_ip_stack, mbed::AT_CellularDevice&)
              definition:  mbed::GEMALTO_CINTERION_CellularContext::get_stack()
              definition:  mbed::GEMALTO_CINTERION_CellularContext::GEMALTO_CINTERION_CellularContext(mbed::ATHandler&, mbed::CellularDevice*, const char*, bool, bool)
              definition:  mbed::GEMALTO_CINTERION_CellularContext::GEMALTO_CINTERION_CellularContext__sub_object(mbed::ATHandler&, mbed::CellularDevice*, const char*, bool, bool)
              definition:  mbed::GEMALTO_CINTERION_CellularContext::~GEMALTO_CINTERION_CellularContext__deallocating()
              definition:  mbed::GEMALTO_CINTERION_CellularContext::~GEMALTO_CINTERION_CellularContext()
              definition:  mbed::GEMALTO_CINTERION_CellularContext::~GEMALTO_CINTERION_CellularContext__sub_object()
              reference :  mbed::AT_CellularContext::get_device() const
              reference :  mbed::AT_CellularContext::get_connection_status() const
              reference :  mbed::AT_CellularContext::get_timeout_for_operation(mbed::CellularContext::ContextOperation) const
              definition:  vtable for mbed::GEMALTO_CINTERION_CellularContext
              reference :  operator delete (void*)
              reference :  operator new(unsigned)
              reference :  NetworkInterface::ethInterface()
              reference :  NetworkInterface::wifiInterface()
              reference :  NetworkInterface::meshInterface()
              reference :  NetworkInterface::emacInterface()
              reference :  CellularInterface::cellularInterface()
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/drivers/cellular/GEMALTO/CINTERION/GEMALTO_CINTERION_CellularInformation.o.
              reference :  mbed::AT_CellularInformation::get_revision(char*, unsigned)
              reference :  mbed::AT_CellularInformation::get_manufacturer(char*, unsigned)
              reference :  mbed::AT_CellularInformation::get_serial_number(char*, unsigned, mbed::CellularInformation::SerialNumberType)
              reference :  mbed::AT_CellularInformation::get_imsi(char*, unsigned)
              reference :  mbed::AT_CellularInformation::get_model(char*, unsigned)
              reference :  mbed::AT_CellularInformation::AT_CellularInformation__sub_object(mbed::ATHandler&, mbed::AT_CellularDevice&)
              reference :  mbed::AT_CellularInformation::~AT_CellularInformation__sub_object()
              definition:  mbed::GEMALTO_CINTERION_CellularInformation::get_iccid(char*, unsigned)
              definition:  mbed::GEMALTO_CINTERION_CellularInformation::GEMALTO_CINTERION_CellularInformation(mbed::ATHandler&, mbed::AT_CellularDevice&)
              definition:  mbed::GEMALTO_CINTERION_CellularInformation::GEMALTO_CINTERION_CellularInformation__sub_object(mbed::ATHandler&, mbed::AT_CellularDevice&)
              weak defn :  mbed::GEMALTO_CINTERION_CellularInformation::~GEMALTO_CINTERION_CellularInformation__deallocating()
              reference :  mbed::ATHandler::at_cmd_str(const char*, const char*, char*, unsigned, const char*, ...)
              definition:  vtable for mbed::GEMALTO_CINTERION_CellularInformation
              reference :  operator delete (void*)
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/drivers/cellular/GEMALTO/CINTERION/GEMALTO_CINTERION_CellularStack.o.
              reference :  NetworkStack::getsockopt(void*, int, int, void*, unsigned*)
              reference :  NetworkStack::setsockopt(void*, int, int, const void*, unsigned)
              reference :  NetworkStack::getaddrinfo(const char*, SocketAddress*, SocketAddress**, const char*)
              reference :  NetworkStack::getstackopt(int, int, void*, unsigned*)
              reference :  NetworkStack::setstackopt(int, int, const void*, unsigned)
              reference :  NetworkStack::gethostbyname(const char*, SocketAddress*, nsapi_version, const char*)
              reference :  NetworkStack::add_dns_server(const SocketAddress&, const char*)
              reference :  NetworkStack::get_dns_server(int, SocketAddress*, const char*)
              reference :  NetworkStack::get_ip_address_if(SocketAddress*, const char*)
              reference :  NetworkStack::getaddrinfo_async(const char*, SocketAddress*, mbed::Callback<void(int, SocketAddress*)>, const char*)
              reference :  NetworkStack::gethostbyname_async(const char*, mbed::Callback<void(int, SocketAddress*)>, nsapi_version, const char*)
              reference :  NetworkStack::get_call_in_callback()
              reference :  NetworkStack::gethostbyname_async_cancel(int)
              reference :  NetworkStack::get_ipv6_link_local_address(SocketAddress*)
              reference :  NetworkStack::call_in(int, mbed::Callback<void()>)
              reference :  SocketAddress::set_ip_address(const char*)
              reference :  SocketAddress::operator =(const SocketAddress&)
              reference :  mbed::AT_CellularStack::find_socket(int)
              reference :  mbed::AT_CellularStack::socket_bind(void*, const SocketAddress&)
              reference :  mbed::AT_CellularStack::socket_open(void**, nsapi_protocol)
              reference :  mbed::AT_CellularStack::socket_recv(void*, void*, unsigned)
              reference :  mbed::AT_CellularStack::socket_send(void*, const void*, unsigned)
              reference :  mbed::AT_CellularStack::socket_close(void*)
              reference :  mbed::AT_CellularStack::socket_accept(void*, void**, SocketAddress*)
              reference :  mbed::AT_CellularStack::socket_attach(void*, void(*)(void*), void*)
              reference :  mbed::AT_CellularStack::socket_listen(void*, int)
              reference :  mbed::AT_CellularStack::socket_sendto(void*, const SocketAddress&, const void*, unsigned)
              reference :  mbed::AT_CellularStack::get_ip_address(SocketAddress*)
              reference :  mbed::AT_CellularStack::socket_recvfrom(void*, SocketAddress*, void*, unsigned)
              reference :  mbed::AT_CellularStack::find_socket_index(void*)
              reference :  mbed::AT_CellularStack::AT_CellularStack__sub_object(mbed::ATHandler&, int, nsapi_ip_stack, mbed::AT_CellularDevice&)
              reference :  mbed::AT_CellularStack::~AT_CellularStack__sub_object()
              reference :  mbed::AT_CellularDevice::get_property(mbed::AT_CellularDevice::CellularProperty)
              reference :  mbed::GEMALTO_CINTERION::get_module()
              definition:  mbed::GEMALTO_CINTERION_CellularStack::socket_connect(void*, const SocketAddress&)
              definition:  mbed::GEMALTO_CINTERION_CellularStack::sisr_urc_handler(int, int)
              definition:  mbed::GEMALTO_CINTERION_CellularStack::sisw_urc_handler(int, int)
              definition:  mbed::GEMALTO_CINTERION_CellularStack::socket_close_impl(int)
              definition:  mbed::GEMALTO_CINTERION_CellularStack::socket_open_defer(mbed::AT_CellularStack::CellularSocket*, const SocketAddress*)
              definition:  mbed::GEMALTO_CINTERION_CellularStack::socket_stack_init()
              definition:  mbed::GEMALTO_CINTERION_CellularStack::create_socket_impl(mbed::AT_CellularStack::CellularSocket*)
              definition:  mbed::GEMALTO_CINTERION_CellularStack::socket_sendto_impl(mbed::AT_CellularStack::CellularSocket*, const SocketAddress&, const void*, unsigned)
              definition:  mbed::GEMALTO_CINTERION_CellularStack::socket_recvfrom_impl(mbed::AT_CellularStack::CellularSocket*, SocketAddress*, void*, unsigned)
              definition:  mbed::GEMALTO_CINTERION_CellularStack::close_connection_profile(int)
              definition:  mbed::GEMALTO_CINTERION_CellularStack::create_connection_profile(int)
              definition:  mbed::GEMALTO_CINTERION_CellularStack::urc_sis()
              definition:  mbed::GEMALTO_CINTERION_CellularStack::urc_sisr()
              definition:  mbed::GEMALTO_CINTERION_CellularStack::urc_sisw()
              definition:  mbed::GEMALTO_CINTERION_CellularStack::GEMALTO_CINTERION_CellularStack(mbed::ATHandler&, const char*, const char*, const char*, int, nsapi_ip_stack, mbed::AT_CellularDevice&)
              definition:  mbed::GEMALTO_CINTERION_CellularStack::GEMALTO_CINTERION_CellularStack__sub_object(mbed::ATHandler&, const char*, const char*, const char*, int, nsapi_ip_stack, mbed::AT_CellularDevice&)
              definition:  mbed::GEMALTO_CINTERION_CellularStack::~GEMALTO_CINTERION_CellularStack__deallocating()
              definition:  mbed::GEMALTO_CINTERION_CellularStack::~GEMALTO_CINTERION_CellularStack()
              definition:  mbed::GEMALTO_CINTERION_CellularStack::~GEMALTO_CINTERION_CellularStack__sub_object()
              weak defn :  T1 mbed::detail::invoke_r<void, void(mbed::GEMALTO_CINTERION_CellularStack::*const &)(), <mbed::GEMALTO_CINTERION_CellularStack*const &>, (int)0>(T2&&, T3&&...)
              weak defn :  T1 mbed::detail::invoke_r<void, mbed::Callback<void()>::Callback<mbed::GEMALTO_CINTERION_CellularStack*, void(mbed::GEMALTO_CINTERION_CellularStack::*)(), (int)0>(T1, T2)::[lambda() (instance 1)]&, <>, (int)0>(T2&&, T3&&...)
              weak defn :  void mbed::Callback<void()>::target_call<mbed::Callback<void()>::Callback<mbed::GEMALTO_CINTERION_CellularStack*, void(mbed::GEMALTO_CINTERION_CellularStack::*)(), (int)0>(T1, T2)::[lambda() (instance 1)]>(const mbed::detail::CallbackBase*)
              weak defn :  void mbed::Callback<void()>::generate<mbed::Callback<void()>::Callback<mbed::GEMALTO_CINTERION_CellularStack*, void(mbed::GEMALTO_CINTERION_CellularStack::*)(), (int)0>(T1, T2)::[lambda() (instance 1)], void>(T1&&)
              weak defn :  mbed::Callback<void()>::Callback__sub_object<mbed::GEMALTO_CINTERION_CellularStack*, void(mbed::GEMALTO_CINTERION_CellularStack::*)(), (int)0>(T1, T2)
              reference :  mbed::ATHandler::read_bytes(unsigned char*, unsigned)
              reference :  mbed::ATHandler::resp_start(const char*, bool)
              reference :  mbed::ATHandler::skip_param(unsigned)
              reference :  mbed::ATHandler::clear_error()
              reference :  mbed::ATHandler::process_oob()
              reference :  mbed::ATHandler::read_string(char*, unsigned, bool)
              reference :  mbed::ATHandler::write_bytes(const unsigned char*, unsigned)
              reference :  mbed::ATHandler::write_string(const char*, bool)
              reference :  mbed::ATHandler::at_cmd_discard(const char*, const char*, const char*, ...)
              reference :  mbed::ATHandler::cmd_start_stop(const char*, const char*, const char*, ...)
              reference :  mbed::ATHandler::set_at_timeout(std::__1::chrono::duration<unsigned, std::__1::ratio<(long long)1, (long long)1000>>, bool)
              reference :  mbed::ATHandler::set_urc_handler(const char*, mbed::Callback<void()>)
              reference :  mbed::ATHandler::cmd_stop_read_resp()
              reference :  mbed::ATHandler::restore_at_timeout()
              reference :  mbed::ATHandler::lock()
              reference :  mbed::ATHandler::unlock()
              reference :  mbed::ATHandler::read_int()
              reference :  mbed::ATHandler::cmd_start(const char*)
              reference :  mbed::ATHandler::info_resp()
              reference :  mbed::ATHandler::resp_stop()
              reference :  mbed::ATHandler::write_int(int)
              weak defn :  std::__1::enable_if<((std::is_function<T2>::value&&(!std::is_base_of<T1, std::__1::decay<T3>::type>::value))&&(!is_reference_wrapper<std::__1::decay<T3>::type>::value)), decltype((((*std::forward<T3>(param#2)).*param#1)(std::forward<T4>(param#3)...)))>::type mstd::impl::INVOKE<mbed::GEMALTO_CINTERION_CellularStack, void(), mbed::GEMALTO_CINTERION_CellularStack*const &, <>>(T2T1::*, T3&&, T4&&...)
              weak defn :  std::__1::enable_if<((!std::is_member_pointer<std::__1::decay<T1>::type>::value)||(std::is_member_object_pointer<std::__1::decay<T1>::type>::value&&(sizeof...(param#2)!=(int)1))), decltype((std::forward<T1>(param#1)(std::forward<T2>(param#2)...)))>::type mstd::impl::INVOKE<mbed::Callback<void()>::Callback<mbed::GEMALTO_CINTERION_CellularStack*, void(mbed::GEMALTO_CINTERION_CellularStack::*)(), (int)0>(T1, T2)::[lambda() (instance 1)]&, <>>(T1&&, T2&&...)
              weak defn :  mstd::invoke_result<T1, <T2...>>::type mstd::invoke<void(mbed::GEMALTO_CINTERION_CellularStack::*const &)(), <mbed::GEMALTO_CINTERION_CellularStack*const &>>(T1&&, T2&&...)
              weak defn :  mstd::invoke_result<T1, <T2...>>::type mstd::invoke<mbed::Callback<void()>::Callback<mbed::GEMALTO_CINTERION_CellularStack*, void(mbed::GEMALTO_CINTERION_CellularStack::*)(), (int)0>(T1, T2)::[lambda() (instance 1)]&, <>>(T1&&, T2&&...)
              reference :  SocketAddress::get_ip_address() const
              reference :  mbed::ATHandler::get_last_error() const
              definition:  vtable for mbed::GEMALTO_CINTERION_CellularStack
              weak defn :  mbed::Callback<void()>::Callback<mbed::GEMALTO_CINTERION_CellularStack*, void(mbed::GEMALTO_CINTERION_CellularStack::*)(), (int)0>(T1, T2)::[lambda() (instance 1)]::operator ()() const
              reference :  operator delete (void*)
              reference :  operator !=(const SocketAddress&, const SocketAddress&)
              reference :  __2sprintf
              reference :  _printf_c
              reference :  _printf_charcount
              reference :  _printf_d
              reference :  _printf_flags
              reference :  _printf_i
              reference :  _printf_int_dec
              reference :  _printf_lc
              reference :  _printf_longlong_hex
              reference :  _printf_longlong_oct
              reference :  _printf_n
              reference :  _printf_o
              reference :  _printf_p
              reference :  _printf_percent
              reference :  _printf_pre_padding
              reference :  _printf_s
              reference :  _printf_sizespec
              reference :  _printf_str
              reference :  _printf_truncate_signed
              reference :  _printf_truncate_unsigned
              reference :  _printf_u
              reference :  _printf_wctomb
              reference :  _printf_widthprec
              reference :  _printf_x
              reference :  mbed_assert_internal
              reference :  memcmp
              reference :  strchr
              reference :  strcmp
              reference :  strtol
              reference :  mbed::Callback<void()>::Callback__sub_object(std::nullptr_t)
              reference :  _ZNSt3__18literals15chrono_literalsli1sEy
              reference :  SocketAddress::get_port() const
              reference :  SocketAddress::get_ip_version() const
              reference :  SocketAddress::set_port(unsigned short)
              reference :  NetworkStack::onboardNetworkStack()
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/drivers/cellular/GENERIC/GENERIC_AT3GPP/GENERIC_AT3GPP.o.
              reference :  mbed::CellularDevice::get_queue()
              definition:  mbed::GENERIC_AT3GPP::GENERIC_AT3GPP(mbed::FileHandle*)
              definition:  mbed::GENERIC_AT3GPP::GENERIC_AT3GPP__sub_object(mbed::FileHandle*)
              weak defn :  mbed::GENERIC_AT3GPP::~GENERIC_AT3GPP__deallocating()
              reference :  mbed::AT_CellularDevice::set_timeout(int)
              reference :  mbed::AT_CellularDevice::open_network()
              reference :  mbed::AT_CellularDevice::set_ready_cb(mbed::Callback<void()>)
              reference :  mbed::AT_CellularDevice::close_network()
              reference :  mbed::AT_CellularDevice::get_sim_state(mbed::CellularDevice::SimState&)
              reference :  mbed::AT_CellularDevice::hard_power_on()
              reference :  mbed::AT_CellularDevice::set_baud_rate(int)
              reference :  mbed::AT_CellularDevice::soft_power_on()
              reference :  mbed::AT_CellularDevice::create_context(const char*, bool, bool)
              reference :  mbed::AT_CellularDevice::delete_context(mbed::CellularContext*)
              reference :  mbed::AT_CellularDevice::get_at_handler()
              reference :  mbed::AT_CellularDevice::hard_power_off()
              reference :  mbed::AT_CellularDevice::modem_debug_on(bool)
              reference :  mbed::AT_CellularDevice::soft_power_off()
              reference :  mbed::AT_CellularDevice::open_information()
              reference :  mbed::AT_CellularDevice::set_at_urcs_impl()
              reference :  mbed::AT_CellularDevice::cellular_callback(nsapi_event, int, mbed::CellularContext*)
              reference :  mbed::AT_CellularDevice::close_information()
              reference :  mbed::AT_CellularDevice::open_network_impl(mbed::ATHandler&)
              reference :  mbed::AT_CellularDevice::set_baud_rate_impl(int)
              reference :  mbed::AT_CellularDevice::create_context_impl(mbed::ATHandler&, const char*, bool, bool)
              reference :  mbed::AT_CellularDevice::set_power_save_mode(int, int)
              reference :  mbed::AT_CellularDevice::open_information_impl(mbed::ATHandler&)
              reference :  mbed::AT_CellularDevice::set_cellular_properties(const int*)
              reference :  mbed::AT_CellularDevice::init()
              reference :  mbed::AT_CellularDevice::clear()
              reference :  mbed::AT_CellularDevice::set_pin(const char*)
              reference :  mbed::AT_CellularDevice::is_ready()
              reference :  mbed::AT_CellularDevice::shutdown()
              reference :  mbed::AT_CellularDevice::AT_CellularDevice__sub_object(mbed::FileHandle*)
              reference :  mbed::AT_CellularDevice::~AT_CellularDevice__sub_object()
              reference :  mbed::AT_CellularDevice::get_context_list() const
              weak defn :  vtable for mbed::GENERIC_AT3GPP
              reference :  operator delete (void*)
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/drivers/cellular/MultiTech/DragonflyNano/PPP/SARA4_PPP.o.
              reference :  mbed::CellularDevice::get_queue()
              reference :  mbed::AT_CellularDevice::set_timeout(int)
              reference :  mbed::AT_CellularDevice::open_network()
              reference :  mbed::AT_CellularDevice::set_ready_cb(mbed::Callback<void()>)
              reference :  mbed::AT_CellularDevice::close_network()
              reference :  mbed::AT_CellularDevice::get_sim_state(mbed::CellularDevice::SimState&)
              reference :  mbed::AT_CellularDevice::hard_power_on()
              reference :  mbed::AT_CellularDevice::set_baud_rate(int)
              reference :  mbed::AT_CellularDevice::soft_power_on()
              reference :  mbed::AT_CellularDevice::create_context(const char*, bool, bool)
              reference :  mbed::AT_CellularDevice::delete_context(mbed::CellularContext*)
              reference :  mbed::AT_CellularDevice::get_at_handler()
              reference :  mbed::AT_CellularDevice::hard_power_off()
              reference :  mbed::AT_CellularDevice::modem_debug_on(bool)
              reference :  mbed::AT_CellularDevice::soft_power_off()
              reference :  mbed::AT_CellularDevice::open_information()
              reference :  mbed::AT_CellularDevice::set_at_urcs_impl()
              reference :  mbed::AT_CellularDevice::cellular_callback(nsapi_event, int, mbed::CellularContext*)
              reference :  mbed::AT_CellularDevice::close_information()
              reference :  mbed::AT_CellularDevice::set_baud_rate_impl(int)
              reference :  mbed::AT_CellularDevice::create_context_impl(mbed::ATHandler&, const char*, bool, bool)
              reference :  mbed::AT_CellularDevice::set_power_save_mode(int, int)
              reference :  mbed::AT_CellularDevice::open_information_impl(mbed::ATHandler&)
              reference :  mbed::AT_CellularDevice::set_cellular_properties(const int*)
              reference :  mbed::AT_CellularDevice::init()
              reference :  mbed::AT_CellularDevice::clear()
              reference :  mbed::AT_CellularDevice::set_pin(const char*)
              reference :  mbed::AT_CellularDevice::is_ready()
              reference :  mbed::AT_CellularDevice::shutdown()
              reference :  mbed::AT_CellularDevice::AT_CellularDevice__sub_object(mbed::FileHandle*)
              reference :  mbed::AT_CellularDevice::~AT_CellularDevice__sub_object()
              reference :  mbed::SARA4_PPP_CellularNetwork::SARA4_PPP_CellularNetwork(mbed::ATHandler&, mbed::AT_CellularDevice&)
              definition:  mbed::SARA4_PPP::open_network_impl(mbed::ATHandler&)
              definition:  mbed::SARA4_PPP::SARA4_PPP(mbed::FileHandle*)
              definition:  mbed::SARA4_PPP::SARA4_PPP__sub_object(mbed::FileHandle*)
              weak defn :  mbed::SARA4_PPP::~SARA4_PPP__deallocating()
              reference :  mbed::AT_CellularDevice::get_context_list() const
              definition:  vtable for mbed::SARA4_PPP
              reference :  operator delete (void*)
              reference :  operator new(unsigned)
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/drivers/cellular/MultiTech/DragonflyNano/PPP/SARA4_PPP_CellularNetwork.o.
              reference :  mbed::AT_CellularNetwork::get_attach(mbed::CellularNetwork::AttachStatus&)
              reference :  mbed::AT_CellularNetwork::set_attach()
              reference :  mbed::AT_CellularNetwork::get_3gpp_error()
              reference :  mbed::AT_CellularNetwork::set_registration(const char*)
              reference :  mbed::AT_CellularNetwork::is_active_context(int*, int)
              reference :  mbed::AT_CellularNetwork::get_operator_names(mbed::CellularList<mbed::CellularNetwork::operator_names_t>&)
              reference :  mbed::AT_CellularNetwork::get_signal_quality(int&, int*)
              reference :  mbed::AT_CellularNetwork::set_receive_period(int, mbed::CellularNetwork::EDRXAccessTechnology, unsigned char)
              reference :  mbed::AT_CellularNetwork::get_operator_params(int&, mbed::CellularNetwork::operator_t&)
              reference :  mbed::AT_CellularNetwork::set_registration_urc(mbed::CellularNetwork::RegistrationType, bool)
              reference :  mbed::AT_CellularNetwork::set_access_technology(mbed::CellularNetwork::RadioAccessTechnology)
              reference :  mbed::AT_CellularNetwork::get_registration_params(mbed::CellularNetwork::RegistrationType, mbed::CellularNetwork::registration_params_t&)
              reference :  mbed::AT_CellularNetwork::get_registration_params(mbed::CellularNetwork::registration_params_t&)
              reference :  mbed::AT_CellularNetwork::get_context_state_command()
              reference :  mbed::AT_CellularNetwork::get_network_registering_mode(mbed::CellularNetwork::NWRegisteringMode&)
              reference :  mbed::AT_CellularNetwork::set_ciot_optimization_config(mbed::CellularNetwork::CIoT_Supported_Opt, mbed::CellularNetwork::CIoT_Preferred_UE_Opt, mbed::Callback<void(mbed::CellularNetwork::CIoT_Supported_Opt)>)
              reference :  mbed::AT_CellularNetwork::get_ciot_ue_optimization_config(mbed::CellularNetwork::CIoT_Supported_Opt&, mbed::CellularNetwork::CIoT_Preferred_UE_Opt&)
              reference :  mbed::AT_CellularNetwork::set_packet_domain_event_reporting(bool)
              reference :  mbed::AT_CellularNetwork::get_ciot_network_optimization_config(mbed::CellularNetwork::CIoT_Supported_Opt&)
              reference :  mbed::AT_CellularNetwork::clear()
              reference :  mbed::AT_CellularNetwork::attach(mbed::Callback<void(nsapi_event, int)>)
              reference :  mbed::AT_CellularNetwork::detach()
              reference :  mbed::AT_CellularNetwork::scan_plmn(mbed::CellularList<mbed::CellularNetwork::operator_t>&, int&)
              reference :  mbed::AT_CellularNetwork::AT_CellularNetwork__sub_object(mbed::ATHandler&, mbed::AT_CellularDevice&)
              reference :  mbed::AT_CellularNetwork::~AT_CellularNetwork__sub_object()
              definition:  mbed::SARA4_PPP_CellularNetwork::set_access_technology_impl(mbed::CellularNetwork::RadioAccessTechnology)
              definition:  mbed::SARA4_PPP_CellularNetwork::SARA4_PPP_CellularNetwork(mbed::ATHandler&, mbed::AT_CellularDevice&)
              definition:  mbed::SARA4_PPP_CellularNetwork::SARA4_PPP_CellularNetwork__sub_object(mbed::ATHandler&, mbed::AT_CellularDevice&)
              definition:  mbed::SARA4_PPP_CellularNetwork::~SARA4_PPP_CellularNetwork__deallocating()
              definition:  mbed::SARA4_PPP_CellularNetwork::~SARA4_PPP_CellularNetwork()
              definition:  mbed::SARA4_PPP_CellularNetwork::~SARA4_PPP_CellularNetwork__sub_object()
              definition:  vtable for mbed::SARA4_PPP_CellularNetwork
              reference :  operator delete (void*)
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/drivers/cellular/QUECTEL/BC95/QUECTEL_BC95.o.
              definition:  mbed::QUECTEL_BC95::get_sim_state(mbed::CellularDevice::SimState&)
              definition:  mbed::QUECTEL_BC95::open_network_impl(mbed::ATHandler&)
              definition:  mbed::QUECTEL_BC95::set_baud_rate_impl(int)
              definition:  mbed::QUECTEL_BC95::create_context_impl(mbed::ATHandler&, const char*, bool, bool)
              definition:  mbed::QUECTEL_BC95::open_information_impl(mbed::ATHandler&)
              definition:  mbed::QUECTEL_BC95::init()
              definition:  mbed::QUECTEL_BC95::QUECTEL_BC95(mbed::FileHandle*)
              definition:  mbed::QUECTEL_BC95::QUECTEL_BC95__sub_object(mbed::FileHandle*)
              weak defn :  mbed::QUECTEL_BC95::~QUECTEL_BC95__deallocating()
              reference :  mbed::CellularDevice::get_queue()
              reference :  mbed::AT_CellularDevice::set_timeout(int)
              reference :  mbed::AT_CellularDevice::open_network()
              reference :  mbed::AT_CellularDevice::set_ready_cb(mbed::Callback<void()>)
              reference :  mbed::AT_CellularDevice::close_network()
              reference :  mbed::AT_CellularDevice::hard_power_on()
              reference :  mbed::AT_CellularDevice::set_baud_rate(int)
              reference :  mbed::AT_CellularDevice::soft_power_on()
              reference :  mbed::AT_CellularDevice::create_context(const char*, bool, bool)
              reference :  mbed::AT_CellularDevice::delete_context(mbed::CellularContext*)
              reference :  mbed::AT_CellularDevice::get_at_handler()
              reference :  mbed::AT_CellularDevice::hard_power_off()
              reference :  mbed::AT_CellularDevice::modem_debug_on(bool)
              reference :  mbed::AT_CellularDevice::soft_power_off()
              reference :  mbed::AT_CellularDevice::open_information()
              reference :  mbed::AT_CellularDevice::set_at_urcs_impl()
              reference :  mbed::AT_CellularDevice::setup_at_handler()
              reference :  mbed::AT_CellularDevice::cellular_callback(nsapi_event, int, mbed::CellularContext*)
              reference :  mbed::AT_CellularDevice::close_information()
              reference :  mbed::AT_CellularDevice::set_power_save_mode(int, int)
              reference :  mbed::AT_CellularDevice::set_cellular_properties(const int*)
              reference :  mbed::AT_CellularDevice::clear()
              reference :  mbed::AT_CellularDevice::set_pin(const char*)
              reference :  mbed::AT_CellularDevice::is_ready()
              reference :  mbed::AT_CellularDevice::shutdown()
              reference :  mbed::AT_CellularDevice::AT_CellularDevice__sub_object(mbed::FileHandle*)
              reference :  mbed::AT_CellularDevice::~AT_CellularDevice__sub_object()
              reference :  mbed::QUECTEL_BC95_CellularContext::QUECTEL_BC95_CellularContext(mbed::ATHandler&, mbed::CellularDevice*, const char*, bool, bool)
              reference :  mbed::QUECTEL_BC95_CellularNetwork::QUECTEL_BC95_CellularNetwork(mbed::ATHandler&, mbed::AT_CellularDevice&)
              reference :  mbed::QUECTEL_BC95_CellularInformation::QUECTEL_BC95_CellularInformation(mbed::ATHandler&, mbed::AT_CellularDevice&)
              reference :  mbed::ATHandler::at_cmd_discard(const char*, const char*, const char*, ...)
              reference :  mbed::ATHandler::lock()
              reference :  mbed::ATHandler::flush()
              reference :  mbed::ATHandler::unlock()
              reference :  mbed::AT_CellularDevice::get_context_list() const
              reference :  mbed::ATHandler::get_last_error() const
              definition:  vtable for mbed::QUECTEL_BC95
              reference :  operator delete (void*)
              reference :  operator new(unsigned)
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/drivers/cellular/QUECTEL/BC95/QUECTEL_BC95_CellularContext.o.
              reference :  NetworkInterface::get_gateway(SocketAddress*)
              reference :  NetworkInterface::get_netmask(SocketAddress*)
              reference :  NetworkInterface::getaddrinfo(const char*, SocketAddress*, SocketAddress**, const char*)
              reference :  NetworkInterface::set_network(const SocketAddress&, const SocketAddress&, const SocketAddress&)
              reference :  NetworkInterface::gethostbyname(const char*, SocketAddress*, nsapi_version, const char*)
              reference :  NetworkInterface::add_dns_server(const SocketAddress&, const char*)
              reference :  NetworkInterface::get_dns_server(int, SocketAddress*, const char*)
              reference :  NetworkInterface::set_as_default()
              reference :  NetworkInterface::get_mac_address()
              reference :  NetworkInterface::getaddrinfo_async(const char*, SocketAddress*, mbed::Callback<void(int, SocketAddress*)>, const char*)
              reference :  NetworkInterface::gethostbyname_async(const char*, mbed::Callback<void(int, SocketAddress*)>, nsapi_version, const char*)
              reference :  NetworkInterface::gethostbyname_async_cancel(int)
              reference :  NetworkInterface::get_ipv6_link_local_address(SocketAddress*)
              reference :  NetworkInterface::set_dhcp(bool)
              reference :  CellularInterface::set_default_parameters()
              reference :  mbed::AT_CellularContext::disconnect()
              reference :  mbed::AT_CellularContext::do_connect()
              reference :  mbed::AT_CellularContext::enable_hup(bool)
              reference :  mbed::AT_CellularContext::get_context()
              reference :  mbed::AT_CellularContext::set_sim_pin(const char*)
              reference :  mbed::AT_CellularContext::get_cp_netif()
              reference :  mbed::AT_CellularContext::is_connected()
              reference :  mbed::AT_CellularContext::set_blocking(bool)
              reference :  mbed::AT_CellularContext::configure_hup(PinName, bool)
              reference :  mbed::AT_CellularContext::do_disconnect()
              reference :  mbed::AT_CellularContext::set_sim_ready()
              reference :  mbed::AT_CellularContext::get_ip_address(SocketAddress*)
              reference :  mbed::AT_CellularContext::set_disconnect()
              reference :  mbed::AT_CellularContext::set_credentials(const char*, const char*, const char*)
              reference :  mbed::AT_CellularContext::activate_context()
              reference :  mbed::AT_CellularContext::get_rate_control(mbed::CellularContext::RateControlExceptionReports&, mbed::CellularContext::RateControlUplinkTimeUnit&, int&)
              reference :  mbed::AT_CellularContext::set_device_ready()
              reference :  mbed::AT_CellularContext::attach_to_network()
              reference :  mbed::AT_CellularContext::cellular_callback(nsapi_event, int)
              reference :  mbed::AT_CellularContext::deactivate_context()
              reference :  mbed::AT_CellularContext::get_interface_name(char*)
              reference :  mbed::AT_CellularContext::register_to_network()
              reference :  mbed::AT_CellularContext::deactivate_ip_context()
              reference :  mbed::AT_CellularContext::do_connect_with_retry()
              reference :  mbed::AT_CellularContext::get_apn_backoff_timer(int&)
              reference :  mbed::AT_CellularContext::get_pdpcontext_params(mbed::CellularList<mbed::CellularContext::pdpcontext_params_t>&)
              reference :  mbed::AT_CellularContext::do_user_authentication()
              reference :  mbed::AT_CellularContext::activate_non_ip_context()
              reference :  mbed::AT_CellularContext::setup_control_plane_opt()
              reference :  mbed::AT_CellularContext::deactivate_non_ip_context()
              reference :  mbed::AT_CellularContext::attach(mbed::Callback<void(nsapi_event, int)>)
              reference :  mbed::AT_CellularContext::connect(const char*, const char*, const char*, const char*)
              reference :  mbed::AT_CellularContext::connect()
              reference :  mbed::AT_CellularContext::set_plmn(const char*)
              reference :  mbed::AT_CellularContext::AT_CellularContext__sub_object(mbed::ATHandler&, mbed::CellularDevice*, const char*, bool, bool)
              reference :  mbed::AT_CellularContext::~AT_CellularContext__sub_object()
              reference :  mbed::QUECTEL_BC95_CellularStack::QUECTEL_BC95_CellularStack(mbed::ATHandler&, int, nsapi_ip_stack, mbed::AT_CellularDevice&)
              definition:  mbed::QUECTEL_BC95_CellularContext::get_nonip_context_type_str()
              definition:  mbed::QUECTEL_BC95_CellularContext::get_stack()
              definition:  mbed::QUECTEL_BC95_CellularContext::QUECTEL_BC95_CellularContext(mbed::ATHandler&, mbed::CellularDevice*, const char*, bool, bool)
              definition:  mbed::QUECTEL_BC95_CellularContext::QUECTEL_BC95_CellularContext__sub_object(mbed::ATHandler&, mbed::CellularDevice*, const char*, bool, bool)
              definition:  mbed::QUECTEL_BC95_CellularContext::~QUECTEL_BC95_CellularContext__deallocating()
              definition:  mbed::QUECTEL_BC95_CellularContext::~QUECTEL_BC95_CellularContext()
              definition:  mbed::QUECTEL_BC95_CellularContext::~QUECTEL_BC95_CellularContext__sub_object()
              reference :  mbed::AT_CellularContext::get_device() const
              reference :  mbed::AT_CellularContext::get_connection_status() const
              reference :  mbed::AT_CellularContext::get_timeout_for_operation(mbed::CellularContext::ContextOperation) const
              definition:  vtable for mbed::QUECTEL_BC95_CellularContext
              reference :  operator delete (void*)
              reference :  operator new(unsigned)
              reference :  NetworkInterface::ethInterface()
              reference :  NetworkInterface::wifiInterface()
              reference :  NetworkInterface::meshInterface()
              reference :  NetworkInterface::emacInterface()
              reference :  CellularInterface::cellularInterface()
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/drivers/cellular/QUECTEL/BC95/QUECTEL_BC95_CellularInformation.o.
              reference :  mbed::AT_CellularInformation::get_revision(char*, unsigned)
              reference :  mbed::AT_CellularInformation::get_manufacturer(char*, unsigned)
              reference :  mbed::AT_CellularInformation::get_serial_number(char*, unsigned, mbed::CellularInformation::SerialNumberType)
              reference :  mbed::AT_CellularInformation::get_imsi(char*, unsigned)
              reference :  mbed::AT_CellularInformation::get_model(char*, unsigned)
              reference :  mbed::AT_CellularInformation::AT_CellularInformation__sub_object(mbed::ATHandler&, mbed::AT_CellularDevice&)
              reference :  mbed::AT_CellularInformation::~AT_CellularInformation__sub_object()
              definition:  mbed::QUECTEL_BC95_CellularInformation::get_iccid(char*, unsigned)
              definition:  mbed::QUECTEL_BC95_CellularInformation::QUECTEL_BC95_CellularInformation(mbed::ATHandler&, mbed::AT_CellularDevice&)
              definition:  mbed::QUECTEL_BC95_CellularInformation::QUECTEL_BC95_CellularInformation__sub_object(mbed::ATHandler&, mbed::AT_CellularDevice&)
              definition:  mbed::QUECTEL_BC95_CellularInformation::~QUECTEL_BC95_CellularInformation__deallocating()
              definition:  mbed::QUECTEL_BC95_CellularInformation::~QUECTEL_BC95_CellularInformation()
              definition:  mbed::QUECTEL_BC95_CellularInformation::~QUECTEL_BC95_CellularInformation__sub_object()
              reference :  mbed::ATHandler::at_cmd_str(const char*, const char*, char*, unsigned, const char*, ...)
              definition:  vtable for mbed::QUECTEL_BC95_CellularInformation
              reference :  operator delete (void*)
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/drivers/cellular/QUECTEL/BC95/QUECTEL_BC95_CellularNetwork.o.
              reference :  mbed::AT_CellularNetwork::get_attach(mbed::CellularNetwork::AttachStatus&)
              reference :  mbed::AT_CellularNetwork::set_attach()
              reference :  mbed::AT_CellularNetwork::get_3gpp_error()
              reference :  mbed::AT_CellularNetwork::set_registration(const char*)
              reference :  mbed::AT_CellularNetwork::is_active_context(int*, int)
              reference :  mbed::AT_CellularNetwork::get_operator_names(mbed::CellularList<mbed::CellularNetwork::operator_names_t>&)
              reference :  mbed::AT_CellularNetwork::get_signal_quality(int&, int*)
              reference :  mbed::AT_CellularNetwork::set_receive_period(int, mbed::CellularNetwork::EDRXAccessTechnology, unsigned char)
              reference :  mbed::AT_CellularNetwork::get_operator_params(int&, mbed::CellularNetwork::operator_t&)
              reference :  mbed::AT_CellularNetwork::set_registration_urc(mbed::CellularNetwork::RegistrationType, bool)
              reference :  mbed::AT_CellularNetwork::set_access_technology(mbed::CellularNetwork::RadioAccessTechnology)
              reference :  mbed::AT_CellularNetwork::get_registration_params(mbed::CellularNetwork::RegistrationType, mbed::CellularNetwork::registration_params_t&)
              reference :  mbed::AT_CellularNetwork::get_registration_params(mbed::CellularNetwork::registration_params_t&)
              reference :  mbed::AT_CellularNetwork::get_context_state_command()
              reference :  mbed::AT_CellularNetwork::get_network_registering_mode(mbed::CellularNetwork::NWRegisteringMode&)
              reference :  mbed::AT_CellularNetwork::set_ciot_optimization_config(mbed::CellularNetwork::CIoT_Supported_Opt, mbed::CellularNetwork::CIoT_Preferred_UE_Opt, mbed::Callback<void(mbed::CellularNetwork::CIoT_Supported_Opt)>)
              reference :  mbed::AT_CellularNetwork::get_ciot_ue_optimization_config(mbed::CellularNetwork::CIoT_Supported_Opt&, mbed::CellularNetwork::CIoT_Preferred_UE_Opt&)
              reference :  mbed::AT_CellularNetwork::set_packet_domain_event_reporting(bool)
              reference :  mbed::AT_CellularNetwork::get_ciot_network_optimization_config(mbed::CellularNetwork::CIoT_Supported_Opt&)
              reference :  mbed::AT_CellularNetwork::clear()
              reference :  mbed::AT_CellularNetwork::attach(mbed::Callback<void(nsapi_event, int)>)
              reference :  mbed::AT_CellularNetwork::detach()
              reference :  mbed::AT_CellularNetwork::scan_plmn(mbed::CellularList<mbed::CellularNetwork::operator_t>&, int&)
              reference :  mbed::AT_CellularNetwork::AT_CellularNetwork__sub_object(mbed::ATHandler&, mbed::AT_CellularDevice&)
              reference :  mbed::AT_CellularNetwork::~AT_CellularNetwork__sub_object()
              definition:  mbed::QUECTEL_BC95_CellularNetwork::set_access_technology_impl(mbed::CellularNetwork::RadioAccessTechnology)
              definition:  mbed::QUECTEL_BC95_CellularNetwork::clear()
              definition:  mbed::QUECTEL_BC95_CellularNetwork::QUECTEL_BC95_CellularNetwork(mbed::ATHandler&, mbed::AT_CellularDevice&)
              definition:  mbed::QUECTEL_BC95_CellularNetwork::QUECTEL_BC95_CellularNetwork__sub_object(mbed::ATHandler&, mbed::AT_CellularDevice&)
              definition:  mbed::QUECTEL_BC95_CellularNetwork::~QUECTEL_BC95_CellularNetwork__deallocating()
              definition:  mbed::QUECTEL_BC95_CellularNetwork::~QUECTEL_BC95_CellularNetwork()
              definition:  mbed::QUECTEL_BC95_CellularNetwork::~QUECTEL_BC95_CellularNetwork__sub_object()
              definition:  vtable for mbed::QUECTEL_BC95_CellularNetwork
              reference :  operator delete (void*)
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/drivers/cellular/QUECTEL/BC95/QUECTEL_BC95_CellularStack.o.
              reference :  NetworkStack::getsockopt(void*, int, int, void*, unsigned*)
              reference :  NetworkStack::setsockopt(void*, int, int, const void*, unsigned)
              reference :  NetworkStack::getaddrinfo(const char*, SocketAddress*, SocketAddress**, const char*)
              reference :  NetworkStack::getstackopt(int, int, void*, unsigned*)
              reference :  NetworkStack::setstackopt(int, int, const void*, unsigned)
              reference :  NetworkStack::gethostbyname(const char*, SocketAddress*, nsapi_version, const char*)
              reference :  NetworkStack::add_dns_server(const SocketAddress&, const char*)
              reference :  NetworkStack::get_dns_server(int, SocketAddress*, const char*)
              reference :  NetworkStack::get_ip_address_if(SocketAddress*, const char*)
              reference :  NetworkStack::getaddrinfo_async(const char*, SocketAddress*, mbed::Callback<void(int, SocketAddress*)>, const char*)
              reference :  NetworkStack::gethostbyname_async(const char*, mbed::Callback<void(int, SocketAddress*)>, nsapi_version, const char*)
              reference :  NetworkStack::get_call_in_callback()
              reference :  NetworkStack::gethostbyname_async_cancel(int)
              reference :  NetworkStack::get_ipv6_link_local_address(SocketAddress*)
              reference :  NetworkStack::call_in(int, mbed::Callback<void()>)
              reference :  SocketAddress::set_ip_address(const char*)
              reference :  SocketAddress::operator =(const SocketAddress&)
              reference :  mbed::AT_CellularStack::find_socket(int)
              reference :  mbed::AT_CellularStack::socket_bind(void*, const SocketAddress&)
              reference :  mbed::AT_CellularStack::socket_open(void**, nsapi_protocol)
              reference :  mbed::AT_CellularStack::socket_recv(void*, void*, unsigned)
              reference :  mbed::AT_CellularStack::socket_send(void*, const void*, unsigned)
              reference :  mbed::AT_CellularStack::socket_close(void*)
              reference :  mbed::AT_CellularStack::socket_attach(void*, void(*)(void*), void*)
              reference :  mbed::AT_CellularStack::socket_sendto(void*, const SocketAddress&, const void*, unsigned)
              reference :  mbed::AT_CellularStack::get_ip_address(SocketAddress*)
              reference :  mbed::AT_CellularStack::socket_recvfrom(void*, SocketAddress*, void*, unsigned)
              reference :  mbed::AT_CellularStack::AT_CellularStack__sub_object(mbed::ATHandler&, int, nsapi_ip_stack, mbed::AT_CellularDevice&)
              reference :  mbed::AT_CellularStack::~AT_CellularStack__sub_object()
              reference :  mbed::mbed_event_queue()
              reference :  mbed::AT_CellularDevice::get_property(mbed::AT_CellularDevice::CellularProperty)
              definition:  mbed::QUECTEL_BC95_CellularStack::urc_nsocli()
              definition:  mbed::QUECTEL_BC95_CellularStack::urc_nsonmi()
              definition:  mbed::QUECTEL_BC95_CellularStack::socket_accept(void*, void**, SocketAddress*)
              definition:  mbed::QUECTEL_BC95_CellularStack::socket_listen(void*, int)
              definition:  mbed::QUECTEL_BC95_CellularStack::socket_connect(void*, const SocketAddress&)
              definition:  mbed::QUECTEL_BC95_CellularStack::socket_close_impl(int)
              definition:  mbed::QUECTEL_BC95_CellularStack::create_socket_impl(mbed::AT_CellularStack::CellularSocket*)
              definition:  mbed::QUECTEL_BC95_CellularStack::socket_sendto_impl(mbed::AT_CellularStack::CellularSocket*, const SocketAddress&, const void*, unsigned)
              definition:  mbed::QUECTEL_BC95_CellularStack::socket_recvfrom_impl(mbed::AT_CellularStack::CellularSocket*, SocketAddress*, void*, unsigned)
              definition:  mbed::QUECTEL_BC95_CellularStack::txfull_event_timeout()
              definition:  mbed::QUECTEL_BC95_CellularStack::QUECTEL_BC95_CellularStack(mbed::ATHandler&, int, nsapi_ip_stack, mbed::AT_CellularDevice&)
              definition:  mbed::QUECTEL_BC95_CellularStack::QUECTEL_BC95_CellularStack__sub_object(mbed::ATHandler&, int, nsapi_ip_stack, mbed::AT_CellularDevice&)
              definition:  mbed::QUECTEL_BC95_CellularStack::~QUECTEL_BC95_CellularStack__deallocating()
              definition:  mbed::QUECTEL_BC95_CellularStack::~QUECTEL_BC95_CellularStack()
              definition:  mbed::QUECTEL_BC95_CellularStack::~QUECTEL_BC95_CellularStack__sub_object()
              weak defn :  T1 mbed::detail::invoke_r<void, void(mbed::QUECTEL_BC95_CellularStack::*const &)(), <mbed::QUECTEL_BC95_CellularStack*const &>, (int)0>(T2&&, T3&&...)
              weak defn :  T1 mbed::detail::invoke_r<void, mbed::Callback<void()>::Callback<mbed::QUECTEL_BC95_CellularStack*, void(mbed::QUECTEL_BC95_CellularStack::*)(), (int)0>(T1, T2)::[lambda() (instance 1)]&, <>, (int)0>(T2&&, T3&&...)
              weak defn :  void mbed::Callback<void()>::target_call<mbed::Callback<void()>::Callback<mbed::QUECTEL_BC95_CellularStack*, void(mbed::QUECTEL_BC95_CellularStack::*)(), (int)0>(T1, T2)::[lambda() (instance 1)]>(const mbed::detail::CallbackBase*)
              weak defn :  void mbed::Callback<void()>::generate<mbed::Callback<void()>::Callback<mbed::QUECTEL_BC95_CellularStack*, void(mbed::QUECTEL_BC95_CellularStack::*)(), (int)0>(T1, T2)::[lambda() (instance 1)], void>(T1&&)
              weak defn :  mbed::Callback<void()>::Callback__sub_object<mbed::QUECTEL_BC95_CellularStack*, void(mbed::QUECTEL_BC95_CellularStack::*)(), (int)0>(T1, T2)
              weak defn :  mbed::Callback<T3(T4...)> mbed::callback<mbed::QUECTEL_BC95_CellularStack, mbed::QUECTEL_BC95_CellularStack, void, <>>(T2*, T3(T1::*)(T4...))
              reference :  mbed::ATHandler::resp_start(const char*, bool)
              reference :  mbed::ATHandler::skip_param(unsigned)
              reference :  mbed::ATHandler::clear_error()
              reference :  mbed::ATHandler::read_string(char*, unsigned, bool)
              reference :  mbed::ATHandler::write_string(const char*, bool)
              reference :  mbed::ATHandler::at_cmd_discard(const char*, const char*, const char*, ...)
              reference :  mbed::ATHandler::cmd_start_stop(const char*, const char*, const char*, ...)
              reference :  mbed::ATHandler::read_hex_string(char*, unsigned)
              reference :  mbed::ATHandler::set_urc_handler(const char*, mbed::Callback<void()>)
              reference :  mbed::ATHandler::write_hex_string(const char*, unsigned)
              reference :  mbed::ATHandler::cmd_stop_read_resp()
              reference :  mbed::ATHandler::lock()
              reference :  mbed::ATHandler::unlock()
              reference :  mbed::ATHandler::cmd_stop()
              reference :  mbed::ATHandler::read_int()
              reference :  mbed::ATHandler::cmd_start(const char*)
              reference :  mbed::ATHandler::resp_stop()
              reference :  mbed::ATHandler::write_int(int)
              weak defn :  std::__1::enable_if<((std::is_function<T2>::value&&(!std::is_base_of<T1, std::__1::decay<T3>::type>::value))&&(!is_reference_wrapper<std::__1::decay<T3>::type>::value)), decltype((((*std::forward<T3>(param#2)).*param#1)(std::forward<T4>(param#3)...)))>::type mstd::impl::INVOKE<mbed::QUECTEL_BC95_CellularStack, void(), mbed::QUECTEL_BC95_CellularStack*const &, <>>(T2T1::*, T3&&, T4&&...)
              weak defn :  std::__1::enable_if<((!std::is_member_pointer<std::__1::decay<T1>::type>::value)||(std::is_member_object_pointer<std::__1::decay<T1>::type>::value&&(sizeof...(param#2)!=(int)1))), decltype((std::forward<T1>(param#1)(std::forward<T2>(param#2)...)))>::type mstd::impl::INVOKE<mbed::Callback<void()>::Callback<mbed::QUECTEL_BC95_CellularStack*, void(mbed::QUECTEL_BC95_CellularStack::*)(), (int)0>(T1, T2)::[lambda() (instance 1)]&, <>>(T1&&, T2&&...)
              weak defn :  mstd::invoke_result<T1, <T2...>>::type mstd::invoke<void(mbed::QUECTEL_BC95_CellularStack::*const &)(), <mbed::QUECTEL_BC95_CellularStack*const &>>(T1&&, T2&&...)
              weak defn :  mstd::invoke_result<T1, <T2...>>::type mstd::invoke<mbed::Callback<void()>::Callback<mbed::QUECTEL_BC95_CellularStack*, void(mbed::QUECTEL_BC95_CellularStack::*)(), (int)0>(T1, T2)::[lambda() (instance 1)]&, <>>(T1&&, T2&&...)
              reference :  rtos::ThisThread::sleep_for(std::__1::chrono::duration<unsigned, std::__1::ratio<(long long)1, (long long)1000>>)
              reference :  rtos::Mutex::lock()
              reference :  rtos::Mutex::unlock()
              reference :  events::EventQueue::cancel(int)
              reference :  SocketAddress::get_ip_address() const
              reference :  mbed::ATHandler::get_last_error() const
              reference :  mbed::ATHandler::get_last_device_error() const
              definition:  vtable for mbed::QUECTEL_BC95_CellularStack
              weak defn :  mbed::Callback<void()>::Callback<mbed::QUECTEL_BC95_CellularStack*, void(mbed::QUECTEL_BC95_CellularStack::*)(), (int)0>(T1, T2)::[lambda() (instance 1)]::operator ()() const
              reference :  operator delete (void*)
              reference :  equeue_alloc
              reference :  equeue_event_delay
              reference :  equeue_event_dtor
              reference :  equeue_post
              reference :  mbed_assert_internal
              reference :  mbed_error
              reference :  mbed::Callback<void()>::Callback__sub_object(std::nullptr_t)
              reference :  SocketAddress::get_port() const
              reference :  SocketAddress::get_ip_version() const
              reference :  _ZNSt3__18literals15chrono_literalsli2msEy
              reference :  _ZNSt3__18literals15chrono_literalsli1sEy
              reference :  int events::EventQueue::call_in<mbed::Callback<void()>>(std::__1::chrono::duration<int, std::__1::ratio<(long long)1, (long long)1000>>, T1)
              reference :  SocketAddress::set_port(unsigned short)
              reference :  NetworkStack::onboardNetworkStack()
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/drivers/cellular/QUECTEL/BG96/QUECTEL_BG96.o.
              weak defn :  mbed::DigitalOut::is_connected()
              definition:  mbed::QUECTEL_BG96::press_button(mbed::DigitalOut&, std::__1::chrono::duration<unsigned, std::__1::ratio<(long long)1, (long long)1000>>)
              definition:  mbed::QUECTEL_BG96::set_ready_cb(mbed::Callback<void()>)
              definition:  mbed::QUECTEL_BG96::urc_pdpdeact()
              definition:  mbed::QUECTEL_BG96::soft_power_on()
              definition:  mbed::QUECTEL_BG96::soft_power_off()
              definition:  mbed::QUECTEL_BG96::set_at_urcs_impl()
              definition:  mbed::QUECTEL_BG96::open_network_impl(mbed::ATHandler&)
              definition:  mbed::QUECTEL_BG96::create_context_impl(mbed::ATHandler&, const char*, bool, bool)
              definition:  mbed::QUECTEL_BG96::open_information_impl(mbed::ATHandler&)
              definition:  mbed::QUECTEL_BG96::wake_up(bool)
              definition:  mbed::QUECTEL_BG96::QUECTEL_BG96(mbed::FileHandle*, PinName, bool, PinName)
              definition:  mbed::QUECTEL_BG96::QUECTEL_BG96__sub_object(mbed::FileHandle*, PinName, bool, PinName)
              weak defn :  mbed::QUECTEL_BG96::~QUECTEL_BG96__deallocating()
              reference :  mbed::CellularDevice::get_queue()
              reference :  mbed::AT_CellularDevice::set_timeout(int)
              reference :  mbed::AT_CellularDevice::open_network()
              reference :  mbed::AT_CellularDevice::close_network()
              reference :  mbed::AT_CellularDevice::get_sim_state(mbed::CellularDevice::SimState&)
              reference :  mbed::AT_CellularDevice::hard_power_on()
              reference :  mbed::AT_CellularDevice::set_baud_rate(int)
              reference :  mbed::AT_CellularDevice::create_context(const char*, bool, bool)
              reference :  mbed::AT_CellularDevice::delete_context(mbed::CellularContext*)
              reference :  mbed::AT_CellularDevice::get_at_handler()
              reference :  mbed::AT_CellularDevice::hard_power_off()
              reference :  mbed::AT_CellularDevice::modem_debug_on(bool)
              reference :  mbed::AT_CellularDevice::open_information()
              reference :  mbed::AT_CellularDevice::cellular_callback(nsapi_event, int, mbed::CellularContext*)
              reference :  mbed::AT_CellularDevice::close_information()
              reference :  mbed::AT_CellularDevice::set_baud_rate_impl(int)
              reference :  mbed::AT_CellularDevice::set_power_save_mode(int, int)
              reference :  mbed::AT_CellularDevice::set_cellular_properties(const int*)
              reference :  mbed::AT_CellularDevice::send_disconnect_to_context(int)
              reference :  mbed::AT_CellularDevice::init()
              reference :  mbed::AT_CellularDevice::clear()
              reference :  mbed::AT_CellularDevice::set_pin(const char*)
              reference :  mbed::AT_CellularDevice::is_ready()
              reference :  mbed::AT_CellularDevice::shutdown()
              reference :  mbed::AT_CellularDevice::AT_CellularDevice__sub_object(mbed::FileHandle*)
              reference :  mbed::AT_CellularDevice::~AT_CellularDevice__sub_object()
              reference :  mbed::QUECTEL_BG96_CellularContext::QUECTEL_BG96_CellularContext(mbed::ATHandler&, mbed::CellularDevice*, const char*, bool, bool)
              reference :  mbed::QUECTEL_BG96_CellularNetwork::QUECTEL_BG96_CellularNetwork(mbed::ATHandler&, mbed::AT_CellularDevice&)
              reference :  mbed::OK
              reference :  mbed::QUECTEL_BG96_CellularInformation::QUECTEL_BG96_CellularInformation(mbed::ATHandler&, mbed::AT_CellularDevice&)
              weak defn :  T1 mbed::detail::invoke_r<void, void(mbed::QUECTEL_BG96::*const &)(), <mbed::QUECTEL_BG96*const &>, (int)0>(T2&&, T3&&...)
              weak defn :  T1 mbed::detail::invoke_r<void, mbed::Callback<void()>::Callback<mbed::QUECTEL_BG96*, void(mbed::QUECTEL_BG96::*)(), (int)0>(T1, T2)::[lambda() (instance 1)]&, <>, (int)0>(T2&&, T3&&...)
              weak defn :  void mbed::Callback<void()>::target_call<mbed::Callback<void()>::Callback<mbed::QUECTEL_BG96*, void(mbed::QUECTEL_BG96::*)(), (int)0>(T1, T2)::[lambda() (instance 1)]>(const mbed::detail::CallbackBase*)
              weak defn :  void mbed::Callback<void()>::generate<mbed::Callback<void()>::Callback<mbed::QUECTEL_BG96*, void(mbed::QUECTEL_BG96::*)(), (int)0>(T1, T2)::[lambda() (instance 1)], void>(T1&&)
              weak defn :  mbed::Callback<void()>::Callback__sub_object<mbed::QUECTEL_BG96*, void(mbed::QUECTEL_BG96::*)(), (int)0>(T1, T2)
              reference :  mbed::ATHandler::resp_start(const char*, bool)
              reference :  mbed::ATHandler::skip_param(unsigned)
              reference :  mbed::ATHandler::set_stop_tag(const char*)
              reference :  mbed::ATHandler::set_at_timeout(std::__1::chrono::duration<unsigned, std::__1::ratio<(long long)1, (long long)1000>>, bool)
              reference :  mbed::ATHandler::set_urc_handler(const char*, mbed::Callback<void()>)
              reference :  mbed::ATHandler::cmd_stop_read_resp()
              reference :  mbed::ATHandler::restore_at_timeout()
              reference :  mbed::ATHandler::consume_to_stop_tag()
              reference :  mbed::ATHandler::unlock_return_error()
              reference :  mbed::ATHandler::lock()
              reference :  mbed::ATHandler::sync(int)
              reference :  mbed::ATHandler::flush()
              reference :  mbed::ATHandler::unlock()
              reference :  mbed::ATHandler::read_int()
              reference :  mbed::ATHandler::cmd_start(const char*)
              weak defn :  std::__1::enable_if<((std::is_function<T2>::value&&(!std::is_base_of<T1, std::__1::decay<T3>::type>::value))&&(!is_reference_wrapper<std::__1::decay<T3>::type>::value)), decltype((((*std::forward<T3>(param#2)).*param#1)(std::forward<T4>(param#3)...)))>::type mstd::impl::INVOKE<mbed::QUECTEL_BG96, void(), mbed::QUECTEL_BG96*const &, <>>(T2T1::*, T3&&, T4&&...)
              weak defn :  std::__1::enable_if<((!std::is_member_pointer<std::__1::decay<T1>::type>::value)||(std::is_member_object_pointer<std::__1::decay<T1>::type>::value&&(sizeof...(param#2)!=(int)1))), decltype((std::forward<T1>(param#1)(std::forward<T2>(param#2)...)))>::type mstd::impl::INVOKE<mbed::Callback<void()>::Callback<mbed::QUECTEL_BG96*, void(mbed::QUECTEL_BG96::*)(), (int)0>(T1, T2)::[lambda() (instance 1)]&, <>>(T1&&, T2&&...)
              weak defn :  mstd::invoke_result<T1, <T2...>>::type mstd::invoke<void(mbed::QUECTEL_BG96::*const &)(), <mbed::QUECTEL_BG96*const &>>(T1&&, T2&&...)
              weak defn :  mstd::invoke_result<T1, <T2...>>::type mstd::invoke<mbed::Callback<void()>::Callback<mbed::QUECTEL_BG96*, void(mbed::QUECTEL_BG96::*)(), (int)0>(T1, T2)::[lambda() (instance 1)]&, <>>(T1&&, T2&&...)
              reference :  rtos::ThisThread::sleep_for(std::__1::chrono::duration<unsigned, std::__1::ratio<(long long)1, (long long)1000>>)
              reference :  mbed::AT_CellularDevice::get_context_list() const
              reference :  mbed::ATHandler::get_last_error() const
              definition:  vtable for mbed::QUECTEL_BG96
              weak defn :  mbed::Callback<void()>::Callback<mbed::QUECTEL_BG96*, void(mbed::QUECTEL_BG96::*)(), (int)0>(T1, T2)::[lambda() (instance 1)]::operator ()() const
              reference :  operator delete (void*)
              reference :  operator new(unsigned)
              reference :  gpio_init_out_ex
              reference :  mbed::DigitalOut::DigitalOut__sub_object(PinName, int)
              reference :  _ZNSt3__18literals15chrono_literalsli2msEy
              reference :  _ZNSt3__18literals15chrono_literalsli1sEy
              reference :  mbed::DigitalOut::operator =(int)
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/drivers/cellular/QUECTEL/BG96/QUECTEL_BG96_CellularContext.o.
              reference :  NetworkInterface::get_gateway(SocketAddress*)
              reference :  NetworkInterface::get_netmask(SocketAddress*)
              reference :  NetworkInterface::getaddrinfo(const char*, SocketAddress*, SocketAddress**, const char*)
              reference :  NetworkInterface::set_network(const SocketAddress&, const SocketAddress&, const SocketAddress&)
              reference :  NetworkInterface::gethostbyname(const char*, SocketAddress*, nsapi_version, const char*)
              reference :  NetworkInterface::add_dns_server(const SocketAddress&, const char*)
              reference :  NetworkInterface::get_dns_server(int, SocketAddress*, const char*)
              reference :  NetworkInterface::set_as_default()
              reference :  NetworkInterface::get_mac_address()
              reference :  NetworkInterface::getaddrinfo_async(const char*, SocketAddress*, mbed::Callback<void(int, SocketAddress*)>, const char*)
              reference :  NetworkInterface::gethostbyname_async(const char*, mbed::Callback<void(int, SocketAddress*)>, nsapi_version, const char*)
              reference :  NetworkInterface::gethostbyname_async_cancel(int)
              reference :  NetworkInterface::get_ipv6_link_local_address(SocketAddress*)
              reference :  NetworkInterface::set_dhcp(bool)
              reference :  CellularInterface::set_default_parameters()
              reference :  mbed::CellularContext::cp_data_received()
              reference :  mbed::AT_CellularContext::disconnect()
              reference :  mbed::AT_CellularContext::do_connect()
              reference :  mbed::AT_CellularContext::enable_hup(bool)
              reference :  mbed::AT_CellularContext::get_context()
              reference :  mbed::AT_CellularContext::set_sim_pin(const char*)
              reference :  mbed::AT_CellularContext::is_connected()
              reference :  mbed::AT_CellularContext::set_blocking(bool)
              reference :  mbed::AT_CellularContext::configure_hup(PinName, bool)
              reference :  mbed::AT_CellularContext::do_disconnect()
              reference :  mbed::AT_CellularContext::set_sim_ready()
              reference :  mbed::AT_CellularContext::get_ip_address(SocketAddress*)
              reference :  mbed::AT_CellularContext::set_disconnect()
              reference :  mbed::AT_CellularContext::set_credentials(const char*, const char*, const char*)
              reference :  mbed::AT_CellularContext::get_rate_control(mbed::CellularContext::RateControlExceptionReports&, mbed::CellularContext::RateControlUplinkTimeUnit&, int&)
              reference :  mbed::AT_CellularContext::set_device_ready()
              reference :  mbed::AT_CellularContext::attach_to_network()
              reference :  mbed::AT_CellularContext::cellular_callback(nsapi_event, int)
              reference :  mbed::AT_CellularContext::get_interface_name(char*)
              reference :  mbed::AT_CellularContext::register_to_network()
              reference :  mbed::AT_CellularContext::deactivate_ip_context()
              reference :  mbed::AT_CellularContext::do_connect_with_retry()
              reference :  mbed::AT_CellularContext::get_apn_backoff_timer(int&)
              reference :  mbed::AT_CellularContext::get_pdpcontext_params(mbed::CellularList<mbed::CellularContext::pdpcontext_params_t>&)
              reference :  mbed::AT_CellularContext::get_nonip_context_type_str()
              reference :  mbed::AT_CellularContext::attach(mbed::Callback<void(nsapi_event, int)>)
              reference :  mbed::AT_CellularContext::connect(const char*, const char*, const char*, const char*)
              reference :  mbed::AT_CellularContext::connect()
              reference :  mbed::AT_CellularContext::set_plmn(const char*)
              reference :  mbed::AT_CellularContext::AT_CellularContext__sub_object(mbed::ATHandler&, mbed::CellularDevice*, const char*, bool, bool)
              reference :  mbed::AT_CellularContext::~AT_CellularContext__sub_object()
              reference :  mbed::QUECTEL_BG96_CellularStack::QUECTEL_BG96_CellularStack(mbed::ATHandler&, int, nsapi_ip_stack, mbed::AT_CellularDevice&)
              definition:  mbed::QUECTEL_BG96_CellularContext::get_cp_netif()
              definition:  mbed::QUECTEL_BG96_CellularContext::urc_nidd_open()
              definition:  mbed::QUECTEL_BG96_CellularContext::urc_nidd_close()
              definition:  mbed::QUECTEL_BG96_CellularContext::activate_context()
              definition:  mbed::QUECTEL_BG96_CellularContext::deactivate_context()
              definition:  mbed::QUECTEL_BG96_CellularContext::do_user_authentication()
              definition:  mbed::QUECTEL_BG96_CellularContext::activate_non_ip_context()
              definition:  mbed::QUECTEL_BG96_CellularContext::setup_control_plane_opt()
              definition:  mbed::QUECTEL_BG96_CellularContext::deactivate_non_ip_context()
              definition:  mbed::QUECTEL_BG96_CellularContext::urc_nidd()
              definition:  mbed::QUECTEL_BG96_CellularContext::get_stack()
              definition:  mbed::QUECTEL_BG96_CellularContext::QUECTEL_BG96_CellularContext(mbed::ATHandler&, mbed::CellularDevice*, const char*, bool, bool)
              definition:  mbed::QUECTEL_BG96_CellularContext::QUECTEL_BG96_CellularContext__sub_object(mbed::ATHandler&, mbed::CellularDevice*, const char*, bool, bool)
              definition:  mbed::QUECTEL_BG96_CellularContext::~QUECTEL_BG96_CellularContext__deallocating()
              definition:  mbed::QUECTEL_BG96_CellularContext::~QUECTEL_BG96_CellularContext()
              definition:  mbed::QUECTEL_BG96_CellularContext::~QUECTEL_BG96_CellularContext__sub_object()
              reference :  mbed::QUECTEL_BG96_ControlPlane_netif::QUECTEL_BG96_ControlPlane_netif(mbed::ATHandler&, int, mbed::AT_CellularDevice&)
              weak defn :  T1 mbed::detail::invoke_r<void, void(mbed::QUECTEL_BG96_CellularContext::*const &)(), <mbed::QUECTEL_BG96_CellularContext*const &>, (int)0>(T2&&, T3&&...)
              weak defn :  T1 mbed::detail::invoke_r<void, mbed::Callback<void()>::Callback<mbed::QUECTEL_BG96_CellularContext*, void(mbed::QUECTEL_BG96_CellularContext::*)(), (int)0>(T1, T2)::[lambda() (instance 1)]&, <>, (int)0>(T2&&, T3&&...)
              weak defn :  void mbed::Callback<void()>::target_call<mbed::Callback<void()>::Callback<mbed::QUECTEL_BG96_CellularContext*, void(mbed::QUECTEL_BG96_CellularContext::*)(), (int)0>(T1, T2)::[lambda() (instance 1)]>(const mbed::detail::CallbackBase*)
              weak defn :  void mbed::Callback<void()>::generate<mbed::Callback<void()>::Callback<mbed::QUECTEL_BG96_CellularContext*, void(mbed::QUECTEL_BG96_CellularContext::*)(), (int)0>(T1, T2)::[lambda() (instance 1)], void>(T1&&)
              weak defn :  mbed::Callback<void()>::Callback__sub_object<mbed::QUECTEL_BG96_CellularContext*, void(mbed::QUECTEL_BG96_CellularContext::*)(), (int)0>(T1, T2)
              reference :  mbed::ATHandler::resp_start(const char*, bool)
              reference :  mbed::ATHandler::skip_param(unsigned)
              reference :  mbed::ATHandler::read_string(char*, unsigned, bool)
              reference :  mbed::ATHandler::at_cmd_discard(const char*, const char*, const char*, ...)
              reference :  mbed::ATHandler::set_at_timeout(unsigned, bool)
              reference :  mbed::ATHandler::set_urc_handler(const char*, mbed::Callback<void()>)
              reference :  mbed::ATHandler::restore_at_timeout()
              reference :  mbed::ATHandler::unlock_return_error()
              reference :  mbed::ATHandler::lock()
              reference :  mbed::ATHandler::unlock()
              reference :  mbed::ATHandler::read_int()
              weak defn :  std::__1::enable_if<((std::is_function<T2>::value&&(!std::is_base_of<T1, std::__1::decay<T3>::type>::value))&&(!is_reference_wrapper<std::__1::decay<T3>::type>::value)), decltype((((*std::forward<T3>(param#2)).*param#1)(std::forward<T4>(param#3)...)))>::type mstd::impl::INVOKE<mbed::QUECTEL_BG96_CellularContext, void(), mbed::QUECTEL_BG96_CellularContext*const &, <>>(T2T1::*, T3&&, T4&&...)
              weak defn :  std::__1::enable_if<((!std::is_member_pointer<std::__1::decay<T1>::type>::value)||(std::is_member_object_pointer<std::__1::decay<T1>::type>::value&&(sizeof...(param#2)!=(int)1))), decltype((std::forward<T1>(param#1)(std::forward<T2>(param#2)...)))>::type mstd::impl::INVOKE<mbed::Callback<void()>::Callback<mbed::QUECTEL_BG96_CellularContext*, void(mbed::QUECTEL_BG96_CellularContext::*)(), (int)0>(T1, T2)::[lambda() (instance 1)]&, <>>(T1&&, T2&&...)
              weak defn :  mstd::invoke_result<T1, <T2...>>::type mstd::invoke<void(mbed::QUECTEL_BG96_CellularContext::*const &)(), <mbed::QUECTEL_BG96_CellularContext*const &>>(T1&&, T2&&...)
              weak defn :  mstd::invoke_result<T1, <T2...>>::type mstd::invoke<mbed::Callback<void()>::Callback<mbed::QUECTEL_BG96_CellularContext*, void(mbed::QUECTEL_BG96_CellularContext::*)(), (int)0>(T1, T2)::[lambda() (instance 1)]&, <>>(T1&&, T2&&...)
              reference :  mbed::AT_CellularContext::get_device() const
              reference :  mbed::AT_CellularContext::get_connection_status() const
              reference :  mbed::AT_CellularContext::get_timeout_for_operation(mbed::CellularContext::ContextOperation) const
              definition:  vtable for mbed::QUECTEL_BG96_CellularContext
              weak defn :  mbed::Callback<void()>::Callback<mbed::QUECTEL_BG96_CellularContext*, void(mbed::QUECTEL_BG96_CellularContext::*)(), (int)0>(T1, T2)::[lambda() (instance 1)]::operator ()() const
              reference :  operator delete (void*)
              reference :  operator new(unsigned)
              reference :  memcmp
              reference :  mbed::Callback<void()>::Callback__sub_object(std::nullptr_t)
              reference :  NetworkInterface::ethInterface()
              reference :  NetworkInterface::wifiInterface()
              reference :  NetworkInterface::meshInterface()
              reference :  NetworkInterface::emacInterface()
              reference :  CellularInterface::cellularInterface()
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/drivers/cellular/QUECTEL/BG96/QUECTEL_BG96_CellularInformation.o.
              reference :  mbed::AT_CellularInformation::get_manufacturer(char*, unsigned)
              reference :  mbed::AT_CellularInformation::get_serial_number(char*, unsigned, mbed::CellularInformation::SerialNumberType)
              reference :  mbed::AT_CellularInformation::get_imsi(char*, unsigned)
              reference :  mbed::AT_CellularInformation::get_info(const char*, char*, unsigned)
              reference :  mbed::AT_CellularInformation::get_model(char*, unsigned)
              reference :  mbed::AT_CellularInformation::AT_CellularInformation__sub_object(mbed::ATHandler&, mbed::AT_CellularDevice&)
              reference :  mbed::AT_CellularInformation::~AT_CellularInformation__sub_object()
              definition:  mbed::QUECTEL_BG96_CellularInformation::get_revision(char*, unsigned)
              definition:  mbed::QUECTEL_BG96_CellularInformation::get_iccid(char*, unsigned)
              definition:  mbed::QUECTEL_BG96_CellularInformation::QUECTEL_BG96_CellularInformation(mbed::ATHandler&, mbed::AT_CellularDevice&)
              definition:  mbed::QUECTEL_BG96_CellularInformation::QUECTEL_BG96_CellularInformation__sub_object(mbed::ATHandler&, mbed::AT_CellularDevice&)
              definition:  mbed::QUECTEL_BG96_CellularInformation::~QUECTEL_BG96_CellularInformation__deallocating()
              definition:  mbed::QUECTEL_BG96_CellularInformation::~QUECTEL_BG96_CellularInformation()
              definition:  mbed::QUECTEL_BG96_CellularInformation::~QUECTEL_BG96_CellularInformation__sub_object()
              reference :  mbed::ATHandler::at_cmd_str(const char*, const char*, char*, unsigned, const char*, ...)
              definition:  vtable for mbed::QUECTEL_BG96_CellularInformation
              reference :  operator delete (void*)
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/drivers/cellular/QUECTEL/BG96/QUECTEL_BG96_CellularNetwork.o.
              reference :  mbed::AT_CellularNetwork::get_attach(mbed::CellularNetwork::AttachStatus&)
              reference :  mbed::AT_CellularNetwork::set_attach()
              reference :  mbed::AT_CellularNetwork::get_3gpp_error()
              reference :  mbed::AT_CellularNetwork::set_registration(const char*)
              reference :  mbed::AT_CellularNetwork::is_active_context(int*, int)
              reference :  mbed::AT_CellularNetwork::get_operator_names(mbed::CellularList<mbed::CellularNetwork::operator_names_t>&)
              reference :  mbed::AT_CellularNetwork::get_signal_quality(int&, int*)
              reference :  mbed::AT_CellularNetwork::set_receive_period(int, mbed::CellularNetwork::EDRXAccessTechnology, unsigned char)
              reference :  mbed::AT_CellularNetwork::get_operator_params(int&, mbed::CellularNetwork::operator_t&)
              reference :  mbed::AT_CellularNetwork::set_registration_urc(mbed::CellularNetwork::RegistrationType, bool)
              reference :  mbed::AT_CellularNetwork::set_access_technology(mbed::CellularNetwork::RadioAccessTechnology)
              reference :  mbed::AT_CellularNetwork::get_registration_params(mbed::CellularNetwork::RegistrationType, mbed::CellularNetwork::registration_params_t&)
              reference :  mbed::AT_CellularNetwork::get_registration_params(mbed::CellularNetwork::registration_params_t&)
              reference :  mbed::AT_CellularNetwork::get_network_registering_mode(mbed::CellularNetwork::NWRegisteringMode&)
              reference :  mbed::AT_CellularNetwork::set_ciot_optimization_config(mbed::CellularNetwork::CIoT_Supported_Opt, mbed::CellularNetwork::CIoT_Preferred_UE_Opt, mbed::Callback<void(mbed::CellularNetwork::CIoT_Supported_Opt)>)
              reference :  mbed::AT_CellularNetwork::get_ciot_ue_optimization_config(mbed::CellularNetwork::CIoT_Supported_Opt&, mbed::CellularNetwork::CIoT_Preferred_UE_Opt&)
              reference :  mbed::AT_CellularNetwork::set_packet_domain_event_reporting(bool)
              reference :  mbed::AT_CellularNetwork::get_ciot_network_optimization_config(mbed::CellularNetwork::CIoT_Supported_Opt&)
              reference :  mbed::AT_CellularNetwork::clear()
              reference :  mbed::AT_CellularNetwork::attach(mbed::Callback<void(nsapi_event, int)>)
              reference :  mbed::AT_CellularNetwork::detach()
              reference :  mbed::AT_CellularNetwork::scan_plmn(mbed::CellularList<mbed::CellularNetwork::operator_t>&, int&)
              reference :  mbed::AT_CellularNetwork::AT_CellularNetwork__sub_object(mbed::ATHandler&, mbed::AT_CellularDevice&)
              reference :  mbed::AT_CellularNetwork::~AT_CellularNetwork__sub_object()
              definition:  mbed::QUECTEL_BG96_CellularNetwork::get_context_state_command()
              definition:  mbed::QUECTEL_BG96_CellularNetwork::set_access_technology_impl(mbed::CellularNetwork::RadioAccessTechnology)
              definition:  mbed::QUECTEL_BG96_CellularNetwork::QUECTEL_BG96_CellularNetwork(mbed::ATHandler&, mbed::AT_CellularDevice&)
              definition:  mbed::QUECTEL_BG96_CellularNetwork::QUECTEL_BG96_CellularNetwork__sub_object(mbed::ATHandler&, mbed::AT_CellularDevice&)
              definition:  mbed::QUECTEL_BG96_CellularNetwork::~QUECTEL_BG96_CellularNetwork__deallocating()
              definition:  mbed::QUECTEL_BG96_CellularNetwork::~QUECTEL_BG96_CellularNetwork()
              definition:  mbed::QUECTEL_BG96_CellularNetwork::~QUECTEL_BG96_CellularNetwork__sub_object()
              reference :  mbed::ATHandler::resp_start(const char*, bool)
              reference :  mbed::ATHandler::at_cmd_discard(const char*, const char*, const char*, ...)
              reference :  mbed::ATHandler::cmd_start_stop(const char*, const char*, const char*, ...)
              reference :  mbed::ATHandler::unlock_return_error()
              reference :  mbed::ATHandler::lock()
              reference :  mbed::ATHandler::unlock()
              definition:  vtable for mbed::QUECTEL_BG96_CellularNetwork
              reference :  operator delete (void*)
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/drivers/cellular/QUECTEL/BG96/QUECTEL_BG96_CellularStack.o.
              reference :  NetworkStack::getsockopt(void*, int, int, void*, unsigned*)
              reference :  NetworkStack::setsockopt(void*, int, int, const void*, unsigned)
              reference :  NetworkStack::getaddrinfo(const char*, SocketAddress*, SocketAddress**, const char*)
              reference :  NetworkStack::getstackopt(int, int, void*, unsigned*)
              reference :  NetworkStack::setstackopt(int, int, const void*, unsigned)
              reference :  NetworkStack::gethostbyname(const char*, SocketAddress*, nsapi_version, const char*)
              reference :  NetworkStack::add_dns_server(const SocketAddress&, const char*)
              reference :  NetworkStack::get_dns_server(int, SocketAddress*, const char*)
              reference :  NetworkStack::get_ip_address_if(SocketAddress*, const char*)
              reference :  NetworkStack::getaddrinfo_async(const char*, SocketAddress*, mbed::Callback<void(int, SocketAddress*)>, const char*)
              reference :  NetworkStack::gethostbyname_async(const char*, mbed::Callback<void(int, SocketAddress*)>, nsapi_version, const char*)
              reference :  NetworkStack::get_call_in_callback()
              reference :  NetworkStack::gethostbyname_async_cancel(int)
              reference :  NetworkStack::get_ipv6_link_local_address(SocketAddress*)
              reference :  NetworkStack::call_in(int, mbed::Callback<void()>)
              reference :  SocketAddress::set_ip_address(const char*)
              reference :  SocketAddress::operator =(const SocketAddress&)
              reference :  mbed::AT_CellularStack::find_socket(int)
              reference :  mbed::AT_CellularStack::socket_bind(void*, const SocketAddress&)
              reference :  mbed::AT_CellularStack::socket_open(void**, nsapi_protocol)
              reference :  mbed::AT_CellularStack::socket_recv(void*, void*, unsigned)
              reference :  mbed::AT_CellularStack::socket_send(void*, const void*, unsigned)
              reference :  mbed::AT_CellularStack::socket_close(void*)
              reference :  mbed::AT_CellularStack::socket_attach(void*, void(*)(void*), void*)
              reference :  mbed::AT_CellularStack::socket_sendto(void*, const SocketAddress&, const void*, unsigned)
              reference :  mbed::AT_CellularStack::get_ip_address(SocketAddress*)
              reference :  mbed::AT_CellularStack::socket_recvfrom(void*, SocketAddress*, void*, unsigned)
              reference :  mbed::AT_CellularStack::find_socket_index(void*)
              reference :  mbed::AT_CellularStack::AT_CellularStack__sub_object(mbed::ATHandler&, int, nsapi_ip_stack, mbed::AT_CellularDevice&)
              reference :  mbed::AT_CellularStack::~AT_CellularStack__sub_object()
              definition:  mbed::QUECTEL_BG96_CellularStack::socket_accept(void*, void**, SocketAddress*)
              definition:  mbed::QUECTEL_BG96_CellularStack::socket_listen(void*, int)
              definition:  mbed::QUECTEL_BG96_CellularStack::socket_connect(void*, const SocketAddress&)
              definition:  mbed::QUECTEL_BG96_CellularStack::urc_qiurc_recv()
              definition:  mbed::QUECTEL_BG96_CellularStack::urc_qiurc_closed()
              definition:  mbed::QUECTEL_BG96_CellularStack::socket_close_impl(int)
              definition:  mbed::QUECTEL_BG96_CellularStack::create_socket_impl(mbed::AT_CellularStack::CellularSocket*)
              definition:  mbed::QUECTEL_BG96_CellularStack::socket_sendto_impl(mbed::AT_CellularStack::CellularSocket*, const SocketAddress&, const void*, unsigned)
              definition:  mbed::QUECTEL_BG96_CellularStack::socket_recvfrom_impl(mbed::AT_CellularStack::CellularSocket*, SocketAddress*, void*, unsigned)
              definition:  mbed::QUECTEL_BG96_CellularStack::handle_open_socket_response(int&, int&, bool)
              definition:  mbed::QUECTEL_BG96_CellularStack::ip2dot(const SocketAddress&, char*)
              definition:  mbed::QUECTEL_BG96_CellularStack::urc_qiurc(mbed::urc_type_t)
              definition:  mbed::QUECTEL_BG96_CellularStack::QUECTEL_BG96_CellularStack(mbed::ATHandler&, int, nsapi_ip_stack, mbed::AT_CellularDevice&)
              definition:  mbed::QUECTEL_BG96_CellularStack::QUECTEL_BG96_CellularStack__sub_object(mbed::ATHandler&, int, nsapi_ip_stack, mbed::AT_CellularDevice&)
              definition:  mbed::QUECTEL_BG96_CellularStack::~QUECTEL_BG96_CellularStack__deallocating()
              definition:  mbed::QUECTEL_BG96_CellularStack::~QUECTEL_BG96_CellularStack()
              definition:  mbed::QUECTEL_BG96_CellularStack::~QUECTEL_BG96_CellularStack__sub_object()
              weak defn :  T1 mbed::detail::invoke_r<void, void(mbed::QUECTEL_BG96_CellularStack::*const &)(), <mbed::QUECTEL_BG96_CellularStack*const &>, (int)0>(T2&&, T3&&...)
              weak defn :  T1 mbed::detail::invoke_r<void, mbed::Callback<void()>::Callback<mbed::QUECTEL_BG96_CellularStack*, void(mbed::QUECTEL_BG96_CellularStack::*)(), (int)0>(T1, T2)::[lambda() (instance 1)]&, <>, (int)0>(T2&&, T3&&...)
              weak defn :  void mbed::Callback<void()>::target_call<mbed::Callback<void()>::Callback<mbed::QUECTEL_BG96_CellularStack*, void(mbed::QUECTEL_BG96_CellularStack::*)(), (int)0>(T1, T2)::[lambda() (instance 1)]>(const mbed::detail::CallbackBase*)
              weak defn :  void mbed::Callback<void()>::generate<mbed::Callback<void()>::Callback<mbed::QUECTEL_BG96_CellularStack*, void(mbed::QUECTEL_BG96_CellularStack::*)(), (int)0>(T1, T2)::[lambda() (instance 1)], void>(T1&&)
              weak defn :  mbed::Callback<void()>::Callback__sub_object<mbed::QUECTEL_BG96_CellularStack*, void(mbed::QUECTEL_BG96_CellularStack::*)(), (int)0>(T1, T2)
              reference :  mbed::ATHandler::at_cmd_int(const char*, const char*, int&, const char*, ...)
              reference :  mbed::ATHandler::read_bytes(unsigned char*, unsigned)
              reference :  mbed::ATHandler::resp_start(const char*, bool)
              reference :  mbed::ATHandler::skip_param(unsigned)
              reference :  mbed::ATHandler::clear_error()
              reference :  mbed::ATHandler::read_string(char*, unsigned, bool)
              reference :  mbed::ATHandler::write_bytes(const unsigned char*, unsigned)
              reference :  mbed::ATHandler::set_stop_tag(const char*)
              reference :  mbed::ATHandler::at_cmd_discard(const char*, const char*, const char*, ...)
              reference :  mbed::ATHandler::cmd_start_stop(const char*, const char*, const char*, ...)
              reference :  mbed::ATHandler::set_at_timeout(std::__1::chrono::duration<unsigned, std::__1::ratio<(long long)1, (long long)1000>>, bool)
              reference :  mbed::ATHandler::set_urc_handler(const char*, mbed::Callback<void()>)
              reference :  mbed::ATHandler::restore_at_timeout()
              reference :  mbed::ATHandler::unlock_return_error()
              reference :  mbed::ATHandler::lock()
              reference :  mbed::ATHandler::unlock()
              reference :  mbed::ATHandler::read_int()
              reference :  mbed::ATHandler::resp_stop()
              weak defn :  std::__1::enable_if<((std::is_function<T2>::value&&(!std::is_base_of<T1, std::__1::decay<T3>::type>::value))&&(!is_reference_wrapper<std::__1::decay<T3>::type>::value)), decltype((((*std::forward<T3>(param#2)).*param#1)(std::forward<T4>(param#3)...)))>::type mstd::impl::INVOKE<mbed::QUECTEL_BG96_CellularStack, void(), mbed::QUECTEL_BG96_CellularStack*const &, <>>(T2T1::*, T3&&, T4&&...)
              weak defn :  std::__1::enable_if<((!std::is_member_pointer<std::__1::decay<T1>::type>::value)||(std::is_member_object_pointer<std::__1::decay<T1>::type>::value&&(sizeof...(param#2)!=(int)1))), decltype((std::forward<T1>(param#1)(std::forward<T2>(param#2)...)))>::type mstd::impl::INVOKE<mbed::Callback<void()>::Callback<mbed::QUECTEL_BG96_CellularStack*, void(mbed::QUECTEL_BG96_CellularStack::*)(), (int)0>(T1, T2)::[lambda() (instance 1)]&, <>>(T1&&, T2&&...)
              weak defn :  mstd::invoke_result<T1, <T2...>>::type mstd::invoke<void(mbed::QUECTEL_BG96_CellularStack::*const &)(), <mbed::QUECTEL_BG96_CellularStack*const &>>(T1&&, T2&&...)
              weak defn :  mstd::invoke_result<T1, <T2...>>::type mstd::invoke<mbed::Callback<void()>::Callback<mbed::QUECTEL_BG96_CellularStack*, void(mbed::QUECTEL_BG96_CellularStack::*)(), (int)0>(T1, T2)::[lambda() (instance 1)]&, <>>(T1&&, T2&&...)
              weak defn :  SocketAddress::get_ip_bytes() const
              reference :  SocketAddress::get_ip_address() const
              reference :  mbed::ATHandler::get_last_error() const
              definition:  vtable for mbed::QUECTEL_BG96_CellularStack
              weak defn :  mbed::Callback<void()>::Callback<mbed::QUECTEL_BG96_CellularStack*, void(mbed::QUECTEL_BG96_CellularStack::*)(), (int)0>(T1, T2)::[lambda() (instance 1)]::operator ()() const
              reference :  operator delete (void*)
              reference :  __2sprintf
              reference :  _printf_longlong_hex
              reference :  _printf_percent
              reference :  _printf_return_value
              reference :  _printf_x
              reference :  mbed_assert_internal
              reference :  memcmp
              reference :  strcpy
              reference :  SocketAddress::get_port() const
              reference :  _ZNSt3__18literals15chrono_literalsli1sEy
              reference :  SocketAddress::get_ip_version() const
              reference :  SocketAddress::set_port(unsigned short)
              reference :  NetworkStack::onboardNetworkStack()
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/drivers/cellular/QUECTEL/BG96/QUECTEL_BG96_ControlPlane_netif.o.
              reference :  mbed::AT_ControlPlane_netif::data_received()
              reference :  mbed::AT_ControlPlane_netif::attach(void(*)(void*), void*)
              reference :  mbed::AT_ControlPlane_netif::AT_ControlPlane_netif__sub_object(mbed::ATHandler&, int, mbed::AT_CellularDevice&)
              reference :  mbed::AT_ControlPlane_netif::~AT_ControlPlane_netif__sub_object()
              definition:  mbed::QUECTEL_BG96_ControlPlane_netif::recv(void*, unsigned)
              definition:  mbed::QUECTEL_BG96_ControlPlane_netif::send(const void*, unsigned)
              definition:  mbed::QUECTEL_BG96_ControlPlane_netif::QUECTEL_BG96_ControlPlane_netif(mbed::ATHandler&, int, mbed::AT_CellularDevice&)
              definition:  mbed::QUECTEL_BG96_ControlPlane_netif::QUECTEL_BG96_ControlPlane_netif__sub_object(mbed::ATHandler&, int, mbed::AT_CellularDevice&)
              weak defn :  mbed::QUECTEL_BG96_ControlPlane_netif::~QUECTEL_BG96_ControlPlane_netif__deallocating()
              reference :  mbed::ATHandler::resp_start(const char*, bool)
              reference :  mbed::ATHandler::skip_param(unsigned)
              reference :  mbed::ATHandler::cmd_start_stop(const char*, const char*, const char*, ...)
              reference :  mbed::ATHandler::read_hex_string(char*, unsigned)
              reference :  mbed::ATHandler::write_hex_string(const char*, unsigned)
              reference :  mbed::ATHandler::cmd_stop_read_resp()
              reference :  mbed::ATHandler::unlock_return_error()
              reference :  mbed::ATHandler::lock()
              reference :  mbed::ATHandler::unlock()
              reference :  mbed::ATHandler::read_int()
              reference :  mbed::ATHandler::cmd_start(const char*)
              reference :  mbed::ATHandler::resp_stop()
              reference :  mbed::ATHandler::write_int(int)
              definition:  vtable for mbed::QUECTEL_BG96_ControlPlane_netif
              reference :  operator delete (void*)
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/drivers/cellular/QUECTEL/EC2X/QUECTEL_EC2X.o.
              definition:  mbed::QUECTEL_EC2X::hard_power_on()
              definition:  mbed::QUECTEL_EC2X::soft_power_on()
              definition:  mbed::QUECTEL_EC2X::hard_power_off()
              definition:  mbed::QUECTEL_EC2X::soft_power_off()
              definition:  mbed::QUECTEL_EC2X::press_power_button(std::__1::chrono::duration<unsigned, std::__1::ratio<(long long)1, (long long)1000>>)
              definition:  mbed::QUECTEL_EC2X::QUECTEL_EC2X(mbed::FileHandle*, PinName, bool, PinName)
              definition:  mbed::QUECTEL_EC2X::QUECTEL_EC2X__sub_object(mbed::FileHandle*, PinName, bool, PinName)
              weak defn :  mbed::QUECTEL_EC2X::~QUECTEL_EC2X__deallocating()
              reference :  mbed::CellularDevice::get_queue()
              reference :  mbed::AT_CellularDevice::set_timeout(int)
              reference :  mbed::AT_CellularDevice::open_network()
              reference :  mbed::AT_CellularDevice::set_ready_cb(mbed::Callback<void()>)
              reference :  mbed::AT_CellularDevice::close_network()
              reference :  mbed::AT_CellularDevice::get_sim_state(mbed::CellularDevice::SimState&)
              reference :  mbed::AT_CellularDevice::set_baud_rate(int)
              reference :  mbed::AT_CellularDevice::create_context(const char*, bool, bool)
              reference :  mbed::AT_CellularDevice::delete_context(mbed::CellularContext*)
              reference :  mbed::AT_CellularDevice::get_at_handler()
              reference :  mbed::AT_CellularDevice::modem_debug_on(bool)
              reference :  mbed::AT_CellularDevice::open_information()
              reference :  mbed::AT_CellularDevice::set_at_urcs_impl()
              reference :  mbed::AT_CellularDevice::cellular_callback(nsapi_event, int, mbed::CellularContext*)
              reference :  mbed::AT_CellularDevice::close_information()
              reference :  mbed::AT_CellularDevice::open_network_impl(mbed::ATHandler&)
              reference :  mbed::AT_CellularDevice::set_baud_rate_impl(int)
              reference :  mbed::AT_CellularDevice::create_context_impl(mbed::ATHandler&, const char*, bool, bool)
              reference :  mbed::AT_CellularDevice::set_power_save_mode(int, int)
              reference :  mbed::AT_CellularDevice::open_information_impl(mbed::ATHandler&)
              reference :  mbed::AT_CellularDevice::set_cellular_properties(const int*)
              reference :  mbed::AT_CellularDevice::init()
              reference :  mbed::AT_CellularDevice::clear()
              reference :  mbed::AT_CellularDevice::set_pin(const char*)
              reference :  mbed::AT_CellularDevice::is_ready()
              reference :  mbed::AT_CellularDevice::shutdown()
              reference :  mbed::AT_CellularDevice::AT_CellularDevice__sub_object(mbed::FileHandle*)
              reference :  mbed::AT_CellularDevice::~AT_CellularDevice__sub_object()
              reference :  mbed::OK
              reference :  mbed::ATHandler::resp_start(const char*, bool)
              reference :  mbed::ATHandler::set_stop_tag(const char*)
              reference :  mbed::ATHandler::set_at_timeout(std::__1::chrono::duration<unsigned, std::__1::ratio<(long long)1, (long long)1000>>, bool)
              reference :  mbed::ATHandler::consume_to_stop_tag()
              reference :  mbed::ATHandler::lock()
              reference :  mbed::ATHandler::unlock()
              reference :  rtos::ThisThread::sleep_for(std::__1::chrono::duration<unsigned, std::__1::ratio<(long long)1, (long long)1000>>)
              reference :  mbed::AT_CellularDevice::get_context_list() const
              definition:  vtable for mbed::QUECTEL_EC2X
              reference :  operator delete (void*)
              reference :  gpio_init_out_ex
              reference :  mbed::DigitalOut::DigitalOut__sub_object(PinName, int)
              reference :  mbed::DigitalOut::is_connected()
              reference :  mbed::DigitalOut::operator =(int)
              reference :  _ZNSt3__18literals15chrono_literalsli2msEy
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/drivers/cellular/QUECTEL/M26/QUECTEL_M26.o.
              definition:  mbed::QUECTEL_M26::get_sim_state(mbed::CellularDevice::SimState&)
              definition:  mbed::QUECTEL_M26::create_context_impl(mbed::ATHandler&, const char*, bool, bool)
              definition:  mbed::QUECTEL_M26::shutdown()
              definition:  mbed::QUECTEL_M26::QUECTEL_M26(mbed::FileHandle*)
              definition:  mbed::QUECTEL_M26::QUECTEL_M26__sub_object(mbed::FileHandle*)
              weak defn :  mbed::QUECTEL_M26::~QUECTEL_M26__deallocating()
              reference :  mbed::CellularDevice::get_queue()
              reference :  mbed::AT_CellularDevice::set_timeout(int)
              reference :  mbed::AT_CellularDevice::open_network()
              reference :  mbed::AT_CellularDevice::set_ready_cb(mbed::Callback<void()>)
              reference :  mbed::AT_CellularDevice::close_network()
              reference :  mbed::AT_CellularDevice::hard_power_on()
              reference :  mbed::AT_CellularDevice::set_baud_rate(int)
              reference :  mbed::AT_CellularDevice::soft_power_on()
              reference :  mbed::AT_CellularDevice::create_context(const char*, bool, bool)
              reference :  mbed::AT_CellularDevice::delete_context(mbed::CellularContext*)
              reference :  mbed::AT_CellularDevice::get_at_handler()
              reference :  mbed::AT_CellularDevice::hard_power_off()
              reference :  mbed::AT_CellularDevice::modem_debug_on(bool)
              reference :  mbed::AT_CellularDevice::soft_power_off()
              reference :  mbed::AT_CellularDevice::open_information()
              reference :  mbed::AT_CellularDevice::set_at_urcs_impl()
              reference :  mbed::AT_CellularDevice::cellular_callback(nsapi_event, int, mbed::CellularContext*)
              reference :  mbed::AT_CellularDevice::close_information()
              reference :  mbed::AT_CellularDevice::open_network_impl(mbed::ATHandler&)
              reference :  mbed::AT_CellularDevice::set_baud_rate_impl(int)
              reference :  mbed::AT_CellularDevice::set_power_save_mode(int, int)
              reference :  mbed::AT_CellularDevice::open_information_impl(mbed::ATHandler&)
              reference :  mbed::AT_CellularDevice::set_cellular_properties(const int*)
              reference :  mbed::AT_CellularDevice::init()
              reference :  mbed::AT_CellularDevice::clear()
              reference :  mbed::AT_CellularDevice::set_pin(const char*)
              reference :  mbed::AT_CellularDevice::is_ready()
              reference :  mbed::AT_CellularDevice::AT_CellularDevice__sub_object(mbed::FileHandle*)
              reference :  mbed::AT_CellularDevice::~AT_CellularDevice__sub_object()
              reference :  mbed::QUECTEL_M26_CellularContext::QUECTEL_M26_CellularContext(mbed::ATHandler&, mbed::CellularDevice*, const char*, bool, bool)
              reference :  mbed::ATHandler::at_cmd_str(const char*, const char*, char*, unsigned, const char*, ...)
              reference :  mbed::ATHandler::at_cmd_discard(const char*, const char*, const char*, ...)
              reference :  mbed::ATHandler::lock()
              reference :  mbed::ATHandler::unlock()
              reference :  mbed::AT_CellularDevice::get_context_list() const
              definition:  vtable for mbed::QUECTEL_M26
              reference :  operator delete (void*)
              reference :  operator new(unsigned)
              reference :  memcmp
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/drivers/cellular/QUECTEL/M26/QUECTEL_M26_CellularContext.o.
              reference :  NetworkInterface::get_gateway(SocketAddress*)
              reference :  NetworkInterface::get_netmask(SocketAddress*)
              reference :  NetworkInterface::getaddrinfo(const char*, SocketAddress*, SocketAddress**, const char*)
              reference :  NetworkInterface::set_network(const SocketAddress&, const SocketAddress&, const SocketAddress&)
              reference :  NetworkInterface::gethostbyname(const char*, SocketAddress*, nsapi_version, const char*)
              reference :  NetworkInterface::add_dns_server(const SocketAddress&, const char*)
              reference :  NetworkInterface::get_dns_server(int, SocketAddress*, const char*)
              reference :  NetworkInterface::set_as_default()
              reference :  NetworkInterface::get_mac_address()
              reference :  NetworkInterface::getaddrinfo_async(const char*, SocketAddress*, mbed::Callback<void(int, SocketAddress*)>, const char*)
              reference :  NetworkInterface::gethostbyname_async(const char*, mbed::Callback<void(int, SocketAddress*)>, nsapi_version, const char*)
              reference :  NetworkInterface::gethostbyname_async_cancel(int)
              reference :  NetworkInterface::get_ipv6_link_local_address(SocketAddress*)
              reference :  NetworkInterface::set_dhcp(bool)
              reference :  CellularInterface::set_default_parameters()
              reference :  mbed::AT_CellularContext::disconnect()
              reference :  mbed::AT_CellularContext::do_connect()
              reference :  mbed::AT_CellularContext::enable_hup(bool)
              reference :  mbed::AT_CellularContext::get_context()
              reference :  mbed::AT_CellularContext::set_sim_pin(const char*)
              reference :  mbed::AT_CellularContext::get_cp_netif()
              reference :  mbed::AT_CellularContext::is_connected()
              reference :  mbed::AT_CellularContext::set_blocking(bool)
              reference :  mbed::AT_CellularContext::configure_hup(PinName, bool)
              reference :  mbed::AT_CellularContext::do_disconnect()
              reference :  mbed::AT_CellularContext::set_sim_ready()
              reference :  mbed::AT_CellularContext::get_ip_address(SocketAddress*)
              reference :  mbed::AT_CellularContext::set_disconnect()
              reference :  mbed::AT_CellularContext::set_credentials(const char*, const char*, const char*)
              reference :  mbed::AT_CellularContext::activate_context()
              reference :  mbed::AT_CellularContext::get_rate_control(mbed::CellularContext::RateControlExceptionReports&, mbed::CellularContext::RateControlUplinkTimeUnit&, int&)
              reference :  mbed::AT_CellularContext::set_device_ready()
              reference :  mbed::AT_CellularContext::attach_to_network()
              reference :  mbed::AT_CellularContext::cellular_callback(nsapi_event, int)
              reference :  mbed::AT_CellularContext::deactivate_context()
              reference :  mbed::AT_CellularContext::get_interface_name(char*)
              reference :  mbed::AT_CellularContext::register_to_network()
              reference :  mbed::AT_CellularContext::deactivate_ip_context()
              reference :  mbed::AT_CellularContext::do_connect_with_retry()
              reference :  mbed::AT_CellularContext::get_apn_backoff_timer(int&)
              reference :  mbed::AT_CellularContext::get_pdpcontext_params(mbed::CellularList<mbed::CellularContext::pdpcontext_params_t>&)
              reference :  mbed::AT_CellularContext::activate_non_ip_context()
              reference :  mbed::AT_CellularContext::setup_control_plane_opt()
              reference :  mbed::AT_CellularContext::deactivate_non_ip_context()
              reference :  mbed::AT_CellularContext::get_nonip_context_type_str()
              reference :  mbed::AT_CellularContext::attach(mbed::Callback<void(nsapi_event, int)>)
              reference :  mbed::AT_CellularContext::connect(const char*, const char*, const char*, const char*)
              reference :  mbed::AT_CellularContext::connect()
              reference :  mbed::AT_CellularContext::set_plmn(const char*)
              reference :  mbed::AT_CellularContext::AT_CellularContext__sub_object(mbed::ATHandler&, mbed::CellularDevice*, const char*, bool, bool)
              reference :  mbed::AT_CellularContext::~AT_CellularContext__sub_object()
              reference :  mbed::QUECTEL_M26_CellularStack::socket_stack_init()
              reference :  mbed::QUECTEL_M26_CellularStack::QUECTEL_M26_CellularStack(mbed::ATHandler&, int, nsapi_ip_stack, mbed::AT_CellularDevice&)
              definition:  mbed::QUECTEL_M26_CellularContext::do_user_authentication()
              definition:  mbed::QUECTEL_M26_CellularContext::get_stack()
              definition:  mbed::QUECTEL_M26_CellularContext::QUECTEL_M26_CellularContext(mbed::ATHandler&, mbed::CellularDevice*, const char*, bool, bool)
              definition:  mbed::QUECTEL_M26_CellularContext::QUECTEL_M26_CellularContext__sub_object(mbed::ATHandler&, mbed::CellularDevice*, const char*, bool, bool)
              weak defn :  mbed::QUECTEL_M26_CellularContext::~QUECTEL_M26_CellularContext__deallocating()
              reference :  mbed::ATHandler::at_cmd_discard(const char*, const char*, const char*, ...)
              reference :  mbed::AT_CellularContext::get_device() const
              reference :  mbed::AT_CellularContext::get_connection_status() const
              reference :  mbed::AT_CellularContext::get_timeout_for_operation(mbed::CellularContext::ContextOperation) const
              definition:  vtable for mbed::QUECTEL_M26_CellularContext
              reference :  operator delete (void*)
              reference :  operator new(unsigned)
              reference :  NetworkInterface::ethInterface()
              reference :  NetworkInterface::wifiInterface()
              reference :  NetworkInterface::meshInterface()
              reference :  NetworkInterface::emacInterface()
              reference :  CellularInterface::cellularInterface()
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/drivers/cellular/QUECTEL/M26/QUECTEL_M26_CellularInformation.o.
              reference :  mbed::AT_CellularInformation::get_revision(char*, unsigned)
              reference :  mbed::AT_CellularInformation::get_manufacturer(char*, unsigned)
              reference :  mbed::AT_CellularInformation::get_serial_number(char*, unsigned, mbed::CellularInformation::SerialNumberType)
              reference :  mbed::AT_CellularInformation::get_imsi(char*, unsigned)
              reference :  mbed::AT_CellularInformation::get_model(char*, unsigned)
              reference :  mbed::AT_CellularInformation::AT_CellularInformation__sub_object(mbed::ATHandler&, mbed::AT_CellularDevice&)
              reference :  mbed::AT_CellularInformation::~AT_CellularInformation__sub_object()
              definition:  mbed::QUECTEL_M26_CellularInformation::get_iccid(char*, unsigned)
              definition:  mbed::QUECTEL_M26_CellularInformation::QUECTEL_M26_CellularInformation(mbed::ATHandler&, mbed::AT_CellularDevice&)
              definition:  mbed::QUECTEL_M26_CellularInformation::QUECTEL_M26_CellularInformation__sub_object(mbed::ATHandler&, mbed::AT_CellularDevice&)
              weak defn :  mbed::QUECTEL_M26_CellularInformation::~QUECTEL_M26_CellularInformation__deallocating()
              reference :  mbed::ATHandler::at_cmd_str(const char*, const char*, char*, unsigned, const char*, ...)
              definition:  vtable for mbed::QUECTEL_M26_CellularInformation
              reference :  operator delete (void*)
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/drivers/cellular/QUECTEL/M26/QUECTEL_M26_CellularStack.o.
              reference :  NetworkStack::getsockopt(void*, int, int, void*, unsigned*)
              reference :  NetworkStack::setsockopt(void*, int, int, const void*, unsigned)
              reference :  NetworkStack::getaddrinfo(const char*, SocketAddress*, SocketAddress**, const char*)
              reference :  NetworkStack::getstackopt(int, int, void*, unsigned*)
              reference :  NetworkStack::setstackopt(int, int, const void*, unsigned)
              reference :  NetworkStack::gethostbyname(const char*, SocketAddress*, nsapi_version, const char*)
              reference :  NetworkStack::add_dns_server(const SocketAddress&, const char*)
              reference :  NetworkStack::get_dns_server(int, SocketAddress*, const char*)
              reference :  NetworkStack::get_ip_address_if(SocketAddress*, const char*)
              reference :  NetworkStack::getaddrinfo_async(const char*, SocketAddress*, mbed::Callback<void(int, SocketAddress*)>, const char*)
              reference :  NetworkStack::gethostbyname_async(const char*, mbed::Callback<void(int, SocketAddress*)>, nsapi_version, const char*)
              reference :  NetworkStack::get_call_in_callback()
              reference :  NetworkStack::gethostbyname_async_cancel(int)
              reference :  NetworkStack::get_ipv6_link_local_address(SocketAddress*)
              reference :  NetworkStack::call_in(int, mbed::Callback<void()>)
              reference :  SocketAddress::set_ip_address(const char*)
              reference :  SocketAddress::operator =(const SocketAddress&)
              reference :  mbed::AT_CellularStack::find_socket(int)
              reference :  mbed::AT_CellularStack::socket_open(void**, nsapi_protocol)
              reference :  mbed::AT_CellularStack::socket_recv(void*, void*, unsigned)
              reference :  mbed::AT_CellularStack::socket_send(void*, const void*, unsigned)
              reference :  mbed::AT_CellularStack::socket_close(void*)
              reference :  mbed::AT_CellularStack::socket_attach(void*, void(*)(void*), void*)
              reference :  mbed::AT_CellularStack::socket_sendto(void*, const SocketAddress&, const void*, unsigned)
              reference :  mbed::AT_CellularStack::get_ip_address(SocketAddress*)
              reference :  mbed::AT_CellularStack::socket_recvfrom(void*, SocketAddress*, void*, unsigned)
              reference :  mbed::AT_CellularStack::find_socket_index(void*)
              reference :  mbed::AT_CellularStack::AT_CellularStack__sub_object(mbed::ATHandler&, int, nsapi_ip_stack, mbed::AT_CellularDevice&)
              reference :  mbed::AT_CellularStack::~AT_CellularStack__sub_object()
              reference :  mbed::AT_CellularDevice::get_property(mbed::AT_CellularDevice::CellularProperty)
              definition:  mbed::QUECTEL_M26_CellularStack::socket_bind(void*, const SocketAddress&)
              definition:  mbed::QUECTEL_M26_CellularStack::socket_accept(void*, void**, SocketAddress*)
              definition:  mbed::QUECTEL_M26_CellularStack::socket_closed(int)
              definition:  mbed::QUECTEL_M26_CellularStack::socket_listen(void*, int)
              definition:  mbed::QUECTEL_M26_CellularStack::socket_connect(void*, const SocketAddress&)
              definition:  mbed::QUECTEL_M26_CellularStack::socket_closed_0()
              definition:  mbed::QUECTEL_M26_CellularStack::socket_closed_1()
              definition:  mbed::QUECTEL_M26_CellularStack::socket_closed_2()
              definition:  mbed::QUECTEL_M26_CellularStack::socket_closed_3()
              definition:  mbed::QUECTEL_M26_CellularStack::socket_closed_4()
              definition:  mbed::QUECTEL_M26_CellularStack::socket_closed_5()
              definition:  mbed::QUECTEL_M26_CellularStack::socket_close_impl(int)
              definition:  mbed::QUECTEL_M26_CellularStack::socket_stack_init()
              definition:  mbed::QUECTEL_M26_CellularStack::create_socket_impl(mbed::AT_CellularStack::CellularSocket*)
              definition:  mbed::QUECTEL_M26_CellularStack::socket_sendto_impl(mbed::AT_CellularStack::CellularSocket*, const SocketAddress&, const void*, unsigned)
              definition:  mbed::QUECTEL_M26_CellularStack::socket_recvfrom_impl(mbed::AT_CellularStack::CellularSocket*, SocketAddress*, void*, unsigned)
              definition:  mbed::QUECTEL_M26_CellularStack::handle_open_socket_response(int&, int&)
              definition:  mbed::QUECTEL_M26_CellularStack::urc_qiurc()
              definition:  mbed::QUECTEL_M26_CellularStack::QUECTEL_M26_CellularStack(mbed::ATHandler&, int, nsapi_ip_stack, mbed::AT_CellularDevice&)
              definition:  mbed::QUECTEL_M26_CellularStack::QUECTEL_M26_CellularStack__sub_object(mbed::ATHandler&, int, nsapi_ip_stack, mbed::AT_CellularDevice&)
              definition:  mbed::QUECTEL_M26_CellularStack::~QUECTEL_M26_CellularStack__deallocating()
              definition:  mbed::QUECTEL_M26_CellularStack::~QUECTEL_M26_CellularStack()
              definition:  mbed::QUECTEL_M26_CellularStack::~QUECTEL_M26_CellularStack__sub_object()
              weak defn :  T1 mbed::detail::invoke_r<void, void(mbed::QUECTEL_M26_CellularStack::*const &)(), <mbed::QUECTEL_M26_CellularStack*const &>, (int)0>(T2&&, T3&&...)
              weak defn :  T1 mbed::detail::invoke_r<void, mbed::Callback<void()>::Callback<mbed::QUECTEL_M26_CellularStack*, void(mbed::QUECTEL_M26_CellularStack::*)(), (int)0>(T1, T2)::[lambda() (instance 1)]&, <>, (int)0>(T2&&, T3&&...)
              weak defn :  void mbed::Callback<void()>::target_call<mbed::Callback<void()>::Callback<mbed::QUECTEL_M26_CellularStack*, void(mbed::QUECTEL_M26_CellularStack::*)(), (int)0>(T1, T2)::[lambda() (instance 1)]>(const mbed::detail::CallbackBase*)
              weak defn :  void mbed::Callback<void()>::generate<mbed::Callback<void()>::Callback<mbed::QUECTEL_M26_CellularStack*, void(mbed::QUECTEL_M26_CellularStack::*)(), (int)0>(T1, T2)::[lambda() (instance 1)], void>(T1&&)
              weak defn :  mbed::Callback<void()>::Callback__sub_object<mbed::QUECTEL_M26_CellularStack*, void(mbed::QUECTEL_M26_CellularStack::*)(), (int)0>(T1, T2)
              reference :  mbed::ATHandler::read_bytes(unsigned char*, unsigned)
              reference :  mbed::ATHandler::resp_start(const char*, bool)
              reference :  mbed::ATHandler::skip_param(unsigned)
              reference :  mbed::ATHandler::read_string(char*, unsigned, bool)
              reference :  mbed::ATHandler::write_bytes(const unsigned char*, unsigned)
              reference :  mbed::ATHandler::set_stop_tag(const char*)
              reference :  mbed::ATHandler::set_delimiter(char)
              reference :  mbed::ATHandler::at_cmd_discard(const char*, const char*, const char*, ...)
              reference :  mbed::ATHandler::cmd_start_stop(const char*, const char*, const char*, ...)
              reference :  mbed::ATHandler::set_at_timeout(std::__1::chrono::duration<unsigned, std::__1::ratio<(long long)1, (long long)1000>>, bool)
              reference :  mbed::ATHandler::set_urc_handler(const char*, mbed::Callback<void()>)
              reference :  mbed::ATHandler::restore_at_timeout()
              reference :  mbed::ATHandler::set_default_delimiter()
              reference :  mbed::ATHandler::lock()
              reference :  mbed::ATHandler::unlock()
              reference :  mbed::ATHandler::read_int()
              reference :  mbed::ATHandler::info_resp()
              reference :  mbed::ATHandler::resp_stop()
              weak defn :  std::__1::enable_if<((std::is_function<T2>::value&&(!std::is_base_of<T1, std::__1::decay<T3>::type>::value))&&(!is_reference_wrapper<std::__1::decay<T3>::type>::value)), decltype((((*std::forward<T3>(param#2)).*param#1)(std::forward<T4>(param#3)...)))>::type mstd::impl::INVOKE<mbed::QUECTEL_M26_CellularStack, void(), mbed::QUECTEL_M26_CellularStack*const &, <>>(T2T1::*, T3&&, T4&&...)
              weak defn :  std::__1::enable_if<((!std::is_member_pointer<std::__1::decay<T1>::type>::value)||(std::is_member_object_pointer<std::__1::decay<T1>::type>::value&&(sizeof...(param#2)!=(int)1))), decltype((std::forward<T1>(param#1)(std::forward<T2>(param#2)...)))>::type mstd::impl::INVOKE<mbed::Callback<void()>::Callback<mbed::QUECTEL_M26_CellularStack*, void(mbed::QUECTEL_M26_CellularStack::*)(), (int)0>(T1, T2)::[lambda() (instance 1)]&, <>>(T1&&, T2&&...)
              weak defn :  mstd::invoke_result<T1, <T2...>>::type mstd::invoke<void(mbed::QUECTEL_M26_CellularStack::*const &)(), <mbed::QUECTEL_M26_CellularStack*const &>>(T1&&, T2&&...)
              weak defn :  mstd::invoke_result<T1, <T2...>>::type mstd::invoke<mbed::Callback<void()>::Callback<mbed::QUECTEL_M26_CellularStack*, void(mbed::QUECTEL_M26_CellularStack::*)(), (int)0>(T1, T2)::[lambda() (instance 1)]&, <>>(T1&&, T2&&...)
              reference :  rtos::Kernel::impl::get_tick_count()
              reference :  SocketAddress::get_ip_address() const
              reference :  mbed::ATHandler::get_last_error() const
              definition:  vtable for mbed::QUECTEL_M26_CellularStack
              weak defn :  mbed::Callback<void()>::Callback<mbed::QUECTEL_M26_CellularStack*, void(mbed::QUECTEL_M26_CellularStack::*)(), (int)0>(T1, T2)::[lambda() (instance 1)]::operator ()() const
              reference :  operator delete (void*)
              reference :  mbed_assert_internal
              reference :  memcmp
              reference :  mbed::Callback<void()>::Callback__sub_object(std::nullptr_t)
              reference :  _ZNSt3__18literals15chrono_literalsli1sEy
              reference :  SocketAddress::get_port() const
              reference :  rtos::Kernel::Clock::now()
              reference :  SocketAddress::set_port(unsigned short)
              reference :  NetworkStack::onboardNetworkStack()
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/drivers/cellular/QUECTEL/UG96/QUECTEL_UG96.o.
              definition:  mbed::QUECTEL_UG96::create_context_impl(mbed::ATHandler&, const char*, bool, bool)
              definition:  mbed::QUECTEL_UG96::QUECTEL_UG96(mbed::FileHandle*)
              definition:  mbed::QUECTEL_UG96::QUECTEL_UG96__sub_object(mbed::FileHandle*)
              weak defn :  mbed::QUECTEL_UG96::~QUECTEL_UG96__deallocating()
              reference :  mbed::CellularDevice::get_queue()
              reference :  mbed::AT_CellularDevice::set_timeout(int)
              reference :  mbed::AT_CellularDevice::open_network()
              reference :  mbed::AT_CellularDevice::set_ready_cb(mbed::Callback<void()>)
              reference :  mbed::AT_CellularDevice::close_network()
              reference :  mbed::AT_CellularDevice::get_sim_state(mbed::CellularDevice::SimState&)
              reference :  mbed::AT_CellularDevice::hard_power_on()
              reference :  mbed::AT_CellularDevice::set_baud_rate(int)
              reference :  mbed::AT_CellularDevice::soft_power_on()
              reference :  mbed::AT_CellularDevice::create_context(const char*, bool, bool)
              reference :  mbed::AT_CellularDevice::delete_context(mbed::CellularContext*)
              reference :  mbed::AT_CellularDevice::get_at_handler()
              reference :  mbed::AT_CellularDevice::hard_power_off()
              reference :  mbed::AT_CellularDevice::modem_debug_on(bool)
              reference :  mbed::AT_CellularDevice::soft_power_off()
              reference :  mbed::AT_CellularDevice::open_information()
              reference :  mbed::AT_CellularDevice::set_at_urcs_impl()
              reference :  mbed::AT_CellularDevice::cellular_callback(nsapi_event, int, mbed::CellularContext*)
              reference :  mbed::AT_CellularDevice::close_information()
              reference :  mbed::AT_CellularDevice::open_network_impl(mbed::ATHandler&)
              reference :  mbed::AT_CellularDevice::set_baud_rate_impl(int)
              reference :  mbed::AT_CellularDevice::set_power_save_mode(int, int)
              reference :  mbed::AT_CellularDevice::open_information_impl(mbed::ATHandler&)
              reference :  mbed::AT_CellularDevice::set_cellular_properties(const int*)
              reference :  mbed::AT_CellularDevice::init()
              reference :  mbed::AT_CellularDevice::clear()
              reference :  mbed::AT_CellularDevice::set_pin(const char*)
              reference :  mbed::AT_CellularDevice::is_ready()
              reference :  mbed::AT_CellularDevice::shutdown()
              reference :  mbed::AT_CellularDevice::AT_CellularDevice__sub_object(mbed::FileHandle*)
              reference :  mbed::AT_CellularDevice::~AT_CellularDevice__sub_object()
              reference :  mbed::QUECTEL_UG96_CellularContext::QUECTEL_UG96_CellularContext(mbed::ATHandler&, mbed::CellularDevice*, const char*, bool, bool)
              reference :  mbed::AT_CellularDevice::get_context_list() const
              definition:  vtable for mbed::QUECTEL_UG96
              reference :  operator delete (void*)
              reference :  operator new(unsigned)
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/drivers/cellular/QUECTEL/UG96/QUECTEL_UG96_CellularContext.o.
              reference :  NetworkInterface::get_gateway(SocketAddress*)
              reference :  NetworkInterface::get_netmask(SocketAddress*)
              reference :  NetworkInterface::getaddrinfo(const char*, SocketAddress*, SocketAddress**, const char*)
              reference :  NetworkInterface::set_network(const SocketAddress&, const SocketAddress&, const SocketAddress&)
              reference :  NetworkInterface::gethostbyname(const char*, SocketAddress*, nsapi_version, const char*)
              reference :  NetworkInterface::add_dns_server(const SocketAddress&, const char*)
              reference :  NetworkInterface::get_dns_server(int, SocketAddress*, const char*)
              reference :  NetworkInterface::set_as_default()
              reference :  NetworkInterface::get_mac_address()
              reference :  NetworkInterface::getaddrinfo_async(const char*, SocketAddress*, mbed::Callback<void(int, SocketAddress*)>, const char*)
              reference :  NetworkInterface::gethostbyname_async(const char*, mbed::Callback<void(int, SocketAddress*)>, nsapi_version, const char*)
              reference :  NetworkInterface::gethostbyname_async_cancel(int)
              reference :  NetworkInterface::get_ipv6_link_local_address(SocketAddress*)
              reference :  NetworkInterface::set_dhcp(bool)
              reference :  CellularInterface::set_default_parameters()
              reference :  mbed::AT_CellularContext::disconnect()
              reference :  mbed::AT_CellularContext::do_connect()
              reference :  mbed::AT_CellularContext::enable_hup(bool)
              reference :  mbed::AT_CellularContext::get_context()
              reference :  mbed::AT_CellularContext::set_sim_pin(const char*)
              reference :  mbed::AT_CellularContext::get_cp_netif()
              reference :  mbed::AT_CellularContext::is_connected()
              reference :  mbed::AT_CellularContext::set_blocking(bool)
              reference :  mbed::AT_CellularContext::configure_hup(PinName, bool)
              reference :  mbed::AT_CellularContext::do_disconnect()
              reference :  mbed::AT_CellularContext::set_sim_ready()
              reference :  mbed::AT_CellularContext::get_ip_address(SocketAddress*)
              reference :  mbed::AT_CellularContext::set_disconnect()
              reference :  mbed::AT_CellularContext::set_credentials(const char*, const char*, const char*)
              reference :  mbed::AT_CellularContext::activate_context()
              reference :  mbed::AT_CellularContext::get_rate_control(mbed::CellularContext::RateControlExceptionReports&, mbed::CellularContext::RateControlUplinkTimeUnit&, int&)
              reference :  mbed::AT_CellularContext::set_device_ready()
              reference :  mbed::AT_CellularContext::attach_to_network()
              reference :  mbed::AT_CellularContext::cellular_callback(nsapi_event, int)
              reference :  mbed::AT_CellularContext::deactivate_context()
              reference :  mbed::AT_CellularContext::get_interface_name(char*)
              reference :  mbed::AT_CellularContext::register_to_network()
              reference :  mbed::AT_CellularContext::deactivate_ip_context()
              reference :  mbed::AT_CellularContext::do_connect_with_retry()
              reference :  mbed::AT_CellularContext::get_apn_backoff_timer(int&)
              reference :  mbed::AT_CellularContext::get_pdpcontext_params(mbed::CellularList<mbed::CellularContext::pdpcontext_params_t>&)
              reference :  mbed::AT_CellularContext::activate_non_ip_context()
              reference :  mbed::AT_CellularContext::setup_control_plane_opt()
              reference :  mbed::AT_CellularContext::deactivate_non_ip_context()
              reference :  mbed::AT_CellularContext::get_nonip_context_type_str()
              reference :  mbed::AT_CellularContext::attach(mbed::Callback<void(nsapi_event, int)>)
              reference :  mbed::AT_CellularContext::connect(const char*, const char*, const char*, const char*)
              reference :  mbed::AT_CellularContext::connect()
              reference :  mbed::AT_CellularContext::set_plmn(const char*)
              reference :  mbed::AT_CellularContext::get_stack()
              reference :  mbed::AT_CellularContext::AT_CellularContext__sub_object(mbed::ATHandler&, mbed::CellularDevice*, const char*, bool, bool)
              reference :  mbed::AT_CellularContext::~AT_CellularContext__sub_object()
              definition:  mbed::QUECTEL_UG96_CellularContext::do_user_authentication()
              definition:  mbed::QUECTEL_UG96_CellularContext::QUECTEL_UG96_CellularContext(mbed::ATHandler&, mbed::CellularDevice*, const char*, bool, bool)
              definition:  mbed::QUECTEL_UG96_CellularContext::QUECTEL_UG96_CellularContext__sub_object(mbed::ATHandler&, mbed::CellularDevice*, const char*, bool, bool)
              definition:  mbed::QUECTEL_UG96_CellularContext::~QUECTEL_UG96_CellularContext__deallocating()
              definition:  mbed::QUECTEL_UG96_CellularContext::~QUECTEL_UG96_CellularContext()
              definition:  mbed::QUECTEL_UG96_CellularContext::~QUECTEL_UG96_CellularContext__sub_object()
              reference :  mbed::ATHandler::at_cmd_discard(const char*, const char*, const char*, ...)
              reference :  mbed::AT_CellularContext::get_connection_status() const
              reference :  mbed::AT_CellularContext::get_timeout_for_operation(mbed::CellularContext::ContextOperation) const
              definition:  vtable for mbed::QUECTEL_UG96_CellularContext
              reference :  operator delete (void*)
              reference :  NetworkInterface::ethInterface()
              reference :  NetworkInterface::wifiInterface()
              reference :  NetworkInterface::meshInterface()
              reference :  NetworkInterface::emacInterface()
              reference :  CellularInterface::cellularInterface()
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/drivers/cellular/RiotMicro/AT/RM1000_AT.o.
              reference :  mbed::CellularDevice::set_retry_timeout_array(const unsigned short*, int)
              reference :  mbed::CellularDevice::get_queue()
              reference :  mbed::AT_CellularDevice::set_timeout(int)
              reference :  mbed::AT_CellularDevice::open_network()
              reference :  mbed::AT_CellularDevice::set_ready_cb(mbed::Callback<void()>)
              reference :  mbed::AT_CellularDevice::close_network()
              reference :  mbed::AT_CellularDevice::get_sim_state(mbed::CellularDevice::SimState&)
              reference :  mbed::AT_CellularDevice::hard_power_on()
              reference :  mbed::AT_CellularDevice::set_baud_rate(int)
              reference :  mbed::AT_CellularDevice::soft_power_on()
              reference :  mbed::AT_CellularDevice::create_context(const char*, bool, bool)
              reference :  mbed::AT_CellularDevice::delete_context(mbed::CellularContext*)
              reference :  mbed::AT_CellularDevice::get_at_handler()
              reference :  mbed::AT_CellularDevice::hard_power_off()
              reference :  mbed::AT_CellularDevice::modem_debug_on(bool)
              reference :  mbed::AT_CellularDevice::soft_power_off()
              reference :  mbed::AT_CellularDevice::open_information()
              reference :  mbed::AT_CellularDevice::set_at_urcs_impl()
              reference :  mbed::AT_CellularDevice::cellular_callback(nsapi_event, int, mbed::CellularContext*)
              reference :  mbed::AT_CellularDevice::close_information()
              reference :  mbed::AT_CellularDevice::set_baud_rate_impl(int)
              reference :  mbed::AT_CellularDevice::set_power_save_mode(int, int)
              reference :  mbed::AT_CellularDevice::open_information_impl(mbed::ATHandler&)
              reference :  mbed::AT_CellularDevice::set_cellular_properties(const int*)
              reference :  mbed::AT_CellularDevice::clear()
              reference :  mbed::AT_CellularDevice::set_pin(const char*)
              reference :  mbed::AT_CellularDevice::is_ready()
              reference :  mbed::AT_CellularDevice::shutdown()
              reference :  mbed::AT_CellularDevice::AT_CellularDevice__sub_object(mbed::FileHandle*)
              reference :  mbed::AT_CellularDevice::~AT_CellularDevice__sub_object()
              reference :  mbed::RM1000_AT_CellularContext::RM1000_AT_CellularContext(mbed::ATHandler&, mbed::CellularDevice*, const char*, bool, bool)
              reference :  mbed::RM1000_AT_CellularNetwork::RM1000_AT_CellularNetwork(mbed::ATHandler&, mbed::AT_CellularDevice&)
              reference :  mbed::ATHandler::at_cmd_discard(const char*, const char*, const char*, ...)
              reference :  mbed::ATHandler::set_at_timeout(std::__1::chrono::duration<unsigned, std::__1::ratio<(long long)1, (long long)1000>>, bool)
              reference :  mbed::ATHandler::unlock_return_error()
              reference :  mbed::ATHandler::lock()
              reference :  mbed::ATHandler::flush()
              definition:  mbed::RM1000_AT::open_network_impl(mbed::ATHandler&)
              definition:  mbed::RM1000_AT::create_context_impl(mbed::ATHandler&, const char*, bool, bool)
              definition:  mbed::RM1000_AT::init()
              definition:  mbed::RM1000_AT::RM1000_AT(mbed::FileHandle*)
              definition:  mbed::RM1000_AT::RM1000_AT__sub_object(mbed::FileHandle*)
              weak defn :  mbed::RM1000_AT::~RM1000_AT__deallocating()
              reference :  mbed::AT_CellularDevice::get_context_list() const
              definition:  vtable for mbed::RM1000_AT
              reference :  operator delete (void*)
              reference :  operator new(unsigned)
              reference :  _ZNSt3__18literals15chrono_literalsli1sEy
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/drivers/cellular/RiotMicro/AT/RM1000_AT_CellularContext.o.
              reference :  NetworkInterface::get_gateway(SocketAddress*)
              reference :  NetworkInterface::get_netmask(SocketAddress*)
              reference :  NetworkInterface::getaddrinfo(const char*, SocketAddress*, SocketAddress**, const char*)
              reference :  NetworkInterface::set_network(const SocketAddress&, const SocketAddress&, const SocketAddress&)
              reference :  NetworkInterface::gethostbyname(const char*, SocketAddress*, nsapi_version, const char*)
              reference :  NetworkInterface::add_dns_server(const SocketAddress&, const char*)
              reference :  NetworkInterface::get_dns_server(int, SocketAddress*, const char*)
              reference :  NetworkInterface::set_as_default()
              reference :  NetworkInterface::get_mac_address()
              reference :  NetworkInterface::getaddrinfo_async(const char*, SocketAddress*, mbed::Callback<void(int, SocketAddress*)>, const char*)
              reference :  NetworkInterface::gethostbyname_async(const char*, mbed::Callback<void(int, SocketAddress*)>, nsapi_version, const char*)
              reference :  NetworkInterface::gethostbyname_async_cancel(int)
              reference :  NetworkInterface::get_ipv6_link_local_address(SocketAddress*)
              reference :  NetworkInterface::set_dhcp(bool)
              reference :  CellularInterface::set_default_parameters()
              reference :  mbed::AT_CellularContext::disconnect()
              reference :  mbed::AT_CellularContext::do_connect()
              reference :  mbed::AT_CellularContext::enable_hup(bool)
              reference :  mbed::AT_CellularContext::get_context()
              reference :  mbed::AT_CellularContext::set_sim_pin(const char*)
              reference :  mbed::AT_CellularContext::get_cp_netif()
              reference :  mbed::AT_CellularContext::is_connected()
              reference :  mbed::AT_CellularContext::set_blocking(bool)
              reference :  mbed::AT_CellularContext::configure_hup(PinName, bool)
              reference :  mbed::AT_CellularContext::do_disconnect()
              reference :  mbed::AT_CellularContext::set_sim_ready()
              reference :  mbed::AT_CellularContext::get_ip_address(SocketAddress*)
              reference :  mbed::AT_CellularContext::set_disconnect()
              reference :  mbed::AT_CellularContext::set_credentials(const char*, const char*, const char*)
              reference :  mbed::AT_CellularContext::activate_context()
              reference :  mbed::AT_CellularContext::get_rate_control(mbed::CellularContext::RateControlExceptionReports&, mbed::CellularContext::RateControlUplinkTimeUnit&, int&)
              reference :  mbed::AT_CellularContext::set_device_ready()
              reference :  mbed::AT_CellularContext::attach_to_network()
              reference :  mbed::AT_CellularContext::cellular_callback(nsapi_event, int)
              reference :  mbed::AT_CellularContext::deactivate_context()
              reference :  mbed::AT_CellularContext::get_interface_name(char*)
              reference :  mbed::AT_CellularContext::register_to_network()
              reference :  mbed::AT_CellularContext::deactivate_ip_context()
              reference :  mbed::AT_CellularContext::do_connect_with_retry()
              reference :  mbed::AT_CellularContext::get_apn_backoff_timer(int&)
              reference :  mbed::AT_CellularContext::get_pdpcontext_params(mbed::CellularList<mbed::CellularContext::pdpcontext_params_t>&)
              reference :  mbed::AT_CellularContext::do_user_authentication()
              reference :  mbed::AT_CellularContext::activate_non_ip_context()
              reference :  mbed::AT_CellularContext::setup_control_plane_opt()
              reference :  mbed::AT_CellularContext::deactivate_non_ip_context()
              reference :  mbed::AT_CellularContext::get_nonip_context_type_str()
              reference :  mbed::AT_CellularContext::attach(mbed::Callback<void(nsapi_event, int)>)
              reference :  mbed::AT_CellularContext::connect(const char*, const char*, const char*, const char*)
              reference :  mbed::AT_CellularContext::connect()
              reference :  mbed::AT_CellularContext::set_plmn(const char*)
              reference :  mbed::AT_CellularContext::AT_CellularContext__sub_object(mbed::ATHandler&, mbed::CellularDevice*, const char*, bool, bool)
              reference :  mbed::AT_CellularContext::~AT_CellularContext__sub_object()
              reference :  mbed::RM1000_AT_CellularStack::RM1000_AT_CellularStack(mbed::ATHandler&, int, nsapi_ip_stack, mbed::AT_CellularDevice&)
              definition:  mbed::RM1000_AT_CellularContext::get_stack()
              definition:  mbed::RM1000_AT_CellularContext::RM1000_AT_CellularContext(mbed::ATHandler&, mbed::CellularDevice*, const char*, bool, bool)
              definition:  mbed::RM1000_AT_CellularContext::RM1000_AT_CellularContext__sub_object(mbed::ATHandler&, mbed::CellularDevice*, const char*, bool, bool)
              definition:  mbed::RM1000_AT_CellularContext::~RM1000_AT_CellularContext__deallocating()
              definition:  mbed::RM1000_AT_CellularContext::~RM1000_AT_CellularContext()
              definition:  mbed::RM1000_AT_CellularContext::~RM1000_AT_CellularContext__sub_object()
              reference :  mbed::AT_CellularContext::get_device() const
              reference :  mbed::AT_CellularContext::get_connection_status() const
              reference :  mbed::AT_CellularContext::get_timeout_for_operation(mbed::CellularContext::ContextOperation) const
              definition:  vtable for mbed::RM1000_AT_CellularContext
              reference :  operator delete (void*)
              reference :  operator new(unsigned)
              reference :  NetworkInterface::ethInterface()
              reference :  NetworkInterface::wifiInterface()
              reference :  NetworkInterface::meshInterface()
              reference :  NetworkInterface::emacInterface()
              reference :  CellularInterface::cellularInterface()
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/drivers/cellular/RiotMicro/AT/RM1000_AT_CellularNetwork.o.
              reference :  mbed::AT_CellularDevice::get_property(mbed::AT_CellularDevice::CellularProperty)
              reference :  mbed::AT_CellularNetwork::get_attach(mbed::CellularNetwork::AttachStatus&)
              reference :  mbed::AT_CellularNetwork::set_attach()
              reference :  mbed::AT_CellularNetwork::get_3gpp_error()
              reference :  mbed::AT_CellularNetwork::set_registration(const char*)
              reference :  mbed::AT_CellularNetwork::is_active_context(int*, int)
              reference :  mbed::AT_CellularNetwork::get_operator_names(mbed::CellularList<mbed::CellularNetwork::operator_names_t>&)
              reference :  mbed::AT_CellularNetwork::get_signal_quality(int&, int*)
              reference :  mbed::AT_CellularNetwork::set_receive_period(int, mbed::CellularNetwork::EDRXAccessTechnology, unsigned char)
              reference :  mbed::AT_CellularNetwork::get_operator_params(int&, mbed::CellularNetwork::operator_t&)
              reference :  mbed::AT_CellularNetwork::set_access_technology(mbed::CellularNetwork::RadioAccessTechnology)
              reference :  mbed::AT_CellularNetwork::get_registration_params(mbed::CellularNetwork::RegistrationType, mbed::CellularNetwork::registration_params_t&)
              reference :  mbed::AT_CellularNetwork::get_registration_params(mbed::CellularNetwork::registration_params_t&)
              reference :  mbed::AT_CellularNetwork::get_context_state_command()
              reference :  mbed::AT_CellularNetwork::get_network_registering_mode(mbed::CellularNetwork::NWRegisteringMode&)
              reference :  mbed::AT_CellularNetwork::set_ciot_optimization_config(mbed::CellularNetwork::CIoT_Supported_Opt, mbed::CellularNetwork::CIoT_Preferred_UE_Opt, mbed::Callback<void(mbed::CellularNetwork::CIoT_Supported_Opt)>)
              reference :  mbed::AT_CellularNetwork::get_ciot_ue_optimization_config(mbed::CellularNetwork::CIoT_Supported_Opt&, mbed::CellularNetwork::CIoT_Preferred_UE_Opt&)
              reference :  mbed::AT_CellularNetwork::set_packet_domain_event_reporting(bool)
              reference :  mbed::AT_CellularNetwork::get_ciot_network_optimization_config(mbed::CellularNetwork::CIoT_Supported_Opt&)
              reference :  mbed::AT_CellularNetwork::clear()
              reference :  mbed::AT_CellularNetwork::attach(mbed::Callback<void(nsapi_event, int)>)
              reference :  mbed::AT_CellularNetwork::detach()
              reference :  mbed::AT_CellularNetwork::scan_plmn(mbed::CellularList<mbed::CellularNetwork::operator_t>&, int&)
              reference :  mbed::AT_CellularNetwork::AT_CellularNetwork__sub_object(mbed::ATHandler&, mbed::AT_CellularDevice&)
              reference :  mbed::AT_CellularNetwork::~AT_CellularNetwork__sub_object()
              definition:  mbed::RM1000_AT_CellularNetwork::MODEM_FAULT_URC()
              definition:  mbed::RM1000_AT_CellularNetwork::set_registration_urc(mbed::CellularNetwork::RegistrationType, bool)
              definition:  mbed::RM1000_AT_CellularNetwork::set_access_technology_impl(mbed::CellularNetwork::RadioAccessTechnology)
              definition:  mbed::RM1000_AT_CellularNetwork::RM1000_AT_CellularNetwork(mbed::ATHandler&, mbed::AT_CellularDevice&)
              definition:  mbed::RM1000_AT_CellularNetwork::RM1000_AT_CellularNetwork__sub_object(mbed::ATHandler&, mbed::AT_CellularDevice&)
              definition:  mbed::RM1000_AT_CellularNetwork::~RM1000_AT_CellularNetwork__deallocating()
              definition:  mbed::RM1000_AT_CellularNetwork::~RM1000_AT_CellularNetwork()
              definition:  mbed::RM1000_AT_CellularNetwork::~RM1000_AT_CellularNetwork__sub_object()
              weak defn :  T1 mbed::detail::invoke_r<void, void(mbed::RM1000_AT_CellularNetwork::*const &)(), <mbed::RM1000_AT_CellularNetwork*const &>, (int)0>(T2&&, T3&&...)
              weak defn :  T1 mbed::detail::invoke_r<void, mbed::Callback<void()>::Callback<mbed::RM1000_AT_CellularNetwork*, void(mbed::RM1000_AT_CellularNetwork::*)(), (int)0>(T1, T2)::[lambda() (instance 1)]&, <>, (int)0>(T2&&, T3&&...)
              weak defn :  void mbed::Callback<void()>::target_call<mbed::Callback<void()>::Callback<mbed::RM1000_AT_CellularNetwork*, void(mbed::RM1000_AT_CellularNetwork::*)(), (int)0>(T1, T2)::[lambda() (instance 1)]>(const mbed::detail::CallbackBase*)
              weak defn :  void mbed::Callback<void()>::generate<mbed::Callback<void()>::Callback<mbed::RM1000_AT_CellularNetwork*, void(mbed::RM1000_AT_CellularNetwork::*)(), (int)0>(T1, T2)::[lambda() (instance 1)], void>(T1&&)
              weak defn :  mbed::Callback<void()>::Callback__sub_object<mbed::RM1000_AT_CellularNetwork*, void(mbed::RM1000_AT_CellularNetwork::*)(), (int)0>(T1, T2)
              weak defn :  mbed::Callback<T3(T4...)> mbed::callback<mbed::RM1000_AT_CellularNetwork, mbed::RM1000_AT_CellularNetwork, void, <>>(T2*, T3(T1::*)(T4...))
              reference :  mbed::ATHandler::set_urc_handler(const char*, mbed::Callback<void()>)
              weak defn :  std::__1::enable_if<((std::is_function<T2>::value&&(!std::is_base_of<T1, std::__1::decay<T3>::type>::value))&&(!is_reference_wrapper<std::__1::decay<T3>::type>::value)), decltype((((*std::forward<T3>(param#2)).*param#1)(std::forward<T4>(param#3)...)))>::type mstd::impl::INVOKE<mbed::RM1000_AT_CellularNetwork, void(), mbed::RM1000_AT_CellularNetwork*const &, <>>(T2T1::*, T3&&, T4&&...)
              weak defn :  std::__1::enable_if<((!std::is_member_pointer<std::__1::decay<T1>::type>::value)||(std::is_member_object_pointer<std::__1::decay<T1>::type>::value&&(sizeof...(param#2)!=(int)1))), decltype((std::forward<T1>(param#1)(std::forward<T2>(param#2)...)))>::type mstd::impl::INVOKE<mbed::Callback<void()>::Callback<mbed::RM1000_AT_CellularNetwork*, void(mbed::RM1000_AT_CellularNetwork::*)(), (int)0>(T1, T2)::[lambda() (instance 1)]&, <>>(T1&&, T2&&...)
              weak defn :  mstd::invoke_result<T1, <T2...>>::type mstd::invoke<void(mbed::RM1000_AT_CellularNetwork::*const &)(), <mbed::RM1000_AT_CellularNetwork*const &>>(T1&&, T2&&...)
              weak defn :  mstd::invoke_result<T1, <T2...>>::type mstd::invoke<mbed::Callback<void()>::Callback<mbed::RM1000_AT_CellularNetwork*, void(mbed::RM1000_AT_CellularNetwork::*)(), (int)0>(T1, T2)::[lambda() (instance 1)]&, <>>(T1&&, T2&&...)
              definition:  vtable for mbed::RM1000_AT_CellularNetwork
              weak defn :  mbed::Callback<void()>::Callback<mbed::RM1000_AT_CellularNetwork*, void(mbed::RM1000_AT_CellularNetwork::*)(), (int)0>(T1, T2)::[lambda() (instance 1)]::operator ()() const
              reference :  operator delete (void*)
              reference :  mbed_assert_internal
              reference :  mbed::Callback<void(nsapi_event, int)>::operator bool() const
              reference :  mbed::Callback<void(nsapi_event, int)>::operator ()(nsapi_event, int) const
              reference :  mbed::Callback<void()>::Callback__sub_object(std::nullptr_t)
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/drivers/cellular/RiotMicro/AT/RM1000_AT_CellularStack.o.
              reference :  NetworkStack::getsockopt(void*, int, int, void*, unsigned*)
              reference :  NetworkStack::setsockopt(void*, int, int, const void*, unsigned)
              reference :  NetworkStack::getaddrinfo(const char*, SocketAddress*, SocketAddress**, const char*)
              reference :  NetworkStack::getstackopt(int, int, void*, unsigned*)
              reference :  NetworkStack::setstackopt(int, int, const void*, unsigned)
              reference :  NetworkStack::add_dns_server(const SocketAddress&, const char*)
              reference :  NetworkStack::get_dns_server(int, SocketAddress*, const char*)
              reference :  NetworkStack::get_ip_address_if(SocketAddress*, const char*)
              reference :  NetworkStack::getaddrinfo_async(const char*, SocketAddress*, mbed::Callback<void(int, SocketAddress*)>, const char*)
              reference :  NetworkStack::gethostbyname_async(const char*, mbed::Callback<void(int, SocketAddress*)>, nsapi_version, const char*)
              reference :  NetworkStack::get_call_in_callback()
              reference :  NetworkStack::gethostbyname_async_cancel(int)
              reference :  NetworkStack::get_ipv6_link_local_address(SocketAddress*)
              reference :  NetworkStack::call_in(int, mbed::Callback<void()>)
              reference :  SocketAddress::set_ip_address(const char*)
              reference :  SocketAddress::operator =(const SocketAddress&)
              reference :  mbed::AT_CellularStack::find_socket(int)
              reference :  mbed::AT_CellularStack::socket_bind(void*, const SocketAddress&)
              reference :  mbed::AT_CellularStack::socket_open(void**, nsapi_protocol)
              reference :  mbed::AT_CellularStack::socket_recv(void*, void*, unsigned)
              reference :  mbed::AT_CellularStack::socket_send(void*, const void*, unsigned)
              reference :  mbed::AT_CellularStack::socket_close(void*)
              reference :  mbed::AT_CellularStack::socket_attach(void*, void(*)(void*), void*)
              reference :  mbed::AT_CellularStack::socket_sendto(void*, const SocketAddress&, const void*, unsigned)
              reference :  mbed::AT_CellularStack::get_ip_address(SocketAddress*)
              reference :  mbed::AT_CellularStack::socket_recvfrom(void*, SocketAddress*, void*, unsigned)
              reference :  mbed::AT_CellularStack::AT_CellularStack__sub_object(mbed::ATHandler&, int, nsapi_ip_stack, mbed::AT_CellularDevice&)
              reference :  mbed::AT_CellularStack::~AT_CellularStack__sub_object()
              reference :  mbed::AT_CellularDevice::get_property(mbed::AT_CellularDevice::CellularProperty)
              definition:  mbed::RM1000_AT_CellularStack::RUSOCL_URC()
              definition:  mbed::RM1000_AT_CellularStack::RUSORCV_URC()
              definition:  mbed::RM1000_AT_CellularStack::clear_socket(mbed::AT_CellularStack::CellularSocket*)
              definition:  mbed::RM1000_AT_CellularStack::gethostbyname(const char*, SocketAddress*, nsapi_version, const char*)
              definition:  mbed::RM1000_AT_CellularStack::socket_accept(void*, void**, SocketAddress*)
              definition:  mbed::RM1000_AT_CellularStack::socket_listen(void*, int)
              definition:  mbed::RM1000_AT_CellularStack::socket_connect(void*, const SocketAddress&)
              definition:  mbed::RM1000_AT_CellularStack::socket_close_impl(int)
              definition:  mbed::RM1000_AT_CellularStack::create_socket_impl(mbed::AT_CellularStack::CellularSocket*)
              definition:  mbed::RM1000_AT_CellularStack::socket_sendto_impl(mbed::AT_CellularStack::CellularSocket*, const SocketAddress&, const void*, unsigned)
              definition:  mbed::RM1000_AT_CellularStack::socket_recvfrom_impl(mbed::AT_CellularStack::CellularSocket*, SocketAddress*, void*, unsigned)
              definition:  mbed::RM1000_AT_CellularStack::RM1000_AT_CellularStack(mbed::ATHandler&, int, nsapi_ip_stack, mbed::AT_CellularDevice&)
              definition:  mbed::RM1000_AT_CellularStack::RM1000_AT_CellularStack__sub_object(mbed::ATHandler&, int, nsapi_ip_stack, mbed::AT_CellularDevice&)
              definition:  mbed::RM1000_AT_CellularStack::~RM1000_AT_CellularStack__deallocating()
              definition:  mbed::RM1000_AT_CellularStack::~RM1000_AT_CellularStack()
              definition:  mbed::RM1000_AT_CellularStack::~RM1000_AT_CellularStack__sub_object()
              reference :  mbed::poll(mbed::pollfh*, unsigned, int)
              reference :  mbed::Timer::Timer()
              weak defn :  T1 mbed::detail::invoke_r<void, void(mbed::RM1000_AT_CellularStack::*const &)(), <mbed::RM1000_AT_CellularStack*const &>, (int)0>(T2&&, T3&&...)
              weak defn :  T1 mbed::detail::invoke_r<void, mbed::Callback<void()>::Callback<mbed::RM1000_AT_CellularStack*, void(mbed::RM1000_AT_CellularStack::*)(), (int)0>(T1, T2)::[lambda() (instance 1)]&, <>, (int)0>(T2&&, T3&&...)
              weak defn :  void mbed::Callback<void()>::target_call<mbed::Callback<void()>::Callback<mbed::RM1000_AT_CellularStack*, void(mbed::RM1000_AT_CellularStack::*)(), (int)0>(T1, T2)::[lambda() (instance 1)]>(const mbed::detail::CallbackBase*)
              weak defn :  void mbed::Callback<void()>::generate<mbed::Callback<void()>::Callback<mbed::RM1000_AT_CellularStack*, void(mbed::RM1000_AT_CellularStack::*)(), (int)0>(T1, T2)::[lambda() (instance 1)], void>(T1&&)
              weak defn :  mbed::Callback<void()>::Callback__sub_object<mbed::RM1000_AT_CellularStack*, void(mbed::RM1000_AT_CellularStack::*)(), (int)0>(T1, T2)
              weak defn :  mbed::Callback<T3(T4...)> mbed::callback<mbed::RM1000_AT_CellularStack, mbed::RM1000_AT_CellularStack, void, <>>(T2*, T3(T1::*)(T4...))
              reference :  mbed::ATHandler::at_cmd_int(const char*, const char*, int&, const char*, ...)
              reference :  mbed::ATHandler::read_bytes(unsigned char*, unsigned)
              reference :  mbed::ATHandler::resp_start(const char*, bool)
              reference :  mbed::ATHandler::skip_param(unsigned)
              reference :  mbed::ATHandler::process_oob()
              reference :  mbed::ATHandler::read_string(char*, unsigned, bool)
              reference :  mbed::ATHandler::write_bytes(const unsigned char*, unsigned)
              reference :  mbed::ATHandler::write_string(const char*, bool)
              reference :  mbed::ATHandler::at_cmd_discard(const char*, const char*, const char*, ...)
              reference :  mbed::ATHandler::cmd_start_stop(const char*, const char*, const char*, ...)
              reference :  mbed::ATHandler::set_at_timeout(std::__1::chrono::duration<unsigned, std::__1::ratio<(long long)1, (long long)1000>>, bool)
              reference :  mbed::ATHandler::get_file_handle()
              reference :  mbed::ATHandler::set_urc_handler(const char*, mbed::Callback<void()>)
              reference :  mbed::ATHandler::restore_at_timeout()
              reference :  mbed::ATHandler::lock()
              reference :  mbed::ATHandler::unlock()
              reference :  mbed::ATHandler::cmd_stop()
              reference :  mbed::ATHandler::read_int()
              reference :  mbed::ATHandler::cmd_start(const char*)
              reference :  mbed::ATHandler::info_resp()
              reference :  mbed::ATHandler::resp_stop()
              reference :  mbed::ATHandler::write_int(int)
              reference :  mbed::TimerBase::stop()
              reference :  mbed::TimerBase::start()
              reference :  mbed::TimerBase::~TimerBase__sub_object()
              weak defn :  std::__1::enable_if<((std::is_function<T2>::value&&(!std::is_base_of<T1, std::__1::decay<T3>::type>::value))&&(!is_reference_wrapper<std::__1::decay<T3>::type>::value)), decltype((((*std::forward<T3>(param#2)).*param#1)(std::forward<T4>(param#3)...)))>::type mstd::impl::INVOKE<mbed::RM1000_AT_CellularStack, void(), mbed::RM1000_AT_CellularStack*const &, <>>(T2T1::*, T3&&, T4&&...)
              weak defn :  std::__1::enable_if<((!std::is_member_pointer<std::__1::decay<T1>::type>::value)||(std::is_member_object_pointer<std::__1::decay<T1>::type>::value&&(sizeof...(param#2)!=(int)1))), decltype((std::forward<T1>(param#1)(std::forward<T2>(param#2)...)))>::type mstd::impl::INVOKE<mbed::Callback<void()>::Callback<mbed::RM1000_AT_CellularStack*, void(mbed::RM1000_AT_CellularStack::*)(), (int)0>(T1, T2)::[lambda() (instance 1)]&, <>>(T1&&, T2&&...)
              weak defn :  mstd::invoke_result<T1, <T2...>>::type mstd::invoke<void(mbed::RM1000_AT_CellularStack::*const &)(), <mbed::RM1000_AT_CellularStack*const &>>(T1&&, T2&&...)
              weak defn :  mstd::invoke_result<T1, <T2...>>::type mstd::invoke<mbed::Callback<void()>::Callback<mbed::RM1000_AT_CellularStack*, void(mbed::RM1000_AT_CellularStack::*)(), (int)0>(T1, T2)::[lambda() (instance 1)]&, <>>(T1&&, T2&&...)
              reference :  SocketAddress::get_ip_address() const
              reference :  mbed::ATHandler::get_last_error() const
              reference :  mbed::TimerBase::elapsed_time() const
              definition:  vtable for mbed::RM1000_AT_CellularStack
              weak defn :  mbed::Callback<void()>::Callback<mbed::RM1000_AT_CellularStack*, void(mbed::RM1000_AT_CellularStack::*)(), (int)0>(T1, T2)::[lambda() (instance 1)]::operator ()() const
              reference :  operator delete (void*)
              reference :  mbed::Callback<void()>::Callback__sub_object(std::nullptr_t)
              reference :  SocketAddress::get_port() const
              reference :  SocketAddress::set_port(unsigned short)
              reference :  _ZNSt3__18literals15chrono_literalsli1sEy
              reference :  NetworkStack::onboardNetworkStack()
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/drivers/cellular/TELIT/HE910/TELIT_HE910.o.
              definition:  mbed::TELIT_HE910::init()
              definition:  mbed::TELIT_HE910::TELIT_HE910(mbed::FileHandle*)
              definition:  mbed::TELIT_HE910::TELIT_HE910__sub_object(mbed::FileHandle*)
              weak defn :  mbed::TELIT_HE910::~TELIT_HE910__deallocating()
              reference :  mbed::CellularDevice::get_queue()
              reference :  mbed::AT_CellularDevice::set_timeout(int)
              reference :  mbed::AT_CellularDevice::open_network()
              reference :  mbed::AT_CellularDevice::set_ready_cb(mbed::Callback<void()>)
              reference :  mbed::AT_CellularDevice::close_network()
              reference :  mbed::AT_CellularDevice::get_sim_state(mbed::CellularDevice::SimState&)
              reference :  mbed::AT_CellularDevice::hard_power_on()
              reference :  mbed::AT_CellularDevice::set_baud_rate(int)
              reference :  mbed::AT_CellularDevice::soft_power_on()
              reference :  mbed::AT_CellularDevice::create_context(const char*, bool, bool)
              reference :  mbed::AT_CellularDevice::delete_context(mbed::CellularContext*)
              reference :  mbed::AT_CellularDevice::get_at_handler()
              reference :  mbed::AT_CellularDevice::hard_power_off()
              reference :  mbed::AT_CellularDevice::modem_debug_on(bool)
              reference :  mbed::AT_CellularDevice::soft_power_off()
              reference :  mbed::AT_CellularDevice::open_information()
              reference :  mbed::AT_CellularDevice::set_at_urcs_impl()
              reference :  mbed::AT_CellularDevice::cellular_callback(nsapi_event, int, mbed::CellularContext*)
              reference :  mbed::AT_CellularDevice::close_information()
              reference :  mbed::AT_CellularDevice::open_network_impl(mbed::ATHandler&)
              reference :  mbed::AT_CellularDevice::set_baud_rate_impl(int)
              reference :  mbed::AT_CellularDevice::create_context_impl(mbed::ATHandler&, const char*, bool, bool)
              reference :  mbed::AT_CellularDevice::set_power_save_mode(int, int)
              reference :  mbed::AT_CellularDevice::open_information_impl(mbed::ATHandler&)
              reference :  mbed::AT_CellularDevice::set_cellular_properties(const int*)
              reference :  mbed::AT_CellularDevice::init()
              reference :  mbed::AT_CellularDevice::clear()
              reference :  mbed::AT_CellularDevice::set_pin(const char*)
              reference :  mbed::AT_CellularDevice::is_ready()
              reference :  mbed::AT_CellularDevice::shutdown()
              reference :  mbed::AT_CellularDevice::AT_CellularDevice__sub_object(mbed::FileHandle*)
              reference :  mbed::AT_CellularDevice::~AT_CellularDevice__sub_object()
              reference :  mbed::ATHandler::at_cmd_discard(const char*, const char*, const char*, ...)
              reference :  mbed::AT_CellularDevice::get_context_list() const
              definition:  vtable for mbed::TELIT_HE910
              reference :  operator delete (void*)
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/drivers/cellular/TELIT/ME310/TELIT_ME310.o.
              definition:  mbed::TELIT_ME310::hard_power_on()
              definition:  mbed::TELIT_ME310::soft_power_on()
              definition:  mbed::TELIT_ME310::hard_power_off()
              definition:  mbed::TELIT_ME310::soft_power_off()
              definition:  mbed::TELIT_ME310::open_network_impl(mbed::ATHandler&)
              definition:  mbed::TELIT_ME310::create_context_impl(mbed::ATHandler&, const char*, bool, bool)
              definition:  mbed::TELIT_ME310::init()
              definition:  mbed::TELIT_ME310::TELIT_ME310(mbed::FileHandle*, PinName, bool)
              definition:  mbed::TELIT_ME310::TELIT_ME310__sub_object(mbed::FileHandle*, PinName, bool)
              weak defn :  mbed::TELIT_ME310::~TELIT_ME310__deallocating()
              reference :  mbed::CellularDevice::get_queue()
              reference :  mbed::AT_CellularDevice::set_timeout(int)
              reference :  mbed::AT_CellularDevice::open_network()
              reference :  mbed::AT_CellularDevice::set_ready_cb(mbed::Callback<void()>)
              reference :  mbed::AT_CellularDevice::close_network()
              reference :  mbed::AT_CellularDevice::get_sim_state(mbed::CellularDevice::SimState&)
              reference :  mbed::AT_CellularDevice::set_baud_rate(int)
              reference :  mbed::AT_CellularDevice::create_context(const char*, bool, bool)
              reference :  mbed::AT_CellularDevice::delete_context(mbed::CellularContext*)
              reference :  mbed::AT_CellularDevice::get_at_handler()
              reference :  mbed::AT_CellularDevice::modem_debug_on(bool)
              reference :  mbed::AT_CellularDevice::soft_power_off()
              reference :  mbed::AT_CellularDevice::open_information()
              reference :  mbed::AT_CellularDevice::set_at_urcs_impl()
              reference :  mbed::AT_CellularDevice::cellular_callback(nsapi_event, int, mbed::CellularContext*)
              reference :  mbed::AT_CellularDevice::close_information()
              reference :  mbed::AT_CellularDevice::set_baud_rate_impl(int)
              reference :  mbed::AT_CellularDevice::set_power_save_mode(int, int)
              reference :  mbed::AT_CellularDevice::open_information_impl(mbed::ATHandler&)
              reference :  mbed::AT_CellularDevice::set_cellular_properties(const int*)
              reference :  mbed::AT_CellularDevice::init()
              reference :  mbed::AT_CellularDevice::clear()
              reference :  mbed::AT_CellularDevice::set_pin(const char*)
              reference :  mbed::AT_CellularDevice::is_ready()
              reference :  mbed::AT_CellularDevice::shutdown()
              reference :  mbed::AT_CellularDevice::AT_CellularDevice__sub_object(mbed::FileHandle*)
              reference :  mbed::AT_CellularDevice::~AT_CellularDevice__sub_object()
              reference :  mbed::TELIT_ME310_CellularContext::TELIT_ME310_CellularContext(mbed::ATHandler&, mbed::CellularDevice*, const char*, bool, bool)
              reference :  mbed::TELIT_ME310_CellularNetwork::TELIT_ME310_CellularNetwork(mbed::ATHandler&, mbed::AT_CellularDevice&)
              reference :  mbed::ATHandler::at_cmd_discard(const char*, const char*, const char*, ...)
              reference :  mbed::ATHandler::unlock_return_error()
              reference :  mbed::ATHandler::lock()
              reference :  rtos::ThisThread::sleep_for(std::__1::chrono::duration<unsigned, std::__1::ratio<(long long)1, (long long)1000>>)
              reference :  mbed::AT_CellularDevice::get_context_list() const
              definition:  vtable for mbed::TELIT_ME310
              reference :  operator delete (void*)
              reference :  operator new(unsigned)
              reference :  gpio_init_out_ex
              reference :  mbed::DigitalOut::DigitalOut__sub_object(PinName, int)
              reference :  mbed::DigitalOut::operator =(int)
              reference :  _ZNSt3__18literals15chrono_literalsli2msEy
              reference :  _ZNSt3__18literals15chrono_literalsli1sEy
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/drivers/cellular/TELIT/ME310/TELIT_ME310_CellularContext.o.
              reference :  NetworkInterface::get_gateway(SocketAddress*)
              reference :  NetworkInterface::get_netmask(SocketAddress*)
              reference :  NetworkInterface::getaddrinfo(const char*, SocketAddress*, SocketAddress**, const char*)
              reference :  NetworkInterface::set_network(const SocketAddress&, const SocketAddress&, const SocketAddress&)
              reference :  NetworkInterface::gethostbyname(const char*, SocketAddress*, nsapi_version, const char*)
              reference :  NetworkInterface::add_dns_server(const SocketAddress&, const char*)
              reference :  NetworkInterface::get_dns_server(int, SocketAddress*, const char*)
              reference :  NetworkInterface::set_as_default()
              reference :  NetworkInterface::get_mac_address()
              reference :  NetworkInterface::getaddrinfo_async(const char*, SocketAddress*, mbed::Callback<void(int, SocketAddress*)>, const char*)
              reference :  NetworkInterface::gethostbyname_async(const char*, mbed::Callback<void(int, SocketAddress*)>, nsapi_version, const char*)
              reference :  NetworkInterface::gethostbyname_async_cancel(int)
              reference :  NetworkInterface::get_ipv6_link_local_address(SocketAddress*)
              reference :  NetworkInterface::set_dhcp(bool)
              reference :  CellularInterface::set_default_parameters()
              reference :  mbed::CellularContext::string_to_pdp_type(const char*)
              reference :  mbed::AT_CellularDevice::get_property(mbed::AT_CellularDevice::CellularProperty)
              reference :  mbed::AT_CellularContext::disconnect()
              reference :  mbed::AT_CellularContext::do_connect()
              reference :  mbed::AT_CellularContext::enable_hup(bool)
              reference :  mbed::AT_CellularContext::set_sim_pin(const char*)
              reference :  mbed::AT_CellularContext::get_cp_netif()
              reference :  mbed::AT_CellularContext::is_connected()
              reference :  mbed::AT_CellularContext::set_blocking(bool)
              reference :  mbed::AT_CellularContext::configure_hup(PinName, bool)
              reference :  mbed::AT_CellularContext::do_disconnect()
              reference :  mbed::AT_CellularContext::set_sim_ready()
              reference :  mbed::AT_CellularContext::get_ip_address(SocketAddress*)
              reference :  mbed::AT_CellularContext::set_disconnect()
              reference :  mbed::AT_CellularContext::set_credentials(const char*, const char*, const char*)
              reference :  mbed::AT_CellularContext::set_new_context(int)
              reference :  mbed::AT_CellularContext::activate_context()
              reference :  mbed::AT_CellularContext::get_rate_control(mbed::CellularContext::RateControlExceptionReports&, mbed::CellularContext::RateControlUplinkTimeUnit&, int&)
              reference :  mbed::AT_CellularContext::set_device_ready()
              reference :  mbed::AT_CellularContext::attach_to_network()
              reference :  mbed::AT_CellularContext::cellular_callback(nsapi_event, int)
              reference :  mbed::AT_CellularContext::deactivate_context()
              reference :  mbed::AT_CellularContext::get_interface_name(char*)
              reference :  mbed::AT_CellularContext::register_to_network()
              reference :  mbed::AT_CellularContext::deactivate_ip_context()
              reference :  mbed::AT_CellularContext::do_connect_with_retry()
              reference :  mbed::AT_CellularContext::get_apn_backoff_timer(int&)
              reference :  mbed::AT_CellularContext::get_pdpcontext_params(mbed::CellularList<mbed::CellularContext::pdpcontext_params_t>&)
              reference :  mbed::AT_CellularContext::do_user_authentication()
              reference :  mbed::AT_CellularContext::activate_non_ip_context()
              reference :  mbed::AT_CellularContext::setup_control_plane_opt()
              reference :  mbed::AT_CellularContext::deactivate_non_ip_context()
              reference :  mbed::AT_CellularContext::get_nonip_context_type_str()
              reference :  mbed::AT_CellularContext::pdp_type_t_to_cellular_property(mbed::CellularContext::pdp_type_t)
              reference :  mbed::AT_CellularContext::attach(mbed::Callback<void(nsapi_event, int)>)
              reference :  mbed::AT_CellularContext::connect(const char*, const char*, const char*, const char*)
              reference :  mbed::AT_CellularContext::connect()
              reference :  mbed::AT_CellularContext::set_plmn(const char*)
              reference :  mbed::AT_CellularContext::AT_CellularContext__sub_object(mbed::ATHandler&, mbed::CellularDevice*, const char*, bool, bool)
              reference :  mbed::AT_CellularContext::~AT_CellularContext__sub_object()
              reference :  mbed::TELIT_ME310_CellularStack::TELIT_ME310_CellularStack(mbed::ATHandler&, int, nsapi_ip_stack, mbed::AT_CellularDevice&)
              definition:  mbed::TELIT_ME310_CellularContext::get_context()
              definition:  mbed::TELIT_ME310_CellularContext::get_stack()
              definition:  mbed::TELIT_ME310_CellularContext::TELIT_ME310_CellularContext(mbed::ATHandler&, mbed::CellularDevice*, const char*, bool, bool)
              definition:  mbed::TELIT_ME310_CellularContext::TELIT_ME310_CellularContext__sub_object(mbed::ATHandler&, mbed::CellularDevice*, const char*, bool, bool)
              definition:  mbed::TELIT_ME310_CellularContext::~TELIT_ME310_CellularContext__deallocating()
              definition:  mbed::TELIT_ME310_CellularContext::~TELIT_ME310_CellularContext()
              definition:  mbed::TELIT_ME310_CellularContext::~TELIT_ME310_CellularContext__sub_object()
              reference :  mbed::ATHandler::resp_start(const char*, bool)
              reference :  mbed::ATHandler::read_string(char*, unsigned, bool)
              reference :  mbed::ATHandler::cmd_start_stop(const char*, const char*, const char*, ...)
              reference :  mbed::ATHandler::read_int()
              reference :  mbed::ATHandler::info_resp()
              reference :  mbed::ATHandler::resp_stop()
              reference :  mbed::AT_CellularContext::get_device() const
              reference :  mbed::AT_CellularContext::get_connection_status() const
              reference :  mbed::AT_CellularContext::get_timeout_for_operation(mbed::CellularContext::ContextOperation) const
              definition:  vtable for mbed::TELIT_ME310_CellularContext
              reference :  operator delete (void*)
              reference :  operator new(unsigned)
              reference :  __aeabi_memcpy
              reference :  strcmp
              reference :  NetworkInterface::ethInterface()
              reference :  NetworkInterface::wifiInterface()
              reference :  NetworkInterface::meshInterface()
              reference :  NetworkInterface::emacInterface()
              reference :  CellularInterface::cellularInterface()
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/drivers/cellular/TELIT/ME310/TELIT_ME310_CellularNetwork.o.
              reference :  mbed::AT_CellularNetwork::get_attach(mbed::CellularNetwork::AttachStatus&)
              reference :  mbed::AT_CellularNetwork::set_attach()
              reference :  mbed::AT_CellularNetwork::get_3gpp_error()
              reference :  mbed::AT_CellularNetwork::set_registration(const char*)
              reference :  mbed::AT_CellularNetwork::is_active_context(int*, int)
              reference :  mbed::AT_CellularNetwork::get_operator_names(mbed::CellularList<mbed::CellularNetwork::operator_names_t>&)
              reference :  mbed::AT_CellularNetwork::get_signal_quality(int&, int*)
              reference :  mbed::AT_CellularNetwork::set_receive_period(int, mbed::CellularNetwork::EDRXAccessTechnology, unsigned char)
              reference :  mbed::AT_CellularNetwork::get_operator_params(int&, mbed::CellularNetwork::operator_t&)
              reference :  mbed::AT_CellularNetwork::set_registration_urc(mbed::CellularNetwork::RegistrationType, bool)
              reference :  mbed::AT_CellularNetwork::set_access_technology(mbed::CellularNetwork::RadioAccessTechnology)
              reference :  mbed::AT_CellularNetwork::get_registration_params(mbed::CellularNetwork::RegistrationType, mbed::CellularNetwork::registration_params_t&)
              reference :  mbed::AT_CellularNetwork::get_registration_params(mbed::CellularNetwork::registration_params_t&)
              reference :  mbed::AT_CellularNetwork::get_context_state_command()
              reference :  mbed::AT_CellularNetwork::get_network_registering_mode(mbed::CellularNetwork::NWRegisteringMode&)
              reference :  mbed::AT_CellularNetwork::set_ciot_optimization_config(mbed::CellularNetwork::CIoT_Supported_Opt, mbed::CellularNetwork::CIoT_Preferred_UE_Opt, mbed::Callback<void(mbed::CellularNetwork::CIoT_Supported_Opt)>)
              reference :  mbed::AT_CellularNetwork::get_ciot_ue_optimization_config(mbed::CellularNetwork::CIoT_Supported_Opt&, mbed::CellularNetwork::CIoT_Preferred_UE_Opt&)
              reference :  mbed::AT_CellularNetwork::set_packet_domain_event_reporting(bool)
              reference :  mbed::AT_CellularNetwork::get_ciot_network_optimization_config(mbed::CellularNetwork::CIoT_Supported_Opt&)
              reference :  mbed::AT_CellularNetwork::clear()
              reference :  mbed::AT_CellularNetwork::attach(mbed::Callback<void(nsapi_event, int)>)
              reference :  mbed::AT_CellularNetwork::detach()
              reference :  mbed::AT_CellularNetwork::scan_plmn(mbed::CellularList<mbed::CellularNetwork::operator_t>&, int&)
              reference :  mbed::AT_CellularNetwork::AT_CellularNetwork__sub_object(mbed::ATHandler&, mbed::AT_CellularDevice&)
              reference :  mbed::AT_CellularNetwork::~AT_CellularNetwork__sub_object()
              definition:  mbed::TELIT_ME310_CellularNetwork::set_access_technology_impl(mbed::CellularNetwork::RadioAccessTechnology)
              definition:  mbed::TELIT_ME310_CellularNetwork::TELIT_ME310_CellularNetwork(mbed::ATHandler&, mbed::AT_CellularDevice&)
              definition:  mbed::TELIT_ME310_CellularNetwork::TELIT_ME310_CellularNetwork__sub_object(mbed::ATHandler&, mbed::AT_CellularDevice&)
              definition:  mbed::TELIT_ME310_CellularNetwork::~TELIT_ME310_CellularNetwork__deallocating()
              definition:  mbed::TELIT_ME310_CellularNetwork::~TELIT_ME310_CellularNetwork()
              definition:  mbed::TELIT_ME310_CellularNetwork::~TELIT_ME310_CellularNetwork__sub_object()
              definition:  vtable for mbed::TELIT_ME310_CellularNetwork
              reference :  operator delete (void*)
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/drivers/cellular/TELIT/ME310/TELIT_ME310_CellularStack.o.
              reference :  NetworkStack::getsockopt(void*, int, int, void*, unsigned*)
              reference :  NetworkStack::setsockopt(void*, int, int, const void*, unsigned)
              reference :  NetworkStack::getaddrinfo(const char*, SocketAddress*, SocketAddress**, const char*)
              reference :  NetworkStack::getstackopt(int, int, void*, unsigned*)
              reference :  NetworkStack::setstackopt(int, int, const void*, unsigned)
              reference :  NetworkStack::gethostbyname(const char*, SocketAddress*, nsapi_version, const char*)
              reference :  NetworkStack::add_dns_server(const SocketAddress&, const char*)
              reference :  NetworkStack::get_dns_server(int, SocketAddress*, const char*)
              reference :  NetworkStack::get_ip_address_if(SocketAddress*, const char*)
              reference :  NetworkStack::getaddrinfo_async(const char*, SocketAddress*, mbed::Callback<void(int, SocketAddress*)>, const char*)
              reference :  NetworkStack::gethostbyname_async(const char*, mbed::Callback<void(int, SocketAddress*)>, nsapi_version, const char*)
              reference :  NetworkStack::get_call_in_callback()
              reference :  NetworkStack::gethostbyname_async_cancel(int)
              reference :  NetworkStack::get_ipv6_link_local_address(SocketAddress*)
              reference :  NetworkStack::call_in(int, mbed::Callback<void()>)
              reference :  SocketAddress::set_ip_address(const char*)
              reference :  SocketAddress::operator =(const SocketAddress&)
              reference :  mbed::AT_CellularStack::find_socket(int)
              reference :  mbed::AT_CellularStack::socket_bind(void*, const SocketAddress&)
              reference :  mbed::AT_CellularStack::socket_open(void**, nsapi_protocol)
              reference :  mbed::AT_CellularStack::socket_recv(void*, void*, unsigned)
              reference :  mbed::AT_CellularStack::socket_send(void*, const void*, unsigned)
              reference :  mbed::AT_CellularStack::socket_close(void*)
              reference :  mbed::AT_CellularStack::socket_attach(void*, void(*)(void*), void*)
              reference :  mbed::AT_CellularStack::socket_sendto(void*, const SocketAddress&, const void*, unsigned)
              reference :  mbed::AT_CellularStack::get_ip_address(SocketAddress*)
              reference :  mbed::AT_CellularStack::socket_recvfrom(void*, SocketAddress*, void*, unsigned)
              reference :  mbed::AT_CellularStack::find_socket_index(void*)
              reference :  mbed::AT_CellularStack::AT_CellularStack__sub_object(mbed::ATHandler&, int, nsapi_ip_stack, mbed::AT_CellularDevice&)
              reference :  mbed::AT_CellularStack::~AT_CellularStack__sub_object()
              definition:  mbed::TELIT_ME310_CellularStack::socket_accept(void*, void**, SocketAddress*)
              definition:  mbed::TELIT_ME310_CellularStack::socket_listen(void*, int)
              definition:  mbed::TELIT_ME310_CellularStack::socket_connect(void*, const SocketAddress&)
              definition:  mbed::TELIT_ME310_CellularStack::socket_close_impl(int)
              definition:  mbed::TELIT_ME310_CellularStack::create_socket_impl(mbed::AT_CellularStack::CellularSocket*)
              definition:  mbed::TELIT_ME310_CellularStack::socket_sendto_impl(mbed::AT_CellularStack::CellularSocket*, const SocketAddress&, const void*, unsigned)
              definition:  mbed::TELIT_ME310_CellularStack::get_max_socket_count()
              definition:  mbed::TELIT_ME310_CellularStack::socket_recvfrom_impl(mbed::AT_CellularStack::CellularSocket*, SocketAddress*, void*, unsigned)
              definition:  mbed::TELIT_ME310_CellularStack::is_protocol_supported(nsapi_protocol)
              definition:  mbed::TELIT_ME310_CellularStack::activate_ipeasy_context(int)
              definition:  mbed::TELIT_ME310_CellularStack::deactivate_ipeasy_context(int)
              definition:  mbed::TELIT_ME310_CellularStack::is_ipeasy_context_activated(int)
              definition:  mbed::TELIT_ME310_CellularStack::urc_sring()
              definition:  mbed::TELIT_ME310_CellularStack::TELIT_ME310_CellularStack(mbed::ATHandler&, int, nsapi_ip_stack, mbed::AT_CellularDevice&)
              definition:  mbed::TELIT_ME310_CellularStack::TELIT_ME310_CellularStack__sub_object(mbed::ATHandler&, int, nsapi_ip_stack, mbed::AT_CellularDevice&)
              definition:  mbed::TELIT_ME310_CellularStack::~TELIT_ME310_CellularStack__deallocating()
              definition:  mbed::TELIT_ME310_CellularStack::~TELIT_ME310_CellularStack()
              definition:  mbed::TELIT_ME310_CellularStack::~TELIT_ME310_CellularStack__sub_object()
              reference :  mbed::Timer::Timer()
              weak defn :  T1 mbed::detail::invoke_r<void, void(mbed::TELIT_ME310_CellularStack::*const &)(), <mbed::TELIT_ME310_CellularStack*const &>, (int)0>(T2&&, T3&&...)
              weak defn :  T1 mbed::detail::invoke_r<void, mbed::Callback<void()>::Callback<mbed::TELIT_ME310_CellularStack*, void(mbed::TELIT_ME310_CellularStack::*)(), (int)0>(T1, T2)::[lambda() (instance 1)]&, <>, (int)0>(T2&&, T3&&...)
              weak defn :  void mbed::Callback<void()>::target_call<mbed::Callback<void()>::Callback<mbed::TELIT_ME310_CellularStack*, void(mbed::TELIT_ME310_CellularStack::*)(), (int)0>(T1, T2)::[lambda() (instance 1)]>(const mbed::detail::CallbackBase*)
              weak defn :  void mbed::Callback<void()>::generate<mbed::Callback<void()>::Callback<mbed::TELIT_ME310_CellularStack*, void(mbed::TELIT_ME310_CellularStack::*)(), (int)0>(T1, T2)::[lambda() (instance 1)], void>(T1&&)
              weak defn :  mbed::Callback<void()>::Callback__sub_object<mbed::TELIT_ME310_CellularStack*, void(mbed::TELIT_ME310_CellularStack::*)(), (int)0>(T1, T2)
              reference :  mbed::ATHandler::read_bytes(unsigned char*, unsigned)
              reference :  mbed::ATHandler::resp_start(const char*, bool)
              reference :  mbed::ATHandler::skip_param(unsigned)
              reference :  mbed::ATHandler::clear_error()
              reference :  mbed::ATHandler::process_oob()
              reference :  mbed::ATHandler::read_string(char*, unsigned, bool)
              reference :  mbed::ATHandler::write_bytes(const unsigned char*, unsigned)
              reference :  mbed::ATHandler::at_cmd_discard(const char*, const char*, const char*, ...)
              reference :  mbed::ATHandler::cmd_start_stop(const char*, const char*, const char*, ...)
              reference :  mbed::ATHandler::set_at_timeout(unsigned, bool)
              reference :  mbed::ATHandler::set_urc_handler(const char*, mbed::Callback<void()>)
              reference :  mbed::ATHandler::restore_at_timeout()
              reference :  mbed::ATHandler::unlock_return_error()
              reference :  mbed::ATHandler::lock()
              reference :  mbed::ATHandler::unlock()
              reference :  mbed::ATHandler::cmd_stop()
              reference :  mbed::ATHandler::read_int()
              reference :  mbed::ATHandler::cmd_start(const char*)
              reference :  mbed::ATHandler::resp_stop()
              reference :  mbed::TimerBase::stop()
              reference :  mbed::TimerBase::start()
              reference :  mbed::TimerBase::~TimerBase__sub_object()
              weak defn :  std::__1::enable_if<((std::is_function<T2>::value&&(!std::is_base_of<T1, std::__1::decay<T3>::type>::value))&&(!is_reference_wrapper<std::__1::decay<T3>::type>::value)), decltype((((*std::forward<T3>(param#2)).*param#1)(std::forward<T4>(param#3)...)))>::type mstd::impl::INVOKE<mbed::TELIT_ME310_CellularStack, void(), mbed::TELIT_ME310_CellularStack*const &, <>>(T2T1::*, T3&&, T4&&...)
              weak defn :  std::__1::enable_if<((!std::is_member_pointer<std::__1::decay<T1>::type>::value)||(std::is_member_object_pointer<std::__1::decay<T1>::type>::value&&(sizeof...(param#2)!=(int)1))), decltype((std::forward<T1>(param#1)(std::forward<T2>(param#2)...)))>::type mstd::impl::INVOKE<mbed::Callback<void()>::Callback<mbed::TELIT_ME310_CellularStack*, void(mbed::TELIT_ME310_CellularStack::*)(), (int)0>(T1, T2)::[lambda() (instance 1)]&, <>>(T1&&, T2&&...)
              weak defn :  mstd::invoke_result<T1, <T2...>>::type mstd::invoke<void(mbed::TELIT_ME310_CellularStack::*const &)(), <mbed::TELIT_ME310_CellularStack*const &>>(T1&&, T2&&...)
              weak defn :  mstd::invoke_result<T1, <T2...>>::type mstd::invoke<mbed::Callback<void()>::Callback<mbed::TELIT_ME310_CellularStack*, void(mbed::TELIT_ME310_CellularStack::*)(), (int)0>(T1, T2)::[lambda() (instance 1)]&, <>>(T1&&, T2&&...)
              reference :  SocketAddress::get_ip_address() const
              reference :  mbed::ATHandler::get_last_error() const
              reference :  mbed::TimerBase::elapsed_time() const
              definition:  vtable for mbed::TELIT_ME310_CellularStack
              weak defn :  mbed::Callback<void()>::Callback<mbed::TELIT_ME310_CellularStack*, void(mbed::TELIT_ME310_CellularStack::*)(), (int)0>(T1, T2)::[lambda() (instance 1)]::operator ()() const
              reference :  operator delete (void*)
              reference :  mbed_assert_internal
              reference :  SocketAddress::get_port() const
              reference :  SocketAddress::set_port(unsigned short)
              reference :  NetworkStack::onboardNetworkStack()
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/drivers/cellular/TELIT/ME910/TELIT_ME910.o.
              definition:  mbed::TELIT_ME910::hard_power_on()
              definition:  mbed::TELIT_ME910::soft_power_on()
              definition:  mbed::TELIT_ME910::hard_power_off()
              definition:  mbed::TELIT_ME910::soft_power_off()
              definition:  mbed::TELIT_ME910::open_network_impl(mbed::ATHandler&)
              definition:  mbed::TELIT_ME910::create_context_impl(mbed::ATHandler&, const char*, bool, bool)
              definition:  mbed::TELIT_ME910::init()
              definition:  mbed::TELIT_ME910::TELIT_ME910(mbed::FileHandle*, PinName, bool)
              definition:  mbed::TELIT_ME910::TELIT_ME910__sub_object(mbed::FileHandle*, PinName, bool)
              weak defn :  mbed::TELIT_ME910::~TELIT_ME910__deallocating()
              reference :  mbed::CellularDevice::get_queue()
              reference :  mbed::AT_CellularDevice::set_timeout(int)
              reference :  mbed::AT_CellularDevice::open_network()
              reference :  mbed::AT_CellularDevice::set_ready_cb(mbed::Callback<void()>)
              reference :  mbed::AT_CellularDevice::close_network()
              reference :  mbed::AT_CellularDevice::get_sim_state(mbed::CellularDevice::SimState&)
              reference :  mbed::AT_CellularDevice::set_baud_rate(int)
              reference :  mbed::AT_CellularDevice::create_context(const char*, bool, bool)
              reference :  mbed::AT_CellularDevice::delete_context(mbed::CellularContext*)
              reference :  mbed::AT_CellularDevice::get_at_handler()
              reference :  mbed::AT_CellularDevice::modem_debug_on(bool)
              reference :  mbed::AT_CellularDevice::soft_power_off()
              reference :  mbed::AT_CellularDevice::open_information()
              reference :  mbed::AT_CellularDevice::set_at_urcs_impl()
              reference :  mbed::AT_CellularDevice::cellular_callback(nsapi_event, int, mbed::CellularContext*)
              reference :  mbed::AT_CellularDevice::close_information()
              reference :  mbed::AT_CellularDevice::set_baud_rate_impl(int)
              reference :  mbed::AT_CellularDevice::set_power_save_mode(int, int)
              reference :  mbed::AT_CellularDevice::open_information_impl(mbed::ATHandler&)
              reference :  mbed::AT_CellularDevice::set_cellular_properties(const int*)
              reference :  mbed::AT_CellularDevice::init()
              reference :  mbed::AT_CellularDevice::clear()
              reference :  mbed::AT_CellularDevice::set_pin(const char*)
              reference :  mbed::AT_CellularDevice::is_ready()
              reference :  mbed::AT_CellularDevice::shutdown()
              reference :  mbed::AT_CellularDevice::AT_CellularDevice__sub_object(mbed::FileHandle*)
              reference :  mbed::AT_CellularDevice::~AT_CellularDevice__sub_object()
              reference :  mbed::TELIT_ME910_CellularContext::TELIT_ME910_CellularContext(mbed::ATHandler&, mbed::CellularDevice*, const char*, bool, bool)
              reference :  mbed::TELIT_ME910_CellularNetwork::TELIT_ME910_CellularNetwork(mbed::ATHandler&, mbed::AT_CellularDevice&)
              reference :  mbed::ATHandler::at_cmd_discard(const char*, const char*, const char*, ...)
              reference :  mbed::ATHandler::unlock_return_error()
              reference :  mbed::ATHandler::lock()
              reference :  rtos::ThisThread::sleep_for(std::__1::chrono::duration<unsigned, std::__1::ratio<(long long)1, (long long)1000>>)
              reference :  mbed::AT_CellularDevice::get_context_list() const
              definition:  vtable for mbed::TELIT_ME910
              reference :  operator delete (void*)
              reference :  operator new(unsigned)
              reference :  gpio_init_out_ex
              reference :  mbed::DigitalOut::DigitalOut__sub_object(PinName, int)
              reference :  mbed::DigitalOut::operator =(int)
              reference :  _ZNSt3__18literals15chrono_literalsli2msEy
              reference :  _ZNSt3__18literals15chrono_literalsli1sEy
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/drivers/cellular/TELIT/ME910/TELIT_ME910_CellularContext.o.
              reference :  NetworkInterface::get_gateway(SocketAddress*)
              reference :  NetworkInterface::get_netmask(SocketAddress*)
              reference :  NetworkInterface::getaddrinfo(const char*, SocketAddress*, SocketAddress**, const char*)
              reference :  NetworkInterface::set_network(const SocketAddress&, const SocketAddress&, const SocketAddress&)
              reference :  NetworkInterface::gethostbyname(const char*, SocketAddress*, nsapi_version, const char*)
              reference :  NetworkInterface::add_dns_server(const SocketAddress&, const char*)
              reference :  NetworkInterface::get_dns_server(int, SocketAddress*, const char*)
              reference :  NetworkInterface::set_as_default()
              reference :  NetworkInterface::get_mac_address()
              reference :  NetworkInterface::getaddrinfo_async(const char*, SocketAddress*, mbed::Callback<void(int, SocketAddress*)>, const char*)
              reference :  NetworkInterface::gethostbyname_async(const char*, mbed::Callback<void(int, SocketAddress*)>, nsapi_version, const char*)
              reference :  NetworkInterface::gethostbyname_async_cancel(int)
              reference :  NetworkInterface::get_ipv6_link_local_address(SocketAddress*)
              reference :  NetworkInterface::set_dhcp(bool)
              reference :  CellularInterface::set_default_parameters()
              reference :  mbed::CellularContext::string_to_pdp_type(const char*)
              reference :  mbed::AT_CellularDevice::get_property(mbed::AT_CellularDevice::CellularProperty)
              reference :  mbed::AT_CellularContext::disconnect()
              reference :  mbed::AT_CellularContext::do_connect()
              reference :  mbed::AT_CellularContext::enable_hup(bool)
              reference :  mbed::AT_CellularContext::set_sim_pin(const char*)
              reference :  mbed::AT_CellularContext::get_cp_netif()
              reference :  mbed::AT_CellularContext::is_connected()
              reference :  mbed::AT_CellularContext::set_blocking(bool)
              reference :  mbed::AT_CellularContext::configure_hup(PinName, bool)
              reference :  mbed::AT_CellularContext::do_disconnect()
              reference :  mbed::AT_CellularContext::set_sim_ready()
              reference :  mbed::AT_CellularContext::get_ip_address(SocketAddress*)
              reference :  mbed::AT_CellularContext::set_disconnect()
              reference :  mbed::AT_CellularContext::set_credentials(const char*, const char*, const char*)
              reference :  mbed::AT_CellularContext::set_new_context(int)
              reference :  mbed::AT_CellularContext::activate_context()
              reference :  mbed::AT_CellularContext::get_rate_control(mbed::CellularContext::RateControlExceptionReports&, mbed::CellularContext::RateControlUplinkTimeUnit&, int&)
              reference :  mbed::AT_CellularContext::set_device_ready()
              reference :  mbed::AT_CellularContext::attach_to_network()
              reference :  mbed::AT_CellularContext::cellular_callback(nsapi_event, int)
              reference :  mbed::AT_CellularContext::deactivate_context()
              reference :  mbed::AT_CellularContext::get_interface_name(char*)
              reference :  mbed::AT_CellularContext::register_to_network()
              reference :  mbed::AT_CellularContext::deactivate_ip_context()
              reference :  mbed::AT_CellularContext::do_connect_with_retry()
              reference :  mbed::AT_CellularContext::get_apn_backoff_timer(int&)
              reference :  mbed::AT_CellularContext::get_pdpcontext_params(mbed::CellularList<mbed::CellularContext::pdpcontext_params_t>&)
              reference :  mbed::AT_CellularContext::do_user_authentication()
              reference :  mbed::AT_CellularContext::activate_non_ip_context()
              reference :  mbed::AT_CellularContext::setup_control_plane_opt()
              reference :  mbed::AT_CellularContext::deactivate_non_ip_context()
              reference :  mbed::AT_CellularContext::get_nonip_context_type_str()
              reference :  mbed::AT_CellularContext::pdp_type_t_to_cellular_property(mbed::CellularContext::pdp_type_t)
              reference :  mbed::AT_CellularContext::attach(mbed::Callback<void(nsapi_event, int)>)
              reference :  mbed::AT_CellularContext::connect(const char*, const char*, const char*, const char*)
              reference :  mbed::AT_CellularContext::connect()
              reference :  mbed::AT_CellularContext::set_plmn(const char*)
              reference :  mbed::AT_CellularContext::get_stack()
              reference :  mbed::AT_CellularContext::AT_CellularContext__sub_object(mbed::ATHandler&, mbed::CellularDevice*, const char*, bool, bool)
              reference :  mbed::AT_CellularContext::~AT_CellularContext__sub_object()
              definition:  mbed::TELIT_ME910_CellularContext::get_context()
              definition:  mbed::TELIT_ME910_CellularContext::TELIT_ME910_CellularContext(mbed::ATHandler&, mbed::CellularDevice*, const char*, bool, bool)
              definition:  mbed::TELIT_ME910_CellularContext::TELIT_ME910_CellularContext__sub_object(mbed::ATHandler&, mbed::CellularDevice*, const char*, bool, bool)
              definition:  mbed::TELIT_ME910_CellularContext::~TELIT_ME910_CellularContext__deallocating()
              definition:  mbed::TELIT_ME910_CellularContext::~TELIT_ME910_CellularContext()
              definition:  mbed::TELIT_ME910_CellularContext::~TELIT_ME910_CellularContext__sub_object()
              reference :  mbed::ATHandler::resp_start(const char*, bool)
              reference :  mbed::ATHandler::read_string(char*, unsigned, bool)
              reference :  mbed::ATHandler::cmd_start_stop(const char*, const char*, const char*, ...)
              reference :  mbed::ATHandler::read_int()
              reference :  mbed::ATHandler::info_resp()
              reference :  mbed::ATHandler::resp_stop()
              reference :  mbed::AT_CellularContext::get_device() const
              reference :  mbed::AT_CellularContext::get_connection_status() const
              reference :  mbed::AT_CellularContext::get_timeout_for_operation(mbed::CellularContext::ContextOperation) const
              definition:  vtable for mbed::TELIT_ME910_CellularContext
              reference :  operator delete (void*)
              reference :  __aeabi_memcpy
              reference :  strcmp
              reference :  NetworkInterface::ethInterface()
              reference :  NetworkInterface::wifiInterface()
              reference :  NetworkInterface::meshInterface()
              reference :  NetworkInterface::emacInterface()
              reference :  CellularInterface::cellularInterface()
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/drivers/cellular/TELIT/ME910/TELIT_ME910_CellularNetwork.o.
              reference :  mbed::AT_CellularNetwork::get_attach(mbed::CellularNetwork::AttachStatus&)
              reference :  mbed::AT_CellularNetwork::set_attach()
              reference :  mbed::AT_CellularNetwork::get_3gpp_error()
              reference :  mbed::AT_CellularNetwork::set_registration(const char*)
              reference :  mbed::AT_CellularNetwork::is_active_context(int*, int)
              reference :  mbed::AT_CellularNetwork::get_operator_names(mbed::CellularList<mbed::CellularNetwork::operator_names_t>&)
              reference :  mbed::AT_CellularNetwork::get_signal_quality(int&, int*)
              reference :  mbed::AT_CellularNetwork::set_receive_period(int, mbed::CellularNetwork::EDRXAccessTechnology, unsigned char)
              reference :  mbed::AT_CellularNetwork::get_operator_params(int&, mbed::CellularNetwork::operator_t&)
              reference :  mbed::AT_CellularNetwork::set_registration_urc(mbed::CellularNetwork::RegistrationType, bool)
              reference :  mbed::AT_CellularNetwork::set_access_technology(mbed::CellularNetwork::RadioAccessTechnology)
              reference :  mbed::AT_CellularNetwork::get_registration_params(mbed::CellularNetwork::RegistrationType, mbed::CellularNetwork::registration_params_t&)
              reference :  mbed::AT_CellularNetwork::get_registration_params(mbed::CellularNetwork::registration_params_t&)
              reference :  mbed::AT_CellularNetwork::get_context_state_command()
              reference :  mbed::AT_CellularNetwork::get_network_registering_mode(mbed::CellularNetwork::NWRegisteringMode&)
              reference :  mbed::AT_CellularNetwork::set_ciot_optimization_config(mbed::CellularNetwork::CIoT_Supported_Opt, mbed::CellularNetwork::CIoT_Preferred_UE_Opt, mbed::Callback<void(mbed::CellularNetwork::CIoT_Supported_Opt)>)
              reference :  mbed::AT_CellularNetwork::get_ciot_ue_optimization_config(mbed::CellularNetwork::CIoT_Supported_Opt&, mbed::CellularNetwork::CIoT_Preferred_UE_Opt&)
              reference :  mbed::AT_CellularNetwork::set_packet_domain_event_reporting(bool)
              reference :  mbed::AT_CellularNetwork::get_ciot_network_optimization_config(mbed::CellularNetwork::CIoT_Supported_Opt&)
              reference :  mbed::AT_CellularNetwork::clear()
              reference :  mbed::AT_CellularNetwork::attach(mbed::Callback<void(nsapi_event, int)>)
              reference :  mbed::AT_CellularNetwork::detach()
              reference :  mbed::AT_CellularNetwork::scan_plmn(mbed::CellularList<mbed::CellularNetwork::operator_t>&, int&)
              reference :  mbed::AT_CellularNetwork::AT_CellularNetwork__sub_object(mbed::ATHandler&, mbed::AT_CellularDevice&)
              reference :  mbed::AT_CellularNetwork::~AT_CellularNetwork__sub_object()
              definition:  mbed::TELIT_ME910_CellularNetwork::set_access_technology_impl(mbed::CellularNetwork::RadioAccessTechnology)
              definition:  mbed::TELIT_ME910_CellularNetwork::TELIT_ME910_CellularNetwork(mbed::ATHandler&, mbed::AT_CellularDevice&)
              definition:  mbed::TELIT_ME910_CellularNetwork::TELIT_ME910_CellularNetwork__sub_object(mbed::ATHandler&, mbed::AT_CellularDevice&)
              definition:  mbed::TELIT_ME910_CellularNetwork::~TELIT_ME910_CellularNetwork__deallocating()
              definition:  mbed::TELIT_ME910_CellularNetwork::~TELIT_ME910_CellularNetwork()
              definition:  mbed::TELIT_ME910_CellularNetwork::~TELIT_ME910_CellularNetwork__sub_object()
              definition:  vtable for mbed::TELIT_ME910_CellularNetwork
              reference :  operator delete (void*)
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/drivers/cellular/UBLOX/AT/UBLOX_AT.o.
              reference :  apnconfig(const char*)
              reference :  mbed::CellularDevice::get_queue()
              reference :  mbed::AT_CellularDevice::set_timeout(int)
              reference :  mbed::AT_CellularDevice::open_network()
              reference :  mbed::AT_CellularDevice::set_ready_cb(mbed::Callback<void()>)
              reference :  mbed::AT_CellularDevice::close_network()
              reference :  mbed::AT_CellularDevice::get_sim_state(mbed::CellularDevice::SimState&)
              reference :  mbed::AT_CellularDevice::hard_power_on()
              reference :  mbed::AT_CellularDevice::set_baud_rate(int)
              reference :  mbed::AT_CellularDevice::soft_power_on()
              reference :  mbed::AT_CellularDevice::create_context(const char*, bool, bool)
              reference :  mbed::AT_CellularDevice::delete_context(mbed::CellularContext*)
              reference :  mbed::AT_CellularDevice::get_at_handler()
              reference :  mbed::AT_CellularDevice::hard_power_off()
              reference :  mbed::AT_CellularDevice::modem_debug_on(bool)
              reference :  mbed::AT_CellularDevice::soft_power_off()
              reference :  mbed::AT_CellularDevice::open_information()
              reference :  mbed::AT_CellularDevice::set_at_urcs_impl()
              reference :  mbed::AT_CellularDevice::setup_at_handler()
              reference :  mbed::AT_CellularDevice::cellular_callback(nsapi_event, int, mbed::CellularContext*)
              reference :  mbed::AT_CellularDevice::close_information()
              reference :  mbed::AT_CellularDevice::set_baud_rate_impl(int)
              reference :  mbed::AT_CellularDevice::set_power_save_mode(int, int)
              reference :  mbed::AT_CellularDevice::open_information_impl(mbed::ATHandler&)
              reference :  mbed::AT_CellularDevice::set_cellular_properties(const int*)
              reference :  mbed::AT_CellularDevice::clear()
              reference :  mbed::AT_CellularDevice::set_pin(const char*)
              reference :  mbed::AT_CellularDevice::is_ready()
              reference :  mbed::AT_CellularDevice::shutdown()
              reference :  mbed::AT_CellularDevice::AT_CellularDevice__sub_object(mbed::FileHandle*)
              reference :  mbed::AT_CellularDevice::~AT_CellularDevice__sub_object()
              reference :  mbed::UBLOX_AT_CellularContext::get_next_credentials(char**)
              reference :  mbed::UBLOX_AT_CellularContext::nsapi_security_to_modem_security(mbed::CellularContext::AuthenticationType)
              reference :  mbed::UBLOX_AT_CellularContext::get_apn()
              reference :  mbed::UBLOX_AT_CellularContext::get_pwd()
              reference :  mbed::UBLOX_AT_CellularContext::get_auth()
              reference :  mbed::UBLOX_AT_CellularContext::get_uname()
              reference :  mbed::UBLOX_AT_CellularContext::UBLOX_AT_CellularContext(mbed::ATHandler&, mbed::CellularDevice*, const char*, bool, bool)
              reference :  mbed::UBLOX_AT_CellularNetwork::UBLOX_AT_CellularNetwork(mbed::ATHandler&, mbed::AT_CellularDevice&)
              definition:  mbed::UBLOX_AT::open_network_impl(mbed::ATHandler&)
              definition:  mbed::UBLOX_AT::create_context_impl(mbed::ATHandler&, const char*, bool, bool)
              definition:  mbed::UBLOX_AT::set_authentication_parameters(const char*, const char*, const char*, mbed::CellularContext::AuthenticationType)
              definition:  mbed::UBLOX_AT::config_authentication_parameters()
              definition:  mbed::UBLOX_AT::init()
              definition:  mbed::UBLOX_AT::get_imsi(char*)
              definition:  mbed::UBLOX_AT::UBLOX_AT(mbed::FileHandle*)
              definition:  mbed::UBLOX_AT::UBLOX_AT__sub_object(mbed::FileHandle*)
              weak defn :  mbed::UBLOX_AT::~UBLOX_AT__deallocating()
              reference :  mbed::ATHandler::at_cmd_str(const char*, const char*, char*, unsigned, const char*, ...)
              reference :  mbed::ATHandler::at_cmd_discard(const char*, const char*, const char*, ...)
              reference :  mbed::ATHandler::lock()
              reference :  mbed::ATHandler::flush()
              reference :  mbed::ATHandler::unlock()
              reference :  mbed::AT_CellularDevice::get_context_list() const
              definition:  vtable for mbed::UBLOX_AT
              reference :  operator delete (void*)
              reference :  operator new(unsigned)
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/drivers/cellular/UBLOX/AT/UBLOX_AT_CellularContext.o.
              reference :  apnconfig(const char*)
              reference :  NetworkInterface::get_netmask(SocketAddress*)
              reference :  NetworkInterface::getaddrinfo(const char*, SocketAddress*, SocketAddress**, const char*)
              reference :  NetworkInterface::set_network(const SocketAddress&, const SocketAddress&, const SocketAddress&)
              reference :  NetworkInterface::gethostbyname(const char*, SocketAddress*, nsapi_version, const char*)
              reference :  NetworkInterface::add_dns_server(const SocketAddress&, const char*)
              reference :  NetworkInterface::get_dns_server(int, SocketAddress*, const char*)
              reference :  NetworkInterface::set_as_default()
              reference :  NetworkInterface::get_mac_address()
              reference :  NetworkInterface::getaddrinfo_async(const char*, SocketAddress*, mbed::Callback<void(int, SocketAddress*)>, const char*)
              reference :  NetworkInterface::gethostbyname_async(const char*, mbed::Callback<void(int, SocketAddress*)>, nsapi_version, const char*)
              reference :  NetworkInterface::gethostbyname_async_cancel(int)
              reference :  NetworkInterface::get_ipv6_link_local_address(SocketAddress*)
              reference :  NetworkInterface::set_dhcp(bool)
              reference :  CellularInterface::set_default_parameters()
              reference :  mbed::AT_CellularContext::disconnect()
              reference :  mbed::AT_CellularContext::enable_hup(bool)
              reference :  mbed::AT_CellularContext::get_context()
              reference :  mbed::AT_CellularContext::set_sim_pin(const char*)
              reference :  mbed::AT_CellularContext::get_cp_netif()
              reference :  mbed::AT_CellularContext::is_connected()
              reference :  mbed::AT_CellularContext::set_blocking(bool)
              reference :  mbed::AT_CellularContext::configure_hup(PinName, bool)
              reference :  mbed::AT_CellularContext::do_disconnect()
              reference :  mbed::AT_CellularContext::set_sim_ready()
              reference :  mbed::AT_CellularContext::get_ip_address(SocketAddress*)
              reference :  mbed::AT_CellularContext::set_disconnect()
              reference :  mbed::AT_CellularContext::set_credentials(const char*, const char*, const char*)
              reference :  mbed::AT_CellularContext::activate_context()
              reference :  mbed::AT_CellularContext::get_rate_control(mbed::CellularContext::RateControlExceptionReports&, mbed::CellularContext::RateControlUplinkTimeUnit&, int&)
              reference :  mbed::AT_CellularContext::set_device_ready()
              reference :  mbed::AT_CellularContext::attach_to_network()
              reference :  mbed::AT_CellularContext::cellular_callback(nsapi_event, int)
              reference :  mbed::AT_CellularContext::deactivate_context()
              reference :  mbed::AT_CellularContext::get_interface_name(char*)
              reference :  mbed::AT_CellularContext::register_to_network()
              reference :  mbed::AT_CellularContext::deactivate_ip_context()
              reference :  mbed::AT_CellularContext::do_connect_with_retry()
              reference :  mbed::AT_CellularContext::get_apn_backoff_timer(int&)
              reference :  mbed::AT_CellularContext::get_pdpcontext_params(mbed::CellularList<mbed::CellularContext::pdpcontext_params_t>&)
              reference :  mbed::AT_CellularContext::do_user_authentication()
              reference :  mbed::AT_CellularContext::activate_non_ip_context()
              reference :  mbed::AT_CellularContext::setup_control_plane_opt()
              reference :  mbed::AT_CellularContext::deactivate_non_ip_context()
              reference :  mbed::AT_CellularContext::get_nonip_context_type_str()
              reference :  mbed::AT_CellularContext::attach(mbed::Callback<void(nsapi_event, int)>)
              reference :  mbed::AT_CellularContext::connect(const char*, const char*, const char*, const char*)
              reference :  mbed::AT_CellularContext::connect()
              reference :  mbed::AT_CellularContext::set_plmn(const char*)
              reference :  mbed::AT_CellularContext::AT_CellularContext__sub_object(mbed::ATHandler&, mbed::CellularDevice*, const char*, bool, bool)
              reference :  mbed::AT_CellularContext::~AT_CellularContext__sub_object()
              reference :  mbed::UBLOX_AT_CellularStack::UBLOX_AT_CellularStack(mbed::ATHandler&, int, nsapi_ip_stack, mbed::AT_CellularDevice&)
              definition:  mbed::UBLOX_AT_CellularContext::do_connect()
              definition:  mbed::UBLOX_AT_CellularContext::get_gateway(SocketAddress*)
              definition:  mbed::UBLOX_AT_CellularContext::do_disconnect()
              definition:  mbed::UBLOX_AT_CellularContext::define_context()
              definition:  mbed::UBLOX_AT_CellularContext::activate_profile(const char*, const char*, const char*, mbed::CellularContext::AuthenticationType)
              definition:  mbed::UBLOX_AT_CellularContext::get_next_credentials(char**)
              definition:  mbed::UBLOX_AT_CellularContext::disconnect_modem_stack()
              definition:  mbed::UBLOX_AT_CellularContext::nsapi_security_to_modem_security(mbed::CellularContext::AuthenticationType)
              definition:  mbed::UBLOX_AT_CellularContext::get_apn()
              definition:  mbed::UBLOX_AT_CellularContext::get_pwd()
              definition:  mbed::UBLOX_AT_CellularContext::get_auth()
              definition:  mbed::UBLOX_AT_CellularContext::get_imsi(char*)
              definition:  mbed::UBLOX_AT_CellularContext::get_stack()
              definition:  mbed::UBLOX_AT_CellularContext::get_uname()
              definition:  mbed::UBLOX_AT_CellularContext::UBLOX_AT_CellularContext(mbed::ATHandler&, mbed::CellularDevice*, const char*, bool, bool)
              definition:  mbed::UBLOX_AT_CellularContext::UBLOX_AT_CellularContext__sub_object(mbed::ATHandler&, mbed::CellularDevice*, const char*, bool, bool)
              definition:  mbed::UBLOX_AT_CellularContext::~UBLOX_AT_CellularContext__deallocating()
              definition:  mbed::UBLOX_AT_CellularContext::~UBLOX_AT_CellularContext()
              definition:  mbed::UBLOX_AT_CellularContext::~UBLOX_AT_CellularContext__sub_object()
              reference :  mbed::ATHandler::resp_start(const char*, bool)
              reference :  mbed::ATHandler::skip_param(unsigned)
              reference :  mbed::ATHandler::read_string(char*, unsigned, bool)
              reference :  mbed::ATHandler::at_cmd_discard(const char*, const char*, const char*, ...)
              reference :  mbed::ATHandler::cmd_start_stop(const char*, const char*, const char*, ...)
              reference :  mbed::ATHandler::set_at_timeout(std::__1::chrono::duration<unsigned, std::__1::ratio<(long long)1, (long long)1000>>, bool)
              reference :  mbed::ATHandler::restore_at_timeout()
              reference :  mbed::ATHandler::unlock_return_error()
              reference :  mbed::ATHandler::lock()
              reference :  mbed::ATHandler::unlock()
              reference :  mbed::ATHandler::read_int()
              reference :  mbed::ATHandler::resp_stop()
              reference :  rtos::ThisThread::sleep_for(std::__1::chrono::duration<unsigned, std::__1::ratio<(long long)1, (long long)1000>>)
              reference :  rtos::Kernel::impl::get_tick_count()
              reference :  mbed::AT_CellularContext::get_device() const
              reference :  mbed::AT_CellularContext::get_connection_status() const
              reference :  mbed::AT_CellularContext::get_timeout_for_operation(mbed::CellularContext::ContextOperation) const
              reference :  mbed::ATHandler::get_last_error() const
              definition:  vtable for mbed::UBLOX_AT_CellularContext
              reference :  operator delete[] (void*)
              reference :  operator delete (void*)
              reference :  operator new(unsigned)
              reference :  mbed_assert_internal
              reference :  strlen
              reference :  mbed::Callback<void(nsapi_event, int)>::operator bool() const
              reference :  mbed::Callback<void(nsapi_event, int)>::operator ()(nsapi_event, int) const
              reference :  SocketAddress::SocketAddress__sub_object()
              reference :  SocketAddress::~SocketAddress__sub_object()
              reference :  _ZNSt3__18literals15chrono_literalsli1sEy
              reference :  rtos::Kernel::Clock::now()
              reference :  _ZNSt3__18literals15chrono_literalsli3minEy
              reference :  NetworkInterface::ethInterface()
              reference :  NetworkInterface::wifiInterface()
              reference :  NetworkInterface::meshInterface()
              reference :  NetworkInterface::emacInterface()
              reference :  CellularInterface::cellularInterface()
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/drivers/cellular/UBLOX/AT/UBLOX_AT_CellularNetwork.o.
              reference :  mbed::AT_CellularNetwork::get_attach(mbed::CellularNetwork::AttachStatus&)
              reference :  mbed::AT_CellularNetwork::set_attach()
              reference :  mbed::AT_CellularNetwork::get_3gpp_error()
              reference :  mbed::AT_CellularNetwork::set_registration(const char*)
              reference :  mbed::AT_CellularNetwork::is_active_context(int*, int)
              reference :  mbed::AT_CellularNetwork::get_operator_names(mbed::CellularList<mbed::CellularNetwork::operator_names_t>&)
              reference :  mbed::AT_CellularNetwork::get_signal_quality(int&, int*)
              reference :  mbed::AT_CellularNetwork::set_receive_period(int, mbed::CellularNetwork::EDRXAccessTechnology, unsigned char)
              reference :  mbed::AT_CellularNetwork::get_operator_params(int&, mbed::CellularNetwork::operator_t&)
              reference :  mbed::AT_CellularNetwork::set_registration_urc(mbed::CellularNetwork::RegistrationType, bool)
              reference :  mbed::AT_CellularNetwork::set_access_technology(mbed::CellularNetwork::RadioAccessTechnology)
              reference :  mbed::AT_CellularNetwork::get_registration_params(mbed::CellularNetwork::RegistrationType, mbed::CellularNetwork::registration_params_t&)
              reference :  mbed::AT_CellularNetwork::get_registration_params(mbed::CellularNetwork::registration_params_t&)
              reference :  mbed::AT_CellularNetwork::get_context_state_command()
              reference :  mbed::AT_CellularNetwork::get_network_registering_mode(mbed::CellularNetwork::NWRegisteringMode&)
              reference :  mbed::AT_CellularNetwork::set_ciot_optimization_config(mbed::CellularNetwork::CIoT_Supported_Opt, mbed::CellularNetwork::CIoT_Preferred_UE_Opt, mbed::Callback<void(mbed::CellularNetwork::CIoT_Supported_Opt)>)
              reference :  mbed::AT_CellularNetwork::get_ciot_ue_optimization_config(mbed::CellularNetwork::CIoT_Supported_Opt&, mbed::CellularNetwork::CIoT_Preferred_UE_Opt&)
              reference :  mbed::AT_CellularNetwork::set_packet_domain_event_reporting(bool)
              reference :  mbed::AT_CellularNetwork::get_ciot_network_optimization_config(mbed::CellularNetwork::CIoT_Supported_Opt&)
              reference :  mbed::AT_CellularNetwork::clear()
              reference :  mbed::AT_CellularNetwork::attach(mbed::Callback<void(nsapi_event, int)>)
              reference :  mbed::AT_CellularNetwork::detach()
              reference :  mbed::AT_CellularNetwork::scan_plmn(mbed::CellularList<mbed::CellularNetwork::operator_t>&, int&)
              reference :  mbed::AT_CellularNetwork::AT_CellularNetwork__sub_object(mbed::ATHandler&, mbed::AT_CellularDevice&)
              reference :  mbed::AT_CellularNetwork::~AT_CellularNetwork__sub_object()
              definition:  mbed::UBLOX_AT_CellularNetwork::ubx_reboot()
              definition:  mbed::UBLOX_AT_CellularNetwork::set_access_technology_impl(mbed::CellularNetwork::RadioAccessTechnology)
              definition:  mbed::UBLOX_AT_CellularNetwork::UBLOX_AT_CellularNetwork(mbed::ATHandler&, mbed::AT_CellularDevice&)
              definition:  mbed::UBLOX_AT_CellularNetwork::UBLOX_AT_CellularNetwork__sub_object(mbed::ATHandler&, mbed::AT_CellularDevice&)
              definition:  mbed::UBLOX_AT_CellularNetwork::~UBLOX_AT_CellularNetwork__deallocating()
              definition:  mbed::UBLOX_AT_CellularNetwork::~UBLOX_AT_CellularNetwork()
              definition:  mbed::UBLOX_AT_CellularNetwork::~UBLOX_AT_CellularNetwork__sub_object()
              reference :  mbed::Timer::Timer()
              reference :  mbed::ATHandler::clear_error()
              reference :  mbed::ATHandler::at_cmd_discard(const char*, const char*, const char*, ...)
              reference :  mbed::ATHandler::lock()
              reference :  mbed::ATHandler::unlock()
              reference :  mbed::TimerBase::stop()
              reference :  mbed::TimerBase::start()
              reference :  mbed::TimerBase::~TimerBase__sub_object()
              reference :  rtos::ThisThread::sleep_for(std::__1::chrono::duration<unsigned, std::__1::ratio<(long long)1, (long long)1000>>)
              reference :  mbed::TimerBase::elapsed_time() const
              definition:  vtable for mbed::UBLOX_AT_CellularNetwork
              reference :  operator delete (void*)
              reference :  mbed_assert_internal
              reference :  mbed::Callback<void(nsapi_event, int)>::operator bool() const
              reference :  mbed::Callback<void(nsapi_event, int)>::operator ()(nsapi_event, int) const
              reference :  _ZNSt3__18literals15chrono_literalsli1sEy
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/drivers/cellular/UBLOX/AT/UBLOX_AT_CellularStack.o.
              reference :  NetworkStack::getsockopt(void*, int, int, void*, unsigned*)
              reference :  NetworkStack::setsockopt(void*, int, int, const void*, unsigned)
              reference :  NetworkStack::getaddrinfo(const char*, SocketAddress*, SocketAddress**, const char*)
              reference :  NetworkStack::getstackopt(int, int, void*, unsigned*)
              reference :  NetworkStack::setstackopt(int, int, const void*, unsigned)
              reference :  NetworkStack::add_dns_server(const SocketAddress&, const char*)
              reference :  NetworkStack::get_dns_server(int, SocketAddress*, const char*)
              reference :  NetworkStack::get_ip_address_if(SocketAddress*, const char*)
              reference :  NetworkStack::getaddrinfo_async(const char*, SocketAddress*, mbed::Callback<void(int, SocketAddress*)>, const char*)
              reference :  NetworkStack::gethostbyname_async(const char*, mbed::Callback<void(int, SocketAddress*)>, nsapi_version, const char*)
              reference :  NetworkStack::get_call_in_callback()
              reference :  NetworkStack::gethostbyname_async_cancel(int)
              reference :  NetworkStack::get_ipv6_link_local_address(SocketAddress*)
              reference :  NetworkStack::call_in(int, mbed::Callback<void()>)
              reference :  SocketAddress::set_ip_address(const char*)
              reference :  SocketAddress::operator =(const SocketAddress&)
              reference :  mbed_cellular_util::convert_ipv6(char*)
              reference :  mbed::AT_CellularStack::socket_bind(void*, const SocketAddress&)
              reference :  mbed::AT_CellularStack::socket_open(void**, nsapi_protocol)
              reference :  mbed::AT_CellularStack::socket_recv(void*, void*, unsigned)
              reference :  mbed::AT_CellularStack::socket_send(void*, const void*, unsigned)
              reference :  mbed::AT_CellularStack::socket_close(void*)
              reference :  mbed::AT_CellularStack::socket_attach(void*, void(*)(void*), void*)
              reference :  mbed::AT_CellularStack::socket_sendto(void*, const SocketAddress&, const void*, unsigned)
              reference :  mbed::AT_CellularStack::socket_recvfrom(void*, SocketAddress*, void*, unsigned)
              reference :  mbed::AT_CellularStack::AT_CellularStack__sub_object(mbed::ATHandler&, int, nsapi_ip_stack, mbed::AT_CellularDevice&)
              reference :  mbed::AT_CellularStack::~AT_CellularStack__sub_object()
              reference :  mbed::AT_CellularDevice::get_property(mbed::AT_CellularDevice::CellularProperty)
              definition:  mbed::UBLOX_AT_CellularStack::UUPSDD_URC()
              definition:  mbed::UBLOX_AT_CellularStack::UUSOCL_URC()
              definition:  mbed::UBLOX_AT_CellularStack::UUSORD_URC()
              definition:  mbed::UBLOX_AT_CellularStack::UUSORF_URC()
              definition:  mbed::UBLOX_AT_CellularStack::find_socket(int)
              definition:  mbed::UBLOX_AT_CellularStack::clear_socket(mbed::AT_CellularStack::CellularSocket*)
              definition:  mbed::UBLOX_AT_CellularStack::gethostbyname(const char*, SocketAddress*, nsapi_version, const char*)
              definition:  mbed::UBLOX_AT_CellularStack::socket_accept(void*, void**, SocketAddress*)
              definition:  mbed::UBLOX_AT_CellularStack::socket_listen(void*, int)
              definition:  mbed::UBLOX_AT_CellularStack::get_ip_address(SocketAddress*)
              definition:  mbed::UBLOX_AT_CellularStack::socket_connect(void*, const SocketAddress&)
              definition:  mbed::UBLOX_AT_CellularStack::socket_close_impl(int)
              definition:  mbed::UBLOX_AT_CellularStack::create_socket_impl(mbed::AT_CellularStack::CellularSocket*)
              definition:  mbed::UBLOX_AT_CellularStack::socket_sendto_impl(mbed::AT_CellularStack::CellularSocket*, const SocketAddress&, const void*, unsigned)
              definition:  mbed::UBLOX_AT_CellularStack::socket_recvfrom_impl(mbed::AT_CellularStack::CellularSocket*, SocketAddress*, void*, unsigned)
              definition:  mbed::UBLOX_AT_CellularStack::UBLOX_AT_CellularStack(mbed::ATHandler&, int, nsapi_ip_stack, mbed::AT_CellularDevice&)
              definition:  mbed::UBLOX_AT_CellularStack::UBLOX_AT_CellularStack__sub_object(mbed::ATHandler&, int, nsapi_ip_stack, mbed::AT_CellularDevice&)
              definition:  mbed::UBLOX_AT_CellularStack::~UBLOX_AT_CellularStack__deallocating()
              definition:  mbed::UBLOX_AT_CellularStack::~UBLOX_AT_CellularStack()
              definition:  mbed::UBLOX_AT_CellularStack::~UBLOX_AT_CellularStack__sub_object()
              reference :  mbed::Timer::Timer()
              weak defn :  T1 mbed::detail::invoke_r<void, void(mbed::UBLOX_AT_CellularStack::*const &)(), <mbed::UBLOX_AT_CellularStack*const &>, (int)0>(T2&&, T3&&...)
              weak defn :  T1 mbed::detail::invoke_r<void, mbed::Callback<void()>::Callback<mbed::UBLOX_AT_CellularStack*, void(mbed::UBLOX_AT_CellularStack::*)(), (int)0>(T1, T2)::[lambda() (instance 1)]&, <>, (int)0>(T2&&, T3&&...)
              weak defn :  void mbed::Callback<void()>::target_call<mbed::Callback<void()>::Callback<mbed::UBLOX_AT_CellularStack*, void(mbed::UBLOX_AT_CellularStack::*)(), (int)0>(T1, T2)::[lambda() (instance 1)]>(const mbed::detail::CallbackBase*)
              weak defn :  void mbed::Callback<void()>::generate<mbed::Callback<void()>::Callback<mbed::UBLOX_AT_CellularStack*, void(mbed::UBLOX_AT_CellularStack::*)(), (int)0>(T1, T2)::[lambda() (instance 1)], void>(T1&&)
              weak defn :  mbed::Callback<void()>::Callback__sub_object<mbed::UBLOX_AT_CellularStack*, void(mbed::UBLOX_AT_CellularStack::*)(), (int)0>(T1, T2)
              weak defn :  mbed::Callback<T3(T4...)> mbed::callback<mbed::UBLOX_AT_CellularStack, mbed::UBLOX_AT_CellularStack, void, <>>(T2*, T3(T1::*)(T4...))
              reference :  mbed::ATHandler::at_cmd_int(const char*, const char*, int&, const char*, ...)
              reference :  mbed::ATHandler::read_bytes(unsigned char*, unsigned)
              reference :  mbed::ATHandler::resp_start(const char*, bool)
              reference :  mbed::ATHandler::skip_param(unsigned)
              reference :  mbed::ATHandler::process_oob()
              reference :  mbed::ATHandler::read_string(char*, unsigned, bool)
              reference :  mbed::ATHandler::write_bytes(const unsigned char*, unsigned)
              reference :  mbed::ATHandler::at_cmd_discard(const char*, const char*, const char*, ...)
              reference :  mbed::ATHandler::cmd_start_stop(const char*, const char*, const char*, ...)
              reference :  mbed::ATHandler::set_at_timeout(std::__1::chrono::duration<unsigned, std::__1::ratio<(long long)1, (long long)1000>>, bool)
              reference :  mbed::ATHandler::set_urc_handler(const char*, mbed::Callback<void()>)
              reference :  mbed::ATHandler::restore_at_timeout()
              reference :  mbed::ATHandler::lock()
              reference :  mbed::ATHandler::unlock()
              reference :  mbed::ATHandler::read_int()
              reference :  mbed::ATHandler::info_resp()
              reference :  mbed::ATHandler::resp_stop()
              reference :  mbed::TimerBase::stop()
              reference :  mbed::TimerBase::start()
              reference :  mbed::TimerBase::~TimerBase__sub_object()
              weak defn :  std::__1::enable_if<((std::is_function<T2>::value&&(!std::is_base_of<T1, std::__1::decay<T3>::type>::value))&&(!is_reference_wrapper<std::__1::decay<T3>::type>::value)), decltype((((*std::forward<T3>(param#2)).*param#1)(std::forward<T4>(param#3)...)))>::type mstd::impl::INVOKE<mbed::UBLOX_AT_CellularStack, void(), mbed::UBLOX_AT_CellularStack*const &, <>>(T2T1::*, T3&&, T4&&...)
              weak defn :  std::__1::enable_if<((!std::is_member_pointer<std::__1::decay<T1>::type>::value)||(std::is_member_object_pointer<std::__1::decay<T1>::type>::value&&(sizeof...(param#2)!=(int)1))), decltype((std::forward<T1>(param#1)(std::forward<T2>(param#2)...)))>::type mstd::impl::INVOKE<mbed::Callback<void()>::Callback<mbed::UBLOX_AT_CellularStack*, void(mbed::UBLOX_AT_CellularStack::*)(), (int)0>(T1, T2)::[lambda() (instance 1)]&, <>>(T1&&, T2&&...)
              weak defn :  mstd::invoke_result<T1, <T2...>>::type mstd::invoke<void(mbed::UBLOX_AT_CellularStack::*const &)(), <mbed::UBLOX_AT_CellularStack*const &>>(T1&&, T2&&...)
              weak defn :  mstd::invoke_result<T1, <T2...>>::type mstd::invoke<mbed::Callback<void()>::Callback<mbed::UBLOX_AT_CellularStack*, void(mbed::UBLOX_AT_CellularStack::*)(), (int)0>(T1, T2)::[lambda() (instance 1)]&, <>>(T1&&, T2&&...)
              reference :  rtos::ThisThread::sleep_for(std::__1::chrono::duration<unsigned, std::__1::ratio<(long long)1, (long long)1000>>)
              reference :  SocketAddress::get_ip_address() const
              reference :  mbed::ATHandler::get_last_error() const
              reference :  mbed::TimerBase::elapsed_time() const
              definition:  vtable for mbed::UBLOX_AT_CellularStack
              weak defn :  mbed::Callback<void()>::Callback<mbed::UBLOX_AT_CellularStack*, void(mbed::UBLOX_AT_CellularStack::*)(), (int)0>(T1, T2)::[lambda() (instance 1)]::operator ()() const
              reference :  operator delete (void*)
              reference :  mbed_assert_internal
              reference :  SocketAddress::get_port() const
              reference :  _ZNSt3__18literals15chrono_literalsli2msEy
              reference :  SocketAddress::set_port(unsigned short)
              reference :  SocketAddress::get_ip_version() const
              reference :  _ZNSt3__18literals15chrono_literalsli1sEy
              reference :  NetworkStack::onboardNetworkStack()
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/drivers/cellular/UBLOX/N2XX/UBLOX_N2XX.o.
              definition:  mbed::UBLOX_N2XX::get_sim_state(mbed::CellularDevice::SimState&)
              definition:  mbed::UBLOX_N2XX::set_at_urcs_impl()
              definition:  mbed::UBLOX_N2XX::open_network_impl(mbed::ATHandler&)
              definition:  mbed::UBLOX_N2XX::create_context_impl(mbed::ATHandler&, const char*, bool, bool)
              definition:  mbed::UBLOX_N2XX::init()
              definition:  mbed::UBLOX_N2XX::set_pin(const char*)
              definition:  mbed::UBLOX_N2XX::NPIN_URC()
              definition:  mbed::UBLOX_N2XX::UBLOX_N2XX(mbed::FileHandle*)
              definition:  mbed::UBLOX_N2XX::UBLOX_N2XX__sub_object(mbed::FileHandle*)
              definition:  mbed::UBLOX_N2XX::~UBLOX_N2XX__deallocating()
              definition:  mbed::UBLOX_N2XX::~UBLOX_N2XX()
              definition:  mbed::UBLOX_N2XX::~UBLOX_N2XX__sub_object()
              reference :  mbed::CellularDevice::get_queue()
              reference :  mbed::AT_CellularDevice::set_timeout(int)
              reference :  mbed::AT_CellularDevice::open_network()
              reference :  mbed::AT_CellularDevice::set_ready_cb(mbed::Callback<void()>)
              reference :  mbed::AT_CellularDevice::close_network()
              reference :  mbed::AT_CellularDevice::hard_power_on()
              reference :  mbed::AT_CellularDevice::set_baud_rate(int)
              reference :  mbed::AT_CellularDevice::soft_power_on()
              reference :  mbed::AT_CellularDevice::create_context(const char*, bool, bool)
              reference :  mbed::AT_CellularDevice::delete_context(mbed::CellularContext*)
              reference :  mbed::AT_CellularDevice::get_at_handler()
              reference :  mbed::AT_CellularDevice::hard_power_off()
              reference :  mbed::AT_CellularDevice::modem_debug_on(bool)
              reference :  mbed::AT_CellularDevice::soft_power_off()
              reference :  mbed::AT_CellularDevice::open_information()
              reference :  mbed::AT_CellularDevice::setup_at_handler()
              reference :  mbed::AT_CellularDevice::cellular_callback(nsapi_event, int, mbed::CellularContext*)
              reference :  mbed::AT_CellularDevice::close_information()
              reference :  mbed::AT_CellularDevice::set_baud_rate_impl(int)
              reference :  mbed::AT_CellularDevice::set_power_save_mode(int, int)
              reference :  mbed::AT_CellularDevice::open_information_impl(mbed::ATHandler&)
              reference :  mbed::AT_CellularDevice::set_cellular_properties(const int*)
              reference :  mbed::AT_CellularDevice::clear()
              reference :  mbed::AT_CellularDevice::is_ready()
              reference :  mbed::AT_CellularDevice::shutdown()
              reference :  mbed::AT_CellularDevice::AT_CellularDevice__sub_object(mbed::FileHandle*)
              reference :  mbed::AT_CellularDevice::~AT_CellularDevice__sub_object()
              reference :  mbed::UBLOX_N2XX_CellularContext::UBLOX_N2XX_CellularContext(mbed::ATHandler&, mbed::CellularDevice*, const char*, bool, bool)
              reference :  mbed::UBLOX_N2XX_CellularNetwork::UBLOX_N2XX_CellularNetwork(mbed::ATHandler&, mbed::AT_CellularDevice&)
              weak defn :  T1 mbed::detail::invoke_r<void, void(mbed::UBLOX_N2XX::*const &)(), <mbed::UBLOX_N2XX*const &>, (int)0>(T2&&, T3&&...)
              weak defn :  T1 mbed::detail::invoke_r<void, mbed::Callback<void()>::Callback<mbed::UBLOX_N2XX*, void(mbed::UBLOX_N2XX::*)(), (int)0>(T1, T2)::[lambda() (instance 1)]&, <>, (int)0>(T2&&, T3&&...)
              weak defn :  void mbed::Callback<void()>::target_call<mbed::Callback<void()>::Callback<mbed::UBLOX_N2XX*, void(mbed::UBLOX_N2XX::*)(), (int)0>(T1, T2)::[lambda() (instance 1)]>(const mbed::detail::CallbackBase*)
              weak defn :  void mbed::Callback<void()>::generate<mbed::Callback<void()>::Callback<mbed::UBLOX_N2XX*, void(mbed::UBLOX_N2XX::*)(), (int)0>(T1, T2)::[lambda() (instance 1)], void>(T1&&)
              weak defn :  mbed::Callback<void()>::Callback__sub_object<mbed::UBLOX_N2XX*, void(mbed::UBLOX_N2XX::*)(), (int)0>(T1, T2)
              reference :  mbed::ATHandler::at_cmd_str(const char*, const char*, char*, unsigned, const char*, ...)
              reference :  mbed::ATHandler::read_string(char*, unsigned, bool)
              reference :  mbed::ATHandler::at_cmd_discard(const char*, const char*, const char*, ...)
              reference :  mbed::ATHandler::set_urc_handler(const char*, mbed::Callback<void()>)
              reference :  mbed::ATHandler::unlock_return_error()
              reference :  mbed::ATHandler::lock()
              reference :  mbed::ATHandler::flush()
              reference :  mbed::ATHandler::unlock()
              weak defn :  std::__1::enable_if<((std::is_function<T2>::value&&(!std::is_base_of<T1, std::__1::decay<T3>::type>::value))&&(!is_reference_wrapper<std::__1::decay<T3>::type>::value)), decltype((((*std::forward<T3>(param#2)).*param#1)(std::forward<T4>(param#3)...)))>::type mstd::impl::INVOKE<mbed::UBLOX_N2XX, void(), mbed::UBLOX_N2XX*const &, <>>(T2T1::*, T3&&, T4&&...)
              weak defn :  std::__1::enable_if<((!std::is_member_pointer<std::__1::decay<T1>::type>::value)||(std::is_member_object_pointer<std::__1::decay<T1>::type>::value&&(sizeof...(param#2)!=(int)1))), decltype((std::forward<T1>(param#1)(std::forward<T2>(param#2)...)))>::type mstd::impl::INVOKE<mbed::Callback<void()>::Callback<mbed::UBLOX_N2XX*, void(mbed::UBLOX_N2XX::*)(), (int)0>(T1, T2)::[lambda() (instance 1)]&, <>>(T1&&, T2&&...)
              weak defn :  mstd::invoke_result<T1, <T2...>>::type mstd::invoke<void(mbed::UBLOX_N2XX::*const &)(), <mbed::UBLOX_N2XX*const &>>(T1&&, T2&&...)
              weak defn :  mstd::invoke_result<T1, <T2...>>::type mstd::invoke<mbed::Callback<void()>::Callback<mbed::UBLOX_N2XX*, void(mbed::UBLOX_N2XX::*)(), (int)0>(T1, T2)::[lambda() (instance 1)]&, <>>(T1&&, T2&&...)
              reference :  mbed::AT_CellularDevice::get_context_list() const
              definition:  vtable for mbed::UBLOX_N2XX
              weak defn :  mbed::Callback<void()>::Callback<mbed::UBLOX_N2XX*, void(mbed::UBLOX_N2XX::*)(), (int)0>(T1, T2)::[lambda() (instance 1)]::operator ()() const
              reference :  operator delete (void*)
              reference :  operator new(unsigned)
              reference :  memcmp
              reference :  strlen
              reference :  mbed::Callback<void()>::Callback__sub_object(std::nullptr_t)
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/drivers/cellular/UBLOX/N2XX/UBLOX_N2XX_CellularContext.o.
              reference :  NetworkInterface::get_gateway(SocketAddress*)
              reference :  NetworkInterface::get_netmask(SocketAddress*)
              reference :  NetworkInterface::getaddrinfo(const char*, SocketAddress*, SocketAddress**, const char*)
              reference :  NetworkInterface::set_network(const SocketAddress&, const SocketAddress&, const SocketAddress&)
              reference :  NetworkInterface::gethostbyname(const char*, SocketAddress*, nsapi_version, const char*)
              reference :  NetworkInterface::add_dns_server(const SocketAddress&, const char*)
              reference :  NetworkInterface::get_dns_server(int, SocketAddress*, const char*)
              reference :  NetworkInterface::set_as_default()
              reference :  NetworkInterface::get_mac_address()
              reference :  NetworkInterface::getaddrinfo_async(const char*, SocketAddress*, mbed::Callback<void(int, SocketAddress*)>, const char*)
              reference :  NetworkInterface::gethostbyname_async(const char*, mbed::Callback<void(int, SocketAddress*)>, nsapi_version, const char*)
              reference :  NetworkInterface::gethostbyname_async_cancel(int)
              reference :  NetworkInterface::get_ipv6_link_local_address(SocketAddress*)
              reference :  NetworkInterface::set_dhcp(bool)
              reference :  CellularInterface::set_default_parameters()
              reference :  mbed::AT_CellularContext::disconnect()
              reference :  mbed::AT_CellularContext::do_connect()
              reference :  mbed::AT_CellularContext::enable_hup(bool)
              reference :  mbed::AT_CellularContext::get_context()
              reference :  mbed::AT_CellularContext::set_sim_pin(const char*)
              reference :  mbed::AT_CellularContext::get_cp_netif()
              reference :  mbed::AT_CellularContext::is_connected()
              reference :  mbed::AT_CellularContext::set_blocking(bool)
              reference :  mbed::AT_CellularContext::configure_hup(PinName, bool)
              reference :  mbed::AT_CellularContext::do_disconnect()
              reference :  mbed::AT_CellularContext::set_sim_ready()
              reference :  mbed::AT_CellularContext::get_ip_address(SocketAddress*)
              reference :  mbed::AT_CellularContext::set_disconnect()
              reference :  mbed::AT_CellularContext::set_credentials(const char*, const char*, const char*)
              reference :  mbed::AT_CellularContext::activate_context()
              reference :  mbed::AT_CellularContext::get_rate_control(mbed::CellularContext::RateControlExceptionReports&, mbed::CellularContext::RateControlUplinkTimeUnit&, int&)
              reference :  mbed::AT_CellularContext::set_device_ready()
              reference :  mbed::AT_CellularContext::attach_to_network()
              reference :  mbed::AT_CellularContext::cellular_callback(nsapi_event, int)
              reference :  mbed::AT_CellularContext::deactivate_context()
              reference :  mbed::AT_CellularContext::get_interface_name(char*)
              reference :  mbed::AT_CellularContext::register_to_network()
              reference :  mbed::AT_CellularContext::deactivate_ip_context()
              reference :  mbed::AT_CellularContext::do_connect_with_retry()
              reference :  mbed::AT_CellularContext::get_apn_backoff_timer(int&)
              reference :  mbed::AT_CellularContext::get_pdpcontext_params(mbed::CellularList<mbed::CellularContext::pdpcontext_params_t>&)
              reference :  mbed::AT_CellularContext::do_user_authentication()
              reference :  mbed::AT_CellularContext::activate_non_ip_context()
              reference :  mbed::AT_CellularContext::setup_control_plane_opt()
              reference :  mbed::AT_CellularContext::deactivate_non_ip_context()
              reference :  mbed::AT_CellularContext::attach(mbed::Callback<void(nsapi_event, int)>)
              reference :  mbed::AT_CellularContext::connect(const char*, const char*, const char*, const char*)
              reference :  mbed::AT_CellularContext::connect()
              reference :  mbed::AT_CellularContext::set_plmn(const char*)
              reference :  mbed::AT_CellularContext::AT_CellularContext__sub_object(mbed::ATHandler&, mbed::CellularDevice*, const char*, bool, bool)
              reference :  mbed::AT_CellularContext::~AT_CellularContext__sub_object()
              reference :  mbed::UBLOX_N2XX_CellularStack::UBLOX_N2XX_CellularStack(mbed::ATHandler&, int, nsapi_ip_stack, mbed::AT_CellularDevice&)
              definition:  mbed::UBLOX_N2XX_CellularContext::get_nonip_context_type_str()
              definition:  mbed::UBLOX_N2XX_CellularContext::get_stack()
              definition:  mbed::UBLOX_N2XX_CellularContext::UBLOX_N2XX_CellularContext(mbed::ATHandler&, mbed::CellularDevice*, const char*, bool, bool)
              definition:  mbed::UBLOX_N2XX_CellularContext::UBLOX_N2XX_CellularContext__sub_object(mbed::ATHandler&, mbed::CellularDevice*, const char*, bool, bool)
              definition:  mbed::UBLOX_N2XX_CellularContext::~UBLOX_N2XX_CellularContext__deallocating()
              definition:  mbed::UBLOX_N2XX_CellularContext::~UBLOX_N2XX_CellularContext()
              definition:  mbed::UBLOX_N2XX_CellularContext::~UBLOX_N2XX_CellularContext__sub_object()
              reference :  mbed::AT_CellularContext::get_device() const
              reference :  mbed::AT_CellularContext::get_connection_status() const
              reference :  mbed::AT_CellularContext::get_timeout_for_operation(mbed::CellularContext::ContextOperation) const
              definition:  vtable for mbed::UBLOX_N2XX_CellularContext
              reference :  operator delete (void*)
              reference :  operator new(unsigned)
              reference :  NetworkInterface::ethInterface()
              reference :  NetworkInterface::wifiInterface()
              reference :  NetworkInterface::meshInterface()
              reference :  NetworkInterface::emacInterface()
              reference :  CellularInterface::cellularInterface()
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/drivers/cellular/UBLOX/N2XX/UBLOX_N2XX_CellularNetwork.o.
              reference :  mbed::AT_CellularNetwork::get_attach(mbed::CellularNetwork::AttachStatus&)
              reference :  mbed::AT_CellularNetwork::set_attach()
              reference :  mbed::AT_CellularNetwork::get_3gpp_error()
              reference :  mbed::AT_CellularNetwork::set_registration(const char*)
              reference :  mbed::AT_CellularNetwork::is_active_context(int*, int)
              reference :  mbed::AT_CellularNetwork::get_operator_names(mbed::CellularList<mbed::CellularNetwork::operator_names_t>&)
              reference :  mbed::AT_CellularNetwork::get_signal_quality(int&, int*)
              reference :  mbed::AT_CellularNetwork::set_receive_period(int, mbed::CellularNetwork::EDRXAccessTechnology, unsigned char)
              reference :  mbed::AT_CellularNetwork::get_operator_params(int&, mbed::CellularNetwork::operator_t&)
              reference :  mbed::AT_CellularNetwork::set_registration_urc(mbed::CellularNetwork::RegistrationType, bool)
              reference :  mbed::AT_CellularNetwork::set_access_technology(mbed::CellularNetwork::RadioAccessTechnology)
              reference :  mbed::AT_CellularNetwork::get_registration_params(mbed::CellularNetwork::RegistrationType, mbed::CellularNetwork::registration_params_t&)
              reference :  mbed::AT_CellularNetwork::get_registration_params(mbed::CellularNetwork::registration_params_t&)
              reference :  mbed::AT_CellularNetwork::get_context_state_command()
              reference :  mbed::AT_CellularNetwork::set_access_technology_impl(mbed::CellularNetwork::RadioAccessTechnology)
              reference :  mbed::AT_CellularNetwork::get_network_registering_mode(mbed::CellularNetwork::NWRegisteringMode&)
              reference :  mbed::AT_CellularNetwork::get_ciot_ue_optimization_config(mbed::CellularNetwork::CIoT_Supported_Opt&, mbed::CellularNetwork::CIoT_Preferred_UE_Opt&)
              reference :  mbed::AT_CellularNetwork::set_packet_domain_event_reporting(bool)
              reference :  mbed::AT_CellularNetwork::get_ciot_network_optimization_config(mbed::CellularNetwork::CIoT_Supported_Opt&)
              reference :  mbed::AT_CellularNetwork::clear()
              reference :  mbed::AT_CellularNetwork::attach(mbed::Callback<void(nsapi_event, int)>)
              reference :  mbed::AT_CellularNetwork::detach()
              reference :  mbed::AT_CellularNetwork::scan_plmn(mbed::CellularList<mbed::CellularNetwork::operator_t>&, int&)
              reference :  mbed::AT_CellularNetwork::AT_CellularNetwork__sub_object(mbed::ATHandler&, mbed::AT_CellularDevice&)
              reference :  mbed::AT_CellularNetwork::~AT_CellularNetwork__sub_object()
              definition:  mbed::UBLOX_N2XX_CellularNetwork::set_ciot_optimization_config(mbed::CellularNetwork::CIoT_Supported_Opt, mbed::CellularNetwork::CIoT_Preferred_UE_Opt, mbed::Callback<void(mbed::CellularNetwork::CIoT_Supported_Opt)>)
              definition:  mbed::UBLOX_N2XX_CellularNetwork::clear()
              definition:  mbed::UBLOX_N2XX_CellularNetwork::UBLOX_N2XX_CellularNetwork(mbed::ATHandler&, mbed::AT_CellularDevice&)
              definition:  mbed::UBLOX_N2XX_CellularNetwork::UBLOX_N2XX_CellularNetwork__sub_object(mbed::ATHandler&, mbed::AT_CellularDevice&)
              weak defn :  mbed::UBLOX_N2XX_CellularNetwork::~UBLOX_N2XX_CellularNetwork__deallocating()
              reference :  mbed::ATHandler::at_cmd_discard(const char*, const char*, const char*, ...)
              definition:  vtable for mbed::UBLOX_N2XX_CellularNetwork
              reference :  operator delete (void*)
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/drivers/cellular/UBLOX/N2XX/UBLOX_N2XX_CellularSMS.o.
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/drivers/cellular/UBLOX/N2XX/UBLOX_N2XX_CellularStack.o.
              reference :  NetworkStack::getsockopt(void*, int, int, void*, unsigned*)
              reference :  NetworkStack::setsockopt(void*, int, int, const void*, unsigned)
              reference :  NetworkStack::getaddrinfo(const char*, SocketAddress*, SocketAddress**, const char*)
              reference :  NetworkStack::getstackopt(int, int, void*, unsigned*)
              reference :  NetworkStack::setstackopt(int, int, const void*, unsigned)
              reference :  NetworkStack::gethostbyname(const char*, SocketAddress*, nsapi_version, const char*)
              reference :  NetworkStack::add_dns_server(const SocketAddress&, const char*)
              reference :  NetworkStack::get_dns_server(int, SocketAddress*, const char*)
              reference :  NetworkStack::get_ip_address_if(SocketAddress*, const char*)
              reference :  NetworkStack::getaddrinfo_async(const char*, SocketAddress*, mbed::Callback<void(int, SocketAddress*)>, const char*)
              reference :  NetworkStack::gethostbyname_async(const char*, mbed::Callback<void(int, SocketAddress*)>, nsapi_version, const char*)
              reference :  NetworkStack::get_call_in_callback()
              reference :  NetworkStack::gethostbyname_async_cancel(int)
              reference :  NetworkStack::get_ipv6_link_local_address(SocketAddress*)
              reference :  NetworkStack::call_in(int, mbed::Callback<void()>)
              reference :  SocketAddress::set_ip_address(const char*)
              reference :  mbed_cellular_util::char_str_to_hex_str(const char*, unsigned short, char*, bool)
              reference :  mbed::AT_CellularStack::find_socket(int)
              reference :  mbed::AT_CellularStack::socket_bind(void*, const SocketAddress&)
              reference :  mbed::AT_CellularStack::socket_open(void**, nsapi_protocol)
              reference :  mbed::AT_CellularStack::socket_recv(void*, void*, unsigned)
              reference :  mbed::AT_CellularStack::socket_send(void*, const void*, unsigned)
              reference :  mbed::AT_CellularStack::socket_close(void*)
              reference :  mbed::AT_CellularStack::socket_attach(void*, void(*)(void*), void*)
              reference :  mbed::AT_CellularStack::socket_sendto(void*, const SocketAddress&, const void*, unsigned)
              reference :  mbed::AT_CellularStack::get_ip_address(SocketAddress*)
              reference :  mbed::AT_CellularStack::socket_connect(void*, const SocketAddress&)
              reference :  mbed::AT_CellularStack::socket_recvfrom(void*, SocketAddress*, void*, unsigned)
              reference :  mbed::AT_CellularStack::AT_CellularStack__sub_object(mbed::ATHandler&, int, nsapi_ip_stack, mbed::AT_CellularDevice&)
              reference :  mbed::AT_CellularStack::~AT_CellularStack__sub_object()
              reference :  mbed::AT_CellularDevice::get_property(mbed::AT_CellularDevice::CellularProperty)
              definition:  mbed::UBLOX_N2XX_CellularStack::NSONMI_URC()
              definition:  mbed::UBLOX_N2XX_CellularStack::socket_accept(void*, void**, SocketAddress*)
              definition:  mbed::UBLOX_N2XX_CellularStack::socket_listen(void*, int)
              definition:  mbed::UBLOX_N2XX_CellularStack::socket_close_impl(int)
              definition:  mbed::UBLOX_N2XX_CellularStack::create_socket_impl(mbed::AT_CellularStack::CellularSocket*)
              definition:  mbed::UBLOX_N2XX_CellularStack::socket_sendto_impl(mbed::AT_CellularStack::CellularSocket*, const SocketAddress&, const void*, unsigned)
              definition:  mbed::UBLOX_N2XX_CellularStack::socket_recvfrom_impl(mbed::AT_CellularStack::CellularSocket*, SocketAddress*, void*, unsigned)
              definition:  mbed::UBLOX_N2XX_CellularStack::UBLOX_N2XX_CellularStack(mbed::ATHandler&, int, nsapi_ip_stack, mbed::AT_CellularDevice&)
              definition:  mbed::UBLOX_N2XX_CellularStack::UBLOX_N2XX_CellularStack__sub_object(mbed::ATHandler&, int, nsapi_ip_stack, mbed::AT_CellularDevice&)
              definition:  mbed::UBLOX_N2XX_CellularStack::~UBLOX_N2XX_CellularStack__deallocating()
              definition:  mbed::UBLOX_N2XX_CellularStack::~UBLOX_N2XX_CellularStack()
              definition:  mbed::UBLOX_N2XX_CellularStack::~UBLOX_N2XX_CellularStack__sub_object()
              reference :  mbed::Timer::Timer()
              weak defn :  T1 mbed::detail::invoke_r<void, void(mbed::UBLOX_N2XX_CellularStack::*const &)(), <mbed::UBLOX_N2XX_CellularStack*const &>, (int)0>(T2&&, T3&&...)
              weak defn :  T1 mbed::detail::invoke_r<void, mbed::Callback<void()>::Callback<mbed::UBLOX_N2XX_CellularStack*, void(mbed::UBLOX_N2XX_CellularStack::*)(), (int)0>(T1, T2)::[lambda() (instance 1)]&, <>, (int)0>(T2&&, T3&&...)
              weak defn :  void mbed::Callback<void()>::target_call<mbed::Callback<void()>::Callback<mbed::UBLOX_N2XX_CellularStack*, void(mbed::UBLOX_N2XX_CellularStack::*)(), (int)0>(T1, T2)::[lambda() (instance 1)]>(const mbed::detail::CallbackBase*)
              weak defn :  void mbed::Callback<void()>::generate<mbed::Callback<void()>::Callback<mbed::UBLOX_N2XX_CellularStack*, void(mbed::UBLOX_N2XX_CellularStack::*)(), (int)0>(T1, T2)::[lambda() (instance 1)], void>(T1&&)
              weak defn :  mbed::Callback<void()>::Callback__sub_object<mbed::UBLOX_N2XX_CellularStack*, void(mbed::UBLOX_N2XX_CellularStack::*)(), (int)0>(T1, T2)
              weak defn :  mbed::Callback<T3(T4...)> mbed::callback<mbed::UBLOX_N2XX_CellularStack, mbed::UBLOX_N2XX_CellularStack, void, <>>(T2*, T3(T1::*)(T4...))
              reference :  mbed::ATHandler::resp_start(const char*, bool)
              reference :  mbed::ATHandler::skip_param(unsigned)
              reference :  mbed::ATHandler::process_oob()
              reference :  mbed::ATHandler::read_string(char*, unsigned, bool)
              reference :  mbed::ATHandler::at_cmd_discard(const char*, const char*, const char*, ...)
              reference :  mbed::ATHandler::cmd_start_stop(const char*, const char*, const char*, ...)
              reference :  mbed::ATHandler::read_hex_string(char*, unsigned)
              reference :  mbed::ATHandler::set_urc_handler(const char*, mbed::Callback<void()>)
              reference :  mbed::ATHandler::lock()
              reference :  mbed::ATHandler::unlock()
              reference :  mbed::ATHandler::read_int()
              reference :  mbed::ATHandler::resp_stop()
              reference :  mbed::TimerBase::stop()
              reference :  mbed::TimerBase::start()
              reference :  mbed::TimerBase::~TimerBase__sub_object()
              weak defn :  std::__1::enable_if<((std::is_function<T2>::value&&(!std::is_base_of<T1, std::__1::decay<T3>::type>::value))&&(!is_reference_wrapper<std::__1::decay<T3>::type>::value)), decltype((((*std::forward<T3>(param#2)).*param#1)(std::forward<T4>(param#3)...)))>::type mstd::impl::INVOKE<mbed::UBLOX_N2XX_CellularStack, void(), mbed::UBLOX_N2XX_CellularStack*const &, <>>(T2T1::*, T3&&, T4&&...)
              weak defn :  std::__1::enable_if<((!std::is_member_pointer<std::__1::decay<T1>::type>::value)||(std::is_member_object_pointer<std::__1::decay<T1>::type>::value&&(sizeof...(param#2)!=(int)1))), decltype((std::forward<T1>(param#1)(std::forward<T2>(param#2)...)))>::type mstd::impl::INVOKE<mbed::Callback<void()>::Callback<mbed::UBLOX_N2XX_CellularStack*, void(mbed::UBLOX_N2XX_CellularStack::*)(), (int)0>(T1, T2)::[lambda() (instance 1)]&, <>>(T1&&, T2&&...)
              weak defn :  mstd::invoke_result<T1, <T2...>>::type mstd::invoke<void(mbed::UBLOX_N2XX_CellularStack::*const &)(), <mbed::UBLOX_N2XX_CellularStack*const &>>(T1&&, T2&&...)
              weak defn :  mstd::invoke_result<T1, <T2...>>::type mstd::invoke<mbed::Callback<void()>::Callback<mbed::UBLOX_N2XX_CellularStack*, void(mbed::UBLOX_N2XX_CellularStack::*)(), (int)0>(T1, T2)::[lambda() (instance 1)]&, <>>(T1&&, T2&&...)
              reference :  SocketAddress::get_ip_address() const
              reference :  mbed::ATHandler::get_last_error() const
              reference :  mbed::TimerBase::elapsed_time() const
              definition:  vtable for mbed::UBLOX_N2XX_CellularStack
              weak defn :  mbed::Callback<void()>::Callback<mbed::UBLOX_N2XX_CellularStack*, void(mbed::UBLOX_N2XX_CellularStack::*)(), (int)0>(T1, T2)::[lambda() (instance 1)]::operator ()() const
              reference :  operator delete[] (void*)
              reference :  operator delete (void*)
              reference :  operator new[] (unsigned)
              reference :  __aeabi_memclr
              reference :  mbed_assert_internal
              reference :  mbed::Callback<void()>::Callback__sub_object(std::nullptr_t)
              reference :  SocketAddress::get_port() const
              reference :  SocketAddress::set_port(unsigned short)
              reference :  NetworkStack::onboardNetworkStack()
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/drivers/cellular/UBLOX/PPP/UBLOX_PPP.o.
              reference :  mbed::CellularDevice::get_queue()
              reference :  mbed::AT_CellularDevice::set_timeout(int)
              reference :  mbed::AT_CellularDevice::open_network()
              reference :  mbed::AT_CellularDevice::set_ready_cb(mbed::Callback<void()>)
              reference :  mbed::AT_CellularDevice::close_network()
              reference :  mbed::AT_CellularDevice::get_sim_state(mbed::CellularDevice::SimState&)
              reference :  mbed::AT_CellularDevice::hard_power_on()
              reference :  mbed::AT_CellularDevice::set_baud_rate(int)
              reference :  mbed::AT_CellularDevice::soft_power_on()
              reference :  mbed::AT_CellularDevice::create_context(const char*, bool, bool)
              reference :  mbed::AT_CellularDevice::delete_context(mbed::CellularContext*)
              reference :  mbed::AT_CellularDevice::get_at_handler()
              reference :  mbed::AT_CellularDevice::hard_power_off()
              reference :  mbed::AT_CellularDevice::modem_debug_on(bool)
              reference :  mbed::AT_CellularDevice::soft_power_off()
              reference :  mbed::AT_CellularDevice::open_information()
              reference :  mbed::AT_CellularDevice::set_at_urcs_impl()
              reference :  mbed::AT_CellularDevice::cellular_callback(nsapi_event, int, mbed::CellularContext*)
              reference :  mbed::AT_CellularDevice::close_information()
              reference :  mbed::AT_CellularDevice::open_network_impl(mbed::ATHandler&)
              reference :  mbed::AT_CellularDevice::set_baud_rate_impl(int)
              reference :  mbed::AT_CellularDevice::create_context_impl(mbed::ATHandler&, const char*, bool, bool)
              reference :  mbed::AT_CellularDevice::set_power_save_mode(int, int)
              reference :  mbed::AT_CellularDevice::open_information_impl(mbed::ATHandler&)
              reference :  mbed::AT_CellularDevice::set_cellular_properties(const int*)
              reference :  mbed::AT_CellularDevice::init()
              reference :  mbed::AT_CellularDevice::clear()
              reference :  mbed::AT_CellularDevice::set_pin(const char*)
              reference :  mbed::AT_CellularDevice::is_ready()
              reference :  mbed::AT_CellularDevice::shutdown()
              reference :  mbed::AT_CellularDevice::AT_CellularDevice__sub_object(mbed::FileHandle*)
              reference :  mbed::AT_CellularDevice::~AT_CellularDevice__sub_object()
              definition:  mbed::UBLOX_PPP::UBLOX_PPP(mbed::FileHandle*)
              definition:  mbed::UBLOX_PPP::UBLOX_PPP__sub_object(mbed::FileHandle*)
              weak defn :  mbed::UBLOX_PPP::~UBLOX_PPP__deallocating()
              reference :  mbed::AT_CellularDevice::get_context_list() const
              weak defn :  vtable for mbed::UBLOX_PPP
              reference :  operator delete (void*)
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/drivers/emac/TARGET_STM/stm32xx_emac.o.
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/drivers/mbedtls/TARGET_STM/aes_alt.o.
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/drivers/mbedtls/TARGET_STM/aes_alt_stm32l4.o.
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/drivers/mbedtls/TARGET_STM/ccm_alt.o.
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/drivers/mbedtls/TARGET_STM/cryp_stm32.o.
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/drivers/mbedtls/TARGET_STM/gcm_alt.o.
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/drivers/mbedtls/TARGET_STM/hash_stm32.o.
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/drivers/mbedtls/TARGET_STM/md5_alt.o.
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/drivers/mbedtls/TARGET_STM/sha1_alt.o.
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/drivers/mbedtls/TARGET_STM/sha256_alt.o.
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/drivers/nfc/PN512/source/PN512Driver.o.
              definition:  mbed::nfc::PN512Driver::initialize(__nfc_timer*)
              definition:  mbed::nfc::PN512Driver::on_hw_interrupt()
              definition:  mbed::nfc::PN512Driver::PN512Driver(mbed::nfc::PN512TransportDriver*)
              definition:  mbed::nfc::PN512Driver::PN512Driver__sub_object(mbed::nfc::PN512TransportDriver*)
              weak defn :  mbed::nfc::PN512Driver::~PN512Driver__deallocating()
              weak defn :  mbed::nfc::PN512Driver::~PN512Driver__sub_object()
              reference :  mbed::nfc::NFCControllerDriver::hw_interrupt()
              reference :  mbed::nfc::NFCControllerDriver::NFCControllerDriver__sub_object()
              reference :  mbed::nfc::NFCControllerDriver::~NFCControllerDriver__sub_object()
              reference :  mbed::nfc::PN512TransportDriver::set_delegate(mbed::nfc::PN512TransportDriver::Delegate*)
              weak defn :  mbed::nfc::PN512TransportDriver::Delegate::on_hw_interrupt()
              weak defn :  mbed::nfc::PN512TransportDriver::Delegate::Delegate__sub_object()
              weak defn :  mbed::nfc::PN512TransportDriver::Delegate::~Delegate__sub_object()
              definition:  mbed::nfc::PN512Driver::get_supported_nfc_techs(__nfc_tech*, __nfc_tech*) const
              definition:  vtable for mbed::nfc::PN512Driver
              weak defn :  vtable for mbed::nfc::PN512TransportDriver::Delegate
              definition:  thunk{-8} to mbed::nfc::PN512Driver::on_hw_interrupt()
              reference :  operator delete (void*)
              reference :  pn512_get_transceiver
              reference :  pn512_init
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/drivers/nfc/PN512/source/PN512SPITransportDriver.o.
              reference :  mbed::InterruptIn::rise(mbed::Callback<void()>)
              reference :  mbed::InterruptIn::InterruptIn(PinName, PinMode)
              reference :  mbed::InterruptIn::~InterruptIn()
              reference :  mbed::SPI::write(const char*, int, char*, int)
              reference :  mbed::SPI::write(int)
              reference :  mbed::SPI::format(int, int)
              reference :  mbed::SPI::frequency(int)
              reference :  mbed::SPI::SPI(PinName, PinName, PinName, PinName)
              reference :  mbed::SPI::~SPI()
              reference :  mbed::nfc::PN512TransportDriver::hw_interrupt()
              reference :  mbed::nfc::PN512TransportDriver::PN512TransportDriver__sub_object()
              reference :  mbed::nfc::PN512TransportDriver::~PN512TransportDriver__sub_object()
              definition:  mbed::nfc::PN512SPITransportDriver::initialize()
              definition:  mbed::nfc::PN512SPITransportDriver::get_transport()
              definition:  mbed::nfc::PN512SPITransportDriver::transport_read(unsigned char, unsigned char*, unsigned)
              definition:  mbed::nfc::PN512SPITransportDriver::transport_write(unsigned char, const unsigned char*, unsigned)
              definition:  mbed::nfc::PN512SPITransportDriver::s_transport_read(unsigned char, unsigned char*, unsigned, void*)
              definition:  mbed::nfc::PN512SPITransportDriver::s_transport_write(unsigned char, const unsigned char*, unsigned, void*)
              definition:  mbed::nfc::PN512SPITransportDriver::PN512SPITransportDriver(PinName, PinName, PinName, PinName, PinName, PinName)
              definition:  mbed::nfc::PN512SPITransportDriver::PN512SPITransportDriver__sub_object(PinName, PinName, PinName, PinName, PinName, PinName)
              weak defn :  mbed::nfc::PN512SPITransportDriver::~PN512SPITransportDriver__deallocating()
              weak defn :  mbed::nfc::PN512SPITransportDriver::~PN512SPITransportDriver__sub_object()
              weak defn :  T1 mbed::detail::invoke_r<void, void(mbed::nfc::PN512TransportDriver::*const &)(), <mbed::nfc::PN512SPITransportDriver*const &>, (int)0>(T2&&, T3&&...)
              weak defn :  T1 mbed::detail::invoke_r<void, mbed::Callback<void()>::Callback<mbed::nfc::PN512SPITransportDriver*, void(mbed::nfc::PN512TransportDriver::*)(), (int)0>(T1, T2)::[lambda() (instance 1)]&, <>, (int)0>(T2&&, T3&&...)
              weak defn :  void mbed::Callback<void()>::target_call<mbed::Callback<void()>::Callback<mbed::nfc::PN512SPITransportDriver*, void(mbed::nfc::PN512TransportDriver::*)(), (int)0>(T1, T2)::[lambda() (instance 1)]>(const mbed::detail::CallbackBase*)
              weak defn :  void mbed::Callback<void()>::generate<mbed::Callback<void()>::Callback<mbed::nfc::PN512SPITransportDriver*, void(mbed::nfc::PN512TransportDriver::*)(), (int)0>(T1, T2)::[lambda() (instance 1)], void>(T1&&)
              weak defn :  mbed::Callback<void()>::Callback__sub_object<mbed::nfc::PN512SPITransportDriver*, void(mbed::nfc::PN512TransportDriver::*)(), (int)0>(T1, T2)
              weak defn :  mbed::Callback<T3(T4...)> mbed::callback<mbed::nfc::PN512TransportDriver, mbed::nfc::PN512SPITransportDriver, void, <>>(T2*, T3(T1::*)(T4...))
              weak defn :  std::__1::enable_if<((std::is_function<T2>::value&&(!std::is_base_of<T1, std::__1::decay<T3>::type>::value))&&(!is_reference_wrapper<std::__1::decay<T3>::type>::value)), decltype((((*std::forward<T3>(param#2)).*param#1)(std::forward<T4>(param#3)...)))>::type mstd::impl::INVOKE<mbed::nfc::PN512TransportDriver, void(), mbed::nfc::PN512SPITransportDriver*const &, <>>(T2T1::*, T3&&, T4&&...)
              weak defn :  std::__1::enable_if<((!std::is_member_pointer<std::__1::decay<T1>::type>::value)||(std::is_member_object_pointer<std::__1::decay<T1>::type>::value&&(sizeof...(param#2)!=(int)1))), decltype((std::forward<T1>(param#1)(std::forward<T2>(param#2)...)))>::type mstd::impl::INVOKE<mbed::Callback<void()>::Callback<mbed::nfc::PN512SPITransportDriver*, void(mbed::nfc::PN512TransportDriver::*)(), (int)0>(T1, T2)::[lambda() (instance 1)]&, <>>(T1&&, T2&&...)
              weak defn :  mstd::invoke_result<T1, <T2...>>::type mstd::invoke<void(mbed::nfc::PN512TransportDriver::*const &)(), <mbed::nfc::PN512SPITransportDriver*const &>>(T1&&, T2&&...)
              weak defn :  mstd::invoke_result<T1, <T2...>>::type mstd::invoke<mbed::Callback<void()>::Callback<mbed::nfc::PN512SPITransportDriver*, void(mbed::nfc::PN512TransportDriver::*)(), (int)0>(T1, T2)::[lambda() (instance 1)]&, <>>(T1&&, T2&&...)
              definition:  vtable for mbed::nfc::PN512SPITransportDriver
              weak defn :  mbed::Callback<void()>::Callback<mbed::nfc::PN512SPITransportDriver*, void(mbed::nfc::PN512TransportDriver::*)(), (int)0>(T1, T2)::[lambda() (instance 1)]::operator ()() const
              reference :  operator delete (void*)
              reference :  __aeabi_memset
              reference :  gpio_init_out_ex
              reference :  nfc_transport_init
              reference :  wait_us
              reference :  mbed::DigitalOut::DigitalOut__sub_object(PinName, int)
              reference :  mbed::Callback<T1(T2...)> mbed::callback<void, <>>(T1(*)(T2...))
              reference :  mbed::DigitalOut::operator =(int)
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/drivers/nfc/PN512/source/PN512TransportDriver.o.
              definition:  mbed::nfc::PN512TransportDriver::hw_interrupt()
              definition:  mbed::nfc::PN512TransportDriver::set_delegate(mbed::nfc::PN512TransportDriver::Delegate*)
              definition:  mbed::nfc::PN512TransportDriver::PN512TransportDriver__sub_object()
              definition:  mbed::nfc::PN512TransportDriver::~PN512TransportDriver__deallocating()
              definition:  mbed::nfc::PN512TransportDriver::~PN512TransportDriver()
              definition:  mbed::nfc::PN512TransportDriver::~PN512TransportDriver__sub_object()
              definition:  vtable for mbed::nfc::PN512TransportDriver
              reference :  __cxa_pure_virtual
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/drivers/nfc/PN512/source/transceiver/pn512.o.
              reference :  ac_buffer_builder_init
              reference :  ac_buffer_dup
              reference :  ac_buffer_init
              reference :  nfc_scheduler_dequeue_task
              definition:  pn512_abort
              definition:  pn512_close
              reference :  pn512_cmd_exec
              reference :  pn512_cmd_init
              reference :  pn512_cmd_wait_idle
              reference :  pn512_fifo_clear
              reference :  pn512_framing_crc_set
              reference :  pn512_framing_set
              definition:  pn512_get_last_byte_length
              definition:  pn512_get_read
              definition:  pn512_get_transceiver
              reference :  pn512_hw_init
              definition:  pn512_init
              definition:  pn512_poll
              reference :  pn512_poll_hw
              reference :  pn512_poll_setup
              reference :  pn512_register_read
              reference :  pn512_register_write
              reference :  pn512_registers_init
              reference :  pn512_registers_reset
              reference :  pn512_rf_field_switch_off
              definition:  pn512_set_crc
              definition:  pn512_set_first_byte_align
              definition:  pn512_set_last_byte_length
              definition:  pn512_set_protocols
              definition:  pn512_set_timeout
              definition:  pn512_set_transceive_framing
              definition:  pn512_set_transceive_options
              definition:  pn512_set_write
              definition:  pn512_sleep
              definition:  pn512_transceive
              reference :  pn512_transceive_hw
              definition:  pn512_transceiver_callback
              reference :  srand
              reference :  transceiver_init
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/drivers/nfc/PN512/source/transceiver/pn512_cmd.o.
              reference :  ac_buffer_builder_write_n_skip
              reference :  ac_buffer_read_n_skip
              reference :  ac_buffer_reader_current_buffer_length
              reference :  ac_buffer_reader_current_buffer_pointer
              reference :  ac_buffer_reader_readable
              definition:  pn512_cmd_exec
              definition:  pn512_cmd_get
              definition:  pn512_cmd_init
              definition:  pn512_cmd_wait_idle
              definition:  pn512_fifo_clear
              definition:  pn512_fifo_length
              definition:  pn512_fifo_read
              definition:  pn512_fifo_space
              definition:  pn512_fifo_write
              reference :  pn512_register_read
              reference :  pn512_register_switch_page
              reference :  pn512_register_write
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/drivers/nfc/PN512/source/transceiver/pn512_hw.o.
              definition:  pn512_hw_init
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/drivers/nfc/PN512/source/transceiver/pn512_irq.o.
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/drivers/nfc/PN512/source/transceiver/pn512_poll.o.
              reference :  ac_buffer_builder_reset
              reference :  ac_buffer_builder_write_be
              reference :  ac_buffer_builder_write_le
              reference :  ac_buffer_dup
              reference :  ac_buffer_read_be
              reference :  ac_buffer_read_le
              reference :  ac_buffer_read_n_skip
              reference :  ac_buffer_reader_readable
              reference :  nfc_scheduler_queue_task
              reference :  pn512_cmd_exec
              reference :  pn512_cmd_wait_idle
              reference :  pn512_fifo_clear
              reference :  pn512_fifo_write
              reference :  pn512_framing_rx_multiple_enable
              reference :  pn512_framing_set
              reference :  pn512_get_read
              definition:  pn512_poll_hw
              definition:  pn512_poll_setup
              reference :  pn512_register_read
              reference :  pn512_register_write
              reference :  pn512_rf_field_nfcip1_rf_collision_avoidance
              reference :  pn512_rf_field_switch_off
              reference :  pn512_rf_field_wait_for_external
              reference :  pn512_set_crc
              reference :  pn512_set_first_byte_align
              reference :  pn512_set_last_byte_length
              reference :  pn512_set_timeout
              reference :  pn512_set_write
              definition:  pn512_target_anticollision_complete
              reference :  pn512_transceive_hw
              reference :  task_init
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/drivers/nfc/PN512/source/transceiver/pn512_registers.o.
              definition:  pn512_register_read
              definition:  pn512_register_switch_page
              definition:  pn512_register_write
              definition:  pn512_registers_init
              definition:  pn512_registers_reset
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/drivers/nfc/PN512/source/transceiver/pn512_rf.o.
              reference :  nfc_scheduler_queue_task
              definition:  pn512_framing_crc_set
              definition:  pn512_framing_rx_multiple_enable
              definition:  pn512_framing_set
              reference :  pn512_register_read
              reference :  pn512_register_write
              definition:  pn512_rf_field_nfcip1_rf_collision_avoidance
              definition:  pn512_rf_field_nfcip1_rf_collision_avoidance_complete
              definition:  pn512_rf_field_switch_off
              definition:  pn512_rf_field_wait_for_external
              definition:  pn512_rf_field_wait_for_external_complete_task
              reference :  pn512_timer_config
              reference :  pn512_timer_stop
              reference :  task_init
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/drivers/nfc/PN512/source/transceiver/pn512_timer.o.
              reference :  pn512_register_write
              definition:  pn512_timer_config
              definition:  pn512_timer_start
              definition:  pn512_timer_stop
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/drivers/nfc/PN512/source/transceiver/pn512_transceive.o.
              reference :  ac_buffer_builder_reset
              reference :  ac_buffer_reader_readable
              reference :  nfc_scheduler_queue_task
              reference :  pn512_cmd_exec
              reference :  pn512_fifo_clear
              reference :  pn512_fifo_length
              reference :  pn512_fifo_read
              reference :  pn512_fifo_write
              reference :  pn512_register_read
              reference :  pn512_register_write
              definition:  pn512_transceive_hw
              definition:  pn512_transceive_hw_rx_start
              definition:  pn512_transceive_hw_rx_task
              definition:  pn512_transceive_hw_tx_iteration
              definition:  pn512_transceive_hw_tx_task
              reference :  task_init
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/drivers/wifi/esp8266-driver/ESP8266Interface.o.
              reference :  NetworkStack::getaddrinfo(const char*, SocketAddress*, SocketAddress**, const char*)
              reference :  NetworkStack::getstackopt(int, int, void*, unsigned*)
              reference :  NetworkStack::setstackopt(int, int, const void*, unsigned)
              reference :  NetworkStack::gethostbyname(const char*, SocketAddress*, nsapi_version, const char*)
              reference :  NetworkStack::add_dns_server(const SocketAddress&, const char*)
              reference :  NetworkStack::get_dns_server(int, SocketAddress*, const char*)
              reference :  NetworkStack::get_ip_address_if(SocketAddress*, const char*)
              reference :  NetworkStack::getaddrinfo_async(const char*, SocketAddress*, mbed::Callback<void(int, SocketAddress*)>, const char*)
              reference :  NetworkStack::gethostbyname_async(const char*, mbed::Callback<void(int, SocketAddress*)>, nsapi_version, const char*)
              reference :  NetworkStack::get_call_in_callback()
              reference :  NetworkStack::gethostbyname_async_cancel(int)
              reference :  NetworkStack::get_ipv6_link_local_address(SocketAddress*)
              reference :  NetworkStack::call_in(int, mbed::Callback<void()>)
              reference :  SocketAddress::set_ip_address(const char*)
              reference :  SocketAddress::operator =(const SocketAddress&)
              weak defn :  WiFiInterface::wifiInterface()
              reference :  WiFiInterface::set_default_parameters()
              weak defn :  WiFiInterface::WiFiInterface__sub_object()
              weak defn :  WiFiInterface::~WiFiInterface__deallocating()
              weak defn :  WiFiInterface::~WiFiInterface()
              weak defn :  WiFiInterface::~WiFiInterface__sub_object()
              weak defn :  esp8266_socket::esp8266_socket__sub_object()
              weak defn :  esp8266_socket::~esp8266_socket__sub_object()
              definition:  ESP8266Interface::_power_off()
              definition:  ESP8266Interface::disconnect()
              definition:  ESP8266Interface::getsockopt(void*, int, int, void*, unsigned*)
              definition:  ESP8266Interface::setsockopt(void*, int, int, const void*, unsigned)
              definition:  ESP8266Interface::get_gateway(SocketAddress*)
              definition:  ESP8266Interface::get_gateway()
              definition:  ESP8266Interface::get_netmask(SocketAddress*)
              definition:  ESP8266Interface::get_netmask()
              definition:  ESP8266Interface::set_channel(unsigned char)
              definition:  ESP8266Interface::set_network(const SocketAddress&, const SocketAddress&, const SocketAddress&)
              definition:  ESP8266Interface::socket_bind(void*, const SocketAddress&)
              definition:  ESP8266Interface::socket_open(void**, nsapi_protocol)
              definition:  ESP8266Interface::socket_recv(void*, void*, unsigned)
              definition:  ESP8266Interface::socket_send(void*, const void*, unsigned)
              definition:  ESP8266Interface::set_blocking(bool)
              definition:  ESP8266Interface::socket_close(void*)
              definition:  ESP8266Interface::proc_oob_evnt()
              definition:  ESP8266Interface::socket_accept(void*, void**, SocketAddress*)
              definition:  ESP8266Interface::socket_attach(void*, void(*)(void*), void*)
              definition:  ESP8266Interface::socket_listen(void*, int)
              definition:  ESP8266Interface::socket_sendto(void*, const SocketAddress&, const void*, unsigned)
              definition:  ESP8266Interface::_connect_async()
              definition:  ESP8266Interface::event_deferred()
              definition:  ESP8266Interface::get_ip_address(SocketAddress*)
              definition:  ESP8266Interface::socket_connect(void*, const SocketAddress&)
              definition:  ESP8266Interface::get_mac_address()
              definition:  ESP8266Interface::set_credentials(const char*, const char*, nsapi_security)
              definition:  ESP8266Interface::socket_recvfrom(void*, SocketAddress*, void*, unsigned)
              definition:  ESP8266Interface::_get_firmware_ok()
              definition:  ESP8266Interface::set_country_code(bool, const char*, int, int, int)
              definition:  ESP8266Interface::_disconnect_async()
              definition:  ESP8266Interface::get_interface_name(char*)
              definition:  ESP8266Interface::_conn_status_to_error()
              definition:  ESP8266Interface::refresh_conn_state_cb()
              definition:  ESP8266Interface::scan(WiFiAccessPoint*, unsigned)
              definition:  ESP8266Interface::scan(WiFiAccessPoint*, unsigned, ESP8266Interface::scan_mode, std::__1::chrono::duration<unsigned, std::__1::ratio<(long long)1, (long long)1000>>, std::__1::chrono::duration<unsigned, std::__1::ratio<(long long)1, (long long)1000>>)
              definition:  ESP8266Interface::_init()
              definition:  ESP8266Interface::event()
              definition:  ESP8266Interface::_reset()
              definition:  ESP8266Interface::attach(mbed::Callback<void(nsapi_event, int)>)
              definition:  ESP8266Interface::connect(const char*, const char*, nsapi_security, unsigned char)
              definition:  ESP8266Interface::connect()
              definition:  ESP8266Interface::PowerPin::is_connected()
              definition:  ESP8266Interface::PowerPin::power_on()
              definition:  ESP8266Interface::PowerPin::power_off()
              definition:  ESP8266Interface::PowerPin::PowerPin(PinName)
              definition:  ESP8266Interface::PowerPin::PowerPin__sub_object(PinName)
              definition:  ESP8266Interface::ResetPin::rst_assert()
              definition:  ESP8266Interface::ResetPin::is_connected()
              definition:  ESP8266Interface::ResetPin::rst_deassert()
              definition:  ESP8266Interface::ResetPin::ResetPin(PinName)
              definition:  ESP8266Interface::ResetPin::ResetPin__sub_object(PinName)
              definition:  ESP8266Interface::get_rssi()
              definition:  ESP8266Interface::get_time(std::tm*)
              definition:  ESP8266Interface::set_dhcp(bool)
              weak defn :  ESP8266Interface::get_stack()
              definition:  ESP8266Interface::ESP8266Interface(PinName, PinName, bool, PinName, PinName, PinName, PinName)
              definition:  ESP8266Interface::ESP8266Interface()
              definition:  ESP8266Interface::ESP8266Interface__sub_object(PinName, PinName, bool, PinName, PinName, PinName, PinName)
              definition:  ESP8266Interface::ESP8266Interface__sub_object()
              definition:  ESP8266Interface::~ESP8266Interface__deallocating()
              definition:  ESP8266Interface::~ESP8266Interface()
              definition:  ESP8266Interface::~ESP8266Interface__sub_object()
              reference :  NetworkInterface::get_gateway(SocketAddress*)
              reference :  NetworkInterface::get_netmask(SocketAddress*)
              reference :  NetworkInterface::getaddrinfo(const char*, SocketAddress*, SocketAddress**, const char*)
              reference :  NetworkInterface::set_network(const SocketAddress&, const SocketAddress&, const SocketAddress&)
              reference :  NetworkInterface::set_blocking(bool)
              reference :  NetworkInterface::gethostbyname(const char*, SocketAddress*, nsapi_version, const char*)
              reference :  NetworkInterface::add_dns_server(const SocketAddress&, const char*)
              reference :  NetworkInterface::get_dns_server(int, SocketAddress*, const char*)
              reference :  NetworkInterface::get_ip_address(SocketAddress*)
              reference :  NetworkInterface::set_as_default()
              reference :  NetworkInterface::get_mac_address()
              weak defn :  NetworkInterface::cellularInterface()
              reference :  NetworkInterface::getaddrinfo_async(const char*, SocketAddress*, mbed::Callback<void(int, SocketAddress*)>, const char*)
              reference :  NetworkInterface::get_interface_name(char*)
              reference :  NetworkInterface::gethostbyname_async(const char*, mbed::Callback<void(int, SocketAddress*)>, nsapi_version, const char*)
              reference :  NetworkInterface::gethostbyname_async_cancel(int)
              reference :  NetworkInterface::get_ipv6_link_local_address(SocketAddress*)
              reference :  NetworkInterface::attach(mbed::Callback<void(nsapi_event, int)>)
              reference :  NetworkInterface::set_dhcp(bool)
              reference :  NetworkInterface::~NetworkInterface__sub_object()
              weak defn :  mbed::ATCmdParser::~ATCmdParser__sub_object()
              reference :  mbed::BufferedSerial::~BufferedSerial()
              reference :  mbed::mbed_event_queue()
              reference :  mbed::Timer::Timer()
              weak defn :  T1 mbed::detail::invoke_r<void, void(ESP8266Interface::*const &)(), <ESP8266Interface*const &>, (int)0>(T2&&, T3&&...)
              weak defn :  T1 mbed::detail::invoke_r<void, mbed::Callback<void()>::Callback<ESP8266Interface*, void(ESP8266Interface::*)(), (int)0>(T1, T2)::[lambda() (instance 1)]&, <>, (int)0>(T2&&, T3&&...)
              weak defn :  void mbed::Callback<void()>::target_call<mbed::Callback<void()>::Callback<ESP8266Interface*, void(ESP8266Interface::*)(), (int)0>(T1, T2)::[lambda() (instance 1)]>(const mbed::detail::CallbackBase*)
              weak defn :  void mbed::Callback<void()>::generate<mbed::Callback<void()>::Callback<ESP8266Interface*, void(ESP8266Interface::*)(), (int)0>(T1, T2)::[lambda() (instance 1)], void>(T1&&)
              weak defn :  mbed::Callback<void()>::Callback__sub_object<ESP8266Interface*, void(ESP8266Interface::*)(), (int)0>(T1, T2)
              weak defn :  mbed::Callback<T3(T4...)> mbed::callback<ESP8266Interface, ESP8266Interface, void, <>>(T2*, T3(T1::*)(T4...))
              reference :  mbed::TimerBase::stop()
              reference :  mbed::TimerBase::reset()
              reference :  mbed::TimerBase::start()
              reference :  mbed::TimerBase::~TimerBase__sub_object()
              weak defn :  std::__1::enable_if<((std::is_function<T2>::value&&(!std::is_base_of<T1, std::__1::decay<T3>::type>::value))&&(!is_reference_wrapper<std::__1::decay<T3>::type>::value)), decltype((((*std::forward<T3>(param#2)).*param#1)(std::forward<T4>(param#3)...)))>::type mstd::impl::INVOKE<ESP8266Interface, void(), ESP8266Interface*const &, <>>(T2T1::*, T3&&, T4&&...)
              weak defn :  std::__1::enable_if<((!std::is_member_pointer<std::__1::decay<T1>::type>::value)||(std::is_member_object_pointer<std::__1::decay<T1>::type>::value&&(sizeof...(param#2)!=(int)1))), decltype((std::forward<T1>(param#1)(std::forward<T2>(param#2)...)))>::type mstd::impl::INVOKE<mbed::Callback<void()>::Callback<ESP8266Interface*, void(ESP8266Interface::*)(), (int)0>(T1, T2)::[lambda() (instance 1)]&, <>>(T1&&, T2&&...)
              weak defn :  mstd::invoke_result<T1, <T2...>>::type mstd::invoke<void(ESP8266Interface::*const &)(), <ESP8266Interface*const &>>(T1&&, T2&&...)
              weak defn :  mstd::invoke_result<T1, <T2...>>::type mstd::invoke<mbed::Callback<void()>::Callback<ESP8266Interface*, void(ESP8266Interface::*)(), (int)0>(T1, T2)::[lambda() (instance 1)]&, <>>(T1&&, T2&&...)
              reference :  rtos::ThisThread::sleep_for(std::__1::chrono::duration<unsigned, std::__1::ratio<(long long)1, (long long)1000>>)
              reference :  rtos::ConditionVariable::notify_all()
              reference :  rtos::ConditionVariable::wait()
              reference :  rtos::ConditionVariable::ConditionVariable(rtos::Mutex&)
              reference :  rtos::ConditionVariable::~ConditionVariable()
              reference :  rtos::Mutex::lock()
              reference :  rtos::Mutex::unlock()
              reference :  rtos::Mutex::trylock()
              reference :  rtos::Mutex::Mutex()
              reference :  rtos::Mutex::~Mutex()
              reference :  events::EventQueue::cancel(int)
              reference :  ESP8266::at_version()
              reference :  ESP8266::disconnect()
              reference :  ESP8266::sdk_version()
              reference :  ESP8266::set_ip_addr(const char*, const char*, const char*)
              reference :  ESP8266::set_timeout(std::__1::chrono::duration<unsigned, std::__1::ratio<(long long)1, (long long)1000>>)
              reference :  ESP8266::at_available()
              reference :  ESP8266::get_sntp_time(std::tm*)
              reference :  ESP8266::bg_process_oob(std::__1::chrono::duration<unsigned, std::__1::ratio<(long long)1, (long long)1000>>, bool)
              reference :  ESP8266::uart_enable_input(bool)
              reference :  ESP8266::set_default_wifi_mode(signed char)
              reference :  ESP8266::set_country_code_policy(bool, const char*, int, int)
              reference :  ESP8266::start_uart_hw_flow_ctrl()
              reference :  ESP8266::cond_enable_tcp_passive_mode()
              reference :  ESP8266::dhcp(bool, int)
              reference :  ESP8266::rssi()
              reference :  ESP8266::scan(WiFiAccessPoint*, unsigned, ESP8266::scan_mode, std::__1::chrono::duration<unsigned, std::__1::ratio<(long long)1, (long long)1000>>, std::__1::chrono::duration<unsigned, std::__1::ratio<(long long)1, (long long)1000>>)
              reference :  ESP8266::send(int, const void*, unsigned)
              reference :  ESP8266::close(int)
              reference :  ESP8266::flush()
              reference :  ESP8266::reset()
              reference :  ESP8266::sigio(mbed::Callback<void()>)
              weak defn :  void ESP8266::sigio<ESP8266Interface, void(ESP8266Interface::*)()>(T1*, T2)
              reference :  ESP8266::attach(mbed::Callback<void()>)
              weak defn :  void ESP8266::attach<ESP8266Interface, void(ESP8266Interface::*)()>(T1*, T2)
              reference :  ESP8266::connect(const char*, const char*)
              reference :  ESP8266::gateway()
              reference :  ESP8266::ip_addr()
              reference :  ESP8266::netmask()
              reference :  ESP8266::startup(int)
              reference :  ESP8266::echo_off()
              reference :  ESP8266::mac_addr()
              reference :  ESP8266::open_tcp(int, const char*, int, int)
              reference :  ESP8266::open_udp(int, const char*, int, int, int)
              reference :  ESP8266::recv_tcp(int, void*, unsigned, std::__1::chrono::duration<unsigned, std::__1::ratio<(long long)1, (long long)1000>>)
              reference :  ESP8266::recv_udp(esp8266_socket*, void*, unsigned, std::__1::chrono::duration<unsigned, std::__1::ratio<(long long)1, (long long)1000>>)
              reference :  ESP8266::ESP8266(PinName, PinName, bool, PinName, PinName)
              weak defn :  ESP8266::~ESP8266__sub_object()
              reference :  SocketAddress::get_ip_address() const
              definition:  ESP8266Interface::get_connection_status() const
              reference :  NetworkInterface::get_connection_status() const
              reference :  mbed::TimerBase::elapsed_time() const
              reference :  ESP8266::connection_status() const
              definition:  construction vtable for WiFiInterface-in-ESP8266Interface
              definition:  VTT for ESP8266Interface
              reference :  vtable for NetworkStack
              definition:  vtable for ESP8266Interface
              reference :  vtable for NetworkInterface
              definition:  thunk{-4} to ESP8266Interface::disconnect()
              definition:  thunk{-4} to ESP8266Interface::set_channel(unsigned char)
              definition:  thunk{-4} to ESP8266Interface::set_credentials(const char*, const char*, nsapi_security)
              definition:  thunk{-4} to ESP8266Interface::scan(WiFiAccessPoint*, unsigned)
              definition:  thunk{-4} to ESP8266Interface::connect(const char*, const char*, nsapi_security, unsigned char)
              definition:  thunk{-4} to ESP8266Interface::connect()
              definition:  thunk{-4} to ESP8266Interface::get_rssi()
              definition:  thunk{-4} to ESP8266Interface::~ESP8266Interface__deallocating()
              definition:  thunk{-4} to ESP8266Interface::~ESP8266Interface()
              weak defn :  thunk{v:0,-120} to ESP8266Interface::get_stack()
              definition:  thunk{v:0,-36} to ESP8266Interface::~ESP8266Interface__deallocating()
              definition:  thunk{v:0,-36} to ESP8266Interface::~ESP8266Interface()
              definition:  thunk{v:0,-44} to ESP8266Interface::get_mac_address()
              definition:  thunk{v:0,-48} to ESP8266Interface::get_ip_address(SocketAddress*)
              definition:  thunk{v:0,-56} to ESP8266Interface::get_netmask(SocketAddress*)
              definition:  thunk{v:0,-60} to ESP8266Interface::get_gateway(SocketAddress*)
              definition:  thunk{v:0,-64} to ESP8266Interface::get_interface_name(char*)
              definition:  thunk{v:0,-68} to ESP8266Interface::set_network(const SocketAddress&, const SocketAddress&, const SocketAddress&)
              definition:  thunk{v:0,-72} to ESP8266Interface::set_dhcp(bool)
              definition:  thunk{v:0,-76} to ESP8266Interface::connect()
              definition:  thunk{v:0,-80} to ESP8266Interface::disconnect()
              definition:  thunk{v:0,-88} to ESP8266Interface::attach(mbed::Callback<void(nsapi_event, int)>)
              definition:  thunk{v:0,-92} to ESP8266Interface::get_connection_status() const
              definition:  thunk{v:0,-96} to ESP8266Interface::set_blocking(bool)
              weak defn :  mbed::Callback<void()>::Callback<ESP8266Interface*, void(ESP8266Interface::*)(), (int)0>(T1, T2)::[lambda() (instance 1)]::operator ()() const
              reference :  operator delete[] (void*)
              reference :  operator delete (void*)
              reference :  operator !=(const SocketAddress&, const SocketAddress&)
              reference :  operator new(unsigned)
              reference :  __aeabi_memclr
              reference :  __aeabi_memclr8
              reference :  __aeabi_memcpy
              reference :  __cxa_pure_virtual
              reference :  __stderr
              weak defn :  core_util_atomic_cas_u8
              reference :  equeue_alloc
              reference :  equeue_event_delay
              reference :  equeue_event_dtor
              reference :  equeue_post
              reference :  gpio_init_out_ex
              reference :  mbed_assert_internal
              reference :  mbed_error
              reference :  strcmp
              reference :  strlen
              reference :  strncpy
              reference :  vfprintf
              reference :  NetworkStack::NetworkStack__sub_object()
              reference :  mbed::Callback<void(nsapi_event, int)>::Callback__sub_object()
              reference :  _ZNSt3__18literals15chrono_literalsli2msEy
              reference :  int events::EventQueue::call_in<mbed::Callback<void()>>(std::__1::chrono::duration<int, std::__1::ratio<(long long)1, (long long)1000>>, T1)
              reference :  mbed::Callback<void(nsapi_event, int)>::operator bool() const
              reference :  mbed::Callback<void(nsapi_event, int)>::operator ()(nsapi_event, int) const
              reference :  NetworkInterface::NetworkInterface__sub_object()
              reference :  NetworkStack::~NetworkStack__sub_object()
              reference :  mbed::DigitalOut::is_connected()
              reference :  mbed::DigitalOut::operator =(int)
              reference :  mbed::DigitalOut::DigitalOut__sub_object(PinName, int)
              reference :  _ZNSt3__18literals15chrono_literalsli1sEy
              reference :  int events::EventQueue::call<mbed::Callback<void()>>(T1)
              reference :  _ZNSt3__18literals15chrono_literalsli2usEy
              reference :  SocketAddress::SocketAddress__sub_object()
              reference :  SocketAddress::~SocketAddress__sub_object()
              reference :  SocketAddress::get_addr() const
              reference :  SocketAddress::get_port() const
              reference :  NetworkStack::onboardNetworkStack()
              reference :  NetworkInterface::ethInterface()
              reference :  NetworkInterface::meshInterface()
              reference :  NetworkInterface::emacInterface()
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/drivers/wifi/esp8266-driver/ESP8266/ESP8266.o.
              reference :  SocketAddress::set_ip_address(const char*)
              reference :  WiFiAccessPoint::WiFiAccessPoint(nsapi_wifi_ap)
              reference :  WiFiAccessPoint::WiFiAccessPoint()
              reference :  mbed::ATCmdParser::process_oob()
              weak defn :  mbed::ATCmdParser::set_timeout(int)
              weak defn :  mbed::ATCmdParser::set_delimiter(const char*)
              reference :  mbed::ATCmdParser::oob(const char*, mbed::Callback<void()>)
              reference :  mbed::ATCmdParser::read(char*, int)
              reference :  mbed::ATCmdParser::recv(const char*, ...)
              reference :  mbed::ATCmdParser::send(const char*, ...)
              reference :  mbed::ATCmdParser::abort()
              reference :  mbed::ATCmdParser::flush()
              reference :  mbed::ATCmdParser::scanf(const char*, ...)
              reference :  mbed::ATCmdParser::write(const char*, int)
              weak defn :  mbed::ATCmdParser::debug_on(unsigned char)
              weak defn :  mbed::ATCmdParser::ATCmdParser__sub_object(mbed::FileHandle*, const char*, int, int, bool)
              reference :  mbed::BufferedSerial::enable_input(bool)
              reference :  mbed::BufferedSerial::set_flow_control(mbed::SerialBase::Flow, PinName, PinName)
              reference :  mbed::BufferedSerial::sigio(mbed::Callback<void()>)
              reference :  mbed::BufferedSerial::set_baud(int)
              reference :  mbed::BufferedSerial::BufferedSerial(PinName, PinName, int)
              weak defn :  T1 mbed::detail::invoke_r<void, void(ESP8266::*const &)(), <ESP8266*const &>, (int)0>(T2&&, T3&&...)
              weak defn :  T1 mbed::detail::invoke_r<void, mbed::Callback<void()>::Callback<ESP8266*, void(ESP8266::*)(), (int)0>(T1, T2)::[lambda() (instance 1)]&, <>, (int)0>(T2&&, T3&&...)
              weak defn :  void mbed::Callback<void()>::target_call<mbed::Callback<void()>::Callback<ESP8266*, void(ESP8266::*)(), (int)0>(T1, T2)::[lambda() (instance 1)]>(const mbed::detail::CallbackBase*)
              weak defn :  void mbed::Callback<void()>::generate<mbed::Callback<void()>::Callback<ESP8266*, void(ESP8266::*)(), (int)0>(T1, T2)::[lambda() (instance 1)], void>(T1&&)
              weak defn :  mbed::Callback<void()>::Callback__sub_object<ESP8266*, void(ESP8266::*)(), (int)0>(T1, T2)
              weak defn :  mbed::Callback<T3(T4...)> mbed::callback<ESP8266, ESP8266, void, <>>(T2*, T3(T1::*)(T4...))
              weak defn :  std::__1::enable_if<((std::is_function<T2>::value&&(!std::is_base_of<T1, std::__1::decay<T3>::type>::value))&&(!is_reference_wrapper<std::__1::decay<T3>::type>::value)), decltype((((*std::forward<T3>(param#2)).*param#1)(std::forward<T4>(param#3)...)))>::type mstd::impl::INVOKE<ESP8266, void(), ESP8266*const &, <>>(T2T1::*, T3&&, T4&&...)
              weak defn :  std::__1::enable_if<((!std::is_member_pointer<std::__1::decay<T1>::type>::value)||(std::is_member_object_pointer<std::__1::decay<T1>::type>::value&&(sizeof...(param#2)!=(int)1))), decltype((std::forward<T1>(param#1)(std::forward<T2>(param#2)...)))>::type mstd::impl::INVOKE<mbed::Callback<void()>::Callback<ESP8266*, void(ESP8266::*)(), (int)0>(T1, T2)::[lambda() (instance 1)]&, <>>(T1&&, T2&&...)
              weak defn :  mstd::invoke_result<T1, <T2...>>::type mstd::invoke<void(ESP8266::*const &)(), <ESP8266*const &>>(T1&&, T2&&...)
              weak defn :  mstd::invoke_result<T1, <T2...>>::type mstd::invoke<mbed::Callback<void()>::Callback<ESP8266*, void(ESP8266::*)(), (int)0>(T1, T2)::[lambda() (instance 1)]&, <>>(T1&&, T2&&...)
              reference :  rtos::ThisThread::sleep_for(std::__1::chrono::duration<unsigned, std::__1::ratio<(long long)1, (long long)1000>>)
              reference :  rtos::Mutex::lock()
              reference :  rtos::Mutex::unlock()
              reference :  rtos::Mutex::Mutex()
              reference :  rtos::Kernel::impl::get_tick_count()
              definition:  ESP8266::_oob_ready()
              definition:  ESP8266::at_version()
              definition:  ESP8266::disconnect()
              definition:  ESP8266::dns_lookup(const char*, char*)
              definition:  ESP8266::sdk_version()
              definition:  ESP8266::set_ip_addr(const char*, const char*, const char*)
              definition:  ESP8266::set_timeout(std::__1::chrono::duration<unsigned, std::__1::ratio<(long long)1, (long long)1000>>)
              definition:  ESP8266::_process_oob(std::__1::chrono::duration<unsigned, std::__1::ratio<(long long)1, (long long)1000>>, bool)
              definition:  ESP8266::at_available()
              weak defn :  ESP8266::fw_at_version::fw_at_version__sub_object(int, int, int)
              definition:  ESP8266::get_sntp_time(std::tm*)
              definition:  ESP8266::ip_info_print(int)
              definition:  ESP8266::bg_process_oob(std::__1::chrono::duration<unsigned, std::__1::ratio<(long long)1, (long long)1000>>, bool)
              weak defn :  ESP8266::fw_sdk_version::fw_sdk_version__sub_object(int, int, int)
              definition:  ESP8266::get_sntp_config(bool*, int*, char*, char*, char*)
              definition:  ESP8266::set_sntp_config(bool, int, const char*, const char*, const char*)
              definition:  ESP8266::_oob_connect_err()
              definition:  ESP8266::_oob_packet_hdlr()
              definition:  ESP8266::_oob_conn_already()
              definition:  ESP8266::_oob_scan_results()
              definition:  ESP8266::_recv_tcp_passive(int, void*, unsigned, std::__1::chrono::duration<unsigned, std::__1::ratio<(long long)1, (long long)1000>>)
              definition:  ESP8266::default_wifi_mode()
              definition:  ESP8266::uart_enable_input(bool)
              definition:  ESP8266::_oob_tcp_data_hdlr()
              definition:  ESP8266::_oob_socket0_closed()
              definition:  ESP8266::_oob_socket1_closed()
              definition:  ESP8266::_oob_socket2_closed()
              definition:  ESP8266::_oob_socket3_closed()
              definition:  ESP8266::_oob_socket4_closed()
              definition:  ESP8266::_oob_watchdog_reset()
              definition:  ESP8266::_clear_socket_packets(int)
              definition:  ESP8266::_clear_socket_sending(int)
              definition:  ESP8266::_oob_send_ok_received()
              definition:  ESP8266::_oob_socket_close_err()
              definition:  ESP8266::set_default_wifi_mode(signed char)
              definition:  ESP8266::_oob_connection_status()
              definition:  ESP8266::stop_uart_hw_flow_ctrl()
              definition:  ESP8266::_oob_send_fail_received()
              definition:  ESP8266::set_country_code_policy(bool, const char*, int, int)
              definition:  ESP8266::start_uart_hw_flow_ctrl()
              definition:  ESP8266::cond_enable_tcp_passive_mode()
              definition:  ESP8266::dhcp(bool, int)
              definition:  ESP8266::rssi()
              definition:  ESP8266::scan(WiFiAccessPoint*, unsigned, ESP8266::scan_mode, std::__1::chrono::duration<unsigned, std::__1::ratio<(long long)1, (long long)1000>>, std::__1::chrono::duration<unsigned, std::__1::ratio<(long long)1, (long long)1000>>)
              definition:  ESP8266::send(int, const void*, unsigned)
              definition:  ESP8266::close(int)
              definition:  ESP8266::flush()
              definition:  ESP8266::reset()
              definition:  ESP8266::sigio(mbed::Callback<void()>)
              definition:  ESP8266::attach(mbed::Callback<void()>)
              definition:  ESP8266::connect(const char*, const char*)
              definition:  ESP8266::gateway()
              definition:  ESP8266::ip_addr()
              definition:  ESP8266::netmask()
              definition:  ESP8266::startup(int)
              definition:  ESP8266::_oob_err()
              definition:  ESP8266::_recv_ap(nsapi_wifi_ap*)
              definition:  ESP8266::echo_off()
              definition:  ESP8266::mac_addr()
              definition:  ESP8266::open_tcp(int, const char*, int, int)
              definition:  ESP8266::open_udp(int, const char*, int, int, int)
              definition:  ESP8266::readable()
              definition:  ESP8266::recv_tcp(int, void*, unsigned, std::__1::chrono::duration<unsigned, std::__1::ratio<(long long)1, (long long)1000>>)
              definition:  ESP8266::recv_udp(esp8266_socket*, void*, unsigned, std::__1::chrono::duration<unsigned, std::__1::ratio<(long long)1, (long long)1000>>)
              definition:  ESP8266::_oob_busy()
              definition:  ESP8266::writeable()
              definition:  ESP8266::ESP8266(PinName, PinName, bool, PinName, PinName)
              definition:  ESP8266::ESP8266__sub_object(PinName, PinName, bool, PinName, PinName)
              reference :  WiFiAccessPoint::get_rssi() const
              weak defn :  mbed::FileHandle::writable() const
              definition:  ESP8266::connection_status() const
              weak defn :  mbed::Callback<void()>::Callback<ESP8266*, void(ESP8266::*)(), (int)0>(T1, T2)::[lambda() (instance 1)]::operator ()() const
              reference :  operator new[] (unsigned)
              reference :  __0sscanf
              reference :  __aeabi_memcpy
              reference :  __aeabi_memmove
              reference :  _printf_return_value
              reference :  _scanf_int
              reference :  _scanf_string
              reference :  free
              reference :  malloc
              reference :  mbed_assert_internal
              reference :  mbed_error
              reference :  memcmp
              reference :  strlen
              reference :  mbed::Callback<void()>::Callback__sub_object()
              reference :  mbed::Callback<void()>::operator bool() const
              reference :  mbed::Callback<void()>::operator ()() const
              reference :  _ZNSt3__18literals15chrono_literalsli1sEy
              reference :  rtos::Kernel::Clock::now()
              reference :  _ZNSt3__18literals15chrono_literalsli2msEy
              reference :  SocketAddress::set_port(unsigned short)
              reference :  mbed::FileHandle::readable() const
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/libraries/mbed-coap/source/sn_coap_builder.o.
              reference :  __aeabi_memclr
              reference :  __aeabi_memcpy
              definition:  sn_coap_build_response
              definition:  sn_coap_builder
              definition:  sn_coap_builder_2
              definition:  sn_coap_builder_calc_needed_packet_data_size
              definition:  sn_coap_builder_calc_needed_packet_data_size_2
              reference :  sn_coap_header_validity_check
              reference :  sn_coap_parser_alloc_message
              reference :  sn_coap_protocol_malloc_copy
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/libraries/mbed-coap/source/sn_coap_header_check.o.
              definition:  sn_coap_header_validity_check
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/libraries/mbed-coap/source/sn_coap_parser.o.
              reference :  __aeabi_memcpy
              definition:  sn_coap_parser
              definition:  sn_coap_parser_alloc_message
              definition:  sn_coap_parser_alloc_message_with_options
              definition:  sn_coap_parser_alloc_options
              definition:  sn_coap_parser_init_message
              definition:  sn_coap_parser_release_allocated_coap_msg_mem
              reference :  sn_coap_protocol_calloc
              reference :  sn_coap_protocol_malloc_copy
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/libraries/mbed-coap/source/sn_coap_protocol.o.
              reference :  __aeabi_memclr
              reference :  __aeabi_memcpy
              reference :  memcmp
              reference :  ns_list_add_to_end_
              reference :  ns_list_get_next_
              reference :  ns_list_init_
              reference :  ns_list_remove_
              definition:  prepare_blockwise_message
              reference :  randLIB_get_16bit
              reference :  randLIB_get_random_in_range
              reference :  randLIB_seed_random
              reference :  sn_coap_builder_2
              reference :  sn_coap_header_validity_check
              reference :  sn_coap_parser
              reference :  sn_coap_parser_release_allocated_coap_msg_mem
              definition:  sn_coap_protocol_build
              definition:  sn_coap_protocol_calloc
              definition:  sn_coap_protocol_clear_received_blockwise_messages
              definition:  sn_coap_protocol_clear_retransmission_buffer
              definition:  sn_coap_protocol_clear_sent_blockwise_messages
              definition:  sn_coap_protocol_delete_retransmission
              definition:  sn_coap_protocol_delete_retransmission_by_token
              definition:  sn_coap_protocol_destroy
              definition:  sn_coap_protocol_exec
              definition:  sn_coap_protocol_get_configured_blockwise_size
              definition:  sn_coap_protocol_handle_block2_response_internally
              definition:  sn_coap_protocol_init
              definition:  sn_coap_protocol_linked_list_duplication_info_remove
              definition:  sn_coap_protocol_malloc_copy
              definition:  sn_coap_protocol_parse
              definition:  sn_coap_protocol_send_rst
              definition:  sn_coap_protocol_set_block_size
              definition:  sn_coap_protocol_set_duplicate_buffer_size
              definition:  sn_coap_protocol_set_retransmission_buffer
              definition:  sn_coap_protocol_set_retransmission_parameters
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/libraries/nanostack-libservice/source/IPv6_fcf_lib/ip_fsc.o.
              definition:  ip_fcf_v
              definition:  ipv6_fcf
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/libraries/nanostack-libservice/source/libBits/common_functions.o.
              reference :  __aeabi_memcpy
              definition:  bit_clear
              definition:  bit_set
              definition:  bit_test
              definition:  bitcopy
              definition:  bitcopy0
              definition:  bitsequal
              definition:  common_count_bits
              definition:  common_count_leading_zeros
              definition:  common_count_leading_zeros_16
              definition:  common_count_leading_zeros_32
              definition:  common_count_leading_zeros_8
              definition:  common_read_16_bit
              definition:  common_read_16_bit_inverse
              definition:  common_read_24_bit
              definition:  common_read_24_bit_inverse
              definition:  common_read_32_bit
              definition:  common_read_32_bit_inverse
              definition:  common_read_64_bit
              definition:  common_serial_number_greater_16
              definition:  common_serial_number_greater_32
              definition:  common_serial_number_greater_8
              definition:  common_write_16_bit
              definition:  common_write_16_bit_inverse
              definition:  common_write_24_bit
              definition:  common_write_24_bit_inverse
              definition:  common_write_32_bit
              definition:  common_write_32_bit_inverse
              definition:  common_write_64_bit
              reference :  memcmp
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/libraries/nanostack-libservice/source/libList/ns_list.o.
              definition:  ns_list_add_after_
              definition:  ns_list_add_before_
              definition:  ns_list_add_to_end_
              definition:  ns_list_add_to_start_
              definition:  ns_list_concatenate_
              definition:  ns_list_count_
              definition:  ns_list_get_last_
              definition:  ns_list_get_next_
              definition:  ns_list_get_previous_
              definition:  ns_list_init_
              definition:  ns_list_link_init_
              definition:  ns_list_remove_
              definition:  ns_list_replace_
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/libraries/nanostack-libservice/source/libip4string/ip4tos.o.
              definition:  ip4tos
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/libraries/nanostack-libservice/source/libip4string/stoip4.o.
              definition:  stoip4
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/libraries/nanostack-libservice/source/libip6string/ip6tos.o.
              reference :  __2sprintf
              reference :  _printf_int_dec
              reference :  _printf_longlong_hex
              reference :  _printf_percent
              reference :  _printf_return_value
              reference :  _printf_u
              reference :  _printf_x
              reference :  bitcopy
              definition:  ip6_prefix_tos
              definition:  ip6tos
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/libraries/nanostack-libservice/source/libip6string/stoip6.o.
              reference :  __aeabi_memclr
              reference :  __aeabi_memmove
              reference :  common_write_16_bit
              definition:  sipv6_prefixlength
              definition:  stoip6
              definition:  stoip6_prefix
              reference :  strchr
              reference :  strlen
              reference :  strtoul
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/libraries/nanostack-libservice/source/nsdynmemLIB/nsdynmemLIB.o.
              definition:  ns_dyn_mem_alloc
              definition:  ns_dyn_mem_free
              definition:  ns_dyn_mem_get_mem_stat
              definition:  ns_dyn_mem_init
              definition:  ns_dyn_mem_region_add
              definition:  ns_dyn_mem_set_temporary_alloc_free_heap_threshold
              definition:  ns_dyn_mem_temporary_alloc
              reference :  ns_list_add_after_
              reference :  ns_list_add_before_
              reference :  ns_list_add_to_end_
              reference :  ns_list_add_to_start_
              reference :  ns_list_get_last_
              reference :  ns_list_get_next_
              reference :  ns_list_get_previous_
              reference :  ns_list_init_
              reference :  ns_list_remove_
              definition:  ns_mem_alloc
              definition:  ns_mem_free
              definition:  ns_mem_get_mem_stat
              definition:  ns_mem_init
              definition:  ns_mem_region_add
              definition:  ns_mem_set_temporary_alloc_free_heap_threshold
              definition:  ns_mem_temporary_alloc
              reference :  platform_enter_critical
              reference :  platform_exit_critical
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/libraries/nanostack-libservice/source/nvmHelper/ns_nvm_helper.o.
              reference :  ns_dyn_mem_free
              reference :  ns_dyn_mem_temporary_alloc
              reference :  ns_list_add_to_end_
              reference :  ns_list_get_next_
              reference :  ns_list_init_
              reference :  ns_list_remove_
              definition:  ns_nvm_callback_func
              definition:  ns_nvm_data_read
              definition:  ns_nvm_data_write
              definition:  ns_nvm_key_delete
              reference :  platform_nvm_flush
              reference :  platform_nvm_init
              reference :  platform_nvm_key_create
              reference :  platform_nvm_key_delete
              reference :  platform_nvm_read
              reference :  platform_nvm_write
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/libraries/ppp/source/auth.o.
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/libraries/ppp/source/ccp.o.
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/libraries/ppp/source/chap-md5.o.
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/libraries/ppp/source/chap-new.o.
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/libraries/ppp/source/chap_ms.o.
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/libraries/ppp/source/demand.o.
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/libraries/ppp/source/eap.o.
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/libraries/ppp/source/eui64.o.
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/libraries/ppp/source/fsm.o.
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/libraries/ppp/source/ipcp.o.
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/libraries/ppp/source/ipv6cp.o.
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/libraries/ppp/source/lcp.o.
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/libraries/ppp/source/magic.o.
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/libraries/ppp/source/mppe.o.
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/libraries/ppp/source/multilink.o.
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/libraries/ppp/source/polarssl/ppp_arc4.o.
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/libraries/ppp/source/polarssl/ppp_des.o.
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/libraries/ppp/source/polarssl/ppp_md4.o.
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/libraries/ppp/source/polarssl/ppp_md5.o.
              reference :  __aeabi_memcpy
              definition:  md5
              definition:  md5_finish
              definition:  md5_starts
              definition:  md5_update
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/libraries/ppp/source/polarssl/ppp_sha1.o.
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/libraries/ppp/source/ppp.o.
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/libraries/ppp/source/ppp_ecp.o.
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/libraries/ppp/source/ppp_service.o.
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/libraries/ppp/source/ppp_service_if.o.
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/libraries/ppp/source/pppapi.o.
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/libraries/ppp/source/pppcrypt.o.
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/libraries/ppp/source/pppoe.o.
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/libraries/ppp/source/pppol2tp.o.
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/libraries/ppp/source/pppos.o.
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/libraries/ppp/source/upap.o.
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/libraries/ppp/source/utils.o.
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/libraries/ppp/source/vj.o.
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/lorawan/lorastack/mac/LoRaMac.o.
              reference :  LoRaMacCrypto::compute_mic(const unsigned char*, unsigned short, const unsigned char*, unsigned, unsigned, unsigned char, unsigned, unsigned*)
              reference :  LoRaMacCrypto::decrypt_payload(const unsigned char*, unsigned short, const unsigned char*, unsigned, unsigned, unsigned char, unsigned, unsigned char*)
              reference :  LoRaMacCrypto::encrypt_payload(const unsigned char*, unsigned short, const unsigned char*, unsigned, unsigned, unsigned char, unsigned, unsigned char*)
              reference :  LoRaMacCrypto::decrypt_join_frame(const unsigned char*, unsigned short, const unsigned char*, unsigned, unsigned char*)
              reference :  LoRaMacCrypto::compute_join_frame_mic(const unsigned char*, unsigned short, const unsigned char*, unsigned, unsigned*)
              reference :  LoRaMacCrypto::compute_skeys_for_join_frame(const unsigned char*, unsigned, const unsigned char*, unsigned short, unsigned char*, unsigned char*)
              reference :  LoRaMacCrypto::LoRaMacCrypto()
              reference :  LoRaMacCrypto::~LoRaMacCrypto()
              weak defn :  timer_event_t::timer_event_t__sub_object()
              reference :  LoRaMacCommand::add_link_check_req()
              reference :  LoRaMacCommand::clear_repeat_buffer()
              reference :  LoRaMacCommand::clear_command_buffer()
              reference :  LoRaMacCommand::clear_sticky_mac_cmd()
              reference :  LoRaMacCommand::process_mac_commands(const unsigned char*, unsigned char, unsigned char, unsigned char, loramac_mlme_confirm_t&, lora_mac_system_params_t&, LoRaPHY&)
              reference :  LoRaMacCommand::get_mac_commands_buffer()
              reference :  LoRaMacCommand::set_batterylevel_callback(mbed::Callback<unsigned char()>)
              reference :  LoRaMacCommand::parse_mac_commands_to_repeat()
              reference :  LoRaMacCommand::copy_repeat_commands_to_buffer()
              reference :  LoRaMacCommand::LoRaMacCommand()
              weak defn :  lorawan_timers::lorawan_timers__sub_object()
              reference :  LoRaMacChannelPlan::remove_plan()
              reference :  LoRaMacChannelPlan::remove_single_channel(unsigned char)
              reference :  LoRaMacChannelPlan::activate_channelplan_subsystem(LoRaPHY*)
              reference :  LoRaMacChannelPlan::get_plan(lora_channelplan&, const channel_params_t*)
              reference :  LoRaMacChannelPlan::set_plan(const lora_channelplan&)
              reference :  LoRaMacChannelPlan::LoRaMacChannelPlan()
              reference :  LoRaMacChannelPlan::~LoRaMacChannelPlan()
              reference :  LoRaWANTimeHandler::get_current_time()
              reference :  LoRaWANTimeHandler::get_elapsed_time(unsigned)
              reference :  LoRaWANTimeHandler::activate_timer_subsystem(events::EventQueue*)
              reference :  LoRaWANTimeHandler::init(timer_event_t&, mbed::Callback<void()>)
              reference :  LoRaWANTimeHandler::stop(timer_event_t&)
              reference :  LoRaWANTimeHandler::start(timer_event_t&, unsigned)
              reference :  LoRaWANTimeHandler::LoRaWANTimeHandler()
              reference :  LoRaWANTimeHandler::~LoRaWANTimeHandler()
              weak defn :  loramac_protocol_params::loramac_protocol_params__sub_object()
              weak defn :  mbed::ScopedLock<LoRaMac>::ScopedLock__sub_object(LoRaMac&)
              weak defn :  mbed::ScopedLock<LoRaMac>::~ScopedLock__sub_object()
              weak defn :  mbed::detail::CallbackBase::destroy()
              weak defn :  T1 mbed::detail::invoke_r<void, void(LoRaMac::*const &)(), <LoRaMac*const &>, (int)0>(T2&&, T3&&...)
              weak defn :  T1 mbed::detail::invoke_r<void, mbed::Callback<void()>::Callback<LoRaMac*, void(LoRaMac::*)(), (int)0>(T1, T2)::[lambda() (instance 1)]&, <>, (int)0>(T2&&, T3&&...)
              weak defn :  void mbed::Callback<void()>::target_call<mbed::Callback<void()>::Callback<LoRaMac*, void(LoRaMac::*)(), (int)0>(T1, T2)::[lambda() (instance 1)]>(const mbed::detail::CallbackBase*)
              weak defn :  void mbed::Callback<void()>::generate<mbed::Callback<void()>::Callback<LoRaMac*, void(LoRaMac::*)(), (int)0>(T1, T2)::[lambda() (instance 1)], void>(T1&&)
              weak defn :  mbed::Callback<void()>::Callback__sub_object<LoRaMac*, void(LoRaMac::*)(), (int)0>(T1, T2)
              weak defn :  mbed::Callback<void()>::operator =(std::nullptr_t)
              weak defn :  mbed::Callback<T3(T4...)> mbed::callback<LoRaMac, LoRaMac, void, <>>(T2*, T3(T1::*)(T4...))
              weak defn :  std::__1::enable_if<((std::is_function<T2>::value&&(!std::is_base_of<T1, std::__1::decay<T3>::type>::value))&&(!is_reference_wrapper<std::__1::decay<T3>::type>::value)), decltype((((*std::forward<T3>(param#2)).*param#1)(std::forward<T4>(param#3)...)))>::type mstd::impl::INVOKE<LoRaMac, void(), LoRaMac*const &, <>>(T2T1::*, T3&&, T4&&...)
              weak defn :  std::__1::enable_if<((!std::is_member_pointer<std::__1::decay<T1>::type>::value)||(std::is_member_object_pointer<std::__1::decay<T1>::type>::value&&(sizeof...(param#2)!=(int)1))), decltype((std::forward<T1>(param#1)(std::forward<T2>(param#2)...)))>::type mstd::impl::INVOKE<mbed::Callback<void()>::Callback<LoRaMac*, void(LoRaMac::*)(), (int)0>(T1, T2)::[lambda() (instance 1)]&, <>>(T1&&, T2&&...)
              weak defn :  mstd::invoke_result<T1, <T2...>>::type mstd::invoke<void(LoRaMac::*const &)(), <LoRaMac*const &>>(T1&&, T2&&...)
              weak defn :  mstd::invoke_result<T1, <T2...>>::type mstd::invoke<mbed::Callback<void()>::Callback<LoRaMac*, void(LoRaMac::*)(), (int)0>(T1, T2)::[lambda() (instance 1)]&, <>>(T1&&, T2&&...)
              reference :  rtos::Mutex::lock()
              reference :  rtos::Mutex::unlock()
              reference :  rtos::Mutex::Mutex()
              reference :  rtos::Mutex::~Mutex()
              reference :  events::EventQueue::time_left(int)
              definition:  LoRaMac::disconnect()
              definition:  LoRaMac::initialize(events::EventQueue*, mbed::Callback<void()>)
              definition:  LoRaMac::nwk_joined()
              definition:  LoRaMac::tx_ongoing()
              definition:  LoRaMac::schedule_tx()
              definition:  LoRaMac::prepare_join(const lorawan_connect*, bool)
              definition:  LoRaMac::clear_tx_pipe()
              definition:  LoRaMac::get_QOS_level()
              definition:  LoRaMac::prepare_frame(loramac_mhdr_t*, loramac_frame_ctrl_t*, unsigned char, const void*, unsigned short)
              definition:  LoRaMac::set_nwk_joined(bool)
              definition:  LoRaMac::set_tx_ongoing(bool)
              definition:  LoRaMac::open_rx1_window()
              definition:  LoRaMac::open_rx2_window()
              definition:  LoRaMac::send_ongoing_tx()
              definition:  LoRaMac::add_channel_plan(const lora_channelplan&)
              definition:  LoRaMac::check_frame_size(unsigned short)
              definition:  LoRaMac::get_channel_plan(lora_channelplan&)
              definition:  LoRaMac::get_current_slot()
              definition:  LoRaMac::get_current_time()
              definition:  LoRaMac::on_radio_rx_done(const unsigned char*, unsigned short, short, signed char)
              definition:  LoRaMac::on_radio_tx_done(unsigned)
              definition:  LoRaMac::reset_ongoing_tx(bool)
              definition:  LoRaMac::set_device_class(const device_class_t&, mbed::Callback<void()>)
              definition:  LoRaMac::calculate_backOff(unsigned char)
              definition:  LoRaMac::handle_data_frame(const unsigned char*, unsigned short, unsigned char, unsigned char, short, signed char)
              definition:  LoRaMac::send_join_request()
              definition:  LoRaMac::get_prev_QOS_level()
              definition:  LoRaMac::prepare_ongoing_tx(unsigned char, const unsigned char*, unsigned short, unsigned char, unsigned char)
              definition:  LoRaMac::on_radio_rx_timeout(bool)
              definition:  LoRaMac::on_radio_tx_timeout()
              definition:  LoRaMac::remove_channel_plan()
              definition:  LoRaMac::reset_mac_parameters()
              definition:  LoRaMac::handle_retransmission()
              definition:  LoRaMac::post_process_mcps_ind()
              definition:  LoRaMac::post_process_mcps_req()
              definition:  LoRaMac::post_process_mlme_ind()
              definition:  LoRaMac::remove_single_channel(unsigned char)
              definition:  LoRaMac::reset_mcps_indication()
              definition:  LoRaMac::send_frame_on_channel(unsigned char)
              definition:  LoRaMac::set_channel_data_rate(unsigned char)
              definition:  LoRaMac::multicast_channel_link(multicast_params_s*)
              definition:  LoRaMac::get_default_tx_datarate()
              definition:  LoRaMac::message_integrity_check(const unsigned char*, unsigned short, unsigned char*, unsigned, unsigned*, const unsigned char*)
              definition:  LoRaMac::on_backoff_timer_expiry()
              definition:  LoRaMac::reset_mcps_confirmation()
              definition:  LoRaMac::reset_mlme_confirmation()
              definition:  LoRaMac::validate_payload_length(unsigned short, signed char, unsigned char)
              definition:  LoRaMac::continue_joining_process()
              definition:  LoRaMac::continue_sending_process()
              definition:  LoRaMac::enable_adaptive_datarate(bool)
              definition:  LoRaMac::get_max_possible_tx_size(unsigned char)
              definition:  LoRaMac::handle_join_accept_frame(const unsigned char*, unsigned short)
              definition:  LoRaMac::multicast_channel_unlink(multicast_params_s*)
              definition:  LoRaMac::setup_link_check_request()
              definition:  LoRaMac::extract_mac_commands_only(const unsigned char*, signed char, unsigned char)
              definition:  LoRaMac::post_process_mlme_request()
              definition:  LoRaMac::set_batterylevel_callback(mbed::Callback<unsigned char()>)
              definition:  LoRaMac::get_backoff_timer_event_id()
              definition:  LoRaMac::on_ack_timeout_timer_event()
              definition:  LoRaMac::extract_data_and_mac_commands(const unsigned char*, unsigned short, unsigned char, unsigned char*, unsigned char*, unsigned, unsigned, short, signed char)
              definition:  LoRaMac::set_mlme_schedule_ul_indication()
              definition:  LoRaMac::join(bool)
              weak defn :  LoRaMac::lock()
              definition:  LoRaMac::send(loramac_mhdr_t*, unsigned char, const void*, unsigned short)
              weak defn :  LoRaMac::unlock()
              definition:  LoRaMac::bind_phy(LoRaPHY&)
              definition:  LoRaMac::LoRaMac()
              definition:  LoRaMac::LoRaMac__sub_object()
              definition:  LoRaMac::~LoRaMac()
              definition:  LoRaMac::~LoRaMac__sub_object()
              reference :  LoRaPHY::initialize(LoRaWANTimeHandler*)
              reference :  LoRaPHY::handle_send(unsigned char*, unsigned char)
              reference :  LoRaPHY::get_next_ADR(bool, signed char&, signed char&, unsigned&)
              reference :  LoRaPHY::get_radio_rng()
              reference :  LoRaPHY::handle_receive()
              reference :  LoRaPHY::get_ack_timeout()
              reference :  LoRaPHY::get_max_payload(unsigned char, bool)
              reference :  LoRaPHY::get_phy_channels()
              reference :  LoRaPHY::calculate_backoff(bool, bool, bool, unsigned char, unsigned, unsigned)
              reference :  LoRaPHY::verify_duty_cycle(bool)
              reference :  LoRaPHY::get_rx_time_on_air(unsigned char, unsigned short)
              reference :  LoRaPHY::put_radio_to_sleep()
              reference :  LoRaPHY::verify_tx_datarate(unsigned char, bool)
              reference :  LoRaPHY::put_radio_to_standby()
              reference :  LoRaPHY::verify_nb_join_trials(unsigned char)
              reference :  LoRaPHY::get_default_tx_datarate()
              reference :  LoRaPHY::get_minimum_tx_datarate()
              reference :  LoRaPHY::reset_to_default_values(loramac_protocol_params*, bool)
              reference :  LoRaPHY::setup_public_network_mode(bool)
              reference :  LoRaPHY::get_next_lower_tx_datarate(signed char)
              reference :  LoRaPHY::get_default_max_tx_datarate()
              reference :  LoRaPHY::get_maximum_frame_counter_gap()
              reference :  LoRaMacCommand::get_mac_cmd_length() const
              reference :  LoRaMacCommand::has_sticky_mac_cmd() const
              reference :  LoRaMacCommand::get_repeat_commands_length() const
              definition:  LoRaMac::get_device_class() const
              definition:  LoRaMac::get_mcps_indication() const
              definition:  LoRaMac::get_mlme_indication() const
              definition:  LoRaMac::get_mcps_confirmation() const
              definition:  LoRaMac::get_mlme_confirmation() const
              weak defn :  mbed::Callback<void()>::Callback<LoRaMac*, void(LoRaMac::*)(), (int)0>(T1, T2)::[lambda() (instance 1)]::operator ()() const
              reference :  __aeabi_memclr
              reference :  __aeabi_memclr4
              reference :  __aeabi_memcpy
              reference :  mbed_assert_internal
              reference :  srand
              reference :  mbed::Callback<void()>::Callback__sub_object()
              reference :  mbed::Callback<void()>::call() const
              reference :  mbed::detail::CallbackBase::clear()
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/lorawan/lorastack/mac/LoRaMacChannelPlan.o.
              definition:  LoRaMacChannelPlan::remove_plan()
              definition:  LoRaMacChannelPlan::remove_single_channel(unsigned char)
              definition:  LoRaMacChannelPlan::activate_channelplan_subsystem(LoRaPHY*)
              definition:  LoRaMacChannelPlan::get_plan(lora_channelplan&, const channel_params_t*)
              definition:  LoRaMacChannelPlan::set_plan(const lora_channelplan&)
              definition:  LoRaMacChannelPlan::LoRaMacChannelPlan()
              definition:  LoRaMacChannelPlan::LoRaMacChannelPlan__sub_object()
              definition:  LoRaMacChannelPlan::~LoRaMacChannelPlan()
              definition:  LoRaMacChannelPlan::~LoRaMacChannelPlan__sub_object()
              reference :  LoRaPHY::mask_bit_test(const unsigned short*, unsigned)
              reference :  LoRaPHY::get_channel_mask(bool)
              reference :  LoRaPHY::put_radio_to_sleep()
              reference :  LoRaPHY::get_max_nb_channels()
              reference :  LoRaPHY::is_custom_channel_plan_supported()
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/lorawan/lorastack/mac/LoRaMacCommand.o.
              definition:  LoRaMacCommand::add_link_adr_ans(unsigned char)
              definition:  LoRaMacCommand::add_dev_status_ans(unsigned char, unsigned char)
              definition:  LoRaMacCommand::add_dl_channel_ans(unsigned char)
              definition:  LoRaMacCommand::add_duty_cycle_ans()
              definition:  LoRaMacCommand::add_link_check_req()
              definition:  LoRaMacCommand::add_new_channel_ans(unsigned char)
              definition:  LoRaMacCommand::clear_repeat_buffer()
              definition:  LoRaMacCommand::clear_command_buffer()
              definition:  LoRaMacCommand::clear_sticky_mac_cmd()
              definition:  LoRaMacCommand::process_mac_commands(const unsigned char*, unsigned char, unsigned char, unsigned char, loramac_mlme_confirm_t&, lora_mac_system_params_t&, LoRaPHY&)
              definition:  LoRaMacCommand::add_rx_param_setup_ans(unsigned char)
              definition:  LoRaMacCommand::add_tx_param_setup_ans()
              definition:  LoRaMacCommand::add_rx_timing_setup_ans()
              definition:  LoRaMacCommand::get_mac_commands_buffer()
              definition:  LoRaMacCommand::set_batterylevel_callback(mbed::Callback<unsigned char()>)
              definition:  LoRaMacCommand::parse_mac_commands_to_repeat()
              definition:  LoRaMacCommand::copy_repeat_commands_to_buffer()
              definition:  LoRaMacCommand::LoRaMacCommand()
              definition:  LoRaMacCommand::LoRaMacCommand__sub_object()
              weak defn :  mbed::Callback<unsigned char()>::Callback__sub_object()
              definition:  LoRaMacCommand::get_mac_cmd_length() const
              definition:  LoRaMacCommand::has_sticky_mac_cmd() const
              definition:  LoRaMacCommand::cmd_buffer_remaining() const
              definition:  LoRaMacCommand::get_repeat_commands_length() const
              weak defn :  mbed::Callback<unsigned char()>::call() const
              weak defn :  mbed::Callback<unsigned char()>::operator ()() const
              weak defn :  mbed::Callback<unsigned char()>::operator bool() const
              reference :  __aeabi_memclr4
              reference :  __aeabi_memcpy
              reference :  mbed_assert_internal
              reference :  mbed::detail::CallbackBase::CallbackBase__sub_object(std::nullptr_t)
              reference :  mbed::detail::CallbackBase::control() const
              reference :  mbed::detail::CallbackBase::call_fn() const
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/lorawan/lorastack/mac/LoRaMacCrypto.o.
              definition:  LoRaMacCrypto::compute_mic(const unsigned char*, unsigned short, const unsigned char*, unsigned, unsigned, unsigned char, unsigned, unsigned*)
              definition:  LoRaMacCrypto::decrypt_payload(const unsigned char*, unsigned short, const unsigned char*, unsigned, unsigned, unsigned char, unsigned, unsigned char*)
              definition:  LoRaMacCrypto::encrypt_payload(const unsigned char*, unsigned short, const unsigned char*, unsigned, unsigned, unsigned char, unsigned, unsigned char*)
              definition:  LoRaMacCrypto::decrypt_join_frame(const unsigned char*, unsigned short, const unsigned char*, unsigned, unsigned char*)
              definition:  LoRaMacCrypto::compute_join_frame_mic(const unsigned char*, unsigned short, const unsigned char*, unsigned, unsigned*)
              definition:  LoRaMacCrypto::compute_skeys_for_join_frame(const unsigned char*, unsigned, const unsigned char*, unsigned short, unsigned char*, unsigned char*)
              definition:  LoRaMacCrypto::LoRaMacCrypto()
              definition:  LoRaMacCrypto::LoRaMacCrypto__sub_object()
              definition:  LoRaMacCrypto::~LoRaMacCrypto()
              definition:  LoRaMacCrypto::~LoRaMacCrypto__sub_object()
              reference :  mbed_assert_internal
              reference :  mbedtls_aes_crypt_ecb
              reference :  mbedtls_aes_free
              reference :  mbedtls_aes_init
              reference :  mbedtls_aes_setkey_enc
              reference :  mbedtls_cipher_cmac_finish
              reference :  mbedtls_cipher_cmac_starts
              reference :  mbedtls_cipher_cmac_update
              reference :  mbedtls_cipher_free
              reference :  mbedtls_cipher_info_from_type
              reference :  mbedtls_cipher_init
              reference :  mbedtls_cipher_setup
              reference :  mbedtls_platform_setup
              reference :  mbedtls_platform_teardown
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/lorawan/lorastack/phy/LoRaPHY.o.
              reference :  LoRaWANTimeHandler::get_elapsed_time(unsigned)
              definition:  LoRaPHY::count_bits(unsigned short, unsigned char)
              definition:  LoRaPHY::get_random(int, int)
              definition:  LoRaPHY::initialize(LoRaWANTimeHandler*)
              definition:  LoRaPHY::add_channel(const channel_params_t*, unsigned char)
              definition:  LoRaPHY::handle_send(unsigned char*, unsigned char)
              definition:  LoRaPHY::get_next_ADR(bool, signed char&, signed char&, unsigned&)
              definition:  LoRaPHY::mask_bit_set(unsigned short*, unsigned)
              definition:  LoRaPHY::val_in_range(signed char, signed char, signed char)
              definition:  LoRaPHY::apply_cf_list(const unsigned char*, unsigned char)
              definition:  LoRaPHY::get_bandwidth(unsigned char)
              definition:  LoRaPHY::get_radio_rng()
              definition:  LoRaPHY::mask_bit_test(const unsigned short*, unsigned)
              definition:  LoRaPHY::handle_receive()
              definition:  LoRaPHY::mask_bit_clear(unsigned short*, unsigned)
              definition:  LoRaPHY::remove_channel(unsigned char)
              definition:  LoRaPHY::apply_DR_offset(signed char, signed char)
              definition:  LoRaPHY::disable_channel(unsigned short*, unsigned char, unsigned char)
              definition:  LoRaPHY::get_ack_timeout()
              definition:  LoRaPHY::get_max_payload(unsigned char, bool)
              definition:  LoRaPHY::verify_tx_power(unsigned char)
              definition:  LoRaPHY::compute_tx_power(signed char, float, float)
              definition:  LoRaPHY::get_alternate_DR(unsigned char)
              definition:  LoRaPHY::get_channel_mask(bool)
              definition:  LoRaPHY::get_phy_channels()
              definition:  LoRaPHY::link_ADR_request(adr_req_params_t*, signed char*, signed char*, unsigned char*, unsigned char*)
              definition:  LoRaPHY::set_last_tx_done(unsigned char, bool, unsigned)
              definition:  LoRaPHY::set_next_channel(channel_selection_params_s*, unsigned char*, unsigned*, unsigned*)
              definition:  LoRaPHY::set_tx_cont_mode(continuous_wave_mode_params_s*, unsigned)
              definition:  LoRaPHY::calculate_backoff(bool, bool, bool, unsigned char, unsigned, unsigned)
              definition:  LoRaPHY::copy_channel_mask(unsigned short*, unsigned short*, unsigned char)
              definition:  LoRaPHY::get_next_lower_dr(signed char, signed char)
              definition:  LoRaPHY::verify_channel_DR(unsigned short*, signed char)
              definition:  LoRaPHY::verify_duty_cycle(bool)
              definition:  LoRaPHY::dl_channel_request(unsigned char, unsigned)
              definition:  LoRaPHY::get_rx_time_on_air(unsigned char, unsigned short)
              definition:  LoRaPHY::parse_link_ADR_req(const unsigned char*, unsigned char, link_adr_params_s*)
              definition:  LoRaPHY::put_radio_to_sleep()
              definition:  LoRaPHY::set_radio_instance(LoRaRadio&)
              definition:  LoRaPHY::verify_rx_datarate(unsigned char)
              definition:  LoRaPHY::verify_tx_datarate(unsigned char, bool)
              definition:  LoRaPHY::get_max_nb_channels()
              definition:  LoRaPHY::num_active_channels(unsigned short*, unsigned char, unsigned char)
              definition:  LoRaPHY::request_new_channel(signed char, channel_params_t*)
              definition:  LoRaPHY::update_band_timeoff(bool, bool, band_t*, unsigned char)
              definition:  LoRaPHY::verify_link_ADR_req(verify_adr_params_s*, signed char*, signed char*, unsigned char*)
              definition:  LoRaPHY::get_default_tx_power()
              definition:  LoRaPHY::get_rx_window_params(float, unsigned char, float, float, unsigned*, unsigned*, int*, unsigned char)
              definition:  LoRaPHY::put_radio_to_standby()
              definition:  LoRaPHY::compute_rx_win_params(signed char, unsigned char, unsigned, rx_config_params_t*)
              definition:  LoRaPHY::enabled_channel_count(unsigned char, const unsigned short*, unsigned char*, unsigned char*)
              definition:  LoRaPHY::verify_nb_join_trials(unsigned char)
              definition:  LoRaPHY::get_default_tx_datarate()
              definition:  LoRaPHY::get_minimum_rx_datarate()
              definition:  LoRaPHY::get_minimum_tx_datarate()
              definition:  LoRaPHY::reset_to_default_values(loramac_protocol_params*, bool)
              definition:  LoRaPHY::compute_symb_timeout_fsk(unsigned char)
              definition:  LoRaPHY::get_default_rx2_datarate()
              definition:  LoRaPHY::restore_default_channels()
              definition:  LoRaPHY::accept_rx_param_setup_req(rx_param_setup_req_s*)
              definition:  LoRaPHY::accept_tx_param_setup_req(unsigned char, unsigned char)
              definition:  LoRaPHY::compute_symb_timeout_lora(unsigned char, unsigned)
              definition:  LoRaPHY::get_default_rx2_frequency()
              definition:  LoRaPHY::setup_public_network_mode(bool)
              definition:  LoRaPHY::get_next_lower_tx_datarate(signed char)
              definition:  LoRaPHY::get_default_max_tx_datarate()
              definition:  LoRaPHY::get_maximum_frame_counter_gap()
              definition:  LoRaPHY::is_custom_channel_plan_supported()
              definition:  LoRaPHY::rx_config(rx_config_params_t*)
              definition:  LoRaPHY::tx_config(tx_config_params_t*, signed char*, unsigned*)
              definition:  LoRaPHY::LoRaPHY()
              definition:  LoRaPHY::LoRaPHY__sub_object()
              definition:  LoRaPHY::~LoRaPHY__deallocating()
              definition:  LoRaPHY::~LoRaPHY()
              definition:  LoRaPHY::~LoRaPHY__sub_object()
              definition:  LoRaPHY::is_datarate_supported(signed char) const
              definition:  LoRaPHY::lookup_band_for_frequency(unsigned) const
              definition:  LoRaPHY::verify_frequency_for_band(unsigned, unsigned char) const
              definition:  vtable for LoRaPHY
              reference :  operator delete (void*)
              reference :  __aeabi_memclr
              reference :  __aeabi_memclr4
              reference :  __hardfp_ceilf
              reference :  __hardfp_floorf
              reference :  rand
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/lorawan/lorastack/phy/LoRaPHYAS923.o.
              definition:  LoRaPHYAS923::apply_DR_offset(signed char, signed char)
              definition:  LoRaPHYAS923::get_alternate_DR(unsigned char)
              definition:  LoRaPHYAS923::set_next_channel(channel_selection_params_s*, unsigned char*, unsigned*, unsigned*)
              definition:  LoRaPHYAS923::LoRaPHYAS923()
              definition:  LoRaPHYAS923::LoRaPHYAS923__sub_object()
              definition:  LoRaPHYAS923::~LoRaPHYAS923__deallocating()
              definition:  LoRaPHYAS923::~LoRaPHYAS923()
              definition:  LoRaPHYAS923::~LoRaPHYAS923__sub_object()
              reference :  LoRaWANTimeHandler::get_elapsed_time(unsigned)
              reference :  LoRaPHY::get_random(int, int)
              reference :  LoRaPHY::add_channel(const channel_params_t*, unsigned char)
              reference :  LoRaPHY::apply_cf_list(const unsigned char*, unsigned char)
              reference :  LoRaPHY::remove_channel(unsigned char)
              reference :  LoRaPHY::link_ADR_request(adr_req_params_t*, signed char*, signed char*, unsigned char*, unsigned char*)
              reference :  LoRaPHY::set_last_tx_done(unsigned char, bool, unsigned)
              reference :  LoRaPHY::set_tx_cont_mode(continuous_wave_mode_params_s*, unsigned)
              reference :  LoRaPHY::copy_channel_mask(unsigned short*, unsigned short*, unsigned char)
              reference :  LoRaPHY::dl_channel_request(unsigned char, unsigned)
              reference :  LoRaPHY::num_active_channels(unsigned short*, unsigned char, unsigned char)
              reference :  LoRaPHY::request_new_channel(signed char, channel_params_t*)
              reference :  LoRaPHY::update_band_timeoff(bool, bool, band_t*, unsigned char)
              reference :  LoRaPHY::compute_rx_win_params(signed char, unsigned char, unsigned, rx_config_params_t*)
              reference :  LoRaPHY::enabled_channel_count(unsigned char, const unsigned short*, unsigned char*, unsigned char*)
              reference :  LoRaPHY::restore_default_channels()
              reference :  LoRaPHY::accept_rx_param_setup_req(rx_param_setup_req_s*)
              reference :  LoRaPHY::accept_tx_param_setup_req(unsigned char, unsigned char)
              reference :  LoRaPHY::rx_config(rx_config_params_t*)
              reference :  LoRaPHY::tx_config(tx_config_params_t*, signed char*, unsigned*)
              reference :  LoRaPHY::LoRaPHY__sub_object()
              reference :  LoRaPHY::~LoRaPHY__sub_object()
              reference :  LoRaPHY::verify_frequency_for_band(unsigned, unsigned char) const
              definition:  vtable for LoRaPHYAS923
              reference :  operator delete (void*)
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/lorawan/lorastack/phy/LoRaPHYAU915.o.
              definition:  LoRaPHYAU915::apply_DR_offset(signed char, signed char)
              definition:  LoRaPHYAU915::get_alternate_DR(unsigned char)
              definition:  LoRaPHYAU915::link_ADR_request(adr_req_params_t*, signed char*, signed char*, unsigned char*, unsigned char*)
              definition:  LoRaPHYAU915::set_next_channel(channel_selection_params_s*, unsigned char*, unsigned*, unsigned*)
              definition:  LoRaPHYAU915::intersect_channel_mask(const unsigned short*, unsigned short*, unsigned char)
              definition:  LoRaPHYAU915::accept_rx_param_setup_req(rx_param_setup_req_s*)
              definition:  LoRaPHYAU915::fill_channel_mask_with_fsb(const unsigned short*, const unsigned short*, unsigned short*, unsigned char)
              definition:  LoRaPHYAU915::fill_channel_mask_with_value(unsigned short*, unsigned short, unsigned char)
              definition:  LoRaPHYAU915::rx_config(rx_config_params_t*)
              definition:  LoRaPHYAU915::tx_config(tx_config_params_t*, signed char*, unsigned*)
              definition:  LoRaPHYAU915::LoRaPHYAU915()
              definition:  LoRaPHYAU915::LoRaPHYAU915__sub_object()
              definition:  LoRaPHYAU915::~LoRaPHYAU915__deallocating()
              definition:  LoRaPHYAU915::~LoRaPHYAU915()
              definition:  LoRaPHYAU915::~LoRaPHYAU915__sub_object()
              reference :  LoRaWANTimeHandler::get_elapsed_time(unsigned)
              reference :  LoRaPHY::get_random(int, int)
              reference :  LoRaPHY::add_channel(const channel_params_t*, unsigned char)
              reference :  LoRaPHY::val_in_range(signed char, signed char, signed char)
              reference :  LoRaPHY::apply_cf_list(const unsigned char*, unsigned char)
              reference :  LoRaPHY::get_bandwidth(unsigned char)
              reference :  LoRaPHY::remove_channel(unsigned char)
              reference :  LoRaPHY::disable_channel(unsigned short*, unsigned char, unsigned char)
              reference :  LoRaPHY::compute_tx_power(signed char, float, float)
              reference :  LoRaPHY::set_last_tx_done(unsigned char, bool, unsigned)
              reference :  LoRaPHY::set_tx_cont_mode(continuous_wave_mode_params_s*, unsigned)
              reference :  LoRaPHY::copy_channel_mask(unsigned short*, unsigned short*, unsigned char)
              reference :  LoRaPHY::dl_channel_request(unsigned char, unsigned)
              reference :  LoRaPHY::parse_link_ADR_req(const unsigned char*, unsigned char, link_adr_params_s*)
              reference :  LoRaPHY::num_active_channels(unsigned short*, unsigned char, unsigned char)
              reference :  LoRaPHY::request_new_channel(signed char, channel_params_t*)
              reference :  LoRaPHY::update_band_timeoff(bool, bool, band_t*, unsigned char)
              reference :  LoRaPHY::verify_link_ADR_req(verify_adr_params_s*, signed char*, signed char*, unsigned char*)
              reference :  LoRaPHY::compute_rx_win_params(signed char, unsigned char, unsigned, rx_config_params_t*)
              reference :  LoRaPHY::enabled_channel_count(unsigned char, const unsigned short*, unsigned char*, unsigned char*)
              reference :  LoRaPHY::restore_default_channels()
              reference :  LoRaPHY::accept_tx_param_setup_req(unsigned char, unsigned char)
              reference :  LoRaPHY::LoRaPHY__sub_object()
              reference :  LoRaPHY::~LoRaPHY__sub_object()
              reference :  LoRaPHY::verify_frequency_for_band(unsigned, unsigned char) const
              definition:  vtable for LoRaPHYAU915
              reference :  operator delete (void*)
              reference :  __aeabi_memclr4
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/lorawan/lorastack/phy/LoRaPHYCN470.o.
              definition:  LoRaPHYCN470::link_ADR_request(adr_req_params_t*, signed char*, signed char*, unsigned char*, unsigned char*)
              definition:  LoRaPHYCN470::set_next_channel(channel_selection_params_s*, unsigned char*, unsigned*, unsigned*)
              definition:  LoRaPHYCN470::accept_rx_param_setup_req(rx_param_setup_req_s*)
              definition:  LoRaPHYCN470::rx_config(rx_config_params_t*)
              definition:  LoRaPHYCN470::tx_config(tx_config_params_t*, signed char*, unsigned*)
              definition:  LoRaPHYCN470::LoRaPHYCN470()
              definition:  LoRaPHYCN470::LoRaPHYCN470__sub_object()
              definition:  LoRaPHYCN470::~LoRaPHYCN470__deallocating()
              definition:  LoRaPHYCN470::~LoRaPHYCN470()
              definition:  LoRaPHYCN470::~LoRaPHYCN470__sub_object()
              reference :  LoRaWANTimeHandler::get_elapsed_time(unsigned)
              reference :  LoRaPHY::get_random(int, int)
              reference :  LoRaPHY::add_channel(const channel_params_t*, unsigned char)
              reference :  LoRaPHY::val_in_range(signed char, signed char, signed char)
              reference :  LoRaPHY::apply_cf_list(const unsigned char*, unsigned char)
              reference :  LoRaPHY::remove_channel(unsigned char)
              reference :  LoRaPHY::apply_DR_offset(signed char, signed char)
              reference :  LoRaPHY::compute_tx_power(signed char, float, float)
              reference :  LoRaPHY::get_alternate_DR(unsigned char)
              reference :  LoRaPHY::set_last_tx_done(unsigned char, bool, unsigned)
              reference :  LoRaPHY::set_tx_cont_mode(continuous_wave_mode_params_s*, unsigned)
              reference :  LoRaPHY::copy_channel_mask(unsigned short*, unsigned short*, unsigned char)
              reference :  LoRaPHY::dl_channel_request(unsigned char, unsigned)
              reference :  LoRaPHY::parse_link_ADR_req(const unsigned char*, unsigned char, link_adr_params_s*)
              reference :  LoRaPHY::num_active_channels(unsigned short*, unsigned char, unsigned char)
              reference :  LoRaPHY::request_new_channel(signed char, channel_params_t*)
              reference :  LoRaPHY::update_band_timeoff(bool, bool, band_t*, unsigned char)
              reference :  LoRaPHY::verify_link_ADR_req(verify_adr_params_s*, signed char*, signed char*, unsigned char*)
              reference :  LoRaPHY::compute_rx_win_params(signed char, unsigned char, unsigned, rx_config_params_t*)
              reference :  LoRaPHY::enabled_channel_count(unsigned char, const unsigned short*, unsigned char*, unsigned char*)
              reference :  LoRaPHY::restore_default_channels()
              reference :  LoRaPHY::accept_tx_param_setup_req(unsigned char, unsigned char)
              reference :  LoRaPHY::LoRaPHY__sub_object()
              reference :  LoRaPHY::~LoRaPHY__sub_object()
              reference :  LoRaPHY::verify_frequency_for_band(unsigned, unsigned char) const
              definition:  vtable for LoRaPHYCN470
              reference :  operator delete (void*)
              reference :  __aeabi_memclr4
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/lorawan/lorastack/phy/LoRaPHYCN779.o.
              definition:  LoRaPHYCN779::LoRaPHYCN779()
              definition:  LoRaPHYCN779::LoRaPHYCN779__sub_object()
              definition:  LoRaPHYCN779::~LoRaPHYCN779__deallocating()
              definition:  LoRaPHYCN779::~LoRaPHYCN779()
              definition:  LoRaPHYCN779::~LoRaPHYCN779__sub_object()
              reference :  LoRaPHY::add_channel(const channel_params_t*, unsigned char)
              reference :  LoRaPHY::apply_cf_list(const unsigned char*, unsigned char)
              reference :  LoRaPHY::remove_channel(unsigned char)
              reference :  LoRaPHY::apply_DR_offset(signed char, signed char)
              reference :  LoRaPHY::get_alternate_DR(unsigned char)
              reference :  LoRaPHY::link_ADR_request(adr_req_params_t*, signed char*, signed char*, unsigned char*, unsigned char*)
              reference :  LoRaPHY::set_last_tx_done(unsigned char, bool, unsigned)
              reference :  LoRaPHY::set_next_channel(channel_selection_params_s*, unsigned char*, unsigned*, unsigned*)
              reference :  LoRaPHY::set_tx_cont_mode(continuous_wave_mode_params_s*, unsigned)
              reference :  LoRaPHY::copy_channel_mask(unsigned short*, unsigned short*, unsigned char)
              reference :  LoRaPHY::dl_channel_request(unsigned char, unsigned)
              reference :  LoRaPHY::request_new_channel(signed char, channel_params_t*)
              reference :  LoRaPHY::compute_rx_win_params(signed char, unsigned char, unsigned, rx_config_params_t*)
              reference :  LoRaPHY::restore_default_channels()
              reference :  LoRaPHY::accept_rx_param_setup_req(rx_param_setup_req_s*)
              reference :  LoRaPHY::accept_tx_param_setup_req(unsigned char, unsigned char)
              reference :  LoRaPHY::rx_config(rx_config_params_t*)
              reference :  LoRaPHY::tx_config(tx_config_params_t*, signed char*, unsigned*)
              reference :  LoRaPHY::LoRaPHY__sub_object()
              reference :  LoRaPHY::~LoRaPHY__sub_object()
              reference :  LoRaPHY::verify_frequency_for_band(unsigned, unsigned char) const
              definition:  vtable for LoRaPHYCN779
              reference :  operator delete (void*)
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/lorawan/lorastack/phy/LoRaPHYEU433.o.
              definition:  LoRaPHYEU433::LoRaPHYEU433()
              definition:  LoRaPHYEU433::LoRaPHYEU433__sub_object()
              definition:  LoRaPHYEU433::~LoRaPHYEU433__deallocating()
              definition:  LoRaPHYEU433::~LoRaPHYEU433()
              definition:  LoRaPHYEU433::~LoRaPHYEU433__sub_object()
              reference :  LoRaPHY::add_channel(const channel_params_t*, unsigned char)
              reference :  LoRaPHY::apply_cf_list(const unsigned char*, unsigned char)
              reference :  LoRaPHY::remove_channel(unsigned char)
              reference :  LoRaPHY::apply_DR_offset(signed char, signed char)
              reference :  LoRaPHY::get_alternate_DR(unsigned char)
              reference :  LoRaPHY::link_ADR_request(adr_req_params_t*, signed char*, signed char*, unsigned char*, unsigned char*)
              reference :  LoRaPHY::set_last_tx_done(unsigned char, bool, unsigned)
              reference :  LoRaPHY::set_next_channel(channel_selection_params_s*, unsigned char*, unsigned*, unsigned*)
              reference :  LoRaPHY::set_tx_cont_mode(continuous_wave_mode_params_s*, unsigned)
              reference :  LoRaPHY::copy_channel_mask(unsigned short*, unsigned short*, unsigned char)
              reference :  LoRaPHY::dl_channel_request(unsigned char, unsigned)
              reference :  LoRaPHY::request_new_channel(signed char, channel_params_t*)
              reference :  LoRaPHY::compute_rx_win_params(signed char, unsigned char, unsigned, rx_config_params_t*)
              reference :  LoRaPHY::restore_default_channels()
              reference :  LoRaPHY::accept_rx_param_setup_req(rx_param_setup_req_s*)
              reference :  LoRaPHY::accept_tx_param_setup_req(unsigned char, unsigned char)
              reference :  LoRaPHY::rx_config(rx_config_params_t*)
              reference :  LoRaPHY::tx_config(tx_config_params_t*, signed char*, unsigned*)
              reference :  LoRaPHY::LoRaPHY__sub_object()
              reference :  LoRaPHY::~LoRaPHY__sub_object()
              reference :  LoRaPHY::verify_frequency_for_band(unsigned, unsigned char) const
              definition:  vtable for LoRaPHYEU433
              reference :  operator delete (void*)
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/lorawan/lorastack/phy/LoRaPHYEU868.o.
              definition:  LoRaPHYEU868::LoRaPHYEU868()
              definition:  LoRaPHYEU868::LoRaPHYEU868__sub_object()
              definition:  LoRaPHYEU868::~LoRaPHYEU868__deallocating()
              definition:  LoRaPHYEU868::~LoRaPHYEU868()
              definition:  LoRaPHYEU868::~LoRaPHYEU868__sub_object()
              reference :  LoRaPHY::add_channel(const channel_params_t*, unsigned char)
              reference :  LoRaPHY::apply_cf_list(const unsigned char*, unsigned char)
              reference :  LoRaPHY::remove_channel(unsigned char)
              reference :  LoRaPHY::apply_DR_offset(signed char, signed char)
              reference :  LoRaPHY::get_alternate_DR(unsigned char)
              reference :  LoRaPHY::link_ADR_request(adr_req_params_t*, signed char*, signed char*, unsigned char*, unsigned char*)
              reference :  LoRaPHY::set_last_tx_done(unsigned char, bool, unsigned)
              reference :  LoRaPHY::set_next_channel(channel_selection_params_s*, unsigned char*, unsigned*, unsigned*)
              reference :  LoRaPHY::set_tx_cont_mode(continuous_wave_mode_params_s*, unsigned)
              reference :  LoRaPHY::copy_channel_mask(unsigned short*, unsigned short*, unsigned char)
              reference :  LoRaPHY::dl_channel_request(unsigned char, unsigned)
              reference :  LoRaPHY::request_new_channel(signed char, channel_params_t*)
              reference :  LoRaPHY::compute_rx_win_params(signed char, unsigned char, unsigned, rx_config_params_t*)
              reference :  LoRaPHY::restore_default_channels()
              reference :  LoRaPHY::accept_rx_param_setup_req(rx_param_setup_req_s*)
              reference :  LoRaPHY::accept_tx_param_setup_req(unsigned char, unsigned char)
              reference :  LoRaPHY::rx_config(rx_config_params_t*)
              reference :  LoRaPHY::tx_config(tx_config_params_t*, signed char*, unsigned*)
              reference :  LoRaPHY::LoRaPHY__sub_object()
              reference :  LoRaPHY::~LoRaPHY__sub_object()
              reference :  LoRaPHY::verify_frequency_for_band(unsigned, unsigned char) const
              definition:  vtable for LoRaPHYEU868
              reference :  operator delete (void*)
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/lorawan/lorastack/phy/LoRaPHYIN865.o.
              definition:  LoRaPHYIN865::apply_DR_offset(signed char, signed char)
              definition:  LoRaPHYIN865::LoRaPHYIN865()
              definition:  LoRaPHYIN865::LoRaPHYIN865__sub_object()
              definition:  LoRaPHYIN865::~LoRaPHYIN865__deallocating()
              definition:  LoRaPHYIN865::~LoRaPHYIN865()
              definition:  LoRaPHYIN865::~LoRaPHYIN865__sub_object()
              reference :  LoRaPHY::add_channel(const channel_params_t*, unsigned char)
              reference :  LoRaPHY::apply_cf_list(const unsigned char*, unsigned char)
              reference :  LoRaPHY::remove_channel(unsigned char)
              reference :  LoRaPHY::get_alternate_DR(unsigned char)
              reference :  LoRaPHY::link_ADR_request(adr_req_params_t*, signed char*, signed char*, unsigned char*, unsigned char*)
              reference :  LoRaPHY::set_last_tx_done(unsigned char, bool, unsigned)
              reference :  LoRaPHY::set_next_channel(channel_selection_params_s*, unsigned char*, unsigned*, unsigned*)
              reference :  LoRaPHY::set_tx_cont_mode(continuous_wave_mode_params_s*, unsigned)
              reference :  LoRaPHY::copy_channel_mask(unsigned short*, unsigned short*, unsigned char)
              reference :  LoRaPHY::dl_channel_request(unsigned char, unsigned)
              reference :  LoRaPHY::request_new_channel(signed char, channel_params_t*)
              reference :  LoRaPHY::compute_rx_win_params(signed char, unsigned char, unsigned, rx_config_params_t*)
              reference :  LoRaPHY::restore_default_channels()
              reference :  LoRaPHY::accept_rx_param_setup_req(rx_param_setup_req_s*)
              reference :  LoRaPHY::accept_tx_param_setup_req(unsigned char, unsigned char)
              reference :  LoRaPHY::rx_config(rx_config_params_t*)
              reference :  LoRaPHY::tx_config(tx_config_params_t*, signed char*, unsigned*)
              reference :  LoRaPHY::LoRaPHY__sub_object()
              reference :  LoRaPHY::~LoRaPHY__sub_object()
              reference :  LoRaPHY::verify_frequency_for_band(unsigned, unsigned char) const
              definition:  vtable for LoRaPHYIN865
              reference :  operator delete (void*)
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/lorawan/lorastack/phy/LoRaPHYKR920.o.
              definition:  LoRaPHYKR920::get_max_eirp(unsigned)
              definition:  LoRaPHYKR920::set_next_channel(channel_selection_params_s*, unsigned char*, unsigned*, unsigned*)
              definition:  LoRaPHYKR920::set_tx_cont_mode(continuous_wave_mode_params_s*, unsigned)
              definition:  LoRaPHYKR920::tx_config(tx_config_params_t*, signed char*, unsigned*)
              definition:  LoRaPHYKR920::LoRaPHYKR920()
              definition:  LoRaPHYKR920::LoRaPHYKR920__sub_object()
              definition:  LoRaPHYKR920::~LoRaPHYKR920__deallocating()
              definition:  LoRaPHYKR920::~LoRaPHYKR920()
              definition:  LoRaPHYKR920::~LoRaPHYKR920__sub_object()
              reference :  LoRaWANTimeHandler::get_elapsed_time(unsigned)
              reference :  LoRaPHY::get_random(int, int)
              reference :  LoRaPHY::add_channel(const channel_params_t*, unsigned char)
              reference :  LoRaPHY::apply_cf_list(const unsigned char*, unsigned char)
              reference :  LoRaPHY::get_bandwidth(unsigned char)
              reference :  LoRaPHY::remove_channel(unsigned char)
              reference :  LoRaPHY::apply_DR_offset(signed char, signed char)
              reference :  LoRaPHY::compute_tx_power(signed char, float, float)
              reference :  LoRaPHY::get_alternate_DR(unsigned char)
              reference :  LoRaPHY::link_ADR_request(adr_req_params_t*, signed char*, signed char*, unsigned char*, unsigned char*)
              reference :  LoRaPHY::set_last_tx_done(unsigned char, bool, unsigned)
              reference :  LoRaPHY::copy_channel_mask(unsigned short*, unsigned short*, unsigned char)
              reference :  LoRaPHY::dl_channel_request(unsigned char, unsigned)
              reference :  LoRaPHY::num_active_channels(unsigned short*, unsigned char, unsigned char)
              reference :  LoRaPHY::request_new_channel(signed char, channel_params_t*)
              reference :  LoRaPHY::update_band_timeoff(bool, bool, band_t*, unsigned char)
              reference :  LoRaPHY::compute_rx_win_params(signed char, unsigned char, unsigned, rx_config_params_t*)
              reference :  LoRaPHY::enabled_channel_count(unsigned char, const unsigned short*, unsigned char*, unsigned char*)
              reference :  LoRaPHY::restore_default_channels()
              reference :  LoRaPHY::accept_rx_param_setup_req(rx_param_setup_req_s*)
              reference :  LoRaPHY::accept_tx_param_setup_req(unsigned char, unsigned char)
              reference :  LoRaPHY::rx_config(rx_config_params_t*)
              reference :  LoRaPHY::LoRaPHY__sub_object()
              reference :  LoRaPHY::~LoRaPHY__sub_object()
              definition:  LoRaPHYKR920::verify_frequency_for_band(unsigned, unsigned char) const
              definition:  vtable for LoRaPHYKR920
              reference :  operator delete (void*)
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/lorawan/lorastack/phy/LoRaPHYUS915.o.
              definition:  LoRaPHYUS915::limit_tx_power(signed char, signed char, signed char)
              definition:  LoRaPHYUS915::apply_DR_offset(signed char, signed char)
              definition:  LoRaPHYUS915::get_alternate_DR(unsigned char)
              definition:  LoRaPHYUS915::link_ADR_request(adr_req_params_t*, signed char*, signed char*, unsigned char*, unsigned char*)
              definition:  LoRaPHYUS915::set_next_channel(channel_selection_params_s*, unsigned char*, unsigned*, unsigned*)
              definition:  LoRaPHYUS915::set_tx_cont_mode(continuous_wave_mode_params_s*, unsigned)
              definition:  LoRaPHYUS915::intersect_channel_mask(const unsigned short*, unsigned short*, unsigned char)
              definition:  LoRaPHYUS915::restore_default_channels()
              definition:  LoRaPHYUS915::accept_rx_param_setup_req(rx_param_setup_req_s*)
              definition:  LoRaPHYUS915::fill_channel_mask_with_fsb(const unsigned short*, const unsigned short*, unsigned short*, unsigned char)
              definition:  LoRaPHYUS915::fill_channel_mask_with_value(unsigned short*, unsigned short, unsigned char)
              definition:  LoRaPHYUS915::rx_config(rx_config_params_t*)
              definition:  LoRaPHYUS915::tx_config(tx_config_params_t*, signed char*, unsigned*)
              definition:  LoRaPHYUS915::LoRaPHYUS915()
              definition:  LoRaPHYUS915::LoRaPHYUS915__sub_object()
              definition:  LoRaPHYUS915::~LoRaPHYUS915__deallocating()
              definition:  LoRaPHYUS915::~LoRaPHYUS915()
              definition:  LoRaPHYUS915::~LoRaPHYUS915__sub_object()
              reference :  LoRaWANTimeHandler::get_elapsed_time(unsigned)
              reference :  LoRaPHY::get_random(int, int)
              reference :  LoRaPHY::add_channel(const channel_params_t*, unsigned char)
              reference :  LoRaPHY::val_in_range(signed char, signed char, signed char)
              reference :  LoRaPHY::apply_cf_list(const unsigned char*, unsigned char)
              reference :  LoRaPHY::get_bandwidth(unsigned char)
              reference :  LoRaPHY::remove_channel(unsigned char)
              reference :  LoRaPHY::disable_channel(unsigned short*, unsigned char, unsigned char)
              reference :  LoRaPHY::compute_tx_power(signed char, float, float)
              reference :  LoRaPHY::set_last_tx_done(unsigned char, bool, unsigned)
              reference :  LoRaPHY::copy_channel_mask(unsigned short*, unsigned short*, unsigned char)
              reference :  LoRaPHY::dl_channel_request(unsigned char, unsigned)
              reference :  LoRaPHY::parse_link_ADR_req(const unsigned char*, unsigned char, link_adr_params_s*)
              reference :  LoRaPHY::num_active_channels(unsigned short*, unsigned char, unsigned char)
              reference :  LoRaPHY::request_new_channel(signed char, channel_params_t*)
              reference :  LoRaPHY::update_band_timeoff(bool, bool, band_t*, unsigned char)
              reference :  LoRaPHY::verify_link_ADR_req(verify_adr_params_s*, signed char*, signed char*, unsigned char*)
              reference :  LoRaPHY::compute_rx_win_params(signed char, unsigned char, unsigned, rx_config_params_t*)
              reference :  LoRaPHY::enabled_channel_count(unsigned char, const unsigned short*, unsigned char*, unsigned char*)
              reference :  LoRaPHY::accept_tx_param_setup_req(unsigned char, unsigned char)
              reference :  LoRaPHY::LoRaPHY__sub_object()
              reference :  LoRaPHY::~LoRaPHY__sub_object()
              reference :  LoRaPHY::verify_frequency_for_band(unsigned, unsigned char) const
              definition:  vtable for LoRaPHYUS915
              reference :  operator delete (void*)
              reference :  __aeabi_memclr4
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/lorawan/source/LoRaWANInterface.o.
              reference :  LoRaPHYEU868::LoRaPHYEU868()
              reference :  LoRaWANStack::add_channels(const lora_channelplan&)
              reference :  LoRaWANStack::stop_sending()
              reference :  LoRaWANStack::remove_a_channel(unsigned char)
              reference :  LoRaWANStack::set_device_class(const device_class_t&)
              reference :  LoRaWANStack::drop_channel_list()
              reference :  LoRaWANStack::set_lora_callbacks(const lorawan_app_callbacks_t*)
              reference :  LoRaWANStack::acquire_rx_metadata(lorawan_rx_metadata&)
              reference :  LoRaWANStack::acquire_tx_metadata(lorawan_tx_metadata&)
              reference :  LoRaWANStack::get_enabled_channels(lora_channelplan&)
              reference :  LoRaWANStack::initialize_mac_layer(events::EventQueue*)
              reference :  LoRaWANStack::set_channel_data_rate(unsigned char)
              reference :  LoRaWANStack::set_link_check_request()
              reference :  LoRaWANStack::set_confirmed_msg_retry(unsigned char)
              reference :  LoRaWANStack::acquire_backoff_metadata(int&)
              reference :  LoRaWANStack::enable_adaptive_datarate(bool)
              reference :  LoRaWANStack::bind_phy_and_radio_driver(LoRaRadio&, LoRaPHY&)
              reference :  LoRaWANStack::remove_link_check_request()
              weak defn :  LoRaWANStack::lock()
              weak defn :  LoRaWANStack::unlock()
              reference :  LoRaWANStack::connect(const lorawan_connect&)
              reference :  LoRaWANStack::connect()
              reference :  LoRaWANStack::shutdown()
              reference :  LoRaWANStack::handle_rx(unsigned char*, unsigned short, unsigned char&, int&, bool)
              reference :  LoRaWANStack::handle_tx(unsigned char, const unsigned char*, unsigned short, unsigned char, bool, bool)
              reference :  LoRaWANStack::LoRaWANStack()
              weak defn :  LoRaWANStack::~LoRaWANStack__sub_object()
              definition:  LoRaWANInterface::disconnect()
              definition:  LoRaWANInterface::initialize(events::EventQueue*)
              definition:  LoRaWANInterface::set_datarate(unsigned char)
              definition:  LoRaWANInterface::cancel_sending()
              definition:  LoRaWANInterface::remove_channel(unsigned char)
              definition:  LoRaWANInterface::get_rx_metadata(lorawan_rx_metadata&)
              definition:  LoRaWANInterface::get_tx_metadata(lorawan_tx_metadata&)
              definition:  LoRaWANInterface::get_channel_plan(lora_channelplan&)
              definition:  LoRaWANInterface::set_channel_plan(const lora_channelplan&)
              definition:  LoRaWANInterface::set_device_class(device_class_t)
              definition:  LoRaWANInterface::add_app_callbacks(lorawan_app_callbacks_t*)
              definition:  LoRaWANInterface::remove_channel_plan()
              definition:  LoRaWANInterface::get_backoff_metadata(int&)
              definition:  LoRaWANInterface::add_link_check_request()
              definition:  LoRaWANInterface::enable_adaptive_datarate()
              definition:  LoRaWANInterface::disable_adaptive_datarate()
              definition:  LoRaWANInterface::remove_link_check_request()
              definition:  LoRaWANInterface::set_confirmed_msg_retries(unsigned char)
              weak defn :  LoRaWANInterface::lock()
              definition:  LoRaWANInterface::send(unsigned char, const unsigned char*, unsigned short, int)
              weak defn :  LoRaWANInterface::unlock()
              definition:  LoRaWANInterface::connect(const lorawan_connect&)
              definition:  LoRaWANInterface::connect()
              definition:  LoRaWANInterface::receive(unsigned char*, unsigned short, unsigned char&, int&)
              definition:  LoRaWANInterface::receive(unsigned char, unsigned char*, unsigned short, int)
              definition:  LoRaWANInterface::LoRaWANInterface(LoRaRadio&)
              definition:  LoRaWANInterface::LoRaWANInterface(LoRaRadio&, LoRaPHY&)
              definition:  LoRaWANInterface::LoRaWANInterface__sub_object(LoRaRadio&)
              definition:  LoRaWANInterface::LoRaWANInterface__sub_object(LoRaRadio&, LoRaPHY&)
              definition:  LoRaWANInterface::~LoRaWANInterface()
              definition:  LoRaWANInterface::~LoRaWANInterface__sub_object()
              weak defn :  mbed::ScopedLock<LoRaWANInterface>::ScopedLock__sub_object(LoRaWANInterface&)
              weak defn :  mbed::ScopedLock<LoRaWANInterface>::~ScopedLock__sub_object()
              reference :  rtos::Mutex::lock()
              reference :  rtos::Mutex::unlock()
              reference :  LoRaMac::~LoRaMac()
              reference :  operator new(unsigned)
              reference :  LoRaMac::lock()
              reference :  LoRaMac::unlock()
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/lorawan/source/LoRaWANStack.o.
              definition:  LoRaWANStack::add_channels(const lora_channelplan&)
              definition:  LoRaWANStack::stop_sending()
              definition:  LoRaWANStack::is_port_valid(unsigned char, bool)
              definition:  LoRaWANStack::handle_connect(bool)
              definition:  LoRaWANStack::remove_a_channel(unsigned char)
              definition:  LoRaWANStack::set_device_class(const device_class_t&)
              definition:  LoRaWANStack::state_controller(device_states)
              definition:  LoRaWANStack::drop_channel_list()
              definition:  LoRaWANStack::process_reception(const unsigned char*, unsigned short, short, signed char)
              definition:  LoRaWANStack::process_idle_state(lorawan_status&)
              definition:  LoRaWANStack::set_lora_callbacks(const lorawan_app_callbacks_t*)
              definition:  LoRaWANStack::acquire_rx_metadata(lorawan_rx_metadata&)
              definition:  LoRaWANStack::acquire_tx_metadata(lorawan_tx_metadata&)
              definition:  LoRaWANStack::convert_to_msg_flag(mcps_type_t)
              definition:  LoRaWANStack::get_enabled_channels(lora_channelplan&)
              definition:  LoRaWANStack::initialize_mac_layer(events::EventQueue*)
              definition:  LoRaWANStack::mcps_confirm_handler()
              definition:  LoRaWANStack::mlme_confirm_handler()
              definition:  LoRaWANStack::process_transmission()
              definition:  LoRaWANStack::rx_interrupt_handler(const unsigned char*, unsigned short, short, signed char)
              definition:  LoRaWANStack::set_application_port(unsigned char, bool)
              definition:  LoRaWANStack::tx_interrupt_handler()
              definition:  LoRaWANStack::process_joining_state(lorawan_status&)
              definition:  LoRaWANStack::set_channel_data_rate(unsigned char)
              definition:  LoRaWANStack::process_shutdown_state(lorawan_status&)
              definition:  LoRaWANStack::set_link_check_request()
              definition:  LoRaWANStack::mcps_indication_handler()
              definition:  LoRaWANStack::mlme_indication_handler()
              definition:  LoRaWANStack::process_connected_state()
              definition:  LoRaWANStack::set_confirmed_msg_retry(unsigned char)
              definition:  LoRaWANStack::acquire_backoff_metadata(int&)
              definition:  LoRaWANStack::enable_adaptive_datarate(bool)
              definition:  LoRaWANStack::process_connecting_state(lorawan_status&)
              definition:  LoRaWANStack::process_scheduling_state(lorawan_status&)
              definition:  LoRaWANStack::bind_phy_and_radio_driver(LoRaRadio&, LoRaPHY&)
              definition:  LoRaWANStack::handle_scheduling_failure()
              definition:  LoRaWANStack::process_reception_timeout(bool)
              definition:  LoRaWANStack::remove_link_check_request()
              definition:  LoRaWANStack::make_rx_metadata_available()
              definition:  LoRaWANStack::make_tx_metadata_available()
              definition:  LoRaWANStack::process_status_check_state()
              definition:  LoRaWANStack::rx_error_interrupt_handler()
              definition:  LoRaWANStack::process_uninitialized_state(lorawan_status&)
              definition:  LoRaWANStack::post_process_tx_no_reception()
              definition:  LoRaWANStack::process_transmission_timeout()
              definition:  LoRaWANStack::rx_timeout_interrupt_handler()
              definition:  LoRaWANStack::tx_timeout_interrupt_handler()
              definition:  LoRaWANStack::send_automatic_uplink_message(unsigned char)
              definition:  LoRaWANStack::post_process_tx_with_reception()
              definition:  LoRaWANStack::state_machine_run_to_completion()
              definition:  LoRaWANStack::connect(const lorawan_connect&)
              definition:  LoRaWANStack::connect()
              definition:  LoRaWANStack::shutdown()
              definition:  LoRaWANStack::handle_rx(unsigned char*, unsigned short, unsigned char&, int&, bool)
              definition:  LoRaWANStack::handle_tx(unsigned char, const unsigned char*, unsigned short, unsigned char, bool, bool)
              definition:  LoRaWANStack::LoRaWANStack()
              definition:  LoRaWANStack::LoRaWANStack__sub_object()
              weak defn :  radio_events::radio_events__sub_object()
              weak defn :  lorawan_app_callbacks_t::lorawan_app_callbacks_t__sub_object()
              weak defn :  T1 mbed::detail::invoke_r<lorawan_status, lorawan_status(LoRaWANStack::*const &)(device_states), <LoRaWANStack*const &, device_states>, (int)0>(T2&&, T3&&...)
              weak defn :  T1 mbed::detail::invoke_r<lorawan_status, mbed::Callback<lorawan_status(device_states)>::Callback<LoRaWANStack*, lorawan_status(LoRaWANStack::*)(device_states), (int)0>(T1, T2)::[lambda(device_states) (instance 1)]&, <device_states>, (int)0>(T2&&, T3&&...)
              weak defn :  T1 mbed::detail::invoke_r<void, void(LoRaWANStack::*const &)(const unsigned char*, unsigned short, short, signed char), <LoRaWANStack*const &, const unsigned char*, unsigned short, short, signed char>, (int)0>(T2&&, T3&&...)
              weak defn :  T1 mbed::detail::invoke_r<void, void(LoRaWANStack::*const &)(bool), <LoRaWANStack*const &, bool>, (int)0>(T2&&, T3&&...)
              weak defn :  T1 mbed::detail::invoke_r<void, void(LoRaWANStack::*const &)(unsigned char), <LoRaWANStack*const &, unsigned char>, (int)0>(T2&&, T3&&...)
              weak defn :  T1 mbed::detail::invoke_r<void, void(LoRaWANStack::*const &)(), <LoRaWANStack*const &>, (int)0>(T2&&, T3&&...)
              weak defn :  T1 mbed::detail::invoke_r<void, mbed::Callback<void(const unsigned char*, unsigned short, short, signed char)>::Callback<LoRaWANStack*, void(LoRaWANStack::*)(const unsigned char*, unsigned short, short, signed char), (int)0>(T1, T2)::[lambda(const unsigned char*, unsigned short, short, signed char) (instance 1)]&, <const unsigned char*, unsigned short, short, signed char>, (int)0>(T2&&, T3&&...)
              weak defn :  T1 mbed::detail::invoke_r<void, mbed::Callback<void(bool)>::Callback<LoRaWANStack*, void(LoRaWANStack::*)(bool), (int)0>(T1, T2)::[lambda(bool) (instance 1)]&, <bool>, (int)0>(T2&&, T3&&...)
              weak defn :  T1 mbed::detail::invoke_r<void, mbed::Callback<void(unsigned char)>::Callback<LoRaWANStack*, void(LoRaWANStack::*)(unsigned char), (int)0>(T1, T2)::[lambda(unsigned char) (instance 1)]&, <unsigned char>, (int)0>(T2&&, T3&&...)
              weak defn :  T1 mbed::detail::invoke_r<void, mbed::Callback<void()>::Callback<LoRaWANStack*, void(LoRaWANStack::*)(), (int)0>(T1, T2)::[lambda() (instance 1)]&, <>, (int)0>(T2&&, T3&&...)
              weak defn :  lorawan_status mbed::Callback<lorawan_status(device_states)>::target_call<mbed::Callback<lorawan_status(device_states)>::Callback<LoRaWANStack*, lorawan_status(LoRaWANStack::*)(device_states), (int)0>(T1, T2)::[lambda(device_states) (instance 1)]>(const mbed::detail::CallbackBase*, device_states)
              weak defn :  void mbed::Callback<lorawan_status(device_states)>::generate<mbed::Callback<lorawan_status(device_states)>::Callback<LoRaWANStack*, lorawan_status(LoRaWANStack::*)(device_states), (int)0>(T1, T2)::[lambda(device_states) (instance 1)], void>(T1&&)
              weak defn :  mbed::Callback<lorawan_status(device_states)>::Callback__sub_object<LoRaWANStack*, lorawan_status(LoRaWANStack::*)(device_states), (int)0>(T1, T2)
              weak defn :  mbed::Callback<void(lora_events)>::Callback__sub_object()
              weak defn :  void mbed::Callback<void(const unsigned char*, unsigned short, short, signed char)>::target_call<mbed::Callback<void(const unsigned char*, unsigned short, short, signed char)>::Callback<LoRaWANStack*, void(LoRaWANStack::*)(const unsigned char*, unsigned short, short, signed char), (int)0>(T1, T2)::[lambda(const unsigned char*, unsigned short, short, signed char) (instance 1)]>(const mbed::detail::CallbackBase*, const unsigned char*, unsigned short, short, signed char)
              weak defn :  void mbed::Callback<void(const unsigned char*, unsigned short, short, signed char)>::generate<mbed::Callback<void(const unsigned char*, unsigned short, short, signed char)>::Callback<LoRaWANStack*, void(LoRaWANStack::*)(const unsigned char*, unsigned short, short, signed char), (int)0>(T1, T2)::[lambda(const unsigned char*, unsigned short, short, signed char) (instance 1)], void>(T1&&)
              weak defn :  mbed::Callback<void(const unsigned char*, unsigned short, short, signed char)>::Callback__sub_object()
              weak defn :  mbed::Callback<void(const unsigned char*, unsigned short, short, signed char)>::Callback__sub_object<LoRaWANStack*, void(LoRaWANStack::*)(const unsigned char*, unsigned short, short, signed char), (int)0>(T1, T2)
              weak defn :  void mbed::Callback<void(bool)>::target_call<mbed::Callback<void(bool)>::Callback<LoRaWANStack*, void(LoRaWANStack::*)(bool), (int)0>(T1, T2)::[lambda(bool) (instance 1)]>(const mbed::detail::CallbackBase*, bool)
              weak defn :  void mbed::Callback<void(bool)>::generate<mbed::Callback<void(bool)>::Callback<LoRaWANStack*, void(LoRaWANStack::*)(bool), (int)0>(T1, T2)::[lambda(bool) (instance 1)], void>(T1&&)
              weak defn :  mbed::Callback<void(bool)>::Callback__sub_object()
              weak defn :  mbed::Callback<void(bool)>::Callback__sub_object<LoRaWANStack*, void(LoRaWANStack::*)(bool), (int)0>(T1, T2)
              weak defn :  void mbed::Callback<void(unsigned char)>::target_call<mbed::Callback<void(unsigned char)>::Callback<LoRaWANStack*, void(LoRaWANStack::*)(unsigned char), (int)0>(T1, T2)::[lambda(unsigned char) (instance 1)]>(const mbed::detail::CallbackBase*, unsigned char)
              weak defn :  void mbed::Callback<void(unsigned char)>::generate<mbed::Callback<void(unsigned char)>::Callback<LoRaWANStack*, void(LoRaWANStack::*)(unsigned char), (int)0>(T1, T2)::[lambda(unsigned char) (instance 1)], void>(T1&&)
              weak defn :  mbed::Callback<void(unsigned char)>::Callback__sub_object()
              weak defn :  mbed::Callback<void(unsigned char)>::Callback__sub_object<LoRaWANStack*, void(LoRaWANStack::*)(unsigned char), (int)0>(T1, T2)
              weak defn :  mbed::Callback<void(unsigned char, unsigned char)>::Callback__sub_object()
              weak defn :  void mbed::Callback<void()>::target_call<mbed::Callback<void()>::Callback<LoRaWANStack*, void(LoRaWANStack::*)(), (int)0>(T1, T2)::[lambda() (instance 1)]>(const mbed::detail::CallbackBase*)
              weak defn :  void mbed::Callback<void()>::generate<mbed::Callback<void()>::Callback<LoRaWANStack*, void(LoRaWANStack::*)(), (int)0>(T1, T2)::[lambda() (instance 1)], void>(T1&&)
              weak defn :  mbed::Callback<void()>::Callback__sub_object<LoRaWANStack*, void(LoRaWANStack::*)(), (int)0>(T1, T2)
              weak defn :  mbed::Callback<T3(T4...)> mbed::callback<LoRaWANStack, LoRaWANStack, lorawan_status, <device_states>>(T2*, T3(T1::*)(T4...))
              weak defn :  mbed::Callback<T3(T4...)> mbed::callback<LoRaWANStack, LoRaWANStack, void, <>>(T2*, T3(T1::*)(T4...))
              weak defn :  mbed::Callback<T3(T4...)> mbed::callback<LoRaWANStack, LoRaWANStack, void, <const unsigned char*, unsigned short, short, signed char>>(T2*, T3(T1::*)(T4...))
              weak defn :  mbed::Callback<T3(T4...)> mbed::callback<LoRaWANStack, LoRaWANStack, void, <bool>>(T2*, T3(T1::*)(T4...))
              weak defn :  mbed::Callback<T3(T4...)> mbed::callback<LoRaWANStack, LoRaWANStack, void, <unsigned char>>(T2*, T3(T1::*)(T4...))
              weak defn :  std::__1::enable_if<((std::is_function<T2>::value&&(!std::is_base_of<T1, std::__1::decay<T3>::type>::value))&&(!is_reference_wrapper<std::__1::decay<T3>::type>::value)), decltype((((*std::forward<T3>(param#2)).*param#1)(std::forward<T4>(param#3)...)))>::type mstd::impl::INVOKE<LoRaWANStack, lorawan_status(device_states), LoRaWANStack*const &, <device_states>>(T2T1::*, T3&&, T4&&...)
              weak defn :  std::__1::enable_if<((std::is_function<T2>::value&&(!std::is_base_of<T1, std::__1::decay<T3>::type>::value))&&(!is_reference_wrapper<std::__1::decay<T3>::type>::value)), decltype((((*std::forward<T3>(param#2)).*param#1)(std::forward<T4>(param#3)...)))>::type mstd::impl::INVOKE<LoRaWANStack, void(const unsigned char*, unsigned short, short, signed char), LoRaWANStack*const &, <const unsigned char*, unsigned short, short, signed char>>(T2T1::*, T3&&, T4&&...)
              weak defn :  std::__1::enable_if<((std::is_function<T2>::value&&(!std::is_base_of<T1, std::__1::decay<T3>::type>::value))&&(!is_reference_wrapper<std::__1::decay<T3>::type>::value)), decltype((((*std::forward<T3>(param#2)).*param#1)(std::forward<T4>(param#3)...)))>::type mstd::impl::INVOKE<LoRaWANStack, void(bool), LoRaWANStack*const &, <bool>>(T2T1::*, T3&&, T4&&...)
              weak defn :  std::__1::enable_if<((std::is_function<T2>::value&&(!std::is_base_of<T1, std::__1::decay<T3>::type>::value))&&(!is_reference_wrapper<std::__1::decay<T3>::type>::value)), decltype((((*std::forward<T3>(param#2)).*param#1)(std::forward<T4>(param#3)...)))>::type mstd::impl::INVOKE<LoRaWANStack, void(unsigned char), LoRaWANStack*const &, <unsigned char>>(T2T1::*, T3&&, T4&&...)
              weak defn :  std::__1::enable_if<((std::is_function<T2>::value&&(!std::is_base_of<T1, std::__1::decay<T3>::type>::value))&&(!is_reference_wrapper<std::__1::decay<T3>::type>::value)), decltype((((*std::forward<T3>(param#2)).*param#1)(std::forward<T4>(param#3)...)))>::type mstd::impl::INVOKE<LoRaWANStack, void(), LoRaWANStack*const &, <>>(T2T1::*, T3&&, T4&&...)
              weak defn :  std::__1::enable_if<((!std::is_member_pointer<std::__1::decay<T1>::type>::value)||(std::is_member_object_pointer<std::__1::decay<T1>::type>::value&&(sizeof...(param#2)!=(int)1))), decltype((std::forward<T1>(param#1)(std::forward<T2>(param#2)...)))>::type mstd::impl::INVOKE<mbed::Callback<lorawan_status(device_states)>::Callback<LoRaWANStack*, lorawan_status(LoRaWANStack::*)(device_states), (int)0>(T1, T2)::[lambda(device_states) (instance 1)]&, <device_states>>(T1&&, T2&&...)
              weak defn :  std::__1::enable_if<((!std::is_member_pointer<std::__1::decay<T1>::type>::value)||(std::is_member_object_pointer<std::__1::decay<T1>::type>::value&&(sizeof...(param#2)!=(int)1))), decltype((std::forward<T1>(param#1)(std::forward<T2>(param#2)...)))>::type mstd::impl::INVOKE<mbed::Callback<void(const unsigned char*, unsigned short, short, signed char)>::Callback<LoRaWANStack*, void(LoRaWANStack::*)(const unsigned char*, unsigned short, short, signed char), (int)0>(T1, T2)::[lambda(const unsigned char*, unsigned short, short, signed char) (instance 1)]&, <const unsigned char*, unsigned short, short, signed char>>(T1&&, T2&&...)
              weak defn :  std::__1::enable_if<((!std::is_member_pointer<std::__1::decay<T1>::type>::value)||(std::is_member_object_pointer<std::__1::decay<T1>::type>::value&&(sizeof...(param#2)!=(int)1))), decltype((std::forward<T1>(param#1)(std::forward<T2>(param#2)...)))>::type mstd::impl::INVOKE<mbed::Callback<void(bool)>::Callback<LoRaWANStack*, void(LoRaWANStack::*)(bool), (int)0>(T1, T2)::[lambda(bool) (instance 1)]&, <bool>>(T1&&, T2&&...)
              weak defn :  std::__1::enable_if<((!std::is_member_pointer<std::__1::decay<T1>::type>::value)||(std::is_member_object_pointer<std::__1::decay<T1>::type>::value&&(sizeof...(param#2)!=(int)1))), decltype((std::forward<T1>(param#1)(std::forward<T2>(param#2)...)))>::type mstd::impl::INVOKE<mbed::Callback<void(unsigned char)>::Callback<LoRaWANStack*, void(LoRaWANStack::*)(unsigned char), (int)0>(T1, T2)::[lambda(unsigned char) (instance 1)]&, <unsigned char>>(T1&&, T2&&...)
              weak defn :  std::__1::enable_if<((!std::is_member_pointer<std::__1::decay<T1>::type>::value)||(std::is_member_object_pointer<std::__1::decay<T1>::type>::value&&(sizeof...(param#2)!=(int)1))), decltype((std::forward<T1>(param#1)(std::forward<T2>(param#2)...)))>::type mstd::impl::INVOKE<mbed::Callback<void()>::Callback<LoRaWANStack*, void(LoRaWANStack::*)(), (int)0>(T1, T2)::[lambda() (instance 1)]&, <>>(T1&&, T2&&...)
              weak defn :  mstd::invoke_result<T1, <T2...>>::type mstd::invoke<lorawan_status(LoRaWANStack::*const &)(device_states), <LoRaWANStack*const &, device_states>>(T1&&, T2&&...)
              weak defn :  mstd::invoke_result<T1, <T2...>>::type mstd::invoke<void(LoRaWANStack::*const &)(const unsigned char*, unsigned short, short, signed char), <LoRaWANStack*const &, const unsigned char*, unsigned short, short, signed char>>(T1&&, T2&&...)
              weak defn :  mstd::invoke_result<T1, <T2...>>::type mstd::invoke<void(LoRaWANStack::*const &)(bool), <LoRaWANStack*const &, bool>>(T1&&, T2&&...)
              weak defn :  mstd::invoke_result<T1, <T2...>>::type mstd::invoke<void(LoRaWANStack::*const &)(unsigned char), <LoRaWANStack*const &, unsigned char>>(T1&&, T2&&...)
              weak defn :  mstd::invoke_result<T1, <T2...>>::type mstd::invoke<void(LoRaWANStack::*const &)(), <LoRaWANStack*const &>>(T1&&, T2&&...)
              weak defn :  mstd::invoke_result<T1, <T2...>>::type mstd::invoke<mbed::Callback<lorawan_status(device_states)>::Callback<LoRaWANStack*, lorawan_status(LoRaWANStack::*)(device_states), (int)0>(T1, T2)::[lambda(device_states) (instance 1)]&, <device_states>>(T1&&, T2&&...)
              weak defn :  mstd::invoke_result<T1, <T2...>>::type mstd::invoke<mbed::Callback<void(const unsigned char*, unsigned short, short, signed char)>::Callback<LoRaWANStack*, void(LoRaWANStack::*)(const unsigned char*, unsigned short, short, signed char), (int)0>(T1, T2)::[lambda(const unsigned char*, unsigned short, short, signed char) (instance 1)]&, <const unsigned char*, unsigned short, short, signed char>>(T1&&, T2&&...)
              weak defn :  mstd::invoke_result<T1, <T2...>>::type mstd::invoke<mbed::Callback<void(bool)>::Callback<LoRaWANStack*, void(LoRaWANStack::*)(bool), (int)0>(T1, T2)::[lambda(bool) (instance 1)]&, <bool>>(T1&&, T2&&...)
              weak defn :  mstd::invoke_result<T1, <T2...>>::type mstd::invoke<mbed::Callback<void(unsigned char)>::Callback<LoRaWANStack*, void(LoRaWANStack::*)(unsigned char), (int)0>(T1, T2)::[lambda(unsigned char) (instance 1)]&, <unsigned char>>(T1&&, T2&&...)
              weak defn :  mstd::invoke_result<T1, <T2...>>::type mstd::invoke<mbed::Callback<void()>::Callback<LoRaWANStack*, void(LoRaWANStack::*)(), (int)0>(T1, T2)::[lambda() (instance 1)]&, <>>(T1&&, T2&&...)
              weak defn :  void events::EventQueue::function_call<events::EventQueue::context<mbed::Callback<lorawan_status(device_states)>, <device_states>>>(void*)
              weak defn :  void events::EventQueue::function_call<events::EventQueue::context<mbed::Callback<void(lora_events)>, <lora_events>>>(void*)
              weak defn :  void events::EventQueue::function_call<events::EventQueue::context<mbed::Callback<void(const unsigned char*, unsigned short, short, signed char)>, <const unsigned char*, unsigned short, short, signed char>>>(void*)
              weak defn :  void events::EventQueue::function_call<events::EventQueue::context<mbed::Callback<void(bool)>, <bool>>>(void*)
              weak defn :  void events::EventQueue::function_call<events::EventQueue::context<mbed::Callback<void(unsigned char)>, <unsigned char>>>(void*)
              weak defn :  void events::EventQueue::function_call<events::EventQueue::context<mbed::Callback<void(unsigned char, unsigned char)>, <unsigned char, unsigned char>>>(void*)
              weak defn :  void events::EventQueue::function_dtor<events::EventQueue::context<mbed::Callback<lorawan_status(device_states)>, <device_states>>>(void*)
              weak defn :  void events::EventQueue::function_dtor<events::EventQueue::context<mbed::Callback<void(lora_events)>, <lora_events>>>(void*)
              weak defn :  void events::EventQueue::function_dtor<events::EventQueue::context<mbed::Callback<void(const unsigned char*, unsigned short, short, signed char)>, <const unsigned char*, unsigned short, short, signed char>>>(void*)
              weak defn :  void events::EventQueue::function_dtor<events::EventQueue::context<mbed::Callback<void(bool)>, <bool>>>(void*)
              weak defn :  void events::EventQueue::function_dtor<events::EventQueue::context<mbed::Callback<void(unsigned char)>, <unsigned char>>>(void*)
              weak defn :  void events::EventQueue::function_dtor<events::EventQueue::context<mbed::Callback<void(unsigned char, unsigned char)>, <unsigned char, unsigned char>>>(void*)
              weak defn :  int events::EventQueue::call<LoRaWANStack, lorawan_status, <device_states>>(T1*, T2(T1::*)(T3...), T3...)
              weak defn :  int events::EventQueue::call<LoRaWANStack, void, <>>(T1*, T2(T1::*)(T3...), T3...)
              weak defn :  int events::EventQueue::call<LoRaWANStack, void, <const unsigned char*, unsigned short, short, signed char>>(T1*, T2(T1::*)(T3...), T3...)
              weak defn :  int events::EventQueue::call<LoRaWANStack, void, <bool>>(T1*, T2(T1::*)(T3...), T3...)
              weak defn :  int events::EventQueue::call<LoRaWANStack, void, <unsigned char>>(T1*, T2(T1::*)(T3...), T3...)
              weak defn :  int events::EventQueue::call<mbed::Callback<lorawan_status(device_states)>, <device_states>>(T1, T2...)
              weak defn :  int events::EventQueue::call<mbed::Callback<void(lora_events)>, <lora_events>>(T1, T2...)
              weak defn :  int events::EventQueue::call<mbed::Callback<void(const unsigned char*, unsigned short, short, signed char)>, <const unsigned char*, unsigned short, short, signed char>>(T1, T2...)
              weak defn :  int events::EventQueue::call<mbed::Callback<void(bool)>, <bool>>(T1, T2...)
              weak defn :  int events::EventQueue::call<mbed::Callback<void(unsigned char)>, <unsigned char>>(T1, T2...)
              weak defn :  int events::EventQueue::call<mbed::Callback<void(unsigned char, unsigned char)>, <unsigned char, unsigned char>>(T1, T2...)
              weak defn :  int events::EventQueue::call<events::EventQueue::context<mbed::Callback<lorawan_status(device_states)>, <device_states>>>(T1)
              weak defn :  int events::EventQueue::call<events::EventQueue::context<mbed::Callback<void(lora_events)>, <lora_events>>>(T1)
              weak defn :  int events::EventQueue::call<events::EventQueue::context<mbed::Callback<void(const unsigned char*, unsigned short, short, signed char)>, <const unsigned char*, unsigned short, short, signed char>>>(T1)
              weak defn :  int events::EventQueue::call<events::EventQueue::context<mbed::Callback<void(bool)>, <bool>>>(T1)
              weak defn :  int events::EventQueue::call<events::EventQueue::context<mbed::Callback<void(unsigned char)>, <unsigned char>>>(T1)
              weak defn :  int events::EventQueue::call<events::EventQueue::context<mbed::Callback<void(unsigned char, unsigned char)>, <unsigned char, unsigned char>>>(T1)
              weak defn :  events::EventQueue::context<mbed::Callback<lorawan_status(device_states)>, <device_states>>::context__sub_object(mbed::Callback<lorawan_status(device_states)>, device_states)
              weak defn :  void events::EventQueue::context<mbed::Callback<lorawan_status(device_states)>, <device_states>>::operator ()<<>>(T1...)
              weak defn :  events::EventQueue::context<mbed::Callback<void(lora_events)>, <lora_events>>::context__sub_object(mbed::Callback<void(lora_events)>, lora_events)
              weak defn :  void events::EventQueue::context<mbed::Callback<void(lora_events)>, <lora_events>>::operator ()<<>>(T1...)
              weak defn :  events::EventQueue::context<mbed::Callback<void(const unsigned char*, unsigned short, short, signed char)>, <const unsigned char*, unsigned short, short, signed char>>::context__sub_object(mbed::Callback<void(const unsigned char*, unsigned short, short, signed char)>, const unsigned char*, unsigned short, short, signed char)
              weak defn :  void events::EventQueue::context<mbed::Callback<void(const unsigned char*, unsigned short, short, signed char)>, <const unsigned char*, unsigned short, short, signed char>>::operator ()<<>>(T1...)
              weak defn :  events::EventQueue::context<mbed::Callback<void(bool)>, <bool>>::context__sub_object(mbed::Callback<void(bool)>, bool)
              weak defn :  void events::EventQueue::context<mbed::Callback<void(bool)>, <bool>>::operator ()<<>>(T1...)
              weak defn :  events::EventQueue::context<mbed::Callback<void(unsigned char)>, <unsigned char>>::context__sub_object(mbed::Callback<void(unsigned char)>, unsigned char)
              weak defn :  void events::EventQueue::context<mbed::Callback<void(unsigned char)>, <unsigned char>>::operator ()<<>>(T1...)
              weak defn :  events::EventQueue::context<mbed::Callback<void(unsigned char, unsigned char)>, <unsigned char, unsigned char>>::context__sub_object(mbed::Callback<void(unsigned char, unsigned char)>, unsigned char, unsigned char)
              weak defn :  void events::EventQueue::context<mbed::Callback<void(unsigned char, unsigned char)>, <unsigned char, unsigned char>>::operator ()<<>>(T1...)
              reference :  events::EventQueue::time_left(int)
              reference :  LoRaMac::disconnect()
              reference :  LoRaMac::initialize(events::EventQueue*, mbed::Callback<void()>)
              reference :  LoRaMac::nwk_joined()
              reference :  LoRaMac::tx_ongoing()
              reference :  LoRaMac::prepare_join(const lorawan_connect*, bool)
              reference :  LoRaMac::clear_tx_pipe()
              reference :  LoRaMac::get_QOS_level()
              reference :  LoRaMac::set_tx_ongoing(bool)
              reference :  LoRaMac::send_ongoing_tx()
              reference :  LoRaMac::add_channel_plan(const lora_channelplan&)
              reference :  LoRaMac::get_channel_plan(lora_channelplan&)
              reference :  LoRaMac::get_current_slot()
              reference :  LoRaMac::get_current_time()
              reference :  LoRaMac::on_radio_rx_done(const unsigned char*, unsigned short, short, signed char)
              reference :  LoRaMac::on_radio_tx_done(unsigned)
              reference :  LoRaMac::reset_ongoing_tx(bool)
              reference :  LoRaMac::set_device_class(const device_class_t&, mbed::Callback<void()>)
              reference :  LoRaMac::get_prev_QOS_level()
              reference :  LoRaMac::prepare_ongoing_tx(unsigned char, const unsigned char*, unsigned short, unsigned char, unsigned char)
              reference :  LoRaMac::on_radio_rx_timeout(bool)
              reference :  LoRaMac::on_radio_tx_timeout()
              reference :  LoRaMac::remove_channel_plan()
              reference :  LoRaMac::post_process_mcps_ind()
              reference :  LoRaMac::post_process_mcps_req()
              reference :  LoRaMac::post_process_mlme_ind()
              reference :  LoRaMac::remove_single_channel(unsigned char)
              reference :  LoRaMac::set_channel_data_rate(unsigned char)
              reference :  LoRaMac::continue_joining_process()
              reference :  LoRaMac::continue_sending_process()
              reference :  LoRaMac::enable_adaptive_datarate(bool)
              reference :  LoRaMac::setup_link_check_request()
              reference :  LoRaMac::post_process_mlme_request()
              reference :  LoRaMac::set_batterylevel_callback(mbed::Callback<unsigned char()>)
              reference :  LoRaMac::get_backoff_timer_event_id()
              reference :  LoRaMac::join(bool)
              reference :  LoRaMac::bind_phy(LoRaPHY&)
              reference :  LoRaMac::LoRaMac()
              reference :  LoRaPHY::set_radio_instance(LoRaRadio&)
              definition:  LoRaWANStack::send_event_to_application(lora_events) const
              weak defn :  mbed::Callback<lorawan_status(device_states)>::call(device_states) const
              weak defn :  mbed::Callback<lorawan_status(device_states)>::operator ()(device_states) const
              weak defn :  mbed::Callback<lorawan_status(device_states)>::operator bool() const
              weak defn :  mbed::Callback<void(lora_events)>::call(lora_events) const
              weak defn :  mbed::Callback<void(lora_events)>::operator ()(lora_events) const
              weak defn :  mbed::Callback<void(lora_events)>::operator bool() const
              weak defn :  mbed::Callback<void(const unsigned char*, unsigned short, short, signed char)>::call(const unsigned char*, unsigned short, short, signed char) const
              weak defn :  mbed::Callback<void(const unsigned char*, unsigned short, short, signed char)>::operator ()(const unsigned char*, unsigned short, short, signed char) const
              weak defn :  mbed::Callback<void(const unsigned char*, unsigned short, short, signed char)>::operator bool() const
              weak defn :  mbed::Callback<void(bool)>::call(bool) const
              weak defn :  mbed::Callback<void(bool)>::operator ()(bool) const
              weak defn :  mbed::Callback<void(bool)>::operator bool() const
              weak defn :  mbed::Callback<void(unsigned char)>::call(unsigned char) const
              weak defn :  mbed::Callback<void(unsigned char)>::operator ()(unsigned char) const
              weak defn :  mbed::Callback<void(unsigned char)>::operator bool() const
              weak defn :  mbed::Callback<void(unsigned char, unsigned char)>::call(unsigned char, unsigned char) const
              weak defn :  mbed::Callback<void(unsigned char, unsigned char)>::operator ()(unsigned char, unsigned char) const
              weak defn :  mbed::Callback<void(unsigned char, unsigned char)>::operator bool() const
              reference :  LoRaMac::get_device_class() const
              reference :  LoRaMac::get_mcps_indication() const
              reference :  LoRaMac::get_mlme_indication() const
              reference :  LoRaMac::get_mcps_confirmation() const
              reference :  LoRaMac::get_mlme_confirmation() const
              weak defn :  mbed::Callback<lorawan_status(device_states)>::Callback<LoRaWANStack*, lorawan_status(LoRaWANStack::*)(device_states), (int)0>(T1, T2)::[lambda(device_states) (instance 1)]::operator ()(device_states) const
              weak defn :  mbed::Callback<void(const unsigned char*, unsigned short, short, signed char)>::Callback<LoRaWANStack*, void(LoRaWANStack::*)(const unsigned char*, unsigned short, short, signed char), (int)0>(T1, T2)::[lambda(const unsigned char*, unsigned short, short, signed char) (instance 1)]::operator ()(const unsigned char*, unsigned short, short, signed char) const
              weak defn :  mbed::Callback<void(bool)>::Callback<LoRaWANStack*, void(LoRaWANStack::*)(bool), (int)0>(T1, T2)::[lambda(bool) (instance 1)]::operator ()(bool) const
              weak defn :  mbed::Callback<void(unsigned char)>::Callback<LoRaWANStack*, void(LoRaWANStack::*)(unsigned char), (int)0>(T1, T2)::[lambda(unsigned char) (instance 1)]::operator ()(unsigned char) const
              weak defn :  mbed::Callback<void()>::Callback<LoRaWANStack*, void(LoRaWANStack::*)(), (int)0>(T1, T2)::[lambda() (instance 1)]::operator ()() const
              reference :  __aeabi_memclr4
              reference :  __aeabi_memcpy
              weak defn :  core_util_atomic_flag_test_and_set
              reference :  equeue_alloc
              reference :  equeue_event_dtor
              reference :  equeue_post
              reference :  mbed_assert_internal
              reference :  mbed::Callback<void()>::Callback__sub_object()
              reference :  mbed::Callback<unsigned char()>::Callback__sub_object()
              reference :  mbed::Callback<unsigned char()>::operator bool() const
              reference :  mbed::detail::CallbackBase::control() const
              reference :  int events::EventQueue::call<mbed::Callback<void()>>(T1)
              reference :  mbed::detail::CallbackBase::CallbackBase__sub_object(std::nullptr_t)
              reference :  mbed::detail::CallbackBase::call_fn() const
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/lorawan/system/LoRaWANTimer.o.
              definition:  LoRaWANTimeHandler::get_current_time()
              definition:  LoRaWANTimeHandler::get_elapsed_time(unsigned)
              definition:  LoRaWANTimeHandler::activate_timer_subsystem(events::EventQueue*)
              definition:  LoRaWANTimeHandler::init(timer_event_t&, mbed::Callback<void()>)
              definition:  LoRaWANTimeHandler::stop(timer_event_t&)
              definition:  LoRaWANTimeHandler::start(timer_event_t&, unsigned)
              definition:  LoRaWANTimeHandler::LoRaWANTimeHandler()
              definition:  LoRaWANTimeHandler::LoRaWANTimeHandler__sub_object()
              definition:  LoRaWANTimeHandler::~LoRaWANTimeHandler()
              definition:  LoRaWANTimeHandler::~LoRaWANTimeHandler__sub_object()
              reference :  events::EventQueue::tick()
              reference :  events::EventQueue::cancel(int)
              reference :  equeue_alloc
              reference :  equeue_event_delay
              reference :  equeue_event_dtor
              reference :  equeue_post
              reference :  mbed_assert_internal
              reference :  int events::EventQueue::call_in<mbed::Callback<void()>>(std::__1::chrono::duration<int, std::__1::ratio<(long long)1, (long long)1000>>, T1)
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/lwipstack/lwip-sys/arch/lwip_checksum.o.
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/lwipstack/lwip-sys/arch/lwip_memcpy.o.
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/lwipstack/lwip-sys/arch/lwip_sys_arch.o.
              reference :  __aeabi_memclr4
              definition:  lwip_ram_heap
              definition:  lwip_sys_mutex
              definition:  lwip_sys_mutex_attr
              definition:  lwip_sys_mutex_data
              definition:  lwip_tcpip_thread_id
              reference :  malloc
              reference :  mbed_error
              reference :  mbed_warning
              reference :  osDelay
              reference :  osEventFlagsClear
              reference :  osEventFlagsNew
              reference :  osEventFlagsSet
              reference :  osEventFlagsWait
              reference :  osKernelGetTickCount
              reference :  osKernelLock
              reference :  osKernelRestoreLock
              reference :  osMutexAcquire
              reference :  osMutexNew
              reference :  osMutexRelease
              reference :  osSemaphoreAcquire
              reference :  osSemaphoreNew
              reference :  osSemaphoreRelease
              reference :  osThreadGetId
              reference :  osThreadNew
              definition:  sys_arch_mbox_fetch
              definition:  sys_arch_mbox_tryfetch
              definition:  sys_arch_protect
              definition:  sys_arch_sem_wait
              definition:  sys_arch_unprotect
              definition:  sys_init
              definition:  sys_mbox_free
              definition:  sys_mbox_new
              definition:  sys_mbox_post
              definition:  sys_mbox_trypost
              definition:  sys_mbox_trypost_fromisr
              definition:  sys_msleep
              definition:  sys_mutex_free
              definition:  sys_mutex_lock
              definition:  sys_mutex_new
              definition:  sys_mutex_unlock
              definition:  sys_now
              definition:  sys_sem_free
              definition:  sys_sem_new
              definition:  sys_sem_signal
              definition:  sys_tcpip_thread_check
              definition:  sys_tcpip_thread_set
              definition:  sys_thread_new
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/lwipstack/lwip-sys/lwip_random.o.
              definition:  lwip_add_random_seed
              definition:  lwip_get_random
              definition:  lwip_seed_random
              reference :  randLIB_add_seed
              reference :  randLIB_get_32bit
              reference :  randLIB_seed_random
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/lwipstack/lwip-sys/lwip_tcp_isn.o.
              reference :  __aeabi_memclr4
              definition:  lwip_hook_tcp_isn
              definition:  lwip_init_tcp_isn
              reference :  md5_finish
              reference :  md5_starts
              reference :  md5_update
              reference :  sys_now
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/lwipstack/lwip/src/api/lwip_api_lib.o.
              reference :  ip_addr_any
              reference :  lwip_netconn_do_bind
              reference :  lwip_netconn_do_bind_if
              reference :  lwip_netconn_do_close
              reference :  lwip_netconn_do_connect
              reference :  lwip_netconn_do_delconn
              reference :  lwip_netconn_do_disconnect
              reference :  lwip_netconn_do_getaddr
              reference :  lwip_netconn_do_join_leave_group
              reference :  lwip_netconn_do_join_leave_group_netif
              reference :  lwip_netconn_do_listen
              reference :  lwip_netconn_do_newconn
              reference :  lwip_netconn_do_recv
              reference :  lwip_netconn_do_send
              reference :  lwip_netconn_do_write
              reference :  lwip_netconn_is_err_msg
              reference :  memp_free
              reference :  memp_malloc
              definition:  netconn_accept
              reference :  netconn_alloc
              definition:  netconn_bind
              definition:  netconn_bind_if
              definition:  netconn_close
              definition:  netconn_connect
              definition:  netconn_delete
              definition:  netconn_disconnect
              definition:  netconn_err
              reference :  netconn_free
              definition:  netconn_getaddr
              definition:  netconn_join_leave_group
              definition:  netconn_join_leave_group_netif
              definition:  netconn_listen_with_backlog
              definition:  netconn_new_with_proto_and_callback
              definition:  netconn_prepare_delete
              definition:  netconn_recv
              definition:  netconn_recv_tcp_pbuf
              definition:  netconn_recv_tcp_pbuf_flags
              definition:  netconn_recv_udp_raw_netbuf
              definition:  netconn_recv_udp_raw_netbuf_flags
              definition:  netconn_send
              definition:  netconn_sendto
              definition:  netconn_shutdown
              definition:  netconn_tcp_recvd
              definition:  netconn_write_partly
              definition:  netconn_write_vectors_partly
              reference :  sys_arch_mbox_fetch
              reference :  sys_arch_mbox_tryfetch
              reference :  sys_arch_protect
              reference :  sys_arch_unprotect
              reference :  sys_mbox_free
              reference :  sys_sem_free
              reference :  sys_tcpip_thread_check
              reference :  tcpip_send_msg_wait_sem
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/lwipstack/lwip/src/api/lwip_api_msg.o.
              reference :  igmp_joingroup
              reference :  igmp_joingroup_netif
              reference :  igmp_leavegroup
              reference :  igmp_leavegroup_netif
              reference :  lock_tcpip_core
              definition:  lwip_netconn_do_bind
              definition:  lwip_netconn_do_bind_if
              definition:  lwip_netconn_do_close
              definition:  lwip_netconn_do_connect
              definition:  lwip_netconn_do_delconn
              definition:  lwip_netconn_do_disconnect
              definition:  lwip_netconn_do_getaddr
              definition:  lwip_netconn_do_join_leave_group
              definition:  lwip_netconn_do_join_leave_group_netif
              definition:  lwip_netconn_do_listen
              definition:  lwip_netconn_do_newconn
              definition:  lwip_netconn_do_recv
              definition:  lwip_netconn_do_send
              definition:  lwip_netconn_do_write
              definition:  lwip_netconn_is_err_msg
              reference :  memp_free
              reference :  memp_malloc
              reference :  netbuf_delete
              definition:  netconn_aborted
              definition:  netconn_alloc
              definition:  netconn_closed
              reference :  netconn_err
              definition:  netconn_free
              definition:  netconn_reset
              reference :  netif_get_by_index
              reference :  pbuf_free
              reference :  sys_arch_mbox_tryfetch
              reference :  sys_arch_protect
              reference :  sys_arch_sem_wait
              reference :  sys_arch_unprotect
              reference :  sys_mbox_free
              reference :  sys_mbox_new
              reference :  sys_mbox_trypost
              reference :  sys_mutex_lock
              reference :  sys_mutex_unlock
              reference :  sys_sem_free
              reference :  sys_sem_new
              reference :  sys_sem_signal
              reference :  tcp_abort
              reference :  tcp_accept
              reference :  tcp_arg
              reference :  tcp_bind
              reference :  tcp_bind_netif
              reference :  tcp_close
              reference :  tcp_connect
              reference :  tcp_err
              reference :  tcp_listen_with_backlog_and_err
              reference :  tcp_new_ip_type
              reference :  tcp_output
              reference :  tcp_poll
              reference :  tcp_recv
              reference :  tcp_recved
              reference :  tcp_sent
              reference :  tcp_shutdown
              reference :  tcp_write
              reference :  udp_bind
              reference :  udp_bind_netif
              reference :  udp_connect
              reference :  udp_disconnect
              reference :  udp_new_ip_type
              reference :  udp_recv
              reference :  udp_remove
              reference :  udp_send
              reference :  udp_sendto
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/lwipstack/lwip/src/api/lwip_err.o.
              definition:  err_to_errno
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/lwipstack/lwip/src/api/lwip_if_api.o.
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/lwipstack/lwip/src/api/lwip_netbuf.o.
              reference :  memp_free
              reference :  memp_malloc
              definition:  netbuf_alloc
              definition:  netbuf_chain
              definition:  netbuf_data
              definition:  netbuf_delete
              definition:  netbuf_first
              definition:  netbuf_free
              definition:  netbuf_new
              definition:  netbuf_next
              definition:  netbuf_ref
              reference :  pbuf_alloc
              reference :  pbuf_cat
              reference :  pbuf_free
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/lwipstack/lwip/src/api/lwip_netdb.o.
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/lwipstack/lwip/src/api/lwip_netifapi.o.
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/lwipstack/lwip/src/api/lwip_sockets.o.
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/lwipstack/lwip/src/api/lwip_tcpip.o.
              reference :  ethernet_input
              reference :  ip4_input
              definition:  lock_tcpip_core
              reference :  lwip_init
              reference :  mem_free
              definition:  mem_free_callback
              reference :  memp_free
              reference :  memp_malloc
              reference :  pbuf_free
              definition:  pbuf_free_callback
              reference :  sys_arch_mbox_fetch
              reference :  sys_check_timeouts
              reference :  sys_mbox_new
              reference :  sys_mbox_post
              reference :  sys_mbox_trypost
              reference :  sys_mbox_trypost_fromisr
              reference :  sys_mutex_lock
              reference :  sys_mutex_new
              reference :  sys_mutex_unlock
              reference :  sys_thread_new
              reference :  sys_timeouts_sleeptime
              definition:  tcpip_api_call
              definition:  tcpip_callback
              definition:  tcpip_callbackmsg_delete
              definition:  tcpip_callbackmsg_new
              definition:  tcpip_callbackmsg_trycallback
              definition:  tcpip_callbackmsg_trycallback_fromisr
              definition:  tcpip_init
              definition:  tcpip_inpkt
              definition:  tcpip_input
              definition:  tcpip_send_msg_wait_sem
              definition:  tcpip_try_callback
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/lwipstack/lwip/src/core/ipv4/lwip_autoip.o.
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/lwipstack/lwip/src/core/ipv4/lwip_dhcp.o.
              reference :  __aeabi_memclr
              reference :  __aeabi_memclr4
              definition:  dhcp_arp_reply
              definition:  dhcp_cleanup
              definition:  dhcp_coarse_tmr
              definition:  dhcp_fine_tmr
              definition:  dhcp_inform
              definition:  dhcp_network_changed
              definition:  dhcp_release
              definition:  dhcp_release_and_stop
              definition:  dhcp_renew
              definition:  dhcp_rx_options_given
              definition:  dhcp_rx_options_val
              definition:  dhcp_set_struct
              definition:  dhcp_start
              definition:  dhcp_stop
              definition:  dhcp_supplied_address
              reference :  dns_setserver
              reference :  etharp_query
              reference :  ip_addr_any
              reference :  ip_addr_broadcast
              reference :  ip_data
              reference :  lwip_get_random
              reference :  lwip_htonl
              reference :  mem_free
              reference :  mem_malloc
              reference :  netif_list
              reference :  netif_set_addr
              reference :  pbuf_alloc
              reference :  pbuf_copy_partial
              reference :  pbuf_free
              reference :  pbuf_realloc
              reference :  strlen
              reference :  udp_bind
              reference :  udp_connect
              reference :  udp_new
              reference :  udp_recv
              reference :  udp_remove
              reference :  udp_sendto_if
              reference :  udp_sendto_if_src
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/lwipstack/lwip/src/core/ipv4/lwip_etharp.o.
              reference :  dhcp_arp_reply
              definition:  etharp_cleanup_netif
              definition:  etharp_find_addr
              definition:  etharp_get_entry
              definition:  etharp_input
              definition:  etharp_output
              definition:  etharp_query
              definition:  etharp_request
              definition:  etharp_tmr
              reference :  ethbroadcast
              reference :  ethernet_output
              reference :  ethzero
              reference :  ip4_addr_isbroadcast_u32
              reference :  lwip_htons
              reference :  pbuf_alloc
              reference :  pbuf_clone
              reference :  pbuf_free
              reference :  pbuf_ref
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/lwipstack/lwip/src/core/ipv4/lwip_icmp.o.
              reference :  __aeabi_memcpy
              definition:  icmp_dest_unreach
              definition:  icmp_input
              definition:  icmp_time_exceeded
              reference :  inet_chksum
              reference :  inet_chksum_pbuf
              reference :  ip4_addr_isbroadcast_u32
              reference :  ip4_output_if
              reference :  ip4_route
              reference :  ip_data
              reference :  pbuf_add_header
              reference :  pbuf_alloc
              reference :  pbuf_copy
              reference :  pbuf_free
              reference :  pbuf_remove_header
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/lwipstack/lwip/src/core/ipv4/lwip_igmp.o.
              definition:  igmp_init
              definition:  igmp_input
              definition:  igmp_joingroup
              definition:  igmp_joingroup_netif
              definition:  igmp_leavegroup
              definition:  igmp_leavegroup_netif
              definition:  igmp_lookfor_group
              definition:  igmp_report_groups
              definition:  igmp_start
              definition:  igmp_stop
              definition:  igmp_tmr
              reference :  inet_chksum
              reference :  ip4_output_if_opt
              reference :  ip_addr_any
              reference :  lwip_get_random
              reference :  memp_free
              reference :  memp_malloc
              reference :  netif_list
              reference :  pbuf_alloc
              reference :  pbuf_free
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/lwipstack/lwip/src/core/ipv4/lwip_ip4.o.
              reference :  __aeabi_memclr
              reference :  __aeabi_memcpy
              reference :  icmp_dest_unreach
              reference :  icmp_input
              reference :  igmp_input
              reference :  igmp_lookfor_group
              reference :  inet_chksum
              reference :  ip4_addr_isbroadcast_u32
              reference :  ip4_frag
              definition:  ip4_input
              definition:  ip4_output
              definition:  ip4_output_if
              definition:  ip4_output_if_opt
              definition:  ip4_output_if_opt_src
              definition:  ip4_output_if_src
              reference :  ip4_reass
              definition:  ip4_route
              definition:  ip4_set_default_multicast_netif
              reference :  ip_addr_any
              reference :  ip_data
              reference :  lwip_htons
              reference :  netif_default
              reference :  netif_list
              reference :  pbuf_add_header
              reference :  pbuf_free
              reference :  pbuf_header_force
              reference :  pbuf_realloc
              reference :  pbuf_remove_header
              reference :  tcp_input
              reference :  udp_input
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/lwipstack/lwip/src/core/ipv4/lwip_ip4_addr.o.
              reference :  __rt_ctype_table
              definition:  ip4_addr_isbroadcast_u32
              definition:  ip4_addr_netmask_valid
              definition:  ip4addr_aton
              definition:  ip4addr_ntoa
              definition:  ip4addr_ntoa_r
              definition:  ip_addr_any
              definition:  ip_addr_broadcast
              definition:  ipaddr_addr
              reference :  lwip_htonl
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/lwipstack/lwip/src/core/ipv4/lwip_ip4_frag.o.
              reference :  __aeabi_memcpy
              reference :  icmp_time_exceeded
              reference :  inet_chksum
              definition:  ip4_frag
              definition:  ip4_reass
              definition:  ip_reass_tmr
              reference :  lwip_htons
              reference :  memp_free
              reference :  memp_malloc
              reference :  pbuf_alloc
              reference :  pbuf_alloced_custom
              reference :  pbuf_cat
              reference :  pbuf_clen
              reference :  pbuf_free
              reference :  pbuf_ref
              reference :  pbuf_remove_header
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/lwipstack/lwip/src/core/ipv6/lwip_dhcp6.o.
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/lwipstack/lwip/src/core/ipv6/lwip_ethip6.o.
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/lwipstack/lwip/src/core/ipv6/lwip_icmp6.o.
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/lwipstack/lwip/src/core/ipv6/lwip_inet6.o.
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/lwipstack/lwip/src/core/ipv6/lwip_ip6.o.
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/lwipstack/lwip/src/core/ipv6/lwip_ip6_addr.o.
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/lwipstack/lwip/src/core/ipv6/lwip_ip6_frag.o.
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/lwipstack/lwip/src/core/ipv6/lwip_mld6.o.
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/lwipstack/lwip/src/core/ipv6/lwip_nd6.o.
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/lwipstack/lwip/src/core/lwip_altcp.o.
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/lwipstack/lwip/src/core/lwip_altcp_alloc.o.
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/lwipstack/lwip/src/core/lwip_altcp_tcp.o.
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/lwipstack/lwip/src/core/lwip_def.o.
              reference :  __aeabi_memmove
              definition:  lwip_htonl
              definition:  lwip_htons
              definition:  lwip_itoa
              definition:  lwip_stricmp
              definition:  lwip_strnicmp
              definition:  lwip_strnstr
              reference :  strlen
              reference :  strncmp
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/lwipstack/lwip/src/core/lwip_dns.o.
              reference :  __2snprintf
              reference :  __2sprintf
              reference :  _printf_c
              reference :  _printf_d
              reference :  _printf_int_dec
              reference :  _printf_percent
              reference :  _printf_s
              reference :  _printf_str
              definition:  dns_add_interface_server
              definition:  dns_get_interface_server
              definition:  dns_getserver
              definition:  dns_init
              definition:  dns_mquery_v4group
              definition:  dns_remove_interface_servers
              definition:  dns_setserver
              definition:  dns_tmr
              reference :  ip_addr_any
              reference :  mem_free
              reference :  mem_malloc
              definition:  multihoming_dns_servers
              reference :  strcmp
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/lwipstack/lwip/src/core/lwip_inet_chksum.o.
              definition:  inet_chksum
              definition:  inet_chksum_pbuf
              definition:  inet_chksum_pseudo
              definition:  inet_chksum_pseudo_partial
              definition:  ip_chksum_pseudo
              definition:  ip_chksum_pseudo_partial
              reference :  lwip_htons
              definition:  lwip_standard_chksum
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/lwipstack/lwip/src/core/lwip_init.o.
              reference :  dns_init
              reference :  igmp_init
              definition:  lwip_init
              reference :  mem_init
              reference :  memp_init
              reference :  netif_init
              reference :  sys_init
              reference :  sys_timeouts_init
              reference :  tcp_init
              reference :  udp_init
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/lwipstack/lwip/src/core/lwip_ip.o.
              definition:  ip_data
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/lwipstack/lwip/src/core/lwip_mem.o.
              reference :  __aeabi_memclr
              reference :  lwip_ram_heap
              definition:  mem_calloc
              definition:  mem_free
              definition:  mem_init
              definition:  mem_malloc
              definition:  mem_trim
              reference :  sys_arch_protect
              reference :  sys_arch_unprotect
              reference :  sys_mutex_lock
              reference :  sys_mutex_new
              reference :  sys_mutex_unlock
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/lwipstack/lwip/src/core/lwip_memp.o.
              definition:  memp_FRAG_PBUF
              definition:  memp_IGMP_GROUP
              definition:  memp_NETBUF
              definition:  memp_NETCONN
              definition:  memp_PBUF
              definition:  memp_PBUF_POOL
              definition:  memp_REASSDATA
              definition:  memp_SYS_TIMEOUT
              definition:  memp_TCPIP_MSG_API
              definition:  memp_TCPIP_MSG_INPKT
              definition:  memp_TCP_PCB
              definition:  memp_TCP_PCB_LISTEN
              definition:  memp_TCP_SEG
              definition:  memp_UDP_PCB
              definition:  memp_free
              definition:  memp_free_pool
              definition:  memp_init
              definition:  memp_init_pool
              definition:  memp_malloc
              definition:  memp_malloc_pool
              definition:  memp_memory_FRAG_PBUF_base
              definition:  memp_memory_IGMP_GROUP_base
              definition:  memp_memory_NETBUF_base
              definition:  memp_memory_NETCONN_base
              definition:  memp_memory_PBUF_POOL_base
              definition:  memp_memory_PBUF_base
              definition:  memp_memory_REASSDATA_base
              definition:  memp_memory_SYS_TIMEOUT_base
              definition:  memp_memory_TCPIP_MSG_API_base
              definition:  memp_memory_TCPIP_MSG_INPKT_base
              definition:  memp_memory_TCP_PCB_LISTEN_base
              definition:  memp_memory_TCP_PCB_base
              definition:  memp_memory_TCP_SEG_base
              definition:  memp_memory_UDP_PCB_base
              definition:  memp_pools
              reference :  sys_arch_protect
              reference :  sys_arch_unprotect
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/lwipstack/lwip/src/core/lwip_netif.o.
              reference :  __2sprintf
              reference :  _printf_c
              reference :  _printf_d
              reference :  _printf_int_dec
              reference :  _printf_percent
              reference :  _printf_str
              reference :  atoi
              reference :  dhcp_network_changed
              reference :  etharp_cleanup_netif
              reference :  etharp_request
              reference :  ethernet_input
              reference :  igmp_report_groups
              reference :  igmp_start
              reference :  igmp_stop
              reference :  ip4_input
              reference :  ip_addr_any
              reference :  lwip_itoa
              definition:  netif_add
              definition:  netif_add_noaddr
              definition:  netif_check_default
              definition:  netif_default
              definition:  netif_find
              definition:  netif_get_by_index
              definition:  netif_get_name
              definition:  netif_index_to_name
              definition:  netif_init
              definition:  netif_input
              definition:  netif_list
              definition:  netif_name_to_index
              definition:  netif_remove
              definition:  netif_set_addr
              definition:  netif_set_default
              definition:  netif_set_down
              definition:  netif_set_gw
              definition:  netif_set_ipaddr
              definition:  netif_set_link_callback
              definition:  netif_set_link_down
              definition:  netif_set_link_up
              definition:  netif_set_netmask
              definition:  netif_set_status_callback
              definition:  netif_set_up
              reference :  tcp_netif_ip_addr_changed
              reference :  udp_netif_ip_addr_changed
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/lwipstack/lwip/src/core/lwip_pbuf.o.
              reference :  __aeabi_memcpy
              reference :  mem_free
              reference :  mem_malloc
              reference :  mem_trim
              reference :  memp_free
              reference :  memp_malloc
              definition:  pbuf_add_header
              definition:  pbuf_add_header_force
              definition:  pbuf_alloc
              definition:  pbuf_alloc_reference
              definition:  pbuf_alloced_custom
              definition:  pbuf_cat
              definition:  pbuf_chain
              definition:  pbuf_clen
              definition:  pbuf_clone
              definition:  pbuf_coalesce
              definition:  pbuf_copy
              definition:  pbuf_copy_partial
              definition:  pbuf_dechain
              definition:  pbuf_free
              definition:  pbuf_free_header
              definition:  pbuf_free_ooseq_pending
              definition:  pbuf_get_at
              definition:  pbuf_get_contiguous
              definition:  pbuf_header
              definition:  pbuf_header_force
              definition:  pbuf_memcmp
              definition:  pbuf_memfind
              definition:  pbuf_put_at
              definition:  pbuf_realloc
              definition:  pbuf_ref
              definition:  pbuf_remove_header
              definition:  pbuf_skip
              definition:  pbuf_strstr
              definition:  pbuf_take
              definition:  pbuf_take_at
              definition:  pbuf_try_get_at
              reference :  strlen
              reference :  sys_arch_protect
              reference :  sys_arch_unprotect
              reference :  tcp_active_pcbs
              reference :  tcp_free_ooseq
              reference :  tcpip_try_callback
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/lwipstack/lwip/src/core/lwip_raw.o.
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/lwipstack/lwip/src/core/lwip_stats.o.
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/lwipstack/lwip/src/core/lwip_sys.o.
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/lwipstack/lwip/src/core/lwip_tcp.o.
              reference :  __aeabi_memclr4
              reference :  ip4_route
              reference :  ip_addr_any
              reference :  lwip_get_random
              reference :  lwip_hook_tcp_isn
              reference :  memp_free
              reference :  memp_malloc
              reference :  netif_get_by_index
              reference :  pbuf_free
              reference :  pbuf_ref
              definition:  tcp_abandon
              definition:  tcp_abort
              definition:  tcp_accept
              definition:  tcp_active_pcbs
              definition:  tcp_active_pcbs_changed
              definition:  tcp_alloc
              definition:  tcp_arg
              definition:  tcp_bind
              definition:  tcp_bind_netif
              definition:  tcp_bound_pcbs
              definition:  tcp_close
              definition:  tcp_connect
              definition:  tcp_debug_state_str
              definition:  tcp_eff_send_mss_netif
              reference :  tcp_enqueue_flags
              definition:  tcp_err
              definition:  tcp_fasttmr
              definition:  tcp_free
              definition:  tcp_free_ooseq
              definition:  tcp_init
              reference :  tcp_input_pcb
              reference :  tcp_keepalive
              definition:  tcp_listen_pcbs
              definition:  tcp_listen_with_backlog
              definition:  tcp_listen_with_backlog_and_err
              definition:  tcp_netif_ip_addr_changed
              definition:  tcp_new
              definition:  tcp_new_ip_type
              definition:  tcp_next_iss
              reference :  tcp_output
              definition:  tcp_pcb_lists
              definition:  tcp_pcb_purge
              definition:  tcp_pcb_remove
              definition:  tcp_poll
              definition:  tcp_process_refused_data
              definition:  tcp_recv
              definition:  tcp_recv_null
              definition:  tcp_recved
              reference :  tcp_rexmit_rto_commit
              reference :  tcp_rexmit_rto_prepare
              reference :  tcp_rst
              definition:  tcp_seg_copy
              definition:  tcp_seg_free
              definition:  tcp_segs_free
              reference :  tcp_send_fin
              definition:  tcp_sent
              definition:  tcp_setprio
              definition:  tcp_shutdown
              definition:  tcp_slowtmr
              reference :  tcp_split_unsent_seg
              definition:  tcp_tcp_get_tcp_addrinfo
              definition:  tcp_ticks
              reference :  tcp_timer_needed
              definition:  tcp_tmr
              reference :  tcp_trigger_input_pcb_close
              definition:  tcp_tw_pcbs
              definition:  tcp_txnow
              definition:  tcp_update_rcv_ann_wnd
              reference :  tcp_zero_window_probe
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/lwipstack/lwip/src/core/lwip_tcp_in.o.
              reference :  ip4_addr_isbroadcast_u32
              reference :  ip4_route
              reference :  ip_chksum_pseudo
              reference :  ip_data
              reference :  lwip_htonl
              reference :  lwip_htons
              reference :  netif_get_by_index
              reference :  pbuf_cat
              reference :  pbuf_clen
              reference :  pbuf_free
              reference :  pbuf_realloc
              reference :  pbuf_remove_header
              reference :  tcp_abandon
              reference :  tcp_abort
              reference :  tcp_active_pcbs
              reference :  tcp_active_pcbs_changed
              reference :  tcp_alloc
              reference :  tcp_eff_send_mss_netif
              reference :  tcp_enqueue_flags
              reference :  tcp_free
              definition:  tcp_input
              definition:  tcp_input_pcb
              reference :  tcp_listen_pcbs
              reference :  tcp_next_iss
              reference :  tcp_output
              reference :  tcp_pcb_purge
              reference :  tcp_pcb_remove
              reference :  tcp_process_refused_data
              reference :  tcp_recv_null
              reference :  tcp_rexmit
              reference :  tcp_rexmit_fast
              reference :  tcp_rexmit_rto
              reference :  tcp_rst
              reference :  tcp_seg_copy
              reference :  tcp_seg_free
              reference :  tcp_segs_free
              reference :  tcp_send_empty_ack
              reference :  tcp_ticks
              reference :  tcp_timer_needed
              definition:  tcp_trigger_input_pcb_close
              reference :  tcp_tw_pcbs
              reference :  tcp_update_rcv_ann_wnd
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/lwipstack/lwip/src/core/lwip_tcp_out.o.
              reference :  __aeabi_memcpy
              reference :  ip4_output_if
              reference :  ip4_route
              reference :  ip_chksum_pseudo
              reference :  lwip_htonl
              reference :  lwip_htons
              reference :  memp_malloc
              reference :  netif_get_by_index
              reference :  pbuf_add_header
              reference :  pbuf_alloc
              reference :  pbuf_cat
              reference :  pbuf_clen
              reference :  pbuf_copy_partial
              reference :  pbuf_free
              reference :  pbuf_realloc
              reference :  tcp_eff_send_mss_netif
              definition:  tcp_enqueue_flags
              reference :  tcp_input_pcb
              definition:  tcp_keepalive
              definition:  tcp_output
              definition:  tcp_rexmit
              definition:  tcp_rexmit_fast
              definition:  tcp_rexmit_rto
              definition:  tcp_rexmit_rto_commit
              definition:  tcp_rexmit_rto_prepare
              definition:  tcp_rst
              reference :  tcp_seg_free
              reference :  tcp_segs_free
              definition:  tcp_send_empty_ack
              definition:  tcp_send_fin
              definition:  tcp_split_unsent_seg
              reference :  tcp_ticks
              definition:  tcp_write
              definition:  tcp_zero_window_probe
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/lwipstack/lwip/src/core/lwip_timeouts.o.
              reference :  dhcp_coarse_tmr
              reference :  dhcp_fine_tmr
              reference :  dns_tmr
              reference :  etharp_tmr
              reference :  igmp_tmr
              reference :  ip_reass_tmr
              definition:  lwip_cyclic_timers
              definition:  lwip_num_cyclic_timers
              reference :  memp_free
              reference :  memp_malloc
              definition:  sys_check_timeouts
              reference :  sys_now
              definition:  sys_restart_timeouts
              definition:  sys_timeout
              definition:  sys_timeouts_init
              definition:  sys_timeouts_sleeptime
              definition:  sys_untimeout
              reference :  tcp_active_pcbs
              definition:  tcp_timer_needed
              reference :  tcp_tmr
              reference :  tcp_tw_pcbs
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/lwipstack/lwip/src/core/lwip_udp.o.
              reference :  __aeabi_memclr4
              reference :  icmp_dest_unreach
              reference :  ip4_addr_isbroadcast_u32
              reference :  ip4_output_if_src
              reference :  ip4_route
              reference :  ip_addr_any
              reference :  ip_addr_broadcast
              reference :  ip_chksum_pseudo
              reference :  ip_data
              reference :  lwip_get_random
              reference :  lwip_htons
              reference :  memp_free
              reference :  memp_malloc
              reference :  netif_get_by_index
              reference :  pbuf_add_header
              reference :  pbuf_alloc
              reference :  pbuf_chain
              reference :  pbuf_free
              reference :  pbuf_header_force
              reference :  pbuf_remove_header
              definition:  udp_bind
              definition:  udp_bind_netif
              definition:  udp_connect
              definition:  udp_disconnect
              definition:  udp_init
              definition:  udp_input
              definition:  udp_netif_ip_addr_changed
              definition:  udp_new
              definition:  udp_new_ip_type
              definition:  udp_pcbs
              definition:  udp_recv
              definition:  udp_remove
              definition:  udp_send
              definition:  udp_sendto
              definition:  udp_sendto_if
              definition:  udp_sendto_if_src
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/lwipstack/lwip/src/netif/lwip_bridgeif.o.
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/lwipstack/lwip/src/netif/lwip_bridgeif_fdb.o.
              definition:  bridgeif_fdb_get_dst_ports
              definition:  bridgeif_fdb_init
              definition:  bridgeif_fdb_update_src
              reference :  mem_calloc
              reference :  memcmp
              reference :  sys_timeout
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/lwipstack/lwip/src/netif/lwip_ethernet.o.
              reference :  etharp_input
              definition:  ethbroadcast
              definition:  ethernet_input
              definition:  ethernet_output
              definition:  ethzero
              reference :  ip4_input
              reference :  lwip_htons
              reference :  memcmp
              reference :  pbuf_add_header
              reference :  pbuf_free
              reference :  pbuf_remove_header
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/lwipstack/lwip/src/netif/lwip_lowpan6.o.
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/lwipstack/lwip/src/netif/lwip_lowpan6_ble.o.
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/lwipstack/lwip/src/netif/lwip_lowpan6_common.o.
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/lwipstack/lwip/src/netif/lwip_zepif.o.
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/lwipstack/source/LWIPInterface.o.
              reference :  NetworkStack::getaddrinfo(const char*, SocketAddress*, SocketAddress**, const char*)
              reference :  NetworkStack::getstackopt(int, int, void*, unsigned*)
              reference :  NetworkStack::setstackopt(int, int, const void*, unsigned)
              reference :  NetworkStack::gethostbyname(const char*, SocketAddress*, nsapi_version, const char*)
              reference :  NetworkStack::getaddrinfo_async(const char*, SocketAddress*, mbed::Callback<void(int, SocketAddress*)>, const char*)
              reference :  NetworkStack::gethostbyname_async(const char*, mbed::Callback<void(int, SocketAddress*)>, nsapi_version, const char*)
              reference :  NetworkStack::gethostbyname_async_cancel(int)
              reference :  NetworkStack::get_ipv6_link_local_address(SocketAddress*)
              reference :  SocketAddress::set_ip_address(const char*)
              weak defn :  OnboardNetworkStack::onboardNetworkStack()
              weak defn :  OnboardNetworkStack::Interface::set_ip_address(const char*, const char*, const char*, unsigned char)
              weak defn :  OnboardNetworkStack::Interface::get_interface_name(char*)
              weak defn :  OnboardNetworkStack::Interface::get_ipv6_link_local_address(SocketAddress*)
              weak defn :  OnboardNetworkStack::Interface::Interface__sub_object()
              reference :  LWIP::getsockopt(void*, int, int, void*, unsigned*)
              reference :  LWIP::setsockopt(void*, int, int, const void*, unsigned)
              reference :  LWIP::get_ip_addr(bool, const netif*)
              reference :  LWIP::socket_bind(void*, const SocketAddress&)
              reference :  LWIP::socket_open(void**, nsapi_protocol)
              reference :  LWIP::socket_recv(void*, void*, unsigned)
              reference :  LWIP::socket_send(void*, const void*, unsigned)
              definition:  LWIP::add_dns_addr(netif*, const char*)
              reference :  LWIP::socket_close(void*)
              reference :  LWIP::socket_accept(void*, void**, SocketAddress*)
              reference :  LWIP::socket_attach(void*, void(*)(void*), void*)
              reference :  LWIP::socket_listen(void*, int)
              reference :  LWIP::socket_sendto(void*, const SocketAddress&, const void*, unsigned)
              reference :  LWIP::add_dns_server(const SocketAddress&, const char*)
              reference :  LWIP::get_dns_server(int, SocketAddress*, const char*)
              reference :  LWIP::get_ip_address(SocketAddress*)
              reference :  LWIP::socket_connect(void*, const SocketAddress&)
              reference :  LWIP::socket_recvfrom(void*, SocketAddress*, void*, unsigned)
              definition:  LWIP::add_ppp_interface(PPP&, bool, OnboardNetworkStack::Interface**)
              reference :  LWIP::get_ip_address_if(SocketAddress*, const char*)
              definition:  LWIP::add_l3ip_interface(L3IP&, bool, OnboardNetworkStack::Interface**)
              reference :  LWIP::get_call_in_callback()
              definition:  LWIP::remove_ppp_interface(OnboardNetworkStack::Interface**)
              definition:  LWIP::remove_l3ip_interface(OnboardNetworkStack::Interface**)
              definition:  LWIP::set_default_interface(OnboardNetworkStack::Interface*)
              definition:  LWIP::add_ethernet_interface(EMAC&, bool, OnboardNetworkStack::Interface**)
              definition:  LWIP::remove_ethernet_interface(OnboardNetworkStack::Interface**)
              reference :  LWIP::call_in(int, mbed::Callback<void()>)
              definition:  LWIP::Interface::get_gateway(SocketAddress*)
              definition:  LWIP::Interface::get_netmask(SocketAddress*)
              reference :  LWIP::Interface::emac_if_init(netif*)
              definition:  LWIP::Interface::get_ip_address(SocketAddress*)
              definition:  LWIP::Interface::netif_link_irq(netif*)
              definition:  LWIP::Interface::set_ip_address(const char*, const char*, const char*, unsigned char)
              definition:  LWIP::Interface::get_mac_address(char*, unsigned)
              definition:  LWIP::Interface::delete_interface(OnboardNetworkStack::Interface**)
              definition:  LWIP::Interface::netif_status_irq(netif*)
              definition:  LWIP::Interface::our_if_from_netif(netif*)
              definition:  LWIP::Interface::get_interface_name(char*)
              definition:  LWIP::Interface::get_ipv6_link_local_address(SocketAddress*)
              definition:  LWIP::Interface::list
              definition:  LWIP::Interface::attach(mbed::Callback<void(nsapi_event, int)>)
              definition:  LWIP::Interface::bringup(bool, const char*, const char*, const char*, nsapi_ip_stack, bool)
              definition:  LWIP::Interface::set_dhcp()
              definition:  LWIP::Interface::bringdown()
              definition:  LWIP::Interface::Interface()
              definition:  LWIP::Interface::Interface__sub_object()
              weak defn :  LWIP::~LWIP__deallocating()
              weak defn :  LWIP::~LWIP__sub_object()
              reference :  rtos::EventFlags::~EventFlags()
              reference :  rtos::Mutex::~Mutex()
              definition:  LWIP::Interface::get_connection_status() const
              reference :  std::nothrow
              definition:  vtable for LWIP
              weak defn :  vtable for OnboardNetworkStack::Interface
              definition:  vtable for LWIP::Interface
              reference :  operator delete (void*)
              reference :  operator new(unsigned, const std::nothrow_t&)
              reference :  __2snprintf
              reference :  __2sprintf
              reference :  __aeabi_memclr4
              reference :  __cxa_pure_virtual
              reference :  _printf_c
              reference :  _printf_d
              reference :  _printf_flags
              reference :  _printf_int_dec
              reference :  _printf_longlong_hex
              reference :  _printf_percent
              reference :  _printf_pre_padding
              reference :  _printf_str
              reference :  _printf_widthprec
              reference :  _printf_x
              reference :  dhcp_release
              reference :  dhcp_start
              reference :  dhcp_stop
              reference :  dns_getserver
              reference :  dns_setserver
              reference :  ip4addr_aton
              reference :  ip4addr_ntoa_r
              reference :  lwip_add_random_seed
              reference :  mbed_assert_internal
              reference :  mbed_mac_address
              reference :  netif_add
              reference :  netif_remove
              reference :  netif_set_addr
              reference :  netif_set_default
              reference :  netif_set_down
              reference :  netif_set_link_callback
              reference :  netif_set_status_callback
              reference :  netif_set_up
              reference :  osSemaphoreAcquire
              reference :  osSemaphoreDelete
              reference :  osSemaphoreNew
              reference :  osSemaphoreRelease
              reference :  tcpip_callback
              reference :  tcpip_input
              reference :  mbed::Callback<void(nsapi_event, int)>::operator bool() const
              reference :  mbed::Callback<void(nsapi_event, int)>::operator ()(nsapi_event, int) const
              reference :  mbed::Callback<void(nsapi_event, int)>::Callback__sub_object()
              reference :  NetworkStack::~NetworkStack__sub_object()
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/lwipstack/source/LWIPInterfaceEMAC.o.
              definition:  LWIP::Interface::emac_input(void*)
              definition:  LWIP::Interface::emac_if_init(netif*)
              definition:  LWIP::Interface::emac_state_change(bool)
              definition:  LWIP::Interface::emac_igmp_mac_filter(netif*, const ip4_addr*, netif_mac_filter_action)
              definition:  LWIP::Interface::emac_low_level_output(netif*, pbuf*)
              weak defn :  T1 mbed::detail::invoke_r<void, void(LWIP::Interface::*const &)(void*), <LWIP::Interface*const &, void*>, (int)0>(T2&&, T3&&...)
              weak defn :  T1 mbed::detail::invoke_r<void, void(LWIP::Interface::*const &)(bool), <LWIP::Interface*const &, bool>, (int)0>(T2&&, T3&&...)
              weak defn :  T1 mbed::detail::invoke_r<void, mbed::Callback<void(void*)>::Callback<LWIP::Interface*, void(LWIP::Interface::*)(void*), (int)0>(T1, T2)::[lambda(void*) (instance 1)]&, <void*>, (int)0>(T2&&, T3&&...)
              weak defn :  T1 mbed::detail::invoke_r<void, mbed::Callback<void(bool)>::Callback<LWIP::Interface*, void(LWIP::Interface::*)(bool), (int)0>(T1, T2)::[lambda(bool) (instance 1)]&, <bool>, (int)0>(T2&&, T3&&...)
              weak defn :  void mbed::Callback<void(void*)>::target_call<mbed::Callback<void(void*)>::Callback<LWIP::Interface*, void(LWIP::Interface::*)(void*), (int)0>(T1, T2)::[lambda(void*) (instance 1)]>(const mbed::detail::CallbackBase*, void*)
              weak defn :  void mbed::Callback<void(void*)>::generate<mbed::Callback<void(void*)>::Callback<LWIP::Interface*, void(LWIP::Interface::*)(void*), (int)0>(T1, T2)::[lambda(void*) (instance 1)], void>(T1&&)
              weak defn :  mbed::Callback<void(void*)>::Callback__sub_object<LWIP::Interface*, void(LWIP::Interface::*)(void*), (int)0>(T1, T2)
              weak defn :  void mbed::Callback<void(bool)>::target_call<mbed::Callback<void(bool)>::Callback<LWIP::Interface*, void(LWIP::Interface::*)(bool), (int)0>(T1, T2)::[lambda(bool) (instance 1)]>(const mbed::detail::CallbackBase*, bool)
              weak defn :  void mbed::Callback<void(bool)>::generate<mbed::Callback<void(bool)>::Callback<LWIP::Interface*, void(LWIP::Interface::*)(bool), (int)0>(T1, T2)::[lambda(bool) (instance 1)], void>(T1&&)
              weak defn :  mbed::Callback<void(bool)>::Callback__sub_object<LWIP::Interface*, void(LWIP::Interface::*)(bool), (int)0>(T1, T2)
              weak defn :  mbed::Callback<T3(T4...)> mbed::callback<LWIP::Interface, LWIP::Interface, void, <void*>>(T2*, T3(T1::*)(T4...))
              weak defn :  mbed::Callback<T3(T4...)> mbed::callback<LWIP::Interface, LWIP::Interface, void, <bool>>(T2*, T3(T1::*)(T4...))
              weak defn :  std::__1::enable_if<((std::is_function<T2>::value&&(!std::is_base_of<T1, std::__1::decay<T3>::type>::value))&&(!is_reference_wrapper<std::__1::decay<T3>::type>::value)), decltype((((*std::forward<T3>(param#2)).*param#1)(std::forward<T4>(param#3)...)))>::type mstd::impl::INVOKE<LWIP::Interface, void(void*), LWIP::Interface*const &, <void*>>(T2T1::*, T3&&, T4&&...)
              weak defn :  std::__1::enable_if<((std::is_function<T2>::value&&(!std::is_base_of<T1, std::__1::decay<T3>::type>::value))&&(!is_reference_wrapper<std::__1::decay<T3>::type>::value)), decltype((((*std::forward<T3>(param#2)).*param#1)(std::forward<T4>(param#3)...)))>::type mstd::impl::INVOKE<LWIP::Interface, void(bool), LWIP::Interface*const &, <bool>>(T2T1::*, T3&&, T4&&...)
              weak defn :  std::__1::enable_if<((!std::is_member_pointer<std::__1::decay<T1>::type>::value)||(std::is_member_object_pointer<std::__1::decay<T1>::type>::value&&(sizeof...(param#2)!=(int)1))), decltype((std::forward<T1>(param#1)(std::forward<T2>(param#2)...)))>::type mstd::impl::INVOKE<mbed::Callback<void(void*)>::Callback<LWIP::Interface*, void(LWIP::Interface::*)(void*), (int)0>(T1, T2)::[lambda(void*) (instance 1)]&, <void*>>(T1&&, T2&&...)
              weak defn :  std::__1::enable_if<((!std::is_member_pointer<std::__1::decay<T1>::type>::value)||(std::is_member_object_pointer<std::__1::decay<T1>::type>::value&&(sizeof...(param#2)!=(int)1))), decltype((std::forward<T1>(param#1)(std::forward<T2>(param#2)...)))>::type mstd::impl::INVOKE<mbed::Callback<void(bool)>::Callback<LWIP::Interface*, void(LWIP::Interface::*)(bool), (int)0>(T1, T2)::[lambda(bool) (instance 1)]&, <bool>>(T1&&, T2&&...)
              weak defn :  mstd::invoke_result<T1, <T2...>>::type mstd::invoke<void(LWIP::Interface::*const &)(void*), <LWIP::Interface*const &, void*>>(T1&&, T2&&...)
              weak defn :  mstd::invoke_result<T1, <T2...>>::type mstd::invoke<void(LWIP::Interface::*const &)(bool), <LWIP::Interface*const &, bool>>(T1&&, T2&&...)
              weak defn :  mstd::invoke_result<T1, <T2...>>::type mstd::invoke<mbed::Callback<void(void*)>::Callback<LWIP::Interface*, void(LWIP::Interface::*)(void*), (int)0>(T1, T2)::[lambda(void*) (instance 1)]&, <void*>>(T1&&, T2&&...)
              weak defn :  mstd::invoke_result<T1, <T2...>>::type mstd::invoke<mbed::Callback<void(bool)>::Callback<LWIP::Interface*, void(LWIP::Interface::*)(bool), (int)0>(T1, T2)::[lambda(bool) (instance 1)]&, <bool>>(T1&&, T2&&...)
              weak defn :  mbed::Callback<void(void*)>::Callback<LWIP::Interface*, void(LWIP::Interface::*)(void*), (int)0>(T1, T2)::[lambda(void*) (instance 1)]::operator ()(void*) const
              weak defn :  mbed::Callback<void(bool)>::Callback<LWIP::Interface*, void(LWIP::Interface::*)(bool), (int)0>(T1, T2)::[lambda(bool) (instance 1)]::operator ()(bool) const
              reference :  etharp_output
              reference :  lwip_htonl
              reference :  netif_set_link_down
              reference :  netif_set_link_up
              reference :  pbuf_free
              reference :  pbuf_ref
              reference :  tcpip_callback
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/lwipstack/source/LWIPInterfaceL3IP.o.
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/lwipstack/source/LWIPInterfacePPP.o.
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/lwipstack/source/LWIPMemoryManager.o.
              definition:  LWIPMemoryManager::alloc_heap(unsigned, unsigned)
              definition:  LWIPMemoryManager::alloc_pool(unsigned, unsigned)
              definition:  LWIPMemoryManager::copy_to_buf(void*, const void*, unsigned)
              definition:  LWIPMemoryManager::align_memory(pbuf*, unsigned)
              definition:  LWIPMemoryManager::set_total_len(pbuf*)
              definition:  LWIPMemoryManager::count_total_align(unsigned, unsigned)
              definition:  LWIPMemoryManager::cat(void*, void*)
              definition:  LWIPMemoryManager::copy(void*, const void*)
              definition:  LWIPMemoryManager::free(void*)
              definition:  LWIPMemoryManager::set_len(void*, unsigned)
              definition:  LWIPMemoryManager::copy_from_buf(void*, unsigned, const void*) const
              definition:  LWIPMemoryManager::get_total_len(const void*) const
              definition:  LWIPMemoryManager::get_pool_alloc_unit(unsigned) const
              definition:  LWIPMemoryManager::get_len(const void*) const
              definition:  LWIPMemoryManager::get_ptr(const void*) const
              definition:  LWIPMemoryManager::get_next(const void*) const
              definition:  vtable for LWIPMemoryManager
              reference :  pbuf_alloc
              reference :  pbuf_cat
              reference :  pbuf_copy
              reference :  pbuf_copy_partial
              reference :  pbuf_free
              reference :  pbuf_take
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/lwipstack/source/LWIPStack.o.
              reference :  convert_lwip_addr_to_mbed(nsapi_addr*, const ip4_addr*)
              reference :  convert_mbed_addr_to_lwip(ip4_addr*, const nsapi_addr*)
              reference :  NetworkStack::getsockopt(void*, int, int, void*, unsigned*)
              reference :  NetworkStack::setsockopt(void*, int, int, const void*, unsigned)
              reference :  NetworkStack::getaddrinfo(const char*, SocketAddress*, SocketAddress**, const char*)
              reference :  NetworkStack::getstackopt(int, int, void*, unsigned*)
              reference :  NetworkStack::setstackopt(int, int, const void*, unsigned)
              reference :  NetworkStack::gethostbyname(const char*, SocketAddress*, nsapi_version, const char*)
              reference :  NetworkStack::add_dns_server(const SocketAddress&, const char*)
              reference :  NetworkStack::get_dns_server(int, SocketAddress*, const char*)
              reference :  NetworkStack::get_ip_address(SocketAddress*)
              reference :  NetworkStack::get_ip_address_if(SocketAddress*, const char*)
              reference :  NetworkStack::getaddrinfo_async(const char*, SocketAddress*, mbed::Callback<void(int, SocketAddress*)>, const char*)
              reference :  NetworkStack::gethostbyname_async(const char*, mbed::Callback<void(int, SocketAddress*)>, nsapi_version, const char*)
              reference :  NetworkStack::get_call_in_callback()
              reference :  NetworkStack::gethostbyname_async_cancel(int)
              reference :  NetworkStack::get_ipv6_link_local_address(SocketAddress*)
              reference :  NetworkStack::call_in(int, mbed::Callback<void()>)
              reference :  SocketAddress::set_ip_address(const char*)
              reference :  SocketAddress::set_addr(const nsapi_addr&)
              weak defn :  EMACMemoryManager::EMACMemoryManager__sub_object()
              weak defn :  LWIPMemoryManager::LWIPMemoryManager__sub_object()
              weak defn :  OnboardNetworkStack::add_ppp_interface(PPP&, bool, OnboardNetworkStack::Interface**)
              weak defn :  OnboardNetworkStack::add_l3ip_interface(L3IP&, bool, OnboardNetworkStack::Interface**)
              definition:  OnboardNetworkStack::get_default_instance()
              weak defn :  OnboardNetworkStack::remove_ppp_interface(OnboardNetworkStack::Interface**)
              weak defn :  OnboardNetworkStack::remove_l3ip_interface(OnboardNetworkStack::Interface**)
              weak defn :  OnboardNetworkStack::set_default_interface(OnboardNetworkStack::Interface*)
              weak defn :  OnboardNetworkStack::remove_ethernet_interface(OnboardNetworkStack::Interface**)
              weak defn :  OnboardNetworkStack::OnboardNetworkStack__sub_object()
              weak defn :  OnboardNetworkStack::~OnboardNetworkStack__deallocating()
              reference :  NetStackMemoryManager::copy_to_buf(void*, const void*, unsigned)
              weak defn :  NetStackMemoryManager::NetStackMemoryManager__sub_object()
              reference :  LWIP::arena_init()
              definition:  LWIP::getsockopt(void*, int, int, void*, unsigned*)
              definition:  LWIP::setsockopt(void*, int, int, const void*, unsigned)
              reference :  LWIP::arena_alloc()
              reference :  LWIP::get_ip_addr(bool, const netif*)
              definition:  LWIP::socket_bind(void*, const SocketAddress&)
              definition:  LWIP::socket_open(void**, nsapi_protocol)
              definition:  LWIP::socket_recv(void*, void*, unsigned)
              definition:  LWIP::socket_send(void*, const void*, unsigned)
              definition:  LWIP::get_instance()
              definition:  LWIP::socket_close(void*)
              reference :  LWIP::arena_dealloc(LWIP::mbed_lwip_socket*)
              reference :  LWIP::get_ipv4_addr(const netif*)
              reference :  LWIP::get_ipv6_addr(const netif*)
              reference :  LWIP::is_local_addr(const ip4_addr*)
              weak defn :  LWIP::lwip_callback::lwip_callback__sub_object()
              definition:  LWIP::socket_accept(void*, void**, SocketAddress*)
              definition:  LWIP::socket_attach(void*, void(*)(void*), void*)
              definition:  LWIP::socket_listen(void*, int)
              definition:  LWIP::socket_sendto(void*, const SocketAddress&, const void*, unsigned)
              definition:  LWIP::add_dns_server(const SocketAddress&, const char*)
              definition:  LWIP::get_dns_server(int, SocketAddress*, const char*)
              definition:  LWIP::get_ip_address(SocketAddress*)
              definition:  LWIP::socket_connect(void*, const SocketAddress&)
              definition:  LWIP::tcpip_init_irq(void*)
              definition:  LWIP::socket_callback(netconn*, netconn_evt, unsigned short)
              definition:  LWIP::socket_recvfrom(void*, SocketAddress*, void*, unsigned)
              definition:  LWIP::get_ip_address_if(SocketAddress*, const char*)
              definition:  LWIP::get_call_in_callback()
              definition:  LWIP::find_multicast_member(const LWIP::mbed_lwip_socket*, const nsapi_ip_mreq*)
              definition:  LWIP::tcpip_thread_callback(void*)
              reference :  LWIP::get_ipv6_link_local_addr(const netif*)
              weak defn :  LWIP::next_free_multicast_member(const LWIP::mbed_lwip_socket*, unsigned)
              weak defn :  LWIP::next_registered_multicast_member(const LWIP::mbed_lwip_socket*, unsigned)
              weak defn :  LWIP::set_multicast_member_registry_bit(LWIP::mbed_lwip_socket*, unsigned)
              weak defn :  LWIP::clear_multicast_member_registry_bit(LWIP::mbed_lwip_socket*, unsigned)
              definition:  LWIP::call_in(int, mbed::Callback<void()>)
              reference :  LWIP::err_remap(signed char)
              definition:  LWIP::LWIP()
              definition:  LWIP::LWIP__sub_object()
              weak defn :  T1 mbed::detail::invoke_r<int, int(LWIP::*const &)(int, mbed::Callback<void()>), <LWIP*const &, int, mbed::Callback<void()>>, (int)0>(T2&&, T3&&...)
              weak defn :  T1 mbed::detail::invoke_r<int, mbed::Callback<int(int, mbed::Callback<void()>)>::Callback<LWIP*, int(LWIP::*)(int, mbed::Callback<void()>), (int)0>(T1, T2)::[lambda(int, mbed::Callback<void()>) (instance 1)]&, <int, mbed::Callback<void()>>, (int)0>(T2&&, T3&&...)
              weak defn :  int mbed::Callback<int(int, mbed::Callback<void()>)>::target_call<mbed::Callback<int(int, mbed::Callback<void()>)>::Callback<LWIP*, int(LWIP::*)(int, mbed::Callback<void()>), (int)0>(T1, T2)::[lambda(int, mbed::Callback<void()>) (instance 1)]>(const mbed::detail::CallbackBase*, int, mbed::Callback<void()>)
              weak defn :  void mbed::Callback<int(int, mbed::Callback<void()>)>::generate<mbed::Callback<int(int, mbed::Callback<void()>)>::Callback<LWIP*, int(LWIP::*)(int, mbed::Callback<void()>), (int)0>(T1, T2)::[lambda(int, mbed::Callback<void()>) (instance 1)], void>(T1&&)
              weak defn :  mbed::Callback<int(int, mbed::Callback<void()>)>::Callback__sub_object<LWIP*, int(LWIP::*)(int, mbed::Callback<void()>), (int)0>(T1, T2)
              weak defn :  std::__1::enable_if<((std::is_function<T2>::value&&(!std::is_base_of<T1, std::__1::decay<T3>::type>::value))&&(!is_reference_wrapper<std::__1::decay<T3>::type>::value)), decltype((((*std::forward<T3>(param#2)).*param#1)(std::forward<T4>(param#3)...)))>::type mstd::impl::INVOKE<LWIP, int(int, mbed::Callback<void()>), LWIP*const &, <int, mbed::Callback<void()>>>(T2T1::*, T3&&, T4&&...)
              weak defn :  std::__1::enable_if<((!std::is_member_pointer<std::__1::decay<T1>::type>::value)||(std::is_member_object_pointer<std::__1::decay<T1>::type>::value&&(sizeof...(param#2)!=(int)1))), decltype((std::forward<T1>(param#1)(std::forward<T2>(param#2)...)))>::type mstd::impl::INVOKE<mbed::Callback<int(int, mbed::Callback<void()>)>::Callback<LWIP*, int(LWIP::*)(int, mbed::Callback<void()>), (int)0>(T1, T2)::[lambda(int, mbed::Callback<void()>) (instance 1)]&, <int, mbed::Callback<void()>>>(T1&&, T2&&...)
              weak defn :  mstd::invoke_result<T1, <T2...>>::type mstd::invoke<int(LWIP::*const &)(int, mbed::Callback<void()>), <LWIP*const &, int, mbed::Callback<void()>>>(T1&&, T2&&...)
              weak defn :  mstd::invoke_result<T1, <T2...>>::type mstd::invoke<mbed::Callback<int(int, mbed::Callback<void()>)>::Callback<LWIP*, int(LWIP::*)(int, mbed::Callback<void()>), (int)0>(T1, T2)::[lambda(int, mbed::Callback<void()>) (instance 1)]&, <int, mbed::Callback<void()>>>(T1&&, T2&&...)
              reference :  rtos::EventFlags::set(unsigned)
              reference :  rtos::EventFlags::clear(unsigned)
              reference :  rtos::EventFlags::wait_any(unsigned, unsigned, bool)
              reference :  rtos::EventFlags::EventFlags()
              reference :  rtos::Mutex::lock()
              reference :  rtos::Mutex::unlock()
              reference :  rtos::Mutex::Mutex()
              reference :  rtos::Semaphore::acquire()
              reference :  rtos::Semaphore::release()
              reference :  rtos::Semaphore::Semaphore(int)
              reference :  rtos::Semaphore::~Semaphore()
              reference :  NetStackMemoryManager::copy_from_buf(void*, unsigned, const void*) const
              reference :  std::nothrow
              reference :  vtable for NetworkStack
              weak defn :  vtable for EMACMemoryManager
              reference :  vtable for LWIPMemoryManager
              weak defn :  vtable for OnboardNetworkStack
              reference :  vtable for NetStackMemoryManager
              reference :  vtable for LWIP
              weak defn :  mbed::Callback<int(int, mbed::Callback<void()>)>::Callback<LWIP*, int(LWIP::*)(int, mbed::Callback<void()>), (int)0>(T1, T2)::[lambda(int, mbed::Callback<void()>) (instance 1)]::operator ()(int, mbed::Callback<void()>) const
              reference :  operator delete (void*)
              reference :  operator new(unsigned, const std::nothrow_t&)
              reference :  __aeabi_memcpy
              reference :  __cxa_guard_acquire
              reference :  __cxa_guard_release
              reference :  __cxa_pure_virtual
              reference :  dns_add_interface_server
              reference :  dns_get_interface_server
              reference :  dns_getserver
              reference :  dns_setserver
              reference :  igmp_joingroup
              reference :  igmp_leavegroup
              reference :  ip4addr_ntoa_r
              reference :  lwip_get_random
              reference :  lwip_init_tcp_isn
              reference :  lwip_seed_random
              reference :  malloc
              reference :  mbed_assert_internal
              reference :  memcmp
              reference :  netbuf_delete
              reference :  netbuf_free
              reference :  netbuf_new
              reference :  netbuf_ref
              reference :  netconn_accept
              reference :  netconn_bind
              reference :  netconn_bind_if
              reference :  netconn_connect
              reference :  netconn_delete
              reference :  netconn_getaddr
              reference :  netconn_listen_with_backlog
              reference :  netconn_new_with_proto_and_callback
              reference :  netconn_recv
              reference :  netconn_recv_tcp_pbuf
              reference :  netconn_sendto
              reference :  netconn_shutdown
              reference :  netconn_write_partly
              reference :  netif_find
              reference :  netif_get_by_index
              reference :  netif_name_to_index
              reference :  pbuf_copy_partial
              reference :  pbuf_free
              reference :  sys_tcpip_thread_set
              reference :  sys_timeout
              reference :  tcpip_callback
              reference :  tcpip_init
              reference :  NetworkStack::NetworkStack__sub_object()
              reference :  SocketAddress::get_addr() const
              reference :  mbed::Callback<void()>::operator ()() const
              reference :  mbed::Callback<void()>::Callback__sub_object()
              reference :  SocketAddress::get_port() const
              reference :  SocketAddress::set_port(unsigned short)
              reference :  NetworkStack::~NetworkStack__sub_object()
              reference :  OnboardNetworkStack::onboardNetworkStack()
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/lwipstack/source/lwip_tools.o.
              definition:  convert_lwip_addr_to_mbed(nsapi_addr*, const ip4_addr*)
              definition:  convert_mbed_addr_to_lwip(ip4_addr*, const nsapi_addr*)
              definition:  LWIP::arena_init()
              definition:  LWIP::arena_alloc()
              definition:  LWIP::get_ip_addr(bool, const netif*)
              reference :  LWIP::get_instance()
              definition:  LWIP::arena_dealloc(LWIP::mbed_lwip_socket*)
              definition:  LWIP::get_ipv4_addr(const netif*)
              definition:  LWIP::get_ipv6_addr(const netif*)
              definition:  LWIP::is_local_addr(const ip4_addr*)
              definition:  LWIP::get_ipv6_link_local_addr(const netif*)
              definition:  LWIP::err_remap(signed char)
              reference :  rtos::Mutex::lock()
              reference :  rtos::Mutex::unlock()
              reference :  __aeabi_memclr4
              reference :  free
              reference :  netif_list
              reference :  LWIP::next_registered_multicast_member(const LWIP::mbed_lwip_socket*, unsigned)
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/mbedtls/platform/src/mbed_trng.o.
              weak defn :  T1* core_util_atomic_load<rtos::Mutex>(T1*const *)
              weak defn :  void core_util_atomic_store<rtos::Mutex>(T1**, T1*)
              reference :  rtos::Mutex::lock()
              reference :  rtos::Mutex::unlock()
              reference :  rtos::Mutex::Mutex()
              weak defn :  SingletonPtr<rtos::Mutex>::get() const
              weak defn :  SingletonPtr<rtos::Mutex>::operator ->() const
              reference :  mbed_assert_internal
              definition:  mbedtls_hardware_poll
              definition:  mbedtls_mutex
              reference :  osMutexAcquire
              reference :  osMutexRelease
              reference :  singleton_mutex_id
              reference :  trng_free
              reference :  trng_get_bytes
              reference :  trng_init
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/mbedtls/platform/src/platform_alt.o.
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/mbedtls/platform/src/shared_rng.o.
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/mbedtls/source/aes.o.
              reference :  __2printf
              reference :  __aeabi_memclr4
              reference :  __aeabi_memcpy
              reference :  _printf_d
              reference :  _printf_int_dec
              reference :  _printf_percent
              reference :  _printf_pre_padding
              reference :  _printf_s
              reference :  _printf_str
              reference :  _printf_widthprec
              definition:  mbedtls_aes_crypt_cbc
              definition:  mbedtls_aes_crypt_ctr
              definition:  mbedtls_aes_crypt_ecb
              definition:  mbedtls_aes_decrypt
              definition:  mbedtls_aes_encrypt
              definition:  mbedtls_aes_free
              definition:  mbedtls_aes_init
              definition:  mbedtls_aes_self_test
              definition:  mbedtls_aes_setkey_dec
              definition:  mbedtls_aes_setkey_enc
              definition:  mbedtls_internal_aes_decrypt
              definition:  mbedtls_internal_aes_encrypt
              reference :  mbedtls_platform_zeroize
              reference :  memcmp
              reference :  putchar
              reference :  puts
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/mbedtls/source/aesni.o.
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/mbedtls/source/arc4.o.
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/mbedtls/source/aria.o.
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/mbedtls/source/asn1parse.o.
              reference :  calloc
              reference :  free
              definition:  mbedtls_asn1_find_named_data
              definition:  mbedtls_asn1_free_named_data
              definition:  mbedtls_asn1_free_named_data_list
              definition:  mbedtls_asn1_get_alg
              definition:  mbedtls_asn1_get_alg_null
              definition:  mbedtls_asn1_get_bitstring
              definition:  mbedtls_asn1_get_bitstring_null
              definition:  mbedtls_asn1_get_bool
              definition:  mbedtls_asn1_get_enum
              definition:  mbedtls_asn1_get_int
              definition:  mbedtls_asn1_get_len
              definition:  mbedtls_asn1_get_mpi
              definition:  mbedtls_asn1_get_sequence_of
              definition:  mbedtls_asn1_get_tag
              definition:  mbedtls_asn1_sequence_free
              definition:  mbedtls_asn1_traverse_sequence_of
              reference :  mbedtls_mpi_read_binary
              reference :  mbedtls_platform_zeroize
              reference :  memcmp
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/mbedtls/source/asn1write.o.
              reference :  __aeabi_memcpy
              reference :  calloc
              reference :  free
              definition:  mbedtls_asn1_store_named_data
              definition:  mbedtls_asn1_write_algorithm_identifier
              definition:  mbedtls_asn1_write_bitstring
              definition:  mbedtls_asn1_write_bool
              definition:  mbedtls_asn1_write_enum
              definition:  mbedtls_asn1_write_ia5_string
              definition:  mbedtls_asn1_write_int
              definition:  mbedtls_asn1_write_len
              definition:  mbedtls_asn1_write_mpi
              definition:  mbedtls_asn1_write_named_bitstring
              definition:  mbedtls_asn1_write_null
              definition:  mbedtls_asn1_write_octet_string
              definition:  mbedtls_asn1_write_oid
              definition:  mbedtls_asn1_write_printable_string
              definition:  mbedtls_asn1_write_raw_buffer
              definition:  mbedtls_asn1_write_tag
              definition:  mbedtls_asn1_write_tagged_string
              definition:  mbedtls_asn1_write_utf8_string
              reference :  mbedtls_mpi_size
              reference :  mbedtls_mpi_write_binary
              reference :  memcmp
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/mbedtls/source/base64.o.
              reference :  __2printf
              definition:  mbedtls_base64_decode
              definition:  mbedtls_base64_encode
              definition:  mbedtls_base64_self_test
              reference :  memcmp
              reference :  puts
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/mbedtls/source/bignum.o.
              reference :  __2printf
              reference :  __aeabi_memclr
              reference :  __aeabi_memclr4
              reference :  __aeabi_memcpy
              reference :  __aeabi_memcpy4
              reference :  __aeabi_memmove
              reference :  __aeabi_uldivmod
              reference :  _printf_d
              reference :  _printf_flags
              reference :  _printf_int_dec
              reference :  _printf_longlong_hex
              reference :  _printf_percent
              reference :  _printf_pre_padding
              reference :  _printf_widthprec
              reference :  _printf_x
              reference :  calloc
              reference :  free
              definition:  mbedtls_mpi_add_abs
              definition:  mbedtls_mpi_add_int
              definition:  mbedtls_mpi_add_mpi
              definition:  mbedtls_mpi_bitlen
              definition:  mbedtls_mpi_cmp_abs
              definition:  mbedtls_mpi_cmp_int
              definition:  mbedtls_mpi_cmp_mpi
              definition:  mbedtls_mpi_copy
              definition:  mbedtls_mpi_div_int
              definition:  mbedtls_mpi_div_mpi
              definition:  mbedtls_mpi_exp_mod
              definition:  mbedtls_mpi_fill_random
              definition:  mbedtls_mpi_free
              definition:  mbedtls_mpi_gcd
              definition:  mbedtls_mpi_get_bit
              definition:  mbedtls_mpi_grow
              definition:  mbedtls_mpi_init
              definition:  mbedtls_mpi_inv_mod
              definition:  mbedtls_mpi_lsb
              definition:  mbedtls_mpi_lset
              definition:  mbedtls_mpi_lt_mpi_ct
              definition:  mbedtls_mpi_mod_int
              definition:  mbedtls_mpi_mod_mpi
              definition:  mbedtls_mpi_mul_int
              definition:  mbedtls_mpi_mul_mpi
              definition:  mbedtls_mpi_read_binary
              definition:  mbedtls_mpi_read_binary_le
              definition:  mbedtls_mpi_read_string
              definition:  mbedtls_mpi_safe_cond_assign
              definition:  mbedtls_mpi_safe_cond_swap
              definition:  mbedtls_mpi_self_test
              definition:  mbedtls_mpi_set_bit
              definition:  mbedtls_mpi_shift_l
              definition:  mbedtls_mpi_shift_r
              definition:  mbedtls_mpi_shrink
              definition:  mbedtls_mpi_size
              definition:  mbedtls_mpi_sub_abs
              definition:  mbedtls_mpi_sub_int
              definition:  mbedtls_mpi_sub_mpi
              definition:  mbedtls_mpi_swap
              definition:  mbedtls_mpi_write_binary
              definition:  mbedtls_mpi_write_binary_le
              definition:  mbedtls_mpi_write_string
              reference :  mbedtls_platform_zeroize
              reference :  putchar
              reference :  puts
              reference :  strlen
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/mbedtls/source/blowfish.o.
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/mbedtls/source/camellia.o.
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/mbedtls/source/ccm.o.
              reference :  __2printf
              reference :  __aeabi_memclr
              reference :  __aeabi_memclr4
              reference :  __aeabi_memcpy
              reference :  __aeabi_memcpy4
              reference :  _printf_int_dec
              reference :  _printf_percent
              reference :  _printf_u
              definition:  mbedtls_ccm_auth_decrypt
              definition:  mbedtls_ccm_encrypt_and_tag
              definition:  mbedtls_ccm_free
              definition:  mbedtls_ccm_init
              definition:  mbedtls_ccm_self_test
              definition:  mbedtls_ccm_setkey
              definition:  mbedtls_ccm_star_auth_decrypt
              definition:  mbedtls_ccm_star_encrypt_and_tag
              reference :  mbedtls_cipher_free
              reference :  mbedtls_cipher_info_from_values
              reference :  mbedtls_cipher_setkey
              reference :  mbedtls_cipher_setup
              reference :  mbedtls_cipher_update
              reference :  mbedtls_platform_zeroize
              reference :  memcmp
              reference :  putchar
              reference :  puts
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/mbedtls/source/certs.o.
              definition:  mbedtls_test_ca_crt
              definition:  mbedtls_test_ca_crt_ec
              definition:  mbedtls_test_ca_crt_ec_der
              definition:  mbedtls_test_ca_crt_ec_der_len
              definition:  mbedtls_test_ca_crt_ec_len
              definition:  mbedtls_test_ca_crt_ec_pem
              definition:  mbedtls_test_ca_crt_ec_pem_len
              definition:  mbedtls_test_ca_crt_len
              definition:  mbedtls_test_ca_crt_rsa
              definition:  mbedtls_test_ca_crt_rsa_len
              definition:  mbedtls_test_ca_crt_rsa_sha1
              definition:  mbedtls_test_ca_crt_rsa_sha1_der
              definition:  mbedtls_test_ca_crt_rsa_sha1_der_len
              definition:  mbedtls_test_ca_crt_rsa_sha1_len
              definition:  mbedtls_test_ca_crt_rsa_sha1_pem
              definition:  mbedtls_test_ca_crt_rsa_sha1_pem_len
              definition:  mbedtls_test_ca_crt_rsa_sha256
              definition:  mbedtls_test_ca_crt_rsa_sha256_der
              definition:  mbedtls_test_ca_crt_rsa_sha256_der_len
              definition:  mbedtls_test_ca_crt_rsa_sha256_len
              definition:  mbedtls_test_ca_crt_rsa_sha256_pem
              definition:  mbedtls_test_ca_crt_rsa_sha256_pem_len
              definition:  mbedtls_test_ca_key
              definition:  mbedtls_test_ca_key_ec
              definition:  mbedtls_test_ca_key_ec_der
              definition:  mbedtls_test_ca_key_ec_der_len
              definition:  mbedtls_test_ca_key_ec_len
              definition:  mbedtls_test_ca_key_ec_pem
              definition:  mbedtls_test_ca_key_ec_pem_len
              definition:  mbedtls_test_ca_key_len
              definition:  mbedtls_test_ca_key_rsa
              definition:  mbedtls_test_ca_key_rsa_der
              definition:  mbedtls_test_ca_key_rsa_der_len
              definition:  mbedtls_test_ca_key_rsa_len
              definition:  mbedtls_test_ca_key_rsa_pem
              definition:  mbedtls_test_ca_key_rsa_pem_len
              definition:  mbedtls_test_ca_pwd
              definition:  mbedtls_test_ca_pwd_ec
              definition:  mbedtls_test_ca_pwd_ec_der_len
              definition:  mbedtls_test_ca_pwd_ec_len
              definition:  mbedtls_test_ca_pwd_ec_pem
              definition:  mbedtls_test_ca_pwd_ec_pem_len
              definition:  mbedtls_test_ca_pwd_len
              definition:  mbedtls_test_ca_pwd_rsa
              definition:  mbedtls_test_ca_pwd_rsa_der_len
              definition:  mbedtls_test_ca_pwd_rsa_len
              definition:  mbedtls_test_ca_pwd_rsa_pem
              definition:  mbedtls_test_ca_pwd_rsa_pem_len
              definition:  mbedtls_test_cas
              definition:  mbedtls_test_cas_der
              definition:  mbedtls_test_cas_der_len
              definition:  mbedtls_test_cas_len
              definition:  mbedtls_test_cas_pem
              definition:  mbedtls_test_cas_pem_len
              definition:  mbedtls_test_cli_crt
              definition:  mbedtls_test_cli_crt_ec
              definition:  mbedtls_test_cli_crt_ec_der
              definition:  mbedtls_test_cli_crt_ec_der_len
              definition:  mbedtls_test_cli_crt_ec_len
              definition:  mbedtls_test_cli_crt_ec_pem
              definition:  mbedtls_test_cli_crt_ec_pem_len
              definition:  mbedtls_test_cli_crt_len
              definition:  mbedtls_test_cli_crt_rsa
              definition:  mbedtls_test_cli_crt_rsa_der
              definition:  mbedtls_test_cli_crt_rsa_der_len
              definition:  mbedtls_test_cli_crt_rsa_len
              definition:  mbedtls_test_cli_crt_rsa_pem
              definition:  mbedtls_test_cli_crt_rsa_pem_len
              definition:  mbedtls_test_cli_key
              definition:  mbedtls_test_cli_key_ec
              definition:  mbedtls_test_cli_key_ec_der
              definition:  mbedtls_test_cli_key_ec_der_len
              definition:  mbedtls_test_cli_key_ec_len
              definition:  mbedtls_test_cli_key_ec_pem
              definition:  mbedtls_test_cli_key_ec_pem_len
              definition:  mbedtls_test_cli_key_len
              definition:  mbedtls_test_cli_key_rsa
              definition:  mbedtls_test_cli_key_rsa_der
              definition:  mbedtls_test_cli_key_rsa_der_len
              definition:  mbedtls_test_cli_key_rsa_len
              definition:  mbedtls_test_cli_key_rsa_pem
              definition:  mbedtls_test_cli_key_rsa_pem_len
              definition:  mbedtls_test_cli_pwd
              definition:  mbedtls_test_cli_pwd_ec
              definition:  mbedtls_test_cli_pwd_ec_len
              definition:  mbedtls_test_cli_pwd_ec_pem
              definition:  mbedtls_test_cli_pwd_ec_pem_len
              definition:  mbedtls_test_cli_pwd_len
              definition:  mbedtls_test_cli_pwd_rsa
              definition:  mbedtls_test_cli_pwd_rsa_len
              definition:  mbedtls_test_cli_pwd_rsa_pem
              definition:  mbedtls_test_cli_pwd_rsa_pem_len
              definition:  mbedtls_test_srv_crt
              definition:  mbedtls_test_srv_crt_ec
              definition:  mbedtls_test_srv_crt_ec_der
              definition:  mbedtls_test_srv_crt_ec_der_len
              definition:  mbedtls_test_srv_crt_ec_len
              definition:  mbedtls_test_srv_crt_ec_pem
              definition:  mbedtls_test_srv_crt_ec_pem_len
              definition:  mbedtls_test_srv_crt_len
              definition:  mbedtls_test_srv_crt_rsa
              definition:  mbedtls_test_srv_crt_rsa_len
              definition:  mbedtls_test_srv_crt_rsa_sha1
              definition:  mbedtls_test_srv_crt_rsa_sha1_der
              definition:  mbedtls_test_srv_crt_rsa_sha1_der_len
              definition:  mbedtls_test_srv_crt_rsa_sha1_len
              definition:  mbedtls_test_srv_crt_rsa_sha1_pem
              definition:  mbedtls_test_srv_crt_rsa_sha1_pem_len
              definition:  mbedtls_test_srv_crt_rsa_sha256
              definition:  mbedtls_test_srv_crt_rsa_sha256_der
              definition:  mbedtls_test_srv_crt_rsa_sha256_der_len
              definition:  mbedtls_test_srv_crt_rsa_sha256_len
              definition:  mbedtls_test_srv_crt_rsa_sha256_pem
              definition:  mbedtls_test_srv_crt_rsa_sha256_pem_len
              definition:  mbedtls_test_srv_key
              definition:  mbedtls_test_srv_key_ec
              definition:  mbedtls_test_srv_key_ec_der
              definition:  mbedtls_test_srv_key_ec_der_len
              definition:  mbedtls_test_srv_key_ec_len
              definition:  mbedtls_test_srv_key_ec_pem
              definition:  mbedtls_test_srv_key_ec_pem_len
              definition:  mbedtls_test_srv_key_len
              definition:  mbedtls_test_srv_key_rsa
              definition:  mbedtls_test_srv_key_rsa_der
              definition:  mbedtls_test_srv_key_rsa_der_len
              definition:  mbedtls_test_srv_key_rsa_len
              definition:  mbedtls_test_srv_key_rsa_pem
              definition:  mbedtls_test_srv_key_rsa_pem_len
              definition:  mbedtls_test_srv_pwd
              definition:  mbedtls_test_srv_pwd_ec
              definition:  mbedtls_test_srv_pwd_ec_der_len
              definition:  mbedtls_test_srv_pwd_ec_len
              definition:  mbedtls_test_srv_pwd_ec_pem
              definition:  mbedtls_test_srv_pwd_ec_pem_len
              definition:  mbedtls_test_srv_pwd_len
              definition:  mbedtls_test_srv_pwd_rsa
              definition:  mbedtls_test_srv_pwd_rsa_der_len
              definition:  mbedtls_test_srv_pwd_rsa_len
              definition:  mbedtls_test_srv_pwd_rsa_pem
              definition:  mbedtls_test_srv_pwd_rsa_pem_len
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/mbedtls/source/chacha20.o.
              reference :  __2printf
              reference :  _printf_int_dec
              reference :  _printf_percent
              reference :  _printf_u
              definition:  mbedtls_chacha20_crypt
              definition:  mbedtls_chacha20_free
              definition:  mbedtls_chacha20_init
              definition:  mbedtls_chacha20_self_test
              definition:  mbedtls_chacha20_setkey
              definition:  mbedtls_chacha20_starts
              definition:  mbedtls_chacha20_update
              reference :  mbedtls_platform_zeroize
              reference :  memcmp
              reference :  putchar
              reference :  puts
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/mbedtls/source/chachapoly.o.
              reference :  __2printf
              reference :  __aeabi_memclr4
              reference :  _printf_i
              reference :  _printf_int_dec
              reference :  _printf_percent
              reference :  _printf_u
              reference :  mbedtls_chacha20_free
              reference :  mbedtls_chacha20_init
              reference :  mbedtls_chacha20_setkey
              reference :  mbedtls_chacha20_starts
              reference :  mbedtls_chacha20_update
              definition:  mbedtls_chachapoly_auth_decrypt
              definition:  mbedtls_chachapoly_encrypt_and_tag
              definition:  mbedtls_chachapoly_finish
              definition:  mbedtls_chachapoly_free
              definition:  mbedtls_chachapoly_init
              definition:  mbedtls_chachapoly_self_test
              definition:  mbedtls_chachapoly_setkey
              definition:  mbedtls_chachapoly_starts
              definition:  mbedtls_chachapoly_update
              definition:  mbedtls_chachapoly_update_aad
              reference :  mbedtls_platform_zeroize
              reference :  mbedtls_poly1305_finish
              reference :  mbedtls_poly1305_free
              reference :  mbedtls_poly1305_init
              reference :  mbedtls_poly1305_starts
              reference :  mbedtls_poly1305_update
              reference :  memcmp
              reference :  putchar
              reference :  puts
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/mbedtls/source/cipher.o.
              reference :  __aeabi_memclr4
              reference :  __aeabi_memcpy
              reference :  free
              reference :  mbedtls_ccm_auth_decrypt
              reference :  mbedtls_ccm_encrypt_and_tag
              reference :  mbedtls_chacha20_starts
              reference :  mbedtls_chachapoly_auth_decrypt
              reference :  mbedtls_chachapoly_encrypt_and_tag
              reference :  mbedtls_chachapoly_finish
              reference :  mbedtls_chachapoly_starts
              reference :  mbedtls_chachapoly_update
              reference :  mbedtls_chachapoly_update_aad
              definition:  mbedtls_cipher_auth_decrypt
              definition:  mbedtls_cipher_auth_encrypt
              definition:  mbedtls_cipher_check_tag
              definition:  mbedtls_cipher_crypt
              reference :  mbedtls_cipher_definitions
              definition:  mbedtls_cipher_finish
              definition:  mbedtls_cipher_free
              definition:  mbedtls_cipher_info_from_string
              definition:  mbedtls_cipher_info_from_type
              definition:  mbedtls_cipher_info_from_values
              definition:  mbedtls_cipher_init
              definition:  mbedtls_cipher_list
              definition:  mbedtls_cipher_reset
              definition:  mbedtls_cipher_set_iv
              definition:  mbedtls_cipher_set_padding_mode
              definition:  mbedtls_cipher_setkey
              definition:  mbedtls_cipher_setup
              reference :  mbedtls_cipher_supported
              definition:  mbedtls_cipher_update
              definition:  mbedtls_cipher_update_ad
              definition:  mbedtls_cipher_write_tag
              reference :  mbedtls_gcm_auth_decrypt
              reference :  mbedtls_gcm_crypt_and_tag
              reference :  mbedtls_gcm_finish
              reference :  mbedtls_gcm_starts
              reference :  mbedtls_gcm_update
              reference :  mbedtls_platform_zeroize
              reference :  strcmp
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/mbedtls/source/cipher_wrap.o.
              reference :  calloc
              reference :  free
              reference :  mbedtls_aes_crypt_cbc
              reference :  mbedtls_aes_crypt_ctr
              reference :  mbedtls_aes_crypt_ecb
              reference :  mbedtls_aes_free
              reference :  mbedtls_aes_init
              reference :  mbedtls_aes_setkey_dec
              reference :  mbedtls_aes_setkey_enc
              reference :  mbedtls_ccm_free
              reference :  mbedtls_ccm_init
              reference :  mbedtls_ccm_setkey
              reference :  mbedtls_chacha20_free
              reference :  mbedtls_chacha20_init
              reference :  mbedtls_chacha20_setkey
              reference :  mbedtls_chacha20_update
              reference :  mbedtls_chachapoly_free
              reference :  mbedtls_chachapoly_init
              reference :  mbedtls_chachapoly_setkey
              definition:  mbedtls_cipher_definitions
              definition:  mbedtls_cipher_supported
              reference :  mbedtls_gcm_free
              reference :  mbedtls_gcm_init
              reference :  mbedtls_gcm_setkey
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/mbedtls/source/cmac.o.
              reference :  __2printf
              reference :  __aeabi_memcpy
              reference :  _printf_int_dec
              reference :  _printf_percent
              reference :  _printf_s
              reference :  _printf_str
              reference :  _printf_u
              reference :  calloc
              definition:  mbedtls_aes_cmac_prf_128
              definition:  mbedtls_cipher_cmac
              definition:  mbedtls_cipher_cmac_finish
              definition:  mbedtls_cipher_cmac_reset
              definition:  mbedtls_cipher_cmac_starts
              definition:  mbedtls_cipher_cmac_update
              reference :  mbedtls_cipher_free
              reference :  mbedtls_cipher_info_from_type
              reference :  mbedtls_cipher_init
              reference :  mbedtls_cipher_setkey
              reference :  mbedtls_cipher_setup
              reference :  mbedtls_cipher_update
              definition:  mbedtls_cmac_self_test
              reference :  mbedtls_platform_zeroize
              reference :  memcmp
              reference :  putchar
              reference :  puts
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/mbedtls/source/ctr_drbg.o.
              reference :  __2printf
              reference :  __aeabi_memclr4
              reference :  __aeabi_memcpy
              reference :  mbedtls_aes_crypt_ecb
              reference :  mbedtls_aes_free
              reference :  mbedtls_aes_init
              reference :  mbedtls_aes_setkey_enc
              definition:  mbedtls_ctr_drbg_free
              definition:  mbedtls_ctr_drbg_init
              definition:  mbedtls_ctr_drbg_random
              definition:  mbedtls_ctr_drbg_random_with_add
              definition:  mbedtls_ctr_drbg_reseed
              definition:  mbedtls_ctr_drbg_seed
              definition:  mbedtls_ctr_drbg_self_test
              definition:  mbedtls_ctr_drbg_set_entropy_len
              definition:  mbedtls_ctr_drbg_set_nonce_len
              definition:  mbedtls_ctr_drbg_set_prediction_resistance
              definition:  mbedtls_ctr_drbg_set_reseed_interval
              definition:  mbedtls_ctr_drbg_update
              definition:  mbedtls_ctr_drbg_update_ret
              reference :  mbedtls_platform_zeroize
              reference :  memcmp
              reference :  putchar
              reference :  puts
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/mbedtls/source/debug.o.
              reference :  __2snprintf
              reference :  __aeabi_memclr4
              reference :  __aeabi_memcpy
              reference :  _printf_d
              reference :  _printf_flags
              reference :  _printf_int_dec
              reference :  _printf_longlong_hex
              reference :  _printf_percent
              reference :  _printf_pre_padding
              reference :  _printf_return_value
              reference :  _printf_s
              reference :  _printf_str
              reference :  _printf_u
              reference :  _printf_widthprec
              reference :  _printf_x
              definition:  mbedtls_debug_print_buf
              definition:  mbedtls_debug_print_crt
              definition:  mbedtls_debug_print_ecp
              definition:  mbedtls_debug_print_mpi
              definition:  mbedtls_debug_print_msg
              definition:  mbedtls_debug_print_ret
              definition:  mbedtls_debug_printf_ecdh
              definition:  mbedtls_debug_set_threshold
              reference :  mbedtls_pk_debug
              reference :  mbedtls_x509_crt_info
              reference :  vsnprintf
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/mbedtls/source/des.o.
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/mbedtls/source/dhm.o.
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/mbedtls/source/ecdh.o.
              definition:  mbedtls_ecdh_calc_secret
              definition:  mbedtls_ecdh_can_do
              definition:  mbedtls_ecdh_compute_shared
              definition:  mbedtls_ecdh_free
              definition:  mbedtls_ecdh_gen_public
              definition:  mbedtls_ecdh_get_params
              definition:  mbedtls_ecdh_init
              definition:  mbedtls_ecdh_make_params
              definition:  mbedtls_ecdh_make_public
              definition:  mbedtls_ecdh_read_params
              definition:  mbedtls_ecdh_read_public
              definition:  mbedtls_ecdh_setup
              reference :  mbedtls_ecp_copy
              reference :  mbedtls_ecp_gen_privkey
              reference :  mbedtls_ecp_get_type
              reference :  mbedtls_ecp_group_free
              reference :  mbedtls_ecp_group_init
              reference :  mbedtls_ecp_group_load
              reference :  mbedtls_ecp_is_zero
              reference :  mbedtls_ecp_mul_restartable
              reference :  mbedtls_ecp_point_free
              reference :  mbedtls_ecp_point_init
              reference :  mbedtls_ecp_tls_read_group_id
              reference :  mbedtls_ecp_tls_read_point
              reference :  mbedtls_ecp_tls_write_group
              reference :  mbedtls_ecp_tls_write_point
              reference :  mbedtls_mpi_copy
              reference :  mbedtls_mpi_free
              reference :  mbedtls_mpi_init
              reference :  mbedtls_mpi_size
              reference :  mbedtls_mpi_write_binary
              reference :  mbedtls_mpi_write_binary_le
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/mbedtls/source/ecdsa.o.
              reference :  __aeabi_memcpy
              reference :  mbedtls_asn1_get_mpi
              reference :  mbedtls_asn1_get_tag
              reference :  mbedtls_asn1_write_len
              reference :  mbedtls_asn1_write_mpi
              reference :  mbedtls_asn1_write_tag
              definition:  mbedtls_ecdsa_can_do
              definition:  mbedtls_ecdsa_free
              definition:  mbedtls_ecdsa_from_keypair
              definition:  mbedtls_ecdsa_genkey
              definition:  mbedtls_ecdsa_init
              definition:  mbedtls_ecdsa_read_signature
              definition:  mbedtls_ecdsa_read_signature_restartable
              definition:  mbedtls_ecdsa_sign
              definition:  mbedtls_ecdsa_sign_det
              definition:  mbedtls_ecdsa_sign_det_ext
              definition:  mbedtls_ecdsa_verify
              definition:  mbedtls_ecdsa_write_signature
              definition:  mbedtls_ecdsa_write_signature_det
              definition:  mbedtls_ecdsa_write_signature_restartable
              reference :  mbedtls_ecp_copy
              reference :  mbedtls_ecp_gen_keypair
              reference :  mbedtls_ecp_gen_privkey
              reference :  mbedtls_ecp_group_copy
              reference :  mbedtls_ecp_group_load
              reference :  mbedtls_ecp_is_zero
              reference :  mbedtls_ecp_keypair_free
              reference :  mbedtls_ecp_keypair_init
              reference :  mbedtls_ecp_mul_restartable
              reference :  mbedtls_ecp_muladd_restartable
              reference :  mbedtls_ecp_point_free
              reference :  mbedtls_ecp_point_init
              reference :  mbedtls_hmac_drbg_free
              reference :  mbedtls_hmac_drbg_init
              reference :  mbedtls_hmac_drbg_random
              reference :  mbedtls_hmac_drbg_seed_buf
              reference :  mbedtls_hmac_drbg_update_ret
              reference :  mbedtls_md_info_from_type
              reference :  mbedtls_mpi_add_mpi
              reference :  mbedtls_mpi_cmp_int
              reference :  mbedtls_mpi_cmp_mpi
              reference :  mbedtls_mpi_copy
              reference :  mbedtls_mpi_free
              reference :  mbedtls_mpi_init
              reference :  mbedtls_mpi_inv_mod
              reference :  mbedtls_mpi_mod_mpi
              reference :  mbedtls_mpi_mul_mpi
              reference :  mbedtls_mpi_read_binary
              reference :  mbedtls_mpi_shift_r
              reference :  mbedtls_mpi_sub_mpi
              reference :  mbedtls_mpi_write_binary
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/mbedtls/source/ecjpake.o.
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/mbedtls/source/ecp.o.
              reference :  __2printf
              reference :  __aeabi_memclr
              reference :  __aeabi_memclr4
              reference :  _printf_flags
              reference :  _printf_int_dec
              reference :  _printf_longlong_hex
              reference :  _printf_percent
              reference :  _printf_pre_padding
              reference :  _printf_u
              reference :  _printf_widthprec
              reference :  _printf_x
              reference :  calloc
              reference :  free
              definition:  mbedtls_ecp_check_privkey
              definition:  mbedtls_ecp_check_pub_priv
              definition:  mbedtls_ecp_check_pubkey
              definition:  mbedtls_ecp_copy
              definition:  mbedtls_ecp_curve_info_from_grp_id
              definition:  mbedtls_ecp_curve_info_from_name
              definition:  mbedtls_ecp_curve_info_from_tls_id
              definition:  mbedtls_ecp_curve_list
              definition:  mbedtls_ecp_gen_key
              definition:  mbedtls_ecp_gen_keypair
              definition:  mbedtls_ecp_gen_keypair_base
              definition:  mbedtls_ecp_gen_privkey
              definition:  mbedtls_ecp_get_type
              definition:  mbedtls_ecp_group_copy
              definition:  mbedtls_ecp_group_free
              definition:  mbedtls_ecp_group_init
              reference :  mbedtls_ecp_group_load
              definition:  mbedtls_ecp_grp_id_list
              definition:  mbedtls_ecp_is_zero
              definition:  mbedtls_ecp_keypair_free
              definition:  mbedtls_ecp_keypair_init
              definition:  mbedtls_ecp_mul
              definition:  mbedtls_ecp_mul_restartable
              definition:  mbedtls_ecp_muladd
              definition:  mbedtls_ecp_muladd_restartable
              definition:  mbedtls_ecp_point_cmp
              definition:  mbedtls_ecp_point_free
              definition:  mbedtls_ecp_point_init
              definition:  mbedtls_ecp_point_read_binary
              definition:  mbedtls_ecp_point_read_string
              definition:  mbedtls_ecp_point_write_binary
              definition:  mbedtls_ecp_read_key
              definition:  mbedtls_ecp_self_test
              definition:  mbedtls_ecp_set_zero
              definition:  mbedtls_ecp_tls_read_group
              definition:  mbedtls_ecp_tls_read_group_id
              definition:  mbedtls_ecp_tls_read_point
              definition:  mbedtls_ecp_tls_write_group
              definition:  mbedtls_ecp_tls_write_point
              reference :  mbedtls_mpi_add_mpi
              reference :  mbedtls_mpi_bitlen
              reference :  mbedtls_mpi_cmp_int
              reference :  mbedtls_mpi_cmp_mpi
              reference :  mbedtls_mpi_copy
              reference :  mbedtls_mpi_fill_random
              reference :  mbedtls_mpi_free
              reference :  mbedtls_mpi_get_bit
              reference :  mbedtls_mpi_init
              reference :  mbedtls_mpi_inv_mod
              reference :  mbedtls_mpi_lset
              reference :  mbedtls_mpi_lt_mpi_ct
              reference :  mbedtls_mpi_mod_mpi
              reference :  mbedtls_mpi_mul_int
              reference :  mbedtls_mpi_mul_mpi
              reference :  mbedtls_mpi_read_binary
              reference :  mbedtls_mpi_read_binary_le
              reference :  mbedtls_mpi_read_string
              reference :  mbedtls_mpi_safe_cond_assign
              reference :  mbedtls_mpi_safe_cond_swap
              reference :  mbedtls_mpi_set_bit
              reference :  mbedtls_mpi_shift_l
              reference :  mbedtls_mpi_shift_r
              reference :  mbedtls_mpi_shrink
              reference :  mbedtls_mpi_size
              reference :  mbedtls_mpi_sub_abs
              reference :  mbedtls_mpi_sub_int
              reference :  mbedtls_mpi_sub_mpi
              reference :  mbedtls_mpi_write_binary
              reference :  mbedtls_mpi_write_binary_le
              reference :  mbedtls_platform_zeroize
              reference :  putchar
              reference :  puts
              reference :  strcmp
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/mbedtls/source/ecp_curves.o.
              reference :  __aeabi_memclr4
              reference :  __aeabi_memcpy4
              reference :  mbedtls_ecp_group_free
              definition:  mbedtls_ecp_group_load
              reference :  mbedtls_mpi_add_abs
              reference :  mbedtls_mpi_add_mpi
              reference :  mbedtls_mpi_bitlen
              reference :  mbedtls_mpi_free
              reference :  mbedtls_mpi_grow
              reference :  mbedtls_mpi_init
              reference :  mbedtls_mpi_lset
              reference :  mbedtls_mpi_mul_int
              reference :  mbedtls_mpi_read_string
              reference :  mbedtls_mpi_set_bit
              reference :  mbedtls_mpi_shift_l
              reference :  mbedtls_mpi_shift_r
              reference :  mbedtls_mpi_sub_abs
              reference :  mbedtls_mpi_sub_int
              reference :  mbedtls_mpi_sub_mpi
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/mbedtls/source/entropy.o.
              reference :  __2printf
              reference :  __aeabi_memclr4
              reference :  __aeabi_memclr8
              reference :  __aeabi_memcpy
              reference :  __aeabi_memset
              definition:  mbedtls_entropy_add_source
              definition:  mbedtls_entropy_free
              definition:  mbedtls_entropy_func
              definition:  mbedtls_entropy_gather
              definition:  mbedtls_entropy_init
              definition:  mbedtls_entropy_self_test
              definition:  mbedtls_entropy_source_self_test
              definition:  mbedtls_entropy_update_manual
              reference :  mbedtls_hardware_poll
              reference :  mbedtls_platform_zeroize
              reference :  mbedtls_sha512_finish_ret
              reference :  mbedtls_sha512_free
              reference :  mbedtls_sha512_init
              reference :  mbedtls_sha512_ret
              reference :  mbedtls_sha512_starts_ret
              reference :  mbedtls_sha512_update_ret
              reference :  memcmp
              reference :  putchar
              reference :  puts
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/mbedtls/source/entropy_poll.o.
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/mbedtls/source/error.o.
              reference :  __2snprintf
              reference :  __aeabi_memclr
              reference :  _printf_flags
              reference :  _printf_longlong_hex
              reference :  _printf_percent
              reference :  _printf_pre_padding
              reference :  _printf_widthprec
              reference :  _printf_x
              definition:  mbedtls_strerror
              reference :  strlen
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/mbedtls/source/gcm.o.
              reference :  __2printf
              reference :  __aeabi_memclr8
              reference :  __aeabi_memcpy
              reference :  _printf_d
              reference :  _printf_int_dec
              reference :  _printf_percent
              reference :  _printf_pre_padding
              reference :  _printf_s
              reference :  _printf_str
              reference :  _printf_widthprec
              reference :  mbedtls_cipher_free
              reference :  mbedtls_cipher_info_from_values
              reference :  mbedtls_cipher_setkey
              reference :  mbedtls_cipher_setup
              reference :  mbedtls_cipher_update
              definition:  mbedtls_gcm_auth_decrypt
              definition:  mbedtls_gcm_crypt_and_tag
              definition:  mbedtls_gcm_finish
              definition:  mbedtls_gcm_free
              definition:  mbedtls_gcm_init
              definition:  mbedtls_gcm_self_test
              definition:  mbedtls_gcm_setkey
              definition:  mbedtls_gcm_starts
              definition:  mbedtls_gcm_update
              reference :  mbedtls_platform_zeroize
              reference :  memcmp
              reference :  putchar
              reference :  puts
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/mbedtls/source/hash_wrappers.o.
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/mbedtls/source/havege.o.
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/mbedtls/source/hkdf.o.
              reference :  __aeabi_memclr4
              reference :  __aeabi_memcpy
              definition:  mbedtls_hkdf
              definition:  mbedtls_hkdf_expand
              definition:  mbedtls_hkdf_extract
              reference :  mbedtls_md_free
              reference :  mbedtls_md_get_size
              reference :  mbedtls_md_hmac
              reference :  mbedtls_md_hmac_finish
              reference :  mbedtls_md_hmac_starts
              reference :  mbedtls_md_hmac_update
              reference :  mbedtls_md_init
              reference :  mbedtls_md_setup
              reference :  mbedtls_platform_zeroize
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/mbedtls/source/hmac_drbg.o.
              reference :  __aeabi_memclr4
              reference :  __aeabi_memcpy
              reference :  __aeabi_memset4
              definition:  mbedtls_hmac_drbg_free
              definition:  mbedtls_hmac_drbg_init
              definition:  mbedtls_hmac_drbg_random
              definition:  mbedtls_hmac_drbg_random_with_add
              definition:  mbedtls_hmac_drbg_reseed
              definition:  mbedtls_hmac_drbg_seed
              definition:  mbedtls_hmac_drbg_seed_buf
              definition:  mbedtls_hmac_drbg_self_test
              definition:  mbedtls_hmac_drbg_set_entropy_len
              definition:  mbedtls_hmac_drbg_set_prediction_resistance
              definition:  mbedtls_hmac_drbg_set_reseed_interval
              definition:  mbedtls_hmac_drbg_update
              definition:  mbedtls_hmac_drbg_update_ret
              reference :  mbedtls_md_free
              reference :  mbedtls_md_get_size
              reference :  mbedtls_md_hmac_finish
              reference :  mbedtls_md_hmac_reset
              reference :  mbedtls_md_hmac_starts
              reference :  mbedtls_md_hmac_update
              reference :  mbedtls_md_setup
              reference :  mbedtls_platform_zeroize
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/mbedtls/source/md.o.
              reference :  __aeabi_memset
              reference :  calloc
              reference :  free
              reference :  mbedtls_internal_sha256_process
              reference :  mbedtls_internal_sha512_process
              definition:  mbedtls_md
              definition:  mbedtls_md_clone
              definition:  mbedtls_md_finish
              definition:  mbedtls_md_free
              definition:  mbedtls_md_get_name
              definition:  mbedtls_md_get_size
              definition:  mbedtls_md_get_type
              definition:  mbedtls_md_hmac
              definition:  mbedtls_md_hmac_finish
              definition:  mbedtls_md_hmac_reset
              definition:  mbedtls_md_hmac_starts
              definition:  mbedtls_md_hmac_update
              definition:  mbedtls_md_info_from_string
              definition:  mbedtls_md_info_from_type
              definition:  mbedtls_md_init
              definition:  mbedtls_md_init_ctx
              definition:  mbedtls_md_list
              definition:  mbedtls_md_process
              definition:  mbedtls_md_setup
              definition:  mbedtls_md_starts
              definition:  mbedtls_md_update
              reference :  mbedtls_platform_zeroize
              definition:  mbedtls_sha224_info
              reference :  mbedtls_sha256_clone
              reference :  mbedtls_sha256_finish_ret
              reference :  mbedtls_sha256_free
              definition:  mbedtls_sha256_info
              reference :  mbedtls_sha256_init
              reference :  mbedtls_sha256_ret
              reference :  mbedtls_sha256_starts_ret
              reference :  mbedtls_sha256_update_ret
              definition:  mbedtls_sha384_info
              reference :  mbedtls_sha512_clone
              reference :  mbedtls_sha512_finish_ret
              reference :  mbedtls_sha512_free
              definition:  mbedtls_sha512_info
              reference :  mbedtls_sha512_init
              reference :  mbedtls_sha512_ret
              reference :  mbedtls_sha512_starts_ret
              reference :  mbedtls_sha512_update_ret
              reference :  strcmp
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/mbedtls/source/md2.o.
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/mbedtls/source/md4.o.
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/mbedtls/source/md5.o.
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/mbedtls/source/memory_buffer_alloc.o.
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/mbedtls/source/net_sockets.o.
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/mbedtls/source/nist_kw.o.
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/mbedtls/source/oid.o.
              reference :  __2snprintf
              reference :  _printf_d
              reference :  _printf_int_dec
              reference :  _printf_percent
              reference :  _printf_return_value
              definition:  mbedtls_oid_get_attr_short_name
              definition:  mbedtls_oid_get_certificate_policies
              definition:  mbedtls_oid_get_cipher_alg
              definition:  mbedtls_oid_get_ec_grp
              definition:  mbedtls_oid_get_extended_key_usage
              definition:  mbedtls_oid_get_md_alg
              definition:  mbedtls_oid_get_md_hmac
              definition:  mbedtls_oid_get_numeric_string
              definition:  mbedtls_oid_get_oid_by_ec_grp
              definition:  mbedtls_oid_get_oid_by_md
              definition:  mbedtls_oid_get_oid_by_pk_alg
              definition:  mbedtls_oid_get_oid_by_sig_alg
              definition:  mbedtls_oid_get_pk_alg
              definition:  mbedtls_oid_get_sig_alg
              definition:  mbedtls_oid_get_sig_alg_desc
              definition:  mbedtls_oid_get_x509_ext_type
              reference :  memcmp
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/mbedtls/source/padlock.o.
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/mbedtls/source/pem.o.
              reference :  calloc
              reference :  free
              reference :  mbedtls_base64_decode
              definition:  mbedtls_pem_free
              definition:  mbedtls_pem_init
              definition:  mbedtls_pem_read_buffer
              reference :  mbedtls_platform_zeroize
              reference :  memcmp
              reference :  strlen
              reference :  strstr
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/mbedtls/source/pk.o.
              reference :  mbedtls_ecdsa_info
              reference :  mbedtls_eckey_info
              reference :  mbedtls_eckeydh_info
              reference :  mbedtls_md_get_size
              reference :  mbedtls_md_info_from_type
              definition:  mbedtls_pk_can_do
              definition:  mbedtls_pk_check_pair
              definition:  mbedtls_pk_debug
              definition:  mbedtls_pk_decrypt
              definition:  mbedtls_pk_encrypt
              definition:  mbedtls_pk_free
              definition:  mbedtls_pk_get_bitlen
              definition:  mbedtls_pk_get_name
              definition:  mbedtls_pk_get_type
              definition:  mbedtls_pk_info_from_type
              definition:  mbedtls_pk_init
              definition:  mbedtls_pk_setup
              definition:  mbedtls_pk_setup_rsa_alt
              definition:  mbedtls_pk_sign
              definition:  mbedtls_pk_sign_restartable
              definition:  mbedtls_pk_verify
              definition:  mbedtls_pk_verify_ext
              definition:  mbedtls_pk_verify_restartable
              reference :  mbedtls_platform_zeroize
              reference :  mbedtls_rsa_alt_info
              reference :  mbedtls_rsa_info
              reference :  mbedtls_rsa_rsassa_pss_verify_ext
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/mbedtls/source/pk_wrap.o.
              reference :  calloc
              reference :  free
              reference :  mbedtls_ecdsa_free
              reference :  mbedtls_ecdsa_from_keypair
              definition:  mbedtls_ecdsa_info
              reference :  mbedtls_ecdsa_init
              reference :  mbedtls_ecdsa_read_signature
              reference :  mbedtls_ecdsa_write_signature
              definition:  mbedtls_eckey_info
              definition:  mbedtls_eckeydh_info
              reference :  mbedtls_ecp_check_pub_priv
              reference :  mbedtls_ecp_keypair_free
              reference :  mbedtls_ecp_keypair_init
              reference :  mbedtls_platform_zeroize
              definition:  mbedtls_rsa_alt_info
              reference :  mbedtls_rsa_check_pub_priv
              reference :  mbedtls_rsa_free
              reference :  mbedtls_rsa_get_len
              definition:  mbedtls_rsa_info
              reference :  mbedtls_rsa_init
              reference :  mbedtls_rsa_pkcs1_decrypt
              reference :  mbedtls_rsa_pkcs1_encrypt
              reference :  mbedtls_rsa_pkcs1_sign
              reference :  mbedtls_rsa_pkcs1_verify
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/mbedtls/source/pkcs11.o.
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/mbedtls/source/pkcs12.o.
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/mbedtls/source/pkcs5.o.
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/mbedtls/source/pkparse.o.
              reference :  mbedtls_asn1_get_alg
              reference :  mbedtls_asn1_get_bitstring_null
              reference :  mbedtls_asn1_get_int
              reference :  mbedtls_asn1_get_mpi
              reference :  mbedtls_asn1_get_tag
              reference :  mbedtls_ecp_check_privkey
              reference :  mbedtls_ecp_check_pubkey
              reference :  mbedtls_ecp_group_load
              reference :  mbedtls_ecp_keypair_free
              reference :  mbedtls_ecp_mul
              reference :  mbedtls_ecp_point_read_binary
              reference :  mbedtls_mpi_cmp_int
              reference :  mbedtls_mpi_copy
              reference :  mbedtls_mpi_free
              reference :  mbedtls_mpi_init
              reference :  mbedtls_mpi_read_binary
              reference :  mbedtls_oid_get_ec_grp
              reference :  mbedtls_oid_get_pk_alg
              reference :  mbedtls_pem_free
              reference :  mbedtls_pem_init
              reference :  mbedtls_pem_read_buffer
              reference :  mbedtls_pk_free
              reference :  mbedtls_pk_info_from_type
              reference :  mbedtls_pk_init
              definition:  mbedtls_pk_parse_key
              definition:  mbedtls_pk_parse_public_key
              definition:  mbedtls_pk_parse_subpubkey
              reference :  mbedtls_pk_setup
              reference :  mbedtls_rsa_check_pubkey
              reference :  mbedtls_rsa_complete
              reference :  mbedtls_rsa_free
              reference :  mbedtls_rsa_import
              reference :  mbedtls_rsa_import_raw
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/mbedtls/source/pkwrite.o.
              reference :  __aeabi_memcpy
              reference :  mbedtls_asn1_write_algorithm_identifier
              reference :  mbedtls_asn1_write_int
              reference :  mbedtls_asn1_write_len
              reference :  mbedtls_asn1_write_mpi
              reference :  mbedtls_asn1_write_octet_string
              reference :  mbedtls_asn1_write_oid
              reference :  mbedtls_asn1_write_tag
              reference :  mbedtls_ecp_point_write_binary
              reference :  mbedtls_mpi_free
              reference :  mbedtls_mpi_init
              reference :  mbedtls_mpi_write_binary
              reference :  mbedtls_oid_get_oid_by_ec_grp
              reference :  mbedtls_oid_get_oid_by_pk_alg
              reference :  mbedtls_pk_get_type
              definition:  mbedtls_pk_write_key_der
              definition:  mbedtls_pk_write_pubkey
              definition:  mbedtls_pk_write_pubkey_der
              reference :  mbedtls_platform_zeroize
              reference :  mbedtls_rsa_export
              reference :  mbedtls_rsa_export_crt
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/mbedtls/source/platform.o.
              definition:  mbedtls_platform_setup
              definition:  mbedtls_platform_teardown
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/mbedtls/source/platform_util.o.
              definition:  mbedtls_platform_zeroize
              reference :  memset
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/mbedtls/source/poly1305.o.
              reference :  __2printf
              reference :  __aeabi_memclr
              reference :  __aeabi_memcpy
              reference :  _printf_int_dec
              reference :  _printf_percent
              reference :  _printf_u
              reference :  mbedtls_platform_zeroize
              definition:  mbedtls_poly1305_finish
              definition:  mbedtls_poly1305_free
              definition:  mbedtls_poly1305_init
              definition:  mbedtls_poly1305_mac
              definition:  mbedtls_poly1305_self_test
              definition:  mbedtls_poly1305_starts
              definition:  mbedtls_poly1305_update
              reference :  memcmp
              reference :  putchar
              reference :  puts
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/mbedtls/source/ripemd160.o.
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/mbedtls/source/rsa.o.
              reference :  __2printf
              reference :  __aeabi_memclr
              reference :  __aeabi_memclr4
              reference :  __aeabi_memcpy
              reference :  __aeabi_memset
              reference :  calloc
              reference :  free
              reference :  mbedtls_md
              reference :  mbedtls_md_finish
              reference :  mbedtls_md_free
              reference :  mbedtls_md_get_size
              reference :  mbedtls_md_info_from_type
              reference :  mbedtls_md_init
              reference :  mbedtls_md_setup
              reference :  mbedtls_md_starts
              reference :  mbedtls_md_update
              reference :  mbedtls_mpi_add_mpi
              reference :  mbedtls_mpi_bitlen
              reference :  mbedtls_mpi_cmp_int
              reference :  mbedtls_mpi_cmp_mpi
              reference :  mbedtls_mpi_copy
              reference :  mbedtls_mpi_exp_mod
              reference :  mbedtls_mpi_fill_random
              reference :  mbedtls_mpi_free
              reference :  mbedtls_mpi_gcd
              reference :  mbedtls_mpi_get_bit
              reference :  mbedtls_mpi_init
              reference :  mbedtls_mpi_inv_mod
              reference :  mbedtls_mpi_mod_mpi
              reference :  mbedtls_mpi_mul_mpi
              reference :  mbedtls_mpi_read_binary
              reference :  mbedtls_mpi_read_string
              reference :  mbedtls_mpi_size
              reference :  mbedtls_mpi_sub_int
              reference :  mbedtls_mpi_sub_mpi
              reference :  mbedtls_mpi_write_binary
              reference :  mbedtls_oid_get_oid_by_md
              reference :  mbedtls_platform_zeroize
              definition:  mbedtls_rsa_check_privkey
              definition:  mbedtls_rsa_check_pub_priv
              definition:  mbedtls_rsa_check_pubkey
              definition:  mbedtls_rsa_complete
              definition:  mbedtls_rsa_copy
              reference :  mbedtls_rsa_deduce_crt
              reference :  mbedtls_rsa_deduce_primes
              reference :  mbedtls_rsa_deduce_private_exponent
              definition:  mbedtls_rsa_export
              definition:  mbedtls_rsa_export_crt
              definition:  mbedtls_rsa_export_raw
              definition:  mbedtls_rsa_free
              definition:  mbedtls_rsa_get_len
              definition:  mbedtls_rsa_import
              definition:  mbedtls_rsa_import_raw
              definition:  mbedtls_rsa_init
              definition:  mbedtls_rsa_pkcs1_decrypt
              definition:  mbedtls_rsa_pkcs1_encrypt
              definition:  mbedtls_rsa_pkcs1_sign
              definition:  mbedtls_rsa_pkcs1_verify
              definition:  mbedtls_rsa_private
              definition:  mbedtls_rsa_public
              definition:  mbedtls_rsa_rsaes_oaep_decrypt
              definition:  mbedtls_rsa_rsaes_oaep_encrypt
              definition:  mbedtls_rsa_rsaes_pkcs1_v15_decrypt
              definition:  mbedtls_rsa_rsaes_pkcs1_v15_encrypt
              definition:  mbedtls_rsa_rsassa_pkcs1_v15_sign
              definition:  mbedtls_rsa_rsassa_pkcs1_v15_verify
              definition:  mbedtls_rsa_rsassa_pss_sign
              definition:  mbedtls_rsa_rsassa_pss_verify
              definition:  mbedtls_rsa_rsassa_pss_verify_ext
              definition:  mbedtls_rsa_self_test
              definition:  mbedtls_rsa_set_padding
              reference :  mbedtls_rsa_validate_crt
              reference :  mbedtls_rsa_validate_params
              reference :  memcmp
              reference :  putchar
              reference :  puts
              reference :  rand
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/mbedtls/source/rsa_internal.o.
              reference :  mbedtls_mpi_add_int
              reference :  mbedtls_mpi_cmp_int
              reference :  mbedtls_mpi_cmp_mpi
              reference :  mbedtls_mpi_div_mpi
              reference :  mbedtls_mpi_exp_mod
              reference :  mbedtls_mpi_free
              reference :  mbedtls_mpi_gcd
              reference :  mbedtls_mpi_init
              reference :  mbedtls_mpi_inv_mod
              reference :  mbedtls_mpi_lsb
              reference :  mbedtls_mpi_lset
              reference :  mbedtls_mpi_mod_mpi
              reference :  mbedtls_mpi_mul_mpi
              reference :  mbedtls_mpi_shift_r
              reference :  mbedtls_mpi_sub_int
              reference :  mbedtls_mpi_sub_mpi
              definition:  mbedtls_rsa_deduce_crt
              definition:  mbedtls_rsa_deduce_primes
              definition:  mbedtls_rsa_deduce_private_exponent
              definition:  mbedtls_rsa_validate_crt
              definition:  mbedtls_rsa_validate_params
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/mbedtls/source/sha1.o.
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/mbedtls/source/sha256.o.
              reference :  __2printf
              reference :  __aeabi_memclr
              reference :  __aeabi_memclr4
              reference :  __aeabi_memcpy
              reference :  __aeabi_memcpy4
              reference :  __aeabi_memset
              reference :  _printf_d
              reference :  _printf_int_dec
              reference :  _printf_percent
              reference :  calloc
              reference :  free
              definition:  mbedtls_internal_sha256_process
              reference :  mbedtls_platform_zeroize
              definition:  mbedtls_sha256
              definition:  mbedtls_sha256_clone
              definition:  mbedtls_sha256_finish
              definition:  mbedtls_sha256_finish_ret
              definition:  mbedtls_sha256_free
              definition:  mbedtls_sha256_init
              definition:  mbedtls_sha256_process
              definition:  mbedtls_sha256_ret
              definition:  mbedtls_sha256_self_test
              definition:  mbedtls_sha256_starts
              definition:  mbedtls_sha256_starts_ret
              definition:  mbedtls_sha256_update
              definition:  mbedtls_sha256_update_ret
              reference :  memcmp
              reference :  putchar
              reference :  puts
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/mbedtls/source/sha512.o.
              reference :  __2printf
              reference :  __aeabi_memclr
              reference :  __aeabi_memclr8
              reference :  __aeabi_memcpy
              reference :  __aeabi_memcpy8
              reference :  __aeabi_memset
              reference :  _printf_d
              reference :  _printf_int_dec
              reference :  _printf_percent
              reference :  calloc
              reference :  free
              definition:  mbedtls_internal_sha512_process
              reference :  mbedtls_platform_zeroize
              definition:  mbedtls_sha512
              definition:  mbedtls_sha512_clone
              definition:  mbedtls_sha512_finish
              definition:  mbedtls_sha512_finish_ret
              definition:  mbedtls_sha512_free
              definition:  mbedtls_sha512_init
              definition:  mbedtls_sha512_process
              definition:  mbedtls_sha512_ret
              definition:  mbedtls_sha512_self_test
              definition:  mbedtls_sha512_starts
              definition:  mbedtls_sha512_starts_ret
              definition:  mbedtls_sha512_update
              definition:  mbedtls_sha512_update_ret
              reference :  memcmp
              reference :  putchar
              reference :  puts
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/mbedtls/source/ssl_cache.o.
              reference :  __aeabi_memcpy
              reference :  calloc
              reference :  free
              definition:  mbedtls_ssl_cache_free
              definition:  mbedtls_ssl_cache_get
              definition:  mbedtls_ssl_cache_init
              definition:  mbedtls_ssl_cache_set
              definition:  mbedtls_ssl_cache_set_max_entries
              definition:  mbedtls_ssl_cache_set_timeout
              reference :  mbedtls_ssl_session_copy
              reference :  mbedtls_ssl_session_free
              reference :  mbedtls_x509_crt_free
              reference :  mbedtls_x509_crt_init
              reference :  mbedtls_x509_crt_parse
              reference :  memcmp
              reference :  time
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/mbedtls/source/ssl_ciphersuites.o.
              definition:  mbedtls_ssl_ciphersuite_from_id
              definition:  mbedtls_ssl_ciphersuite_from_string
              definition:  mbedtls_ssl_ciphersuite_uses_ec
              definition:  mbedtls_ssl_ciphersuite_uses_psk
              definition:  mbedtls_ssl_get_ciphersuite_id
              definition:  mbedtls_ssl_get_ciphersuite_name
              definition:  mbedtls_ssl_get_ciphersuite_sig_alg
              definition:  mbedtls_ssl_get_ciphersuite_sig_pk_alg
              definition:  mbedtls_ssl_list_ciphersuites
              reference :  strcmp
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/mbedtls/source/ssl_cli.o.
              reference :  __aeabi_memcpy
              reference :  calloc
              reference :  free
              reference :  mbedtls_debug_print_buf
              reference :  mbedtls_debug_print_msg
              reference :  mbedtls_debug_print_ret
              reference :  mbedtls_debug_printf_ecdh
              reference :  mbedtls_ecdh_calc_secret
              reference :  mbedtls_ecdh_make_public
              reference :  mbedtls_ecdh_read_params
              reference :  mbedtls_ecp_curve_info_from_grp_id
              reference :  mbedtls_pk_can_do
              reference :  mbedtls_pk_sign_restartable
              reference :  mbedtls_pk_verify_restartable
              reference :  mbedtls_platform_zeroize
              reference :  mbedtls_ssl_check_curve
              reference :  mbedtls_ssl_check_sig_hash
              reference :  mbedtls_ssl_ciphersuite_from_id
              reference :  mbedtls_ssl_ciphersuite_uses_ec
              reference :  mbedtls_ssl_ciphersuite_uses_psk
              reference :  mbedtls_ssl_derive_keys
              reference :  mbedtls_ssl_flight_transmit
              reference :  mbedtls_ssl_flush_output
              reference :  mbedtls_ssl_get_ciphersuite_sig_pk_alg
              reference :  mbedtls_ssl_get_key_exchange_md_tls1_2
              definition:  mbedtls_ssl_handshake_client_step
              reference :  mbedtls_ssl_handshake_wrapup
              reference :  mbedtls_ssl_hash_from_md_alg
              reference :  mbedtls_ssl_md_alg_from_hash
              reference :  mbedtls_ssl_optimize_checksum
              reference :  mbedtls_ssl_parse_certificate
              reference :  mbedtls_ssl_parse_change_cipher_spec
              reference :  mbedtls_ssl_parse_finished
              reference :  mbedtls_ssl_pk_alg_from_sig
              reference :  mbedtls_ssl_psk_derive_premaster
              reference :  mbedtls_ssl_read_record
              reference :  mbedtls_ssl_read_version
              reference :  mbedtls_ssl_recv_flight_completed
              reference :  mbedtls_ssl_reset_checksum
              reference :  mbedtls_ssl_send_alert_message
              reference :  mbedtls_ssl_send_flight_completed
              reference :  mbedtls_ssl_sig_from_pk
              reference :  mbedtls_ssl_write_certificate
              reference :  mbedtls_ssl_write_change_cipher_spec
              reference :  mbedtls_ssl_write_finished
              reference :  mbedtls_ssl_write_handshake_msg
              reference :  mbedtls_ssl_write_version
              reference :  memcmp
              reference :  strlen
              reference :  time
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/mbedtls/source/ssl_cookie.o.
              reference :  __aeabi_memcpy
              reference :  mbedtls_md_free
              reference :  mbedtls_md_hmac_finish
              reference :  mbedtls_md_hmac_reset
              reference :  mbedtls_md_hmac_starts
              reference :  mbedtls_md_hmac_update
              reference :  mbedtls_md_info_from_type
              reference :  mbedtls_md_init
              reference :  mbedtls_md_setup
              reference :  mbedtls_platform_zeroize
              definition:  mbedtls_ssl_cookie_check
              definition:  mbedtls_ssl_cookie_free
              definition:  mbedtls_ssl_cookie_init
              definition:  mbedtls_ssl_cookie_set_timeout
              definition:  mbedtls_ssl_cookie_setup
              definition:  mbedtls_ssl_cookie_write
              reference :  time
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/mbedtls/source/ssl_msg.o.
              reference :  __aeabi_memclr4
              reference :  __aeabi_memcpy
              reference :  __aeabi_memmove
              reference :  __aeabi_memset
              reference :  calloc
              reference :  free
              reference :  mbedtls_cipher_auth_decrypt
              reference :  mbedtls_cipher_auth_encrypt
              reference :  mbedtls_cipher_crypt
              reference :  mbedtls_cipher_free
              reference :  mbedtls_debug_print_buf
              reference :  mbedtls_debug_print_msg
              reference :  mbedtls_debug_print_ret
              reference :  mbedtls_md_free
              reference :  mbedtls_md_get_type
              reference :  mbedtls_md_hmac_finish
              reference :  mbedtls_md_hmac_reset
              reference :  mbedtls_md_hmac_update
              reference :  mbedtls_md_process
              reference :  mbedtls_platform_zeroize
              definition:  mbedtls_ssl_buffering_free
              definition:  mbedtls_ssl_check_pending
              definition:  mbedtls_ssl_check_record
              definition:  mbedtls_ssl_check_timer
              definition:  mbedtls_ssl_close_notify
              definition:  mbedtls_ssl_decrypt_buf
              definition:  mbedtls_ssl_dtls_replay_check
              definition:  mbedtls_ssl_dtls_replay_reset
              definition:  mbedtls_ssl_dtls_replay_update
              definition:  mbedtls_ssl_encrypt_buf
              definition:  mbedtls_ssl_fetch_input
              definition:  mbedtls_ssl_flight_free
              definition:  mbedtls_ssl_flight_transmit
              definition:  mbedtls_ssl_flush_output
              definition:  mbedtls_ssl_get_bytes_avail
              reference :  mbedtls_ssl_get_current_mtu
              reference :  mbedtls_ssl_get_max_out_record_payload
              reference :  mbedtls_ssl_get_output_max_frag_len
              definition:  mbedtls_ssl_get_record_expansion
              definition:  mbedtls_ssl_handle_message_type
              reference :  mbedtls_ssl_handshake
              reference :  mbedtls_ssl_handshake_wrapup_free_hs_transform
              definition:  mbedtls_ssl_parse_change_cipher_spec
              definition:  mbedtls_ssl_prepare_handshake_record
              definition:  mbedtls_ssl_read
              definition:  mbedtls_ssl_read_record
              definition:  mbedtls_ssl_read_version
              definition:  mbedtls_ssl_recv_flight_completed
              reference :  mbedtls_ssl_renegotiate
              definition:  mbedtls_ssl_resend
              reference :  mbedtls_ssl_resend_hello_request
              definition:  mbedtls_ssl_reset_in_out_pointers
              definition:  mbedtls_ssl_send_alert_message
              definition:  mbedtls_ssl_send_fatal_handshake_failure
              definition:  mbedtls_ssl_send_flight_completed
              reference :  mbedtls_ssl_session_reset_int
              definition:  mbedtls_ssl_set_timer
              reference :  mbedtls_ssl_start_renegotiation
              definition:  mbedtls_ssl_transform_free
              definition:  mbedtls_ssl_update_handshake_status
              definition:  mbedtls_ssl_update_in_pointers
              definition:  mbedtls_ssl_update_out_pointers
              definition:  mbedtls_ssl_write
              definition:  mbedtls_ssl_write_change_cipher_spec
              definition:  mbedtls_ssl_write_handshake_msg
              definition:  mbedtls_ssl_write_record
              definition:  mbedtls_ssl_write_version
              reference :  memcmp
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/mbedtls/source/ssl_srv.o.
              reference :  __aeabi_memclr4
              reference :  __aeabi_memcpy
              reference :  __aeabi_memcpy4
              reference :  calloc
              reference :  free
              reference :  mbedtls_cipher_info_from_type
              reference :  mbedtls_debug_print_buf
              reference :  mbedtls_debug_print_crt
              reference :  mbedtls_debug_print_msg
              reference :  mbedtls_debug_print_ret
              reference :  mbedtls_debug_printf_ecdh
              reference :  mbedtls_ecdh_calc_secret
              reference :  mbedtls_ecdh_make_params
              reference :  mbedtls_ecdh_read_public
              reference :  mbedtls_ecdh_setup
              reference :  mbedtls_ecp_curve_info_from_tls_id
              reference :  mbedtls_pk_can_do
              reference :  mbedtls_pk_sign
              reference :  mbedtls_pk_verify
              reference :  mbedtls_platform_zeroize
              reference :  mbedtls_ssl_check_cert_usage
              reference :  mbedtls_ssl_check_sig_hash
              reference :  mbedtls_ssl_ciphersuite_from_id
              reference :  mbedtls_ssl_ciphersuite_uses_ec
              reference :  mbedtls_ssl_ciphersuite_uses_psk
              definition:  mbedtls_ssl_conf_dtls_cookies
              reference :  mbedtls_ssl_derive_keys
              reference :  mbedtls_ssl_dtls_replay_check
              reference :  mbedtls_ssl_dtls_replay_update
              reference :  mbedtls_ssl_fetch_input
              reference :  mbedtls_ssl_flight_transmit
              reference :  mbedtls_ssl_flush_output
              reference :  mbedtls_ssl_get_ciphersuite_name
              reference :  mbedtls_ssl_get_ciphersuite_sig_alg
              reference :  mbedtls_ssl_get_ciphersuite_sig_pk_alg
              reference :  mbedtls_ssl_get_key_exchange_md_tls1_2
              definition:  mbedtls_ssl_handshake_server_step
              reference :  mbedtls_ssl_handshake_wrapup
              reference :  mbedtls_ssl_hash_from_md_alg
              reference :  mbedtls_ssl_md_alg_from_hash
              reference :  mbedtls_ssl_parse_certificate
              reference :  mbedtls_ssl_parse_change_cipher_spec
              reference :  mbedtls_ssl_parse_finished
              reference :  mbedtls_ssl_pk_alg_from_sig
              reference :  mbedtls_ssl_psk_derive_premaster
              reference :  mbedtls_ssl_read_record
              reference :  mbedtls_ssl_read_version
              reference :  mbedtls_ssl_recv_flight_completed
              reference :  mbedtls_ssl_send_alert_message
              reference :  mbedtls_ssl_send_flight_completed
              reference :  mbedtls_ssl_session_free
              reference :  mbedtls_ssl_session_init
              reference :  mbedtls_ssl_set_calc_verify_md
              definition:  mbedtls_ssl_set_client_transport_id
              reference :  mbedtls_ssl_sig_from_pk_alg
              reference :  mbedtls_ssl_sig_hash_set_add
              reference :  mbedtls_ssl_sig_hash_set_const_hash
              reference :  mbedtls_ssl_sig_hash_set_find
              reference :  mbedtls_ssl_update_handshake_status
              reference :  mbedtls_ssl_write_certificate
              reference :  mbedtls_ssl_write_change_cipher_spec
              reference :  mbedtls_ssl_write_finished
              reference :  mbedtls_ssl_write_handshake_msg
              reference :  mbedtls_ssl_write_version
              reference :  memcmp
              reference :  strlen
              reference :  time
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/mbedtls/source/ssl_ticket.o.
              reference :  __aeabi_memclr4
              reference :  mbedtls_cipher_auth_decrypt
              reference :  mbedtls_cipher_auth_encrypt
              reference :  mbedtls_cipher_free
              reference :  mbedtls_cipher_info_from_type
              reference :  mbedtls_cipher_setkey
              reference :  mbedtls_cipher_setup
              reference :  mbedtls_platform_zeroize
              reference :  mbedtls_ssl_session_load
              reference :  mbedtls_ssl_session_save
              definition:  mbedtls_ssl_ticket_free
              definition:  mbedtls_ssl_ticket_init
              definition:  mbedtls_ssl_ticket_parse
              definition:  mbedtls_ssl_ticket_setup
              definition:  mbedtls_ssl_ticket_write
              reference :  time
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/mbedtls/source/ssl_tls.o.
              reference :  __aeabi_memclr
              reference :  __aeabi_memclr4
              reference :  __aeabi_memclr8
              reference :  __aeabi_memcpy
              reference :  __aeabi_memcpy4
              reference :  calloc
              reference :  free
              reference :  mbedtls_cipher_info_from_type
              reference :  mbedtls_cipher_init
              reference :  mbedtls_cipher_set_padding_mode
              reference :  mbedtls_cipher_setkey
              reference :  mbedtls_cipher_setup
              reference :  mbedtls_debug_print_buf
              reference :  mbedtls_debug_print_crt
              reference :  mbedtls_debug_print_msg
              reference :  mbedtls_debug_print_ret
              reference :  mbedtls_debug_printf_ecdh
              reference :  mbedtls_ecdh_calc_secret
              reference :  mbedtls_ecdh_free
              reference :  mbedtls_ecdh_init
              reference :  mbedtls_ecp_grp_id_list
              reference :  mbedtls_md_finish
              reference :  mbedtls_md_free
              reference :  mbedtls_md_get_size
              reference :  mbedtls_md_hmac_finish
              reference :  mbedtls_md_hmac_reset
              reference :  mbedtls_md_hmac_starts
              reference :  mbedtls_md_hmac_update
              reference :  mbedtls_md_info_from_type
              reference :  mbedtls_md_init
              reference :  mbedtls_md_setup
              reference :  mbedtls_md_starts
              reference :  mbedtls_md_update
              reference :  mbedtls_pk_can_do
              reference :  mbedtls_platform_zeroize
              reference :  mbedtls_sha256_clone
              reference :  mbedtls_sha256_finish_ret
              reference :  mbedtls_sha256_free
              reference :  mbedtls_sha256_init
              reference :  mbedtls_sha256_starts_ret
              reference :  mbedtls_sha256_update_ret
              reference :  mbedtls_sha512_clone
              reference :  mbedtls_sha512_finish_ret
              reference :  mbedtls_sha512_free
              reference :  mbedtls_sha512_init
              reference :  mbedtls_sha512_starts_ret
              reference :  mbedtls_sha512_update_ret
              reference :  mbedtls_ssl_buffering_free
              definition:  mbedtls_ssl_check_cert_usage
              definition:  mbedtls_ssl_check_curve
              reference :  mbedtls_ssl_check_pending
              definition:  mbedtls_ssl_check_sig_hash
              reference :  mbedtls_ssl_ciphersuite_from_id
              definition:  mbedtls_ssl_conf_alpn_protocols
              definition:  mbedtls_ssl_conf_authmode
              definition:  mbedtls_ssl_conf_ca_chain
              definition:  mbedtls_ssl_conf_cert_profile
              definition:  mbedtls_ssl_conf_cert_req_ca_list
              definition:  mbedtls_ssl_conf_ciphersuites
              definition:  mbedtls_ssl_conf_ciphersuites_for_version
              definition:  mbedtls_ssl_conf_curves
              definition:  mbedtls_ssl_conf_dbg
              definition:  mbedtls_ssl_conf_dtls_anti_replay
              definition:  mbedtls_ssl_conf_dtls_badmac_limit
              definition:  mbedtls_ssl_conf_encrypt_then_mac
              definition:  mbedtls_ssl_conf_endpoint
              definition:  mbedtls_ssl_conf_export_keys_cb
              definition:  mbedtls_ssl_conf_export_keys_ext_cb
              definition:  mbedtls_ssl_conf_extended_master_secret
              definition:  mbedtls_ssl_conf_handshake_timeout
              definition:  mbedtls_ssl_conf_legacy_renegotiation
              definition:  mbedtls_ssl_conf_max_frag_len
              definition:  mbedtls_ssl_conf_max_version
              definition:  mbedtls_ssl_conf_min_version
              definition:  mbedtls_ssl_conf_own_cert
              definition:  mbedtls_ssl_conf_psk
              definition:  mbedtls_ssl_conf_psk_cb
              definition:  mbedtls_ssl_conf_read_timeout
              definition:  mbedtls_ssl_conf_renegotiation
              definition:  mbedtls_ssl_conf_renegotiation_enforced
              definition:  mbedtls_ssl_conf_renegotiation_period
              definition:  mbedtls_ssl_conf_rng
              definition:  mbedtls_ssl_conf_session_cache
              definition:  mbedtls_ssl_conf_session_tickets
              definition:  mbedtls_ssl_conf_session_tickets_cb
              definition:  mbedtls_ssl_conf_sig_hashes
              definition:  mbedtls_ssl_conf_sni
              definition:  mbedtls_ssl_conf_transport
              definition:  mbedtls_ssl_conf_verify
              definition:  mbedtls_ssl_config_defaults
              definition:  mbedtls_ssl_config_free
              definition:  mbedtls_ssl_config_init
              definition:  mbedtls_ssl_context_load
              definition:  mbedtls_ssl_context_save
              definition:  mbedtls_ssl_derive_keys
              reference :  mbedtls_ssl_dtls_replay_reset
              reference :  mbedtls_ssl_flight_free
              reference :  mbedtls_ssl_flight_transmit
              reference :  mbedtls_ssl_flush_output
              definition:  mbedtls_ssl_free
              definition:  mbedtls_ssl_get_alpn_protocol
              definition:  mbedtls_ssl_get_ciphersuite
              reference :  mbedtls_ssl_get_ciphersuite_name
              definition:  mbedtls_ssl_get_current_mtu
              definition:  mbedtls_ssl_get_input_max_frag_len
              definition:  mbedtls_ssl_get_key_exchange_md_tls1_2
              definition:  mbedtls_ssl_get_max_frag_len
              definition:  mbedtls_ssl_get_max_out_record_payload
              definition:  mbedtls_ssl_get_output_max_frag_len
              definition:  mbedtls_ssl_get_peer_cert
              reference :  mbedtls_ssl_get_record_expansion
              definition:  mbedtls_ssl_get_session
              definition:  mbedtls_ssl_get_session_pointer
              definition:  mbedtls_ssl_get_verify_result
              definition:  mbedtls_ssl_get_version
              definition:  mbedtls_ssl_handshake
              reference :  mbedtls_ssl_handshake_client_step
              definition:  mbedtls_ssl_handshake_free
              reference :  mbedtls_ssl_handshake_server_step
              definition:  mbedtls_ssl_handshake_step
              definition:  mbedtls_ssl_handshake_wrapup
              definition:  mbedtls_ssl_handshake_wrapup_free_hs_transform
              definition:  mbedtls_ssl_hash_from_md_alg
              definition:  mbedtls_ssl_init
              reference :  mbedtls_ssl_list_ciphersuites
              definition:  mbedtls_ssl_md_alg_from_hash
              definition:  mbedtls_ssl_optimize_checksum
              definition:  mbedtls_ssl_parse_certificate
              definition:  mbedtls_ssl_parse_finished
              definition:  mbedtls_ssl_pk_alg_from_sig
              definition:  mbedtls_ssl_psk_derive_premaster
              reference :  mbedtls_ssl_read_record
              reference :  mbedtls_ssl_recv_flight_completed
              definition:  mbedtls_ssl_renegotiate
              definition:  mbedtls_ssl_resend_hello_request
              definition:  mbedtls_ssl_reset_checksum
              reference :  mbedtls_ssl_reset_in_out_pointers
              reference :  mbedtls_ssl_send_alert_message
              reference :  mbedtls_ssl_send_flight_completed
              definition:  mbedtls_ssl_session_copy
              definition:  mbedtls_ssl_session_free
              definition:  mbedtls_ssl_session_init
              definition:  mbedtls_ssl_session_load
              definition:  mbedtls_ssl_session_reset
              definition:  mbedtls_ssl_session_reset_int
              definition:  mbedtls_ssl_session_save
              definition:  mbedtls_ssl_set_bio
              definition:  mbedtls_ssl_set_calc_verify_md
              definition:  mbedtls_ssl_set_datagram_packing
              definition:  mbedtls_ssl_set_hostname
              definition:  mbedtls_ssl_set_hs_authmode
              definition:  mbedtls_ssl_set_hs_ca_chain
              definition:  mbedtls_ssl_set_hs_own_cert
              definition:  mbedtls_ssl_set_hs_psk
              definition:  mbedtls_ssl_set_mtu
              definition:  mbedtls_ssl_set_session
              reference :  mbedtls_ssl_set_timer
              definition:  mbedtls_ssl_set_timer_cb
              definition:  mbedtls_ssl_set_verify
              definition:  mbedtls_ssl_setup
              definition:  mbedtls_ssl_sig_from_pk
              definition:  mbedtls_ssl_sig_from_pk_alg
              definition:  mbedtls_ssl_sig_hash_set_add
              definition:  mbedtls_ssl_sig_hash_set_const_hash
              definition:  mbedtls_ssl_sig_hash_set_find
              definition:  mbedtls_ssl_start_renegotiation
              definition:  mbedtls_ssl_tls_prf
              reference :  mbedtls_ssl_transform_free
              definition:  mbedtls_ssl_transform_init
              reference :  mbedtls_ssl_update_out_pointers
              definition:  mbedtls_ssl_write_certificate
              definition:  mbedtls_ssl_write_finished
              reference :  mbedtls_ssl_write_handshake_msg
              reference :  mbedtls_x509_crt_check_extended_key_usage
              reference :  mbedtls_x509_crt_check_key_usage
              reference :  mbedtls_x509_crt_free
              reference :  mbedtls_x509_crt_init
              reference :  mbedtls_x509_crt_parse_der
              reference :  mbedtls_x509_crt_profile_default
              reference :  mbedtls_x509_crt_profile_suiteb
              reference :  mbedtls_x509_crt_verify_restartable
              reference :  memcmp
              reference :  strlen
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/mbedtls/source/threading.o.
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/mbedtls/source/timing.o.
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/mbedtls/source/version.o.
              definition:  mbedtls_version_get_number
              definition:  mbedtls_version_get_string
              definition:  mbedtls_version_get_string_full
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/mbedtls/source/version_features.o.
              definition:  mbedtls_version_check_feature
              reference :  strcmp
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/mbedtls/source/x509.o.
              reference :  __2printf
              reference :  __2snprintf
              reference :  __aeabi_memclr4
              reference :  _printf_flags
              reference :  _printf_longlong_hex
              reference :  _printf_percent
              reference :  _printf_pre_padding
              reference :  _printf_return_value
              reference :  _printf_s
              reference :  _printf_str
              reference :  _printf_widthprec
              reference :  _printf_x
              reference :  calloc
              reference :  mbedtls_asn1_get_alg
              reference :  mbedtls_asn1_get_alg_null
              reference :  mbedtls_asn1_get_bitstring_null
              reference :  mbedtls_asn1_get_len
              reference :  mbedtls_asn1_get_tag
              reference :  mbedtls_oid_get_attr_short_name
              reference :  mbedtls_oid_get_sig_alg
              reference :  mbedtls_oid_get_sig_alg_desc
              reference :  mbedtls_test_ca_crt
              reference :  mbedtls_test_ca_crt_len
              reference :  mbedtls_test_cli_crt
              reference :  mbedtls_test_cli_crt_len
              reference :  mbedtls_x509_crt_free
              reference :  mbedtls_x509_crt_init
              reference :  mbedtls_x509_crt_parse
              reference :  mbedtls_x509_crt_verify
              definition:  mbedtls_x509_dn_gets
              definition:  mbedtls_x509_get_alg
              definition:  mbedtls_x509_get_alg_null
              definition:  mbedtls_x509_get_ext
              definition:  mbedtls_x509_get_name
              definition:  mbedtls_x509_get_serial
              definition:  mbedtls_x509_get_sig
              definition:  mbedtls_x509_get_sig_alg
              definition:  mbedtls_x509_get_time
              definition:  mbedtls_x509_key_size_helper
              definition:  mbedtls_x509_self_test
              definition:  mbedtls_x509_serial_gets
              definition:  mbedtls_x509_sig_alg_gets
              definition:  mbedtls_x509_time_is_future
              definition:  mbedtls_x509_time_is_past
              reference :  puts
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/mbedtls/source/x509_create.o.
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/mbedtls/source/x509_crl.o.
              reference :  __2snprintf
              reference :  __aeabi_memclr4
              reference :  __aeabi_memcpy
              reference :  _printf_d
              reference :  _printf_flags
              reference :  _printf_int_dec
              reference :  _printf_percent
              reference :  _printf_pre_padding
              reference :  _printf_return_value
              reference :  _printf_s
              reference :  _printf_str
              reference :  _printf_widthprec
              reference :  calloc
              reference :  free
              reference :  mbedtls_asn1_get_bool
              reference :  mbedtls_asn1_get_int
              reference :  mbedtls_asn1_get_tag
              reference :  mbedtls_pem_free
              reference :  mbedtls_pem_init
              reference :  mbedtls_pem_read_buffer
              reference :  mbedtls_platform_zeroize
              definition:  mbedtls_x509_crl_free
              definition:  mbedtls_x509_crl_info
              definition:  mbedtls_x509_crl_init
              definition:  mbedtls_x509_crl_parse
              definition:  mbedtls_x509_crl_parse_der
              reference :  mbedtls_x509_dn_gets
              reference :  mbedtls_x509_get_alg
              reference :  mbedtls_x509_get_ext
              reference :  mbedtls_x509_get_name
              reference :  mbedtls_x509_get_serial
              reference :  mbedtls_x509_get_sig
              reference :  mbedtls_x509_get_sig_alg
              reference :  mbedtls_x509_get_time
              reference :  mbedtls_x509_serial_gets
              reference :  mbedtls_x509_sig_alg_gets
              reference :  memcmp
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/mbedtls/source/x509_crt.o.
              reference :  __2snprintf
              reference :  __aeabi_memclr4
              reference :  __aeabi_memcpy
              reference :  _printf_d
              reference :  _printf_flags
              reference :  _printf_int_dec
              reference :  _printf_percent
              reference :  _printf_pre_padding
              reference :  _printf_return_value
              reference :  _printf_s
              reference :  _printf_str
              reference :  _printf_widthprec
              reference :  calloc
              reference :  free
              reference :  mbedtls_asn1_get_bitstring
              reference :  mbedtls_asn1_get_bool
              reference :  mbedtls_asn1_get_int
              reference :  mbedtls_asn1_get_len
              reference :  mbedtls_asn1_get_sequence_of
              reference :  mbedtls_asn1_get_tag
              reference :  mbedtls_md
              reference :  mbedtls_md_get_size
              reference :  mbedtls_md_info_from_type
              reference :  mbedtls_oid_get_certificate_policies
              reference :  mbedtls_oid_get_extended_key_usage
              reference :  mbedtls_oid_get_numeric_string
              reference :  mbedtls_oid_get_x509_ext_type
              reference :  mbedtls_pem_free
              reference :  mbedtls_pem_init
              reference :  mbedtls_pem_read_buffer
              reference :  mbedtls_pk_can_do
              reference :  mbedtls_pk_free
              reference :  mbedtls_pk_get_bitlen
              reference :  mbedtls_pk_get_name
              reference :  mbedtls_pk_get_type
              reference :  mbedtls_pk_parse_subpubkey
              reference :  mbedtls_pk_verify_ext
              reference :  mbedtls_platform_zeroize
              definition:  mbedtls_x509_crt_check_extended_key_usage
              definition:  mbedtls_x509_crt_check_key_usage
              definition:  mbedtls_x509_crt_free
              definition:  mbedtls_x509_crt_info
              definition:  mbedtls_x509_crt_init
              definition:  mbedtls_x509_crt_is_revoked
              definition:  mbedtls_x509_crt_parse
              definition:  mbedtls_x509_crt_parse_der
              definition:  mbedtls_x509_crt_parse_der_nocopy
              definition:  mbedtls_x509_crt_profile_default
              definition:  mbedtls_x509_crt_profile_next
              definition:  mbedtls_x509_crt_profile_suiteb
              definition:  mbedtls_x509_crt_verify
              definition:  mbedtls_x509_crt_verify_info
              definition:  mbedtls_x509_crt_verify_restartable
              definition:  mbedtls_x509_crt_verify_with_profile
              reference :  mbedtls_x509_dn_gets
              reference :  mbedtls_x509_get_alg
              reference :  mbedtls_x509_get_ext
              reference :  mbedtls_x509_get_name
              reference :  mbedtls_x509_get_serial
              reference :  mbedtls_x509_get_sig
              reference :  mbedtls_x509_get_sig_alg
              reference :  mbedtls_x509_get_time
              reference :  mbedtls_x509_key_size_helper
              definition:  mbedtls_x509_parse_subject_alt_name
              reference :  mbedtls_x509_serial_gets
              reference :  mbedtls_x509_sig_alg_gets
              reference :  mbedtls_x509_time_is_future
              reference :  mbedtls_x509_time_is_past
              reference :  memcmp
              reference :  strlen
              reference :  strstr
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/mbedtls/source/x509_csr.o.
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/mbedtls/source/x509write_crt.o.
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/mbedtls/source/x509write_csr.o.
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/mbedtls/source/xtea.o.
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/nanostack/coap-service/source/coap_connection_handler.o.
              definition:  COAP_MULTICAST_ADDR_ADMIN_LOCAL
              definition:  COAP_MULTICAST_ADDR_LINK_LOCAL
              definition:  COAP_MULTICAST_ADDR_SITE_LOCAL
              reference :  NS_CMSG_NXTHDR
              reference :  __aeabi_memclr4
              reference :  __aeabi_memcpy
              definition:  coap_connection_handler_exec
              definition:  coap_connection_handler_find_by_socket_port
              definition:  coap_connection_handler_handshake_limits_set
              definition:  coap_connection_handler_msg_prevalidate_callback_get
              definition:  coap_connection_handler_msg_prevalidate_callback_set
              definition:  coap_connection_handler_open_connection
              definition:  coap_connection_handler_send_data
              definition:  coap_connection_handler_set_timeout
              definition:  coap_connection_handler_socket_belongs_to
              definition:  coap_connection_handler_virtual_recv
              reference :  coap_security_create
              reference :  coap_security_destroy
              reference :  coap_security_handler_connect_non_blocking
              reference :  coap_security_handler_continue_connecting
              reference :  coap_security_handler_is_started
              reference :  coap_security_handler_keyblock
              reference :  coap_security_handler_read
              reference :  coap_security_handler_send_message
              reference :  coap_security_send_close_alert
              reference :  coap_service_get_internal_timer_ticks
              definition:  connection_handler_close_secure_connection
              definition:  connection_handler_create
              definition:  connection_handler_destroy
              reference :  eventOS_timeout_cancel
              reference :  eventOS_timeout_ms
              reference :  memcmp
              reference :  ns_dyn_mem_alloc
              reference :  ns_dyn_mem_free
              reference :  ns_dyn_mem_temporary_alloc
              reference :  ns_in6addr_any
              reference :  ns_list_add_to_start_
              reference :  ns_list_count_
              reference :  ns_list_get_next_
              reference :  ns_list_remove_
              reference :  socket_close
              reference :  socket_open
              reference :  socket_recvmsg
              reference :  socket_sendmsg
              reference :  socket_setsockopt
              reference :  transactions_delete_all
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/nanostack/coap-service/source/coap_message_handler.o.
              reference :  __aeabi_d2uiz
              reference :  __aeabi_dadd
              reference :  __aeabi_dmul
              reference :  __aeabi_i2d
              reference :  __aeabi_memclr4
              reference :  __aeabi_memcpy
              reference :  __aeabi_ui2d
              definition:  coap_message_handler_coap_msg_process
              definition:  coap_message_handler_destroy
              definition:  coap_message_handler_exec
              definition:  coap_message_handler_find_transaction
              definition:  coap_message_handler_init
              definition:  coap_message_handler_request_delete
              definition:  coap_message_handler_request_delete_by_service_id
              definition:  coap_message_handler_request_send
              definition:  coap_message_handler_response_send
              definition:  coap_message_handler_response_send_by_msg_id
              definition:  coap_message_handler_transaction_valid
              reference :  coap_service_get_internal_timer_ticks
              reference :  coap_service_handle
              reference :  coap_service_id_find_by_socket
              reference :  memcmp
              reference :  ns_dyn_mem_alloc
              reference :  ns_dyn_mem_free
              reference :  ns_dyn_mem_temporary_alloc
              reference :  ns_in6addr_any
              reference :  ns_list_add_to_start_
              reference :  ns_list_get_next_
              reference :  ns_list_remove_
              reference :  prepare_blockwise_message
              reference :  randLIB_get_n_bytes_random
              reference :  sn_coap_build_response
              reference :  sn_coap_builder_calc_needed_packet_data_size_2
              reference :  sn_coap_parser_release_allocated_coap_msg_mem
              reference :  sn_coap_protocol_build
              reference :  sn_coap_protocol_delete_retransmission
              reference :  sn_coap_protocol_destroy
              reference :  sn_coap_protocol_exec
              reference :  sn_coap_protocol_get_configured_blockwise_size
              reference :  sn_coap_protocol_init
              reference :  sn_coap_protocol_parse
              reference :  sn_coap_protocol_set_block_size
              reference :  sn_coap_protocol_set_duplicate_buffer_size
              reference :  sn_coap_protocol_set_retransmission_parameters
              reference :  strlen
              definition:  transaction_delete
              definition:  transactions_delete_all
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/nanostack/coap-service/source/coap_security_handler.o.
              reference :  __aeabi_memclr
              reference :  __aeabi_memclr4
              reference :  __aeabi_memclr8
              reference :  __aeabi_memmove
              definition:  coap_security_create
              definition:  coap_security_destroy
              definition:  coap_security_handler_connect_non_blocking
              definition:  coap_security_handler_continue_connecting
              definition:  coap_security_handler_is_started
              definition:  coap_security_handler_keyblock
              definition:  coap_security_handler_read
              definition:  coap_security_handler_send_message
              definition:  coap_security_send_close_alert
              definition:  entropy_poll
              definition:  f_recv
              definition:  f_send
              reference :  mbedtls_ctr_drbg_free
              reference :  mbedtls_ctr_drbg_init
              reference :  mbedtls_ctr_drbg_random
              reference :  mbedtls_ctr_drbg_seed
              reference :  mbedtls_entropy_add_source
              reference :  mbedtls_entropy_free
              reference :  mbedtls_entropy_func
              reference :  mbedtls_entropy_init
              reference :  mbedtls_pk_free
              reference :  mbedtls_pk_init
              reference :  mbedtls_pk_parse_key
              reference :  mbedtls_platform_setup
              reference :  mbedtls_platform_teardown
              reference :  mbedtls_ssl_close_notify
              reference :  mbedtls_ssl_conf_authmode
              reference :  mbedtls_ssl_conf_ca_chain
              reference :  mbedtls_ssl_conf_dtls_cookies
              reference :  mbedtls_ssl_conf_handshake_timeout
              reference :  mbedtls_ssl_conf_max_version
              reference :  mbedtls_ssl_conf_min_version
              reference :  mbedtls_ssl_conf_own_cert
              reference :  mbedtls_ssl_conf_rng
              reference :  mbedtls_ssl_config_defaults
              reference :  mbedtls_ssl_config_free
              reference :  mbedtls_ssl_config_init
              reference :  mbedtls_ssl_free
              reference :  mbedtls_ssl_handshake_step
              reference :  mbedtls_ssl_init
              reference :  mbedtls_ssl_read
              reference :  mbedtls_ssl_session_reset
              reference :  mbedtls_ssl_set_bio
              reference :  mbedtls_ssl_set_timer_cb
              reference :  mbedtls_ssl_setup
              reference :  mbedtls_ssl_write
              reference :  mbedtls_x509_crt_free
              reference :  mbedtls_x509_crt_init
              reference :  mbedtls_x509_crt_parse
              reference :  memcmp
              reference :  ns_dyn_mem_alloc
              reference :  ns_dyn_mem_free
              reference :  ns_dyn_mem_temporary_alloc
              reference :  randLIB_get_8bit
              reference :  randLIB_seed_random
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/nanostack/coap-service/source/coap_service_api.o.
              reference :  __aeabi_memclr4
              reference :  __aeabi_memcpy
              reference :  coap_connection_handler_exec
              reference :  coap_connection_handler_find_by_socket_port
              reference :  coap_connection_handler_handshake_limits_set
              reference :  coap_connection_handler_msg_prevalidate_callback_get
              reference :  coap_connection_handler_msg_prevalidate_callback_set
              reference :  coap_connection_handler_open_connection
              reference :  coap_connection_handler_send_data
              reference :  coap_connection_handler_set_timeout
              reference :  coap_connection_handler_socket_belongs_to
              reference :  coap_connection_handler_virtual_recv
              reference :  coap_message_handler_coap_msg_process
              reference :  coap_message_handler_exec
              reference :  coap_message_handler_find_transaction
              reference :  coap_message_handler_init
              reference :  coap_message_handler_request_delete
              reference :  coap_message_handler_request_delete_by_service_id
              reference :  coap_message_handler_request_send
              reference :  coap_message_handler_response_send
              reference :  coap_message_handler_response_send_by_msg_id
              reference :  coap_message_handler_transaction_valid
              definition:  coap_service_blockwise_size_set
              definition:  coap_service_certificate_set
              definition:  coap_service_close_secure_connection
              definition:  coap_service_delete
              definition:  coap_service_get_internal_timer_ticks
              definition:  coap_service_handle
              definition:  coap_service_handshake_limits_set
              definition:  coap_service_id_find_by_socket
              definition:  coap_service_initialize
              definition:  coap_service_msg_prevalidate_callback_set
              definition:  coap_service_register_uri
              definition:  coap_service_request_delete
              definition:  coap_service_request_delete_by_service_id
              definition:  coap_service_request_send
              definition:  coap_service_response_send
              definition:  coap_service_response_send_by_msg_id
              definition:  coap_service_set_duplicate_message_buffer
              definition:  coap_service_set_handshake_timeout
              definition:  coap_service_unregister_uri
              definition:  coap_service_virtual_socket_recv
              definition:  coap_service_virtual_socket_set_cb
              reference :  connection_handler_close_secure_connection
              reference :  connection_handler_create
              reference :  connection_handler_destroy
              reference :  eventOS_event_handler_create
              reference :  eventOS_event_timer_request
              reference :  memcmp
              reference :  ns_dyn_mem_alloc
              reference :  ns_dyn_mem_free
              reference :  ns_dyn_mem_temporary_alloc
              reference :  ns_list_add_to_start_
              reference :  ns_list_get_next_
              reference :  ns_list_remove_
              reference :  sn_coap_protocol_set_block_size
              reference :  sn_coap_protocol_set_duplicate_buffer_size
              reference :  strlen
              reference :  transaction_delete
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/nanostack/mbed-mesh-api/source/CallbackHandler.o.
              definition:  __mesh_handler_set_callback(Nanostack::Interface*)
              reference :  Nanostack::Interface::network_handler(mesh_connection_status_t)
              definition:  __mesh_handler_c_callback
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/nanostack/mbed-mesh-api/source/LoWPANNDInterface.o.
              reference :  map_mesh_error(mesh_error_t)
              reference :  __mesh_handler_set_callback(Nanostack::Interface*)
              weak defn :  MeshInterface::meshInterface()
              weak defn :  MeshInterface::~MeshInterface__deallocating()
              weak defn :  MeshInterface::~MeshInterface()
              weak defn :  MeshInterface::~MeshInterface__sub_object()
              reference :  SocketAddress::set_ip_address(const char*)
              reference :  NetworkInterface::get_gateway(SocketAddress*)
              reference :  NetworkInterface::get_netmask(SocketAddress*)
              reference :  NetworkInterface::getaddrinfo(const char*, SocketAddress*, SocketAddress**, const char*)
              reference :  NetworkInterface::set_network(const SocketAddress&, const SocketAddress&, const SocketAddress&)
              reference :  NetworkInterface::set_blocking(bool)
              reference :  NetworkInterface::gethostbyname(const char*, SocketAddress*, nsapi_version, const char*)
              reference :  NetworkInterface::add_dns_server(const SocketAddress&, const char*)
              reference :  NetworkInterface::get_dns_server(int, SocketAddress*, const char*)
              reference :  NetworkInterface::get_ip_address(SocketAddress*)
              reference :  NetworkInterface::set_as_default()
              reference :  NetworkInterface::get_mac_address()
              reference :  NetworkInterface::getaddrinfo_async(const char*, SocketAddress*, mbed::Callback<void(int, SocketAddress*)>, const char*)
              reference :  NetworkInterface::get_interface_name(char*)
              reference :  NetworkInterface::gethostbyname_async(const char*, mbed::Callback<void(int, SocketAddress*)>, nsapi_version, const char*)
              reference :  NetworkInterface::set_default_parameters()
              reference :  NetworkInterface::gethostbyname_async_cancel(int)
              reference :  NetworkInterface::get_ipv6_link_local_address(SocketAddress*)
              reference :  NetworkInterface::attach(mbed::Callback<void(nsapi_event, int)>)
              reference :  NetworkInterface::set_dhcp(bool)
              reference :  NetworkInterface::~NetworkInterface__sub_object()
              definition:  LoWPANNDInterface::do_initialize()
              definition:  LoWPANNDInterface::getRouterIpAddress(char*, signed char)
              weak defn :  LoWPANNDInterface::~LoWPANNDInterface__deallocating()
              weak defn :  LoWPANNDInterface::~LoWPANNDInterface()
              weak defn :  LoWPANNDInterface::~LoWPANNDInterface__sub_object()
              reference :  InterfaceNanostack::disconnect()
              reference :  InterfaceNanostack::set_blocking(bool)
              reference :  InterfaceNanostack::get_ip_address(SocketAddress*)
              reference :  InterfaceNanostack::get_mac_address()
              reference :  InterfaceNanostack::attach(mbed::Callback<void(nsapi_event, int)>)
              reference :  InterfaceNanostack::connect()
              reference :  InterfaceNanostack::get_stack()
              weak defn :  InterfaceNanostack::~InterfaceNanostack__deallocating()
              weak defn :  InterfaceNanostack::~InterfaceNanostack()
              weak defn :  InterfaceNanostack::~InterfaceNanostack__sub_object()
              weak defn :  NanostackLockGuard::NanostackLockGuard__sub_object()
              weak defn :  NanostackLockGuard::~NanostackLockGuard__sub_object()
              weak defn :  MeshInterfaceNanostack::~MeshInterfaceNanostack__deallocating()
              weak defn :  MeshInterfaceNanostack::~MeshInterfaceNanostack()
              weak defn :  MeshInterfaceNanostack::~MeshInterfaceNanostack__sub_object()
              reference :  rtos::Semaphore::acquire()
              reference :  Nanostack::MeshInterface::get_interface_name(char*)
              weak defn :  Nanostack::MeshInterface::MeshInterface__sub_object(NanostackRfPhy&)
              definition:  Nanostack::LoWPANNDInterface::get_gateway(SocketAddress*)
              definition:  Nanostack::LoWPANNDInterface::mesh_connect()
              definition:  Nanostack::LoWPANNDInterface::mesh_disconnect()
              definition:  Nanostack::LoWPANNDInterface::init()
              definition:  Nanostack::LoWPANNDInterface::bringup(bool, const char*, const char*, const char*, nsapi_ip_stack, bool)
              definition:  Nanostack::LoWPANNDInterface::bringdown()
              weak defn :  _ZN9Nanostack17LoWPANNDInterfaceCI2NS_13MeshInterfaceEER14NanostackRfPhy
              reference :  Nanostack::Interface::get_netmask(SocketAddress*)
              reference :  Nanostack::Interface::register_phy()
              reference :  Nanostack::Interface::get_ip_address(SocketAddress*)
              reference :  Nanostack::Interface::get_mac_address(char*, unsigned)
              reference :  Nanostack::Interface::attach(mbed::Callback<void(nsapi_event, int)>)
              reference :  Nanostack::Interface::Interface__sub_object(NanostackPhy&)
              reference :  SocketAddress::get_ip_address() const
              reference :  NetworkInterface::get_connection_status() const
              definition:  LoWPANNDInterface::get_interface() const
              reference :  InterfaceNanostack::get_connection_status() const
              reference :  Nanostack::Interface::get_connection_status() const
              reference :  std::nothrow
              definition:  construction vtable for InterfaceNanostack-in-LoWPANNDInterface
              definition:  construction vtable for MeshInterfaceNanostack-in-LoWPANNDInterface
              definition:  construction vtable for MeshInterface-in-LoWPANNDInterface
              definition:  VTT for LoWPANNDInterface
              definition:  vtable for LoWPANNDInterface
              reference :  vtable for Nanostack::MeshInterface
              definition:  vtable for Nanostack::LoWPANNDInterface
              weak defn :  thunk{-76} to LoWPANNDInterface::~LoWPANNDInterface__deallocating()
              weak defn :  thunk{-76} to LoWPANNDInterface::~LoWPANNDInterface()
              weak defn :  thunk{-76} to MeshInterfaceNanostack::~MeshInterfaceNanostack__deallocating()
              weak defn :  thunk{-76} to MeshInterfaceNanostack::~MeshInterfaceNanostack()
              weak defn :  thunk{v:0,-108} to MeshInterface::meshInterface()
              weak defn :  thunk{v:0,-36} to MeshInterface::~MeshInterface__deallocating()
              weak defn :  thunk{v:0,-36} to MeshInterface::~MeshInterface()
              reference :  operator delete[] (void*)
              reference :  operator delete (void*)
              reference :  operator new(unsigned, const std::nothrow_t&)
              reference :  __cxa_pure_virtual
              reference :  __mesh_handler_c_callback
              reference :  eventOS_scheduler_mutex_release
              reference :  eventOS_scheduler_mutex_wait
              reference :  nd_tasklet_connect
              reference :  nd_tasklet_disconnect
              reference :  nd_tasklet_get_router_ip_address
              reference :  nd_tasklet_init
              reference :  nd_tasklet_network_init
              reference :  randLIB_seed_random
              reference :  strncpy
              reference :  SocketAddress::SocketAddress__sub_object()
              reference :  SocketAddress::~SocketAddress__sub_object()
              reference :  OnboardNetworkStack::Interface::set_ip_address(const char*, const char*, const char*, unsigned char)
              reference :  OnboardNetworkStack::Interface::get_ipv6_link_local_address(SocketAddress*)
              reference :  NetworkInterface::ethInterface()
              reference :  NetworkInterface::wifiInterface()
              reference :  NetworkInterface::emacInterface()
              reference :  NetworkInterface::cellularInterface()
              reference :  NetworkInterface::meshInterface()
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/nanostack/mbed-mesh-api/source/MeshInterfaceNanostack.o.
              weak defn :  MeshInterface::get_target_default_instance()
              reference :  SocketAddress::set_ip_bytes(const void*, nsapi_version)
              reference :  SocketAddress::SocketAddress(const char*, unsigned short)
              reference :  SocketAddress::operator =(const SocketAddress&)
              reference :  NetworkInterface::get_gateway(SocketAddress*)
              reference :  NetworkInterface::get_netmask(SocketAddress*)
              reference :  NetworkInterface::getaddrinfo(const char*, SocketAddress*, SocketAddress**, const char*)
              reference :  NetworkInterface::set_network(const SocketAddress&, const SocketAddress&, const SocketAddress&)
              reference :  NetworkInterface::gethostbyname(const char*, SocketAddress*, nsapi_version, const char*)
              reference :  NetworkInterface::add_dns_server(const SocketAddress&, const char*)
              reference :  NetworkInterface::get_dns_server(int, SocketAddress*, const char*)
              reference :  NetworkInterface::set_as_default()
              reference :  NetworkInterface::getaddrinfo_async(const char*, SocketAddress*, mbed::Callback<void(int, SocketAddress*)>, const char*)
              reference :  NetworkInterface::get_interface_name(char*)
              reference :  NetworkInterface::gethostbyname_async(const char*, mbed::Callback<void(int, SocketAddress*)>, nsapi_version, const char*)
              reference :  NetworkInterface::set_default_parameters()
              reference :  NetworkInterface::gethostbyname_async_cancel(int)
              reference :  NetworkInterface::get_ipv6_link_local_address(SocketAddress*)
              reference :  NetworkInterface::set_dhcp(bool)
              definition:  InterfaceNanostack::disconnect()
              definition:  InterfaceNanostack::set_blocking(bool)
              definition:  InterfaceNanostack::get_ip_address(SocketAddress*)
              definition:  InterfaceNanostack::get_mac_address()
              definition:  InterfaceNanostack::set_file_system_root_path(const char*)
              definition:  InterfaceNanostack::attach(mbed::Callback<void(nsapi_event, int)>)
              definition:  InterfaceNanostack::connect()
              definition:  InterfaceNanostack::get_stack()
              definition:  MeshInterfaceNanostack::initialize(NanostackRfPhy*)
              reference :  rtos::Semaphore::release()
              reference :  rtos::Semaphore::Semaphore(int)
              reference :  Nanostack::get_instance()
              definition:  Nanostack::MeshInterface::get_interface_name(char*)
              definition:  Nanostack::Interface::get_gateway(SocketAddress*)
              definition:  Nanostack::Interface::get_netmask(SocketAddress*)
              definition:  Nanostack::Interface::register_phy()
              definition:  Nanostack::Interface::get_ip_address(SocketAddress*)
              definition:  Nanostack::Interface::get_mac_address(char*, unsigned)
              definition:  Nanostack::Interface::network_handler(mesh_connection_status_t)
              definition:  Nanostack::Interface::attach(mbed::Callback<void(nsapi_event, int)>)
              definition:  Nanostack::Interface::Interface__sub_object(NanostackPhy&)
              reference :  SocketAddress::get_ip_address() const
              definition:  InterfaceNanostack::get_connection_status() const
              definition:  Nanostack::Interface::get_connection_status() const
              definition:  VTT for InterfaceNanostack
              definition:  vtable for InterfaceNanostack
              definition:  vtable for Nanostack::MeshInterface
              definition:  vtable for Nanostack::Interface
              definition:  thunk{v:0,-120} to InterfaceNanostack::get_stack()
              definition:  thunk{v:0,-44} to InterfaceNanostack::get_mac_address()
              definition:  thunk{v:0,-48} to InterfaceNanostack::get_ip_address(SocketAddress*)
              definition:  thunk{v:0,-76} to InterfaceNanostack::connect()
              definition:  thunk{v:0,-80} to InterfaceNanostack::disconnect()
              definition:  thunk{v:0,-88} to InterfaceNanostack::attach(mbed::Callback<void(nsapi_event, int)>)
              definition:  thunk{v:0,-92} to InterfaceNanostack::get_connection_status() const
              definition:  thunk{v:0,-96} to InterfaceNanostack::set_blocking(bool)
              reference :  operator delete[] (void*)
              reference :  __2snprintf
              reference :  __2sprintf
              reference :  __cxa_pure_virtual
              reference :  _printf_d
              reference :  _printf_flags
              reference :  _printf_int_dec
              reference :  _printf_longlong_hex
              reference :  _printf_percent
              reference :  _printf_pre_padding
              reference :  _printf_widthprec
              reference :  _printf_x
              reference :  arm_net_address_get
              reference :  arm_nwk_mac_address_read
              reference :  error
              reference :  eventOS_scheduler_mutex_release
              reference :  eventOS_scheduler_mutex_wait
              reference :  mbed_assert_internal
              reference :  memcmp
              reference :  mesh_system_init
              reference :  mesh_system_set_file_system_root_path
              reference :  NanostackLockGuard::NanostackLockGuard__sub_object()
              reference :  NanostackLockGuard::~NanostackLockGuard__sub_object()
              reference :  OnboardNetworkStack::Interface::Interface__sub_object()
              reference :  mbed::Callback<void(nsapi_event, int)>::Callback__sub_object()
              reference :  mbed::Callback<void(nsapi_event, int)>::operator bool() const
              reference :  mbed::Callback<void(nsapi_event, int)>::operator ()(nsapi_event, int) const
              reference :  SocketAddress::~SocketAddress__sub_object()
              reference :  OnboardNetworkStack::Interface::set_ip_address(const char*, const char*, const char*, unsigned char)
              reference :  OnboardNetworkStack::Interface::get_interface_name(char*)
              reference :  OnboardNetworkStack::Interface::get_ipv6_link_local_address(SocketAddress*)
              reference :  InterfaceNanostack::~InterfaceNanostack()
              reference :  InterfaceNanostack::~InterfaceNanostack__deallocating()
              reference :  NetworkInterface::ethInterface()
              reference :  NetworkInterface::wifiInterface()
              reference :  NetworkInterface::meshInterface()
              reference :  NetworkInterface::emacInterface()
              reference :  NetworkInterface::cellularInterface()
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/nanostack/mbed-mesh-api/source/NanostackEMACInterface.o.
              reference :  NetworkStack::getaddrinfo(const char*, SocketAddress*, SocketAddress**, const char*)
              reference :  NetworkStack::getstackopt(int, int, void*, unsigned*)
              reference :  NetworkStack::setstackopt(int, int, const void*, unsigned)
              reference :  NetworkStack::gethostbyname(const char*, SocketAddress*, nsapi_version, const char*)
              reference :  NetworkStack::add_dns_server(const SocketAddress&, const char*)
              reference :  NetworkStack::get_dns_server(int, SocketAddress*, const char*)
              reference :  NetworkStack::get_ip_address_if(SocketAddress*, const char*)
              reference :  NetworkStack::getaddrinfo_async(const char*, SocketAddress*, mbed::Callback<void(int, SocketAddress*)>, const char*)
              reference :  NetworkStack::gethostbyname_async(const char*, mbed::Callback<void(int, SocketAddress*)>, nsapi_version, const char*)
              reference :  NetworkStack::gethostbyname_async_cancel(int)
              reference :  NetworkStack::get_ipv6_link_local_address(SocketAddress*)
              weak defn :  NanostackEthernetPhy::NanostackEthernetPhy__sub_object()
              weak defn :  NanostackEthernetPhy::~NanostackEthernetPhy__deallocating()
              reference :  NetStackMemoryManager::copy_to_buf(void*, const void*, unsigned)
              reference :  NanostackMemoryManager::alloc_pool(unsigned, unsigned)
              reference :  NanostackMemoryManager::free(void*)
              weak defn :  T1 mbed::detail::invoke_r<void, void(EMACPhy::*const &)(void*), <EMACPhy*const &, void*>, (int)0>(T2&&, T3&&...)
              weak defn :  T1 mbed::detail::invoke_r<void, void(*&)(bool), <bool>, (int)0>(T2&&, T3&&...)
              weak defn :  T1 mbed::detail::invoke_r<void, mbed::Callback<void(void*)>::Callback<EMACPhy*, void(EMACPhy::*)(void*), (int)0>(T1, T2)::[lambda(void*) (instance 1)]&, <void*>, (int)0>(T2&&, T3&&...)
              weak defn :  void mbed::Callback<void(void*)>::target_call<mbed::Callback<void(void*)>::Callback<EMACPhy*, void(EMACPhy::*)(void*), (int)0>(T1, T2)::[lambda(void*) (instance 1)]>(const mbed::detail::CallbackBase*, void*)
              weak defn :  void mbed::Callback<void(void*)>::generate<mbed::Callback<void(void*)>::Callback<EMACPhy*, void(EMACPhy::*)(void*), (int)0>(T1, T2)::[lambda(void*) (instance 1)], void>(T1&&)
              weak defn :  mbed::Callback<void(void*)>::Callback__sub_object<EMACPhy*, void(EMACPhy::*)(void*), (int)0>(T1, T2)
              weak defn :  void mbed::Callback<void(bool)>::target_call<void(*)(bool)>(const mbed::detail::CallbackBase*, bool)
              weak defn :  void mbed::Callback<void(bool)>::generate<void(*)(bool), void>(T1&&)
              weak defn :  mbed::Callback<void(bool)>::Callback__sub_object<void(*)(bool), (int)0>(T1)
              weak defn :  mbed::Callback<T3(T4...)> mbed::callback<EMACPhy, EMACPhy, void, <void*>>(T2*, T3(T1::*)(T4...))
              weak defn :  std::__1::enable_if<((std::is_function<T2>::value&&(!std::is_base_of<T1, std::__1::decay<T3>::type>::value))&&(!is_reference_wrapper<std::__1::decay<T3>::type>::value)), decltype((((*std::forward<T3>(param#2)).*param#1)(std::forward<T4>(param#3)...)))>::type mstd::impl::INVOKE<EMACPhy, void(void*), EMACPhy*const &, <void*>>(T2T1::*, T3&&, T4&&...)
              weak defn :  std::__1::enable_if<((!std::is_member_pointer<std::__1::decay<T1>::type>::value)||(std::is_member_object_pointer<std::__1::decay<T1>::type>::value&&(sizeof...(param#2)!=(int)1))), decltype((std::forward<T1>(param#1)(std::forward<T2>(param#2)...)))>::type mstd::impl::INVOKE<void(*&)(bool), <bool>>(T1&&, T2&&...)
              weak defn :  std::__1::enable_if<((!std::is_member_pointer<std::__1::decay<T1>::type>::value)||(std::is_member_object_pointer<std::__1::decay<T1>::type>::value&&(sizeof...(param#2)!=(int)1))), decltype((std::forward<T1>(param#1)(std::forward<T2>(param#2)...)))>::type mstd::impl::INVOKE<mbed::Callback<void(void*)>::Callback<EMACPhy*, void(EMACPhy::*)(void*), (int)0>(T1, T2)::[lambda(void*) (instance 1)]&, <void*>>(T1&&, T2&&...)
              weak defn :  mstd::invoke_result<T1, <T2...>>::type mstd::invoke<void(EMACPhy::*const &)(void*), <EMACPhy*const &, void*>>(T1&&, T2&&...)
              weak defn :  mstd::invoke_result<T1, <T2...>>::type mstd::invoke<void(*&)(bool), <bool>>(T1&&, T2&&...)
              weak defn :  mstd::invoke_result<T1, <T2...>>::type mstd::invoke<mbed::Callback<void(void*)>::Callback<EMACPhy*, void(EMACPhy::*)(void*), (int)0>(T1, T2)::[lambda(void*) (instance 1)]&, <void*>>(T1&&, T2&&...)
              reference :  rtos::Semaphore::~Semaphore()
              definition:  EMACPhy::emac_phy_rx(void*)
              definition:  EMACPhy::phy_register()
              definition:  EMACPhy::address_write(phy_address_type_e, unsigned char*)
              definition:  EMACPhy::get_mac_address(unsigned char*)
              definition:  EMACPhy::set_mac_address(unsigned char*)
              definition:  EMACPhy::tx(unsigned char*, unsigned short, unsigned char, data_protocol_e)
              definition:  EMACPhy::EMACPhy(NanostackMemoryManager&, EMAC&)
              definition:  EMACPhy::EMACPhy__sub_object(NanostackMemoryManager&, EMAC&)
              weak defn :  EMACPhy::~EMACPhy__deallocating()
              reference :  Nanostack::getsockopt(void*, int, int, void*, unsigned*)
              reference :  Nanostack::setsockopt(void*, int, int, const void*, unsigned)
              reference :  Nanostack::socket_bind(void*, const SocketAddress&)
              reference :  Nanostack::socket_open(void**, nsapi_protocol)
              reference :  Nanostack::socket_recv(void*, void*, unsigned)
              reference :  Nanostack::socket_send(void*, const void*, unsigned)
              reference :  Nanostack::socket_close(void*)
              reference :  Nanostack::socket_accept(void*, void**, SocketAddress*)
              reference :  Nanostack::socket_attach(void*, void(*)(void*), void*)
              reference :  Nanostack::socket_listen(void*, int)
              reference :  Nanostack::socket_sendto(void*, const SocketAddress&, const void*, unsigned)
              reference :  Nanostack::get_ip_address(SocketAddress*)
              reference :  Nanostack::socket_connect(void*, const SocketAddress&)
              reference :  Nanostack::socket_recvfrom(void*, SocketAddress*, void*, unsigned)
              reference :  Nanostack::EthernetInterface::initialize()
              weak defn :  Nanostack::EthernetInterface::EthernetInterface__sub_object(NanostackEthernetPhy&)
              reference :  Nanostack::add_ppp_interface(PPP&, bool, OnboardNetworkStack::Interface**)
              reference :  Nanostack::get_call_in_callback()
              reference :  Nanostack::remove_ppp_interface(OnboardNetworkStack::Interface**)
              definition:  Nanostack::add_ethernet_interface(EMAC&, bool, OnboardNetworkStack::Interface**)
              definition:  Nanostack::add_ethernet_interface(EMAC&, bool, Nanostack::EthernetInterface**, const unsigned char*)
              reference :  Nanostack::call_in(int, mbed::Callback<void()>)
              reference :  Nanostack::Interface::Interface__sub_object(NanostackPhy&)
              weak defn :  Nanostack::Interface::~Interface__sub_object()
              weak defn :  Nanostack::~Nanostack__deallocating()
              reference :  NetStackMemoryManager::copy_from_buf(void*, unsigned, const void*) const
              reference :  NanostackMemoryManager::get_total_len(const void*) const
              reference :  NanostackMemoryManager::get_len(const void*) const
              reference :  NanostackMemoryManager::get_ptr(const void*) const
              reference :  NanostackMemoryManager::get_next(const void*) const
              reference :  std::nothrow
              weak defn :  vtable for NanostackEthernetPhy
              definition:  vtable for EMACPhy
              definition:  vtable for Nanostack
              reference :  vtable for Nanostack::EthernetInterface
              reference :  vtable for Nanostack::Interface
              weak defn :  mbed::Callback<void(void*)>::Callback<EMACPhy*, void(EMACPhy::*)(void*), (int)0>(T1, T2)::[lambda(void*) (instance 1)]::operator ()(void*) const
              reference :  operator delete (void*)
              reference :  operator new(unsigned, const std::nothrow_t&)
              reference :  __cxa_pure_virtual
              reference :  arm_net_phy_register
              reference :  enet_tasklet_link_state_changed
              reference :  mbed_mac_address
              reference :  ns_dyn_mem_free
              reference :  ns_dyn_mem_temporary_alloc
              reference :  NanostackMACPhy::NanostackMACPhy__sub_object()
              reference :  mbed::detail::CallbackBase::clear()
              reference :  NanostackPhy::~NanostackPhy__sub_object()
              reference :  NetworkStack::~NetworkStack__sub_object()
              reference :  NanostackMACPhy::nanostack_mac_phy()
              reference :  NanostackPhy::nanostack_ppp_phy()
              reference :  OnboardNetworkStack::onboardNetworkStack()
              reference :  OnboardNetworkStack::add_l3ip_interface(L3IP&, bool, OnboardNetworkStack::Interface**)
              reference :  OnboardNetworkStack::remove_ethernet_interface(OnboardNetworkStack::Interface**)
              reference :  OnboardNetworkStack::remove_l3ip_interface(OnboardNetworkStack::Interface**)
              reference :  OnboardNetworkStack::set_default_interface(OnboardNetworkStack::Interface*)
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/nanostack/mbed-mesh-api/source/NanostackEthernetInterface.o.
              reference :  __mesh_handler_set_callback(Nanostack::Interface*)
              weak defn :  EthInterface::ethInterface()
              weak defn :  EthInterface::~EthInterface__deallocating()
              weak defn :  EthInterface::~EthInterface()
              weak defn :  EthInterface::~EthInterface__sub_object()
              reference :  NetworkInterface::get_gateway(SocketAddress*)
              reference :  NetworkInterface::get_netmask(SocketAddress*)
              reference :  NetworkInterface::getaddrinfo(const char*, SocketAddress*, SocketAddress**, const char*)
              reference :  NetworkInterface::set_network(const SocketAddress&, const SocketAddress&, const SocketAddress&)
              reference :  NetworkInterface::set_blocking(bool)
              reference :  NetworkInterface::gethostbyname(const char*, SocketAddress*, nsapi_version, const char*)
              reference :  NetworkInterface::add_dns_server(const SocketAddress&, const char*)
              reference :  NetworkInterface::get_dns_server(int, SocketAddress*, const char*)
              reference :  NetworkInterface::get_ip_address(SocketAddress*)
              reference :  NetworkInterface::set_as_default()
              reference :  NetworkInterface::get_mac_address()
              reference :  NetworkInterface::getaddrinfo_async(const char*, SocketAddress*, mbed::Callback<void(int, SocketAddress*)>, const char*)
              reference :  NetworkInterface::get_interface_name(char*)
              reference :  NetworkInterface::gethostbyname_async(const char*, mbed::Callback<void(int, SocketAddress*)>, nsapi_version, const char*)
              reference :  NetworkInterface::set_default_parameters()
              reference :  NetworkInterface::gethostbyname_async_cancel(int)
              reference :  NetworkInterface::get_ipv6_link_local_address(SocketAddress*)
              reference :  NetworkInterface::attach(mbed::Callback<void(nsapi_event, int)>)
              reference :  NetworkInterface::set_dhcp(bool)
              reference :  NetworkInterface::~NetworkInterface__sub_object()
              reference :  InterfaceNanostack::disconnect()
              reference :  InterfaceNanostack::set_blocking(bool)
              reference :  InterfaceNanostack::get_ip_address(SocketAddress*)
              reference :  InterfaceNanostack::get_mac_address()
              reference :  InterfaceNanostack::attach(mbed::Callback<void(nsapi_event, int)>)
              reference :  InterfaceNanostack::connect()
              reference :  InterfaceNanostack::get_stack()
              definition:  NanostackEthernetInterface::initialize(NanostackEthernetPhy*)
              definition:  NanostackEthernetInterface::do_initialize()
              weak defn :  NanostackEthernetInterface::~NanostackEthernetInterface__deallocating()
              weak defn :  NanostackEthernetInterface::~NanostackEthernetInterface()
              weak defn :  NanostackEthernetInterface::~NanostackEthernetInterface__sub_object()
              reference :  rtos::Semaphore::try_acquire_for(std::__1::chrono::duration<unsigned, std::__1::ratio<(long long)1, (long long)1000>>)
              definition:  Nanostack::EthernetInterface::initialize()
              definition:  Nanostack::EthernetInterface::get_interface_name(char*)
              definition:  Nanostack::EthernetInterface::bringup(bool, const char*, const char*, const char*, nsapi_ip_stack, bool)
              definition:  Nanostack::EthernetInterface::bringdown()
              reference :  Nanostack::Interface::get_gateway(SocketAddress*)
              reference :  Nanostack::Interface::get_netmask(SocketAddress*)
              reference :  Nanostack::Interface::register_phy()
              reference :  Nanostack::Interface::get_ip_address(SocketAddress*)
              reference :  Nanostack::Interface::get_mac_address(char*, unsigned)
              reference :  Nanostack::Interface::attach(mbed::Callback<void(nsapi_event, int)>)
              reference :  Nanostack::Interface::Interface__sub_object(NanostackPhy&)
              reference :  NetworkInterface::get_connection_status() const
              reference :  InterfaceNanostack::get_connection_status() const
              weak defn :  NanostackEthernetInterface::get_interface() const
              reference :  Nanostack::Interface::get_connection_status() const
              reference :  std::nothrow
              definition:  construction vtable for InterfaceNanostack-in-NanostackEthernetInterface
              definition:  construction vtable for EthInterface-in-NanostackEthernetInterface
              definition:  VTT for NanostackEthernetInterface
              definition:  vtable for NanostackEthernetInterface
              definition:  vtable for Nanostack::EthernetInterface
              weak defn :  thunk{-76} to NanostackEthernetInterface::~NanostackEthernetInterface__deallocating()
              weak defn :  thunk{-76} to NanostackEthernetInterface::~NanostackEthernetInterface()
              weak defn :  thunk{v:0,-100} to EthInterface::ethInterface()
              weak defn :  thunk{v:0,-36} to EthInterface::~EthInterface__deallocating()
              weak defn :  thunk{v:0,-36} to EthInterface::~EthInterface()
              reference :  operator delete[] (void*)
              reference :  operator delete (void*)
              reference :  operator new(unsigned, const std::nothrow_t&)
              reference :  __2sprintf
              reference :  __cxa_pure_virtual
              reference :  __mesh_handler_c_callback
              reference :  _printf_d
              reference :  _printf_int_dec
              reference :  _printf_percent
              reference :  enet_tasklet_connect
              reference :  enet_tasklet_disconnect
              reference :  enet_tasklet_init
              reference :  enet_tasklet_network_init
              reference :  eventOS_scheduler_mutex_release
              reference :  eventOS_scheduler_mutex_wait
              reference :  Nanostack::EthernetInterface::EthernetInterface__sub_object(NanostackEthernetPhy&)
              reference :  _ZNSt3__18literals15chrono_literalsli1sEy
              reference :  InterfaceNanostack::~InterfaceNanostack__sub_object()
              reference :  OnboardNetworkStack::Interface::set_ip_address(const char*, const char*, const char*, unsigned char)
              reference :  OnboardNetworkStack::Interface::get_ipv6_link_local_address(SocketAddress*)
              reference :  NetworkInterface::wifiInterface()
              reference :  NetworkInterface::meshInterface()
              reference :  NetworkInterface::emacInterface()
              reference :  NetworkInterface::cellularInterface()
              reference :  InterfaceNanostack::~InterfaceNanostack()
              reference :  InterfaceNanostack::~InterfaceNanostack__deallocating()
              reference :  NetworkInterface::ethInterface()
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/nanostack/mbed-mesh-api/source/NanostackMemoryManager.o.
              reference :  NetStackMemoryManager::copy_to_buf(void*, const void*, unsigned)
              definition:  NanostackMemoryManager::alloc_heap(unsigned, unsigned)
              definition:  NanostackMemoryManager::alloc_pool(unsigned, unsigned)
              definition:  NanostackMemoryManager::cat(void*, void*)
              definition:  NanostackMemoryManager::copy(void*, const void*)
              definition:  NanostackMemoryManager::free(void*)
              definition:  NanostackMemoryManager::set_len(void*, unsigned)
              reference :  NetStackMemoryManager::copy_from_buf(void*, unsigned, const void*) const
              definition:  NanostackMemoryManager::get_total_len(const void*) const
              definition:  NanostackMemoryManager::get_pool_alloc_unit(unsigned) const
              definition:  NanostackMemoryManager::get_len(const void*) const
              definition:  NanostackMemoryManager::get_ptr(const void*) const
              definition:  NanostackMemoryManager::get_next(const void*) const
              definition:  vtable for NanostackMemoryManager
              reference :  __aeabi_memcpy
              reference :  mbed_assert_internal
              reference :  ns_dyn_mem_free
              reference :  ns_dyn_mem_temporary_alloc
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/nanostack/mbed-mesh-api/source/NanostackPPPInterface.o.
              reference :  __mesh_handler_set_callback(Nanostack::Interface*)
              weak defn :  NanostackPPPPhy::nanostack_ppp_phy()
              weak defn :  NanostackPPPPhy::NanostackPPPPhy__sub_object()
              weak defn :  NanostackPPPPhy::~NanostackPPPPhy__deallocating()
              reference :  NetStackMemoryManager::copy_to_buf(void*, const void*, unsigned)
              reference :  NanostackMemoryManager::alloc_pool(unsigned, unsigned)
              reference :  NanostackMemoryManager::free(void*)
              weak defn :  T1 mbed::detail::invoke_r<void, void(PPPPhy::*const &)(void*), <PPPPhy*const &, void*>, (int)0>(T2&&, T3&&...)
              weak defn :  T1 mbed::detail::invoke_r<void, void(PPPPhy::*const &)(bool), <PPPPhy*const &, bool>, (int)0>(T2&&, T3&&...)
              weak defn :  T1 mbed::detail::invoke_r<void, void(Nanostack::PPPInterface::*const &)(bool), <Nanostack::PPPInterface*const &, bool>, (int)0>(T2&&, T3&&...)
              weak defn :  T1 mbed::detail::invoke_r<void, mbed::Callback<void(void*)>::Callback<PPPPhy*, void(PPPPhy::*)(void*), (int)0>(T1, T2)::[lambda(void*) (instance 1)]&, <void*>, (int)0>(T2&&, T3&&...)
              weak defn :  T1 mbed::detail::invoke_r<void, mbed::Callback<void(bool)>::Callback<PPPPhy*, void(PPPPhy::*)(bool), (int)0>(T1, T2)::[lambda(bool) (instance 1)]&, <bool>, (int)0>(T2&&, T3&&...)
              weak defn :  T1 mbed::detail::invoke_r<void, mbed::Callback<void(bool)>::Callback<Nanostack::PPPInterface*, void(Nanostack::PPPInterface::*)(bool), (int)0>(T1, T2)::[lambda(bool) (instance 1)]&, <bool>, (int)0>(T2&&, T3&&...)
              weak defn :  void mbed::Callback<void(void*)>::target_call<mbed::Callback<void(void*)>::Callback<PPPPhy*, void(PPPPhy::*)(void*), (int)0>(T1, T2)::[lambda(void*) (instance 1)]>(const mbed::detail::CallbackBase*, void*)
              weak defn :  void mbed::Callback<void(void*)>::generate<mbed::Callback<void(void*)>::Callback<PPPPhy*, void(PPPPhy::*)(void*), (int)0>(T1, T2)::[lambda(void*) (instance 1)], void>(T1&&)
              weak defn :  mbed::Callback<void(void*)>::Callback__sub_object<PPPPhy*, void(PPPPhy::*)(void*), (int)0>(T1, T2)
              weak defn :  void mbed::Callback<void(bool)>::target_call<mbed::Callback<void(bool)>::Callback<PPPPhy*, void(PPPPhy::*)(bool), (int)0>(T1, T2)::[lambda(bool) (instance 1)]>(const mbed::detail::CallbackBase*, bool)
              weak defn :  void mbed::Callback<void(bool)>::target_call<mbed::Callback<void(bool)>::Callback<Nanostack::PPPInterface*, void(Nanostack::PPPInterface::*)(bool), (int)0>(T1, T2)::[lambda(bool) (instance 1)]>(const mbed::detail::CallbackBase*, bool)
              weak defn :  void mbed::Callback<void(bool)>::generate<mbed::Callback<void(bool)>::Callback<PPPPhy*, void(PPPPhy::*)(bool), (int)0>(T1, T2)::[lambda(bool) (instance 1)], void>(T1&&)
              weak defn :  void mbed::Callback<void(bool)>::generate<mbed::Callback<void(bool)>::Callback<Nanostack::PPPInterface*, void(Nanostack::PPPInterface::*)(bool), (int)0>(T1, T2)::[lambda(bool) (instance 1)], void>(T1&&)
              weak defn :  mbed::Callback<void(bool)>::Callback__sub_object(std::nullptr_t)
              weak defn :  mbed::Callback<void(bool)>::Callback__sub_object<PPPPhy*, void(PPPPhy::*)(bool), (int)0>(T1, T2)
              weak defn :  mbed::Callback<void(bool)>::Callback__sub_object<Nanostack::PPPInterface*, void(Nanostack::PPPInterface::*)(bool), (int)0>(T1, T2)
              weak defn :  mbed::Callback<void(unsigned char, signed char)>::Callback__sub_object(std::nullptr_t)
              weak defn :  mbed::Callback<void(unsigned char, signed char)>::Callback__sub_object()
              weak defn :  mbed::Callback<T3(T4...)> mbed::callback<PPPPhy, PPPPhy, void, <void*>>(T2*, T3(T1::*)(T4...))
              weak defn :  mbed::Callback<T3(T4...)> mbed::callback<PPPPhy, PPPPhy, void, <bool>>(T2*, T3(T1::*)(T4...))
              weak defn :  mbed::Callback<T3(T4...)> mbed::callback<Nanostack::PPPInterface, Nanostack::PPPInterface, void, <bool>>(T2*, T3(T1::*)(T4...))
              weak defn :  std::__1::enable_if<((std::is_function<T2>::value&&(!std::is_base_of<T1, std::__1::decay<T3>::type>::value))&&(!is_reference_wrapper<std::__1::decay<T3>::type>::value)), decltype((((*std::forward<T3>(param#2)).*param#1)(std::forward<T4>(param#3)...)))>::type mstd::impl::INVOKE<PPPPhy, void(void*), PPPPhy*const &, <void*>>(T2T1::*, T3&&, T4&&...)
              weak defn :  std::__1::enable_if<((std::is_function<T2>::value&&(!std::is_base_of<T1, std::__1::decay<T3>::type>::value))&&(!is_reference_wrapper<std::__1::decay<T3>::type>::value)), decltype((((*std::forward<T3>(param#2)).*param#1)(std::forward<T4>(param#3)...)))>::type mstd::impl::INVOKE<PPPPhy, void(bool), PPPPhy*const &, <bool>>(T2T1::*, T3&&, T4&&...)
              weak defn :  std::__1::enable_if<((std::is_function<T2>::value&&(!std::is_base_of<T1, std::__1::decay<T3>::type>::value))&&(!is_reference_wrapper<std::__1::decay<T3>::type>::value)), decltype((((*std::forward<T3>(param#2)).*param#1)(std::forward<T4>(param#3)...)))>::type mstd::impl::INVOKE<Nanostack::PPPInterface, void(bool), Nanostack::PPPInterface*const &, <bool>>(T2T1::*, T3&&, T4&&...)
              weak defn :  std::__1::enable_if<((!std::is_member_pointer<std::__1::decay<T1>::type>::value)||(std::is_member_object_pointer<std::__1::decay<T1>::type>::value&&(sizeof...(param#2)!=(int)1))), decltype((std::forward<T1>(param#1)(std::forward<T2>(param#2)...)))>::type mstd::impl::INVOKE<mbed::Callback<void(void*)>::Callback<PPPPhy*, void(PPPPhy::*)(void*), (int)0>(T1, T2)::[lambda(void*) (instance 1)]&, <void*>>(T1&&, T2&&...)
              weak defn :  std::__1::enable_if<((!std::is_member_pointer<std::__1::decay<T1>::type>::value)||(std::is_member_object_pointer<std::__1::decay<T1>::type>::value&&(sizeof...(param#2)!=(int)1))), decltype((std::forward<T1>(param#1)(std::forward<T2>(param#2)...)))>::type mstd::impl::INVOKE<mbed::Callback<void(bool)>::Callback<PPPPhy*, void(PPPPhy::*)(bool), (int)0>(T1, T2)::[lambda(bool) (instance 1)]&, <bool>>(T1&&, T2&&...)
              weak defn :  std::__1::enable_if<((!std::is_member_pointer<std::__1::decay<T1>::type>::value)||(std::is_member_object_pointer<std::__1::decay<T1>::type>::value&&(sizeof...(param#2)!=(int)1))), decltype((std::forward<T1>(param#1)(std::forward<T2>(param#2)...)))>::type mstd::impl::INVOKE<mbed::Callback<void(bool)>::Callback<Nanostack::PPPInterface*, void(Nanostack::PPPInterface::*)(bool), (int)0>(T1, T2)::[lambda(bool) (instance 1)]&, <bool>>(T1&&, T2&&...)
              weak defn :  mstd::invoke_result<T1, <T2...>>::type mstd::invoke<void(PPPPhy::*const &)(void*), <PPPPhy*const &, void*>>(T1&&, T2&&...)
              weak defn :  mstd::invoke_result<T1, <T2...>>::type mstd::invoke<void(PPPPhy::*const &)(bool), <PPPPhy*const &, bool>>(T1&&, T2&&...)
              weak defn :  mstd::invoke_result<T1, <T2...>>::type mstd::invoke<void(Nanostack::PPPInterface::*const &)(bool), <Nanostack::PPPInterface*const &, bool>>(T1&&, T2&&...)
              weak defn :  mstd::invoke_result<T1, <T2...>>::type mstd::invoke<mbed::Callback<void(void*)>::Callback<PPPPhy*, void(PPPPhy::*)(void*), (int)0>(T1, T2)::[lambda(void*) (instance 1)]&, <void*>>(T1&&, T2&&...)
              weak defn :  mstd::invoke_result<T1, <T2...>>::type mstd::invoke<mbed::Callback<void(bool)>::Callback<PPPPhy*, void(PPPPhy::*)(bool), (int)0>(T1, T2)::[lambda(bool) (instance 1)]&, <bool>>(T1&&, T2&&...)
              weak defn :  mstd::invoke_result<T1, <T2...>>::type mstd::invoke<mbed::Callback<void(bool)>::Callback<Nanostack::PPPInterface*, void(Nanostack::PPPInterface::*)(bool), (int)0>(T1, T2)::[lambda(bool) (instance 1)]&, <bool>>(T1&&, T2&&...)
              reference :  rtos::Semaphore::try_acquire_for(std::__1::chrono::duration<unsigned, std::__1::ratio<(long long)1, (long long)1000>>)
              definition:  PPPPhy::ppp_phy_rx(void*)
              definition:  PPPPhy::phy_power_on()
              definition:  PPPPhy::phy_register()
              definition:  PPPPhy::link_state_cb(bool)
              definition:  PPPPhy::phy_power_off()
              definition:  PPPPhy::set_link_state_change_cb(mbed::Callback<void(bool)>)
              definition:  PPPPhy::tx(unsigned char*, unsigned short, unsigned char, data_protocol_e)
              definition:  PPPPhy::get_mtu()
              definition:  PPPPhy::get_iid64(unsigned char*)
              definition:  PPPPhy::PPPPhy(NanostackMemoryManager&, PPP&)
              definition:  PPPPhy::PPPPhy__sub_object(NanostackMemoryManager&, PPP&)
              weak defn :  PPPPhy::~PPPPhy__deallocating()
              definition:  Nanostack::PPPInterface::initialize()
              definition:  Nanostack::PPPInterface::get_interface_name(char*)
              definition:  Nanostack::PPPInterface::link_state_changed(bool)
              definition:  Nanostack::PPPInterface::connect_enet_tasklet()
              definition:  Nanostack::PPPInterface::set_link_state_changed_callback(mbed::Callback<void(unsigned char, signed char)>)
              definition:  Nanostack::PPPInterface::bringup(bool, const char*, const char*, const char*, nsapi_ip_stack, bool)
              definition:  Nanostack::PPPInterface::bringdown()
              weak defn :  Nanostack::PPPInterface::PPPInterface__sub_object(NanostackPPPPhy&)
              definition:  Nanostack::add_ppp_interface(PPP&, bool, OnboardNetworkStack::Interface**)
              definition:  Nanostack::add_ppp_interface(PPP&, bool, Nanostack::PPPInterface**)
              definition:  Nanostack::remove_ppp_interface(OnboardNetworkStack::Interface**)
              reference :  Nanostack::Interface::get_gateway(SocketAddress*)
              reference :  Nanostack::Interface::get_netmask(SocketAddress*)
              reference :  Nanostack::Interface::register_phy()
              reference :  Nanostack::Interface::get_ip_address(SocketAddress*)
              reference :  Nanostack::Interface::get_mac_address(char*, unsigned)
              reference :  Nanostack::Interface::attach(mbed::Callback<void(nsapi_event, int)>)
              reference :  Nanostack::Interface::Interface__sub_object(NanostackPhy&)
              reference :  NetStackMemoryManager::copy_from_buf(void*, unsigned, const void*) const
              reference :  NanostackMemoryManager::get_total_len(const void*) const
              reference :  NanostackMemoryManager::get_len(const void*) const
              reference :  NanostackMemoryManager::get_ptr(const void*) const
              reference :  NanostackMemoryManager::get_next(const void*) const
              weak defn :  mbed::Callback<void(unsigned char, signed char)>::call(unsigned char, signed char) const
              weak defn :  mbed::Callback<void(unsigned char, signed char)>::operator ()(unsigned char, signed char) const
              weak defn :  mbed::Callback<void(unsigned char, signed char)>::operator bool() const
              reference :  Nanostack::Interface::get_connection_status() const
              reference :  std::nothrow
              weak defn :  vtable for NanostackPPPPhy
              definition:  vtable for PPPPhy
              definition:  vtable for Nanostack::PPPInterface
              weak defn :  mbed::Callback<void(void*)>::Callback<PPPPhy*, void(PPPPhy::*)(void*), (int)0>(T1, T2)::[lambda(void*) (instance 1)]::operator ()(void*) const
              weak defn :  mbed::Callback<void(bool)>::Callback<PPPPhy*, void(PPPPhy::*)(bool), (int)0>(T1, T2)::[lambda(bool) (instance 1)]::operator ()(bool) const
              weak defn :  mbed::Callback<void(bool)>::Callback<Nanostack::PPPInterface*, void(Nanostack::PPPInterface::*)(bool), (int)0>(T1, T2)::[lambda(bool) (instance 1)]::operator ()(bool) const
              reference :  operator delete (void*)
              reference :  operator new(unsigned, const std::nothrow_t&)
              reference :  __2sprintf
              reference :  __cxa_pure_virtual
              reference :  __mesh_handler_c_callback
              reference :  _printf_d
              reference :  _printf_int_dec
              reference :  _printf_percent
              reference :  arm_net_phy_register
              reference :  enet_tasklet_connect
              reference :  enet_tasklet_disconnect
              reference :  enet_tasklet_init
              reference :  enet_tasklet_ppp_network_init
              reference :  eventOS_scheduler_mutex_release
              reference :  eventOS_scheduler_mutex_wait
              reference :  mbed_assert_internal
              reference :  ns_dyn_mem_free
              reference :  ns_dyn_mem_temporary_alloc
              reference :  _ZNSt3__18literals15chrono_literalsli1sEy
              reference :  mbed::detail::CallbackBase::control() const
              reference :  NanostackPhy::NanostackPhy__sub_object()
              reference :  mbed::Callback<void(bool)>::Callback__sub_object()
              reference :  mbed::Callback<void(bool)>::operator bool() const
              reference :  mbed::Callback<void(bool)>::operator ()(bool) const
              reference :  NanostackPhy::~NanostackPhy__sub_object()
              reference :  mbed::detail::CallbackBase::CallbackBase__sub_object(std::nullptr_t)
              reference :  mbed::detail::CallbackBase::call_fn() const
              reference :  NanostackPhy::nanostack_mac_phy()
              reference :  OnboardNetworkStack::Interface::set_ip_address(const char*, const char*, const char*, unsigned char)
              reference :  OnboardNetworkStack::Interface::get_ipv6_link_local_address(SocketAddress*)
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/nanostack/mbed-mesh-api/source/ThreadInterface.o.
              reference :  map_mesh_error(mesh_error_t)
              reference :  __mesh_handler_set_callback(Nanostack::Interface*)
              definition:  ThreadInterface::do_initialize()
              definition:  ThreadInterface::device_pskd_set(const char*)
              definition:  ThreadInterface::device_eui64_get(unsigned char*)
              definition:  ThreadInterface::device_eui64_set(const unsigned char*)
              weak defn :  ThreadInterface::~ThreadInterface__deallocating()
              weak defn :  ThreadInterface::~ThreadInterface()
              weak defn :  ThreadInterface::~ThreadInterface__sub_object()
              reference :  NetworkInterface::get_gateway(SocketAddress*)
              reference :  NetworkInterface::get_netmask(SocketAddress*)
              reference :  NetworkInterface::getaddrinfo(const char*, SocketAddress*, SocketAddress**, const char*)
              reference :  NetworkInterface::set_network(const SocketAddress&, const SocketAddress&, const SocketAddress&)
              reference :  NetworkInterface::set_blocking(bool)
              reference :  NetworkInterface::gethostbyname(const char*, SocketAddress*, nsapi_version, const char*)
              reference :  NetworkInterface::add_dns_server(const SocketAddress&, const char*)
              reference :  NetworkInterface::get_dns_server(int, SocketAddress*, const char*)
              reference :  NetworkInterface::get_ip_address(SocketAddress*)
              reference :  NetworkInterface::set_as_default()
              reference :  NetworkInterface::get_mac_address()
              reference :  NetworkInterface::getaddrinfo_async(const char*, SocketAddress*, mbed::Callback<void(int, SocketAddress*)>, const char*)
              reference :  NetworkInterface::get_interface_name(char*)
              reference :  NetworkInterface::gethostbyname_async(const char*, mbed::Callback<void(int, SocketAddress*)>, nsapi_version, const char*)
              reference :  NetworkInterface::set_default_parameters()
              reference :  NetworkInterface::gethostbyname_async_cancel(int)
              reference :  NetworkInterface::get_ipv6_link_local_address(SocketAddress*)
              reference :  NetworkInterface::attach(mbed::Callback<void(nsapi_event, int)>)
              reference :  NetworkInterface::set_dhcp(bool)
              reference :  NetworkInterface::~NetworkInterface__sub_object()
              reference :  InterfaceNanostack::disconnect()
              reference :  InterfaceNanostack::set_blocking(bool)
              reference :  InterfaceNanostack::get_ip_address(SocketAddress*)
              reference :  InterfaceNanostack::get_mac_address()
              reference :  InterfaceNanostack::attach(mbed::Callback<void(nsapi_event, int)>)
              reference :  InterfaceNanostack::connect()
              reference :  InterfaceNanostack::get_stack()
              reference :  rtos::Semaphore::acquire()
              reference :  Nanostack::MeshInterface::get_interface_name(char*)
              definition:  Nanostack::ThreadInterface::mesh_connect()
              definition:  Nanostack::ThreadInterface::device_pskd_set(const char*)
              definition:  Nanostack::ThreadInterface::mesh_disconnect()
              definition:  Nanostack::ThreadInterface::device_eui64_get(unsigned char*)
              definition:  Nanostack::ThreadInterface::device_eui64_set(const unsigned char*)
              definition:  Nanostack::ThreadInterface::init()
              definition:  Nanostack::ThreadInterface::bringup(bool, const char*, const char*, const char*, nsapi_ip_stack, bool)
              definition:  Nanostack::ThreadInterface::bringdown()
              weak defn :  Nanostack::ThreadInterface::ThreadInterface__sub_object(NanostackRfPhy&)
              reference :  Nanostack::Interface::get_gateway(SocketAddress*)
              reference :  Nanostack::Interface::get_netmask(SocketAddress*)
              reference :  Nanostack::Interface::register_phy()
              reference :  Nanostack::Interface::get_ip_address(SocketAddress*)
              reference :  Nanostack::Interface::get_mac_address(char*, unsigned)
              reference :  Nanostack::Interface::attach(mbed::Callback<void(nsapi_event, int)>)
              reference :  Nanostack::Interface::Interface__sub_object(NanostackPhy&)
              definition:  ThreadInterface::get_interface() const
              reference :  NetworkInterface::get_connection_status() const
              reference :  InterfaceNanostack::get_connection_status() const
              weak defn :  Nanostack::MeshInterface::get_phy() const
              reference :  Nanostack::Interface::get_connection_status() const
              weak defn :  Nanostack::Interface::get_phy() const
              reference :  std::nothrow
              definition:  construction vtable for InterfaceNanostack-in-ThreadInterface
              definition:  construction vtable for MeshInterfaceNanostack-in-ThreadInterface
              definition:  construction vtable for MeshInterface-in-ThreadInterface
              definition:  VTT for ThreadInterface
              definition:  vtable for ThreadInterface
              reference :  vtable for Nanostack::MeshInterface
              definition:  vtable for Nanostack::ThreadInterface
              weak defn :  thunk{-76} to ThreadInterface::~ThreadInterface__deallocating()
              weak defn :  thunk{-76} to ThreadInterface::~ThreadInterface()
              reference :  operator delete[] (void*)
              reference :  operator delete (void*)
              reference :  operator new(unsigned, const std::nothrow_t&)
              reference :  __cxa_pure_virtual
              reference :  __mesh_handler_c_callback
              reference :  eventOS_scheduler_mutex_release
              reference :  eventOS_scheduler_mutex_wait
              reference :  randLIB_seed_random
              reference :  thread_tasklet_connect
              reference :  thread_tasklet_device_eui64_get
              reference :  thread_tasklet_device_eui64_set
              reference :  thread_tasklet_device_pskd_set
              reference :  thread_tasklet_disconnect
              reference :  thread_tasklet_init
              reference :  thread_tasklet_network_init
              reference :  Nanostack::MeshInterface::MeshInterface__sub_object(NanostackRfPhy&)
              reference :  MeshInterfaceNanostack::~MeshInterfaceNanostack__sub_object()
              reference :  OnboardNetworkStack::Interface::set_ip_address(const char*, const char*, const char*, unsigned char)
              reference :  OnboardNetworkStack::Interface::get_ipv6_link_local_address(SocketAddress*)
              reference :  NetworkInterface::ethInterface()
              reference :  NetworkInterface::wifiInterface()
              reference :  thunk{v:0,-108} to MeshInterface::meshInterface()
              reference :  NetworkInterface::emacInterface()
              reference :  NetworkInterface::cellularInterface()
              reference :  MeshInterface::meshInterface()
              reference :  MeshInterfaceNanostack::~MeshInterfaceNanostack()
              reference :  MeshInterfaceNanostack::~MeshInterfaceNanostack__deallocating()
              reference :  thunk{-76} to MeshInterfaceNanostack::~MeshInterfaceNanostack()
              reference :  thunk{-76} to MeshInterfaceNanostack::~MeshInterfaceNanostack__deallocating()
              reference :  InterfaceNanostack::~InterfaceNanostack()
              reference :  InterfaceNanostack::~InterfaceNanostack__deallocating()
              reference :  NetworkInterface::meshInterface()
              reference :  MeshInterface::~MeshInterface()
              reference :  MeshInterface::~MeshInterface__deallocating()
              reference :  thunk{v:0,-36} to MeshInterface::~MeshInterface()
              reference :  thunk{v:0,-36} to MeshInterface::~MeshInterface__deallocating()
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/nanostack/mbed-mesh-api/source/WisunBorderRouter.o.
              definition:  WisunBorderRouter::get_radius_timing(ws_br_radius_timing*)
              definition:  WisunBorderRouter::routing_table_get(ws_br_route_info*, unsigned short)
              definition:  WisunBorderRouter::set_radius_timing(ws_br_radius_timing*)
              definition:  WisunBorderRouter::get_rpl_parameters(unsigned char*, unsigned char*, unsigned char*)
              definition:  WisunBorderRouter::set_rpl_parameters(unsigned char, unsigned char, unsigned char)
              definition:  WisunBorderRouter::apply_configuration(signed char)
              definition:  WisunBorderRouter::get_pan_configuration(unsigned short*)
              definition:  WisunBorderRouter::set_bbr_radius_timing()
              definition:  WisunBorderRouter::set_pan_configuration(unsigned short)
              definition:  WisunBorderRouter::set_bbr_radius_address()
              definition:  WisunBorderRouter::validate_radius_timing(ws_br_radius_timing*)
              definition:  WisunBorderRouter::validate_rpl_parameters(unsigned char, unsigned char, unsigned char)
              definition:  WisunBorderRouter::get_radius_shared_secret(unsigned short*, unsigned char*)
              definition:  WisunBorderRouter::set_radius_shared_secret(unsigned short, const unsigned char*)
              definition:  WisunBorderRouter::validate_pan_configuration(unsigned short)
              definition:  WisunBorderRouter::set_bbr_radius_shared_secret()
              definition:  WisunBorderRouter::get_radius_server_ipv6_address(char*)
              definition:  WisunBorderRouter::set_radius_server_ipv6_address(const char*)
              definition:  WisunBorderRouter::stop()
              definition:  WisunBorderRouter::start(NetworkInterface*, OnboardNetworkStack::Interface*)
              definition:  WisunBorderRouter::start(NetworkInterface*, NetworkInterface*)
              definition:  WisunBorderRouter::info_get(ws_br_info*)
              definition:  WisunBorderRouter::configure()
              definition:  WisunBorderRouter::WisunBorderRouter()
              definition:  WisunBorderRouter::WisunBorderRouter__sub_object()
              weak defn :  InterfaceNanostack::get_interface_id() const
              weak defn :  Nanostack::Interface::get_interface_id() const
              reference :  std::nothrow
              reference :  operator delete[] (void*)
              reference :  operator new[] (unsigned, const std::nothrow_t&)
              reference :  __aeabi_memclr8
              reference :  __aeabi_memcpy
              reference :  atoi
              reference :  stoip6
              reference :  strcpy
              reference :  strlen
              reference :  ws_bbr_info_get
              reference :  ws_bbr_pan_configuration_get
              reference :  ws_bbr_pan_configuration_set
              reference :  ws_bbr_pan_configuration_validate
              reference :  ws_bbr_radius_address_set
              reference :  ws_bbr_radius_shared_secret_get
              reference :  ws_bbr_radius_shared_secret_set
              reference :  ws_bbr_radius_timing_get
              reference :  ws_bbr_radius_timing_set
              reference :  ws_bbr_radius_timing_validate
              reference :  ws_bbr_routing_table_get
              reference :  ws_bbr_rpl_parameters_get
              reference :  ws_bbr_rpl_parameters_set
              reference :  ws_bbr_rpl_parameters_validate
              reference :  ws_bbr_start
              reference :  ws_bbr_stop
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/nanostack/mbed-mesh-api/source/WisunInterface.o.
              reference :  map_mesh_error(mesh_error_t)
              reference :  __mesh_handler_set_callback(Nanostack::Interface*)
              reference :  SocketAddress::set_ip_address(const char*)
              definition:  WisunInterface::do_initialize()
              definition:  WisunInterface::stack_info_get(ws_stack_state*)
              definition:  WisunInterface::get_channel_mask(unsigned*)
              definition:  WisunInterface::get_network_name(char*)
              definition:  WisunInterface::get_network_size(unsigned char*)
              definition:  WisunInterface::set_channel_mask(unsigned*)
              definition:  WisunInterface::set_network_name(char*)
              definition:  WisunInterface::set_network_size(unsigned char)
              definition:  WisunInterface::enable_statistics()
              definition:  WisunInterface::getRouterIpAddress(char*, signed char)
              definition:  WisunInterface::read_nw_statistics(mesh_nw_statistics_t*)
              definition:  WisunInterface::read_mac_statistics(mesh_mac_statistics_t*)
              definition:  WisunInterface::set_own_certificate(unsigned char*, unsigned short, unsigned char*, unsigned short)
              definition:  WisunInterface::get_timing_parameters(unsigned short*, unsigned short*, unsigned char*, unsigned short*)
              definition:  WisunInterface::set_timing_parameters(unsigned short, unsigned short, unsigned char, unsigned short)
              definition:  WisunInterface::validate_channel_mask(unsigned*)
              definition:  WisunInterface::validate_network_name(char*)
              definition:  WisunInterface::validate_network_size(unsigned char)
              definition:  WisunInterface::remove_own_certificates()
              definition:  WisunInterface::set_trusted_certificate(unsigned char*, unsigned short)
              definition:  WisunInterface::validate_timing_parameters(unsigned short, unsigned short, unsigned char, unsigned short)
              definition:  WisunInterface::remove_trusted_certificates()
              definition:  WisunInterface::get_unicast_channel_function(mesh_channel_function_t*, unsigned short*, unsigned char*)
              definition:  WisunInterface::set_unicast_channel_function(mesh_channel_function_t, unsigned short, unsigned char)
              definition:  WisunInterface::get_network_regulatory_domain(unsigned char*, unsigned char*, unsigned char*)
              definition:  WisunInterface::set_network_regulatory_domain(unsigned char, unsigned char, unsigned char)
              definition:  WisunInterface::get_broadcast_channel_function(mesh_channel_function_t*, unsigned short*, unsigned char*, unsigned*)
              definition:  WisunInterface::set_broadcast_channel_function(mesh_channel_function_t, unsigned short, unsigned char, unsigned)
              definition:  WisunInterface::validate_unicast_channel_function(mesh_channel_function_t, unsigned short, unsigned char)
              definition:  WisunInterface::validate_network_regulatory_domain(unsigned char, unsigned char, unsigned char)
              definition:  WisunInterface::validate_broadcast_channel_function(mesh_channel_function_t, unsigned short, unsigned char, unsigned)
              definition:  WisunInterface::info_get(ws_rpl_info*)
              definition:  WisunInterface::configure()
              weak defn :  WisunInterface::~WisunInterface__deallocating()
              weak defn :  WisunInterface::~WisunInterface()
              weak defn :  WisunInterface::~WisunInterface__sub_object()
              reference :  NetworkInterface::get_gateway(SocketAddress*)
              reference :  NetworkInterface::get_netmask(SocketAddress*)
              reference :  NetworkInterface::getaddrinfo(const char*, SocketAddress*, SocketAddress**, const char*)
              reference :  NetworkInterface::set_network(const SocketAddress&, const SocketAddress&, const SocketAddress&)
              reference :  NetworkInterface::set_blocking(bool)
              reference :  NetworkInterface::gethostbyname(const char*, SocketAddress*, nsapi_version, const char*)
              reference :  NetworkInterface::add_dns_server(const SocketAddress&, const char*)
              reference :  NetworkInterface::get_dns_server(int, SocketAddress*, const char*)
              reference :  NetworkInterface::get_ip_address(SocketAddress*)
              reference :  NetworkInterface::set_as_default()
              reference :  NetworkInterface::get_mac_address()
              reference :  NetworkInterface::getaddrinfo_async(const char*, SocketAddress*, mbed::Callback<void(int, SocketAddress*)>, const char*)
              reference :  NetworkInterface::get_interface_name(char*)
              reference :  NetworkInterface::gethostbyname_async(const char*, mbed::Callback<void(int, SocketAddress*)>, nsapi_version, const char*)
              reference :  NetworkInterface::set_default_parameters()
              reference :  NetworkInterface::gethostbyname_async_cancel(int)
              reference :  NetworkInterface::get_ipv6_link_local_address(SocketAddress*)
              reference :  NetworkInterface::attach(mbed::Callback<void(nsapi_event, int)>)
              reference :  NetworkInterface::set_dhcp(bool)
              reference :  NetworkInterface::~NetworkInterface__sub_object()
              reference :  InterfaceNanostack::disconnect()
              reference :  InterfaceNanostack::set_blocking(bool)
              reference :  InterfaceNanostack::get_ip_address(SocketAddress*)
              reference :  InterfaceNanostack::get_mac_address()
              reference :  InterfaceNanostack::attach(mbed::Callback<void(nsapi_event, int)>)
              reference :  InterfaceNanostack::connect()
              reference :  InterfaceNanostack::get_stack()
              reference :  rtos::Semaphore::acquire()
              reference :  Nanostack::MeshInterface::get_interface_name(char*)
              definition:  Nanostack::WisunInterface::get_gateway(SocketAddress*)
              definition:  Nanostack::WisunInterface::mesh_connect()
              definition:  Nanostack::WisunInterface::mesh_disconnect()
              definition:  Nanostack::WisunInterface::init()
              definition:  Nanostack::WisunInterface::bringup(bool, const char*, const char*, const char*, nsapi_ip_stack, bool)
              definition:  Nanostack::WisunInterface::bringdown()
              weak defn :  Nanostack::WisunInterface::WisunInterface__sub_object(NanostackRfPhy&)
              reference :  Nanostack::Interface::get_netmask(SocketAddress*)
              reference :  Nanostack::Interface::register_phy()
              reference :  Nanostack::Interface::get_ip_address(SocketAddress*)
              reference :  Nanostack::Interface::get_mac_address(char*, unsigned)
              reference :  Nanostack::Interface::attach(mbed::Callback<void(nsapi_event, int)>)
              reference :  Nanostack::Interface::Interface__sub_object(NanostackPhy&)
              reference :  SocketAddress::get_ip_address() const
              definition:  WisunInterface::get_interface() const
              reference :  NetworkInterface::get_connection_status() const
              reference :  InterfaceNanostack::get_connection_status() const
              reference :  Nanostack::Interface::get_connection_status() const
              reference :  std::nothrow
              definition:  construction vtable for InterfaceNanostack-in-WisunInterface
              definition:  construction vtable for MeshInterfaceNanostack-in-WisunInterface
              definition:  construction vtable for MeshInterface-in-WisunInterface
              definition:  VTT for WisunInterface
              definition:  vtable for WisunInterface
              reference :  vtable for Nanostack::MeshInterface
              definition:  vtable for Nanostack::WisunInterface
              weak defn :  thunk{-76} to WisunInterface::~WisunInterface__deallocating()
              weak defn :  thunk{-76} to WisunInterface::~WisunInterface()
              reference :  operator delete[] (void*)
              reference :  operator delete (void*)
              reference :  operator new(unsigned, const std::nothrow_t&)
              reference :  __aeabi_memclr4
              reference :  __cxa_pure_virtual
              reference :  __mesh_handler_c_callback
              reference :  arm_net_address_get
              reference :  eventOS_scheduler_mutex_release
              reference :  eventOS_scheduler_mutex_wait
              reference :  randLIB_seed_random
              reference :  rpl_instance_list_read
              reference :  rpl_read_dodag_info
              reference :  strncpy
              reference :  wisun_tasklet_connect
              reference :  wisun_tasklet_disconnect
              reference :  wisun_tasklet_get_router_ip_address
              reference :  wisun_tasklet_init
              reference :  wisun_tasklet_network_init
              reference :  wisun_tasklet_remove_own_certificates
              reference :  wisun_tasklet_remove_trusted_certificates
              reference :  wisun_tasklet_set_own_certificate
              reference :  wisun_tasklet_set_trusted_certificate
              reference :  wisun_tasklet_statistics_mac_read
              reference :  wisun_tasklet_statistics_nw_read
              reference :  wisun_tasklet_statistics_start
              reference :  ws_management_channel_mask_get
              reference :  ws_management_channel_mask_set
              reference :  ws_management_channel_mask_validate
              reference :  ws_management_fhss_broadcast_channel_function_configure
              reference :  ws_management_fhss_broadcast_channel_function_get
              reference :  ws_management_fhss_broadcast_channel_function_validate
              reference :  ws_management_fhss_unicast_channel_function_configure
              reference :  ws_management_fhss_unicast_channel_function_get
              reference :  ws_management_fhss_unicast_channel_function_validate
              reference :  ws_management_network_name_get
              reference :  ws_management_network_name_set
              reference :  ws_management_network_name_validate
              reference :  ws_management_network_size_get
              reference :  ws_management_network_size_set
              reference :  ws_management_network_size_validate
              reference :  ws_management_regulatory_domain_get
              reference :  ws_management_regulatory_domain_set
              reference :  ws_management_regulatory_domain_validate
              reference :  ws_management_timing_parameters_get
              reference :  ws_management_timing_parameters_set
              reference :  ws_management_timing_parameters_validate
              reference :  ws_stack_info_get
              reference :  Nanostack::MeshInterface::MeshInterface__sub_object(NanostackRfPhy&)
              reference :  InterfaceNanostack::get_interface_id() const
              reference :  NanostackLockGuard::NanostackLockGuard__sub_object()
              reference :  NanostackLockGuard::~NanostackLockGuard__sub_object()
              reference :  SocketAddress::SocketAddress__sub_object()
              reference :  SocketAddress::~SocketAddress__sub_object()
              reference :  MeshInterfaceNanostack::~MeshInterfaceNanostack__sub_object()
              reference :  OnboardNetworkStack::Interface::set_ip_address(const char*, const char*, const char*, unsigned char)
              reference :  OnboardNetworkStack::Interface::get_ipv6_link_local_address(SocketAddress*)
              reference :  NetworkInterface::ethInterface()
              reference :  NetworkInterface::wifiInterface()
              reference :  thunk{v:0,-108} to MeshInterface::meshInterface()
              reference :  NetworkInterface::emacInterface()
              reference :  NetworkInterface::cellularInterface()
              reference :  MeshInterface::meshInterface()
              reference :  MeshInterfaceNanostack::~MeshInterfaceNanostack()
              reference :  MeshInterfaceNanostack::~MeshInterfaceNanostack__deallocating()
              reference :  thunk{-76} to MeshInterfaceNanostack::~MeshInterfaceNanostack()
              reference :  thunk{-76} to MeshInterfaceNanostack::~MeshInterfaceNanostack__deallocating()
              reference :  InterfaceNanostack::~InterfaceNanostack()
              reference :  InterfaceNanostack::~InterfaceNanostack__deallocating()
              reference :  NetworkInterface::meshInterface()
              reference :  MeshInterface::~MeshInterface()
              reference :  MeshInterface::~MeshInterface__deallocating()
              reference :  thunk{v:0,-36} to MeshInterface::~MeshInterface()
              reference :  thunk{v:0,-36} to MeshInterface::~MeshInterface__deallocating()
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/nanostack/mbed-mesh-api/source/ethernet_tasklet.o.
              reference :  arm_net_address_get
              reference :  arm_nwk_interface_configure_ipv6_bootstrap_set
              reference :  arm_nwk_interface_down
              reference :  arm_nwk_interface_ethernet_init
              reference :  arm_nwk_interface_up
              definition:  enet_tasklet_connect
              definition:  enet_tasklet_disconnect
              definition:  enet_tasklet_init
              definition:  enet_tasklet_link_state_changed
              definition:  enet_tasklet_network_init
              definition:  enet_tasklet_ppp_network_init
              reference :  ethernet_mac_create
              reference :  eventOS_event_handler_create
              reference :  eventOS_event_send
              reference :  eventOS_event_timer_cancel
              reference :  eventOS_event_timer_request
              reference :  eventOS_timeout_cancel
              reference :  eventOS_timeout_every_ms
              reference :  memcmp
              reference :  mesh_system_send_connect_event
              reference :  ns_dyn_mem_alloc
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/nanostack/mbed-mesh-api/source/mesh_system.o.
              reference :  eventOS_event_send
              reference :  eventOS_scheduler_mutex_release
              reference :  eventOS_scheduler_mutex_wait
              reference :  mbed_error
              definition:  mesh_system_init
              definition:  mesh_system_send_connect_event
              definition:  mesh_system_set_file_system_root_path
              reference :  net_init_core
              reference :  ns_file_system_set_root_path
              reference :  ns_hal_init
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/nanostack/mbed-mesh-api/source/nd_tasklet.o.
              reference :  __aeabi_memclr4
              reference :  arm_net_address_get
              reference :  arm_nwk_6lowpan_link_nwk_id_filter_for_nwk_scan
              reference :  arm_nwk_6lowpan_link_panid_filter_for_nwk_scan
              reference :  arm_nwk_6lowpan_link_scan_parameter_set
              reference :  arm_nwk_interface_configure_6lowpan_bootstrap_set
              reference :  arm_nwk_interface_down
              reference :  arm_nwk_interface_lowpan_init
              reference :  arm_nwk_interface_up
              reference :  arm_nwk_link_layer_security_mode
              reference :  arm_nwk_mac_address_read
              reference :  arm_nwk_nd_address_read
              reference :  arm_nwk_set_channel_list
              reference :  common_write_16_bit
              reference :  eventOS_event_handler_create
              reference :  eventOS_event_timer_cancel
              reference :  eventOS_event_timer_request
              reference :  ip6tos
              reference :  mbed_tracef
              reference :  mesh_system_send_connect_event
              reference :  multicast_mpl_domain_subscribe
              definition:  nd_tasklet_configure_and_connect_to_network
              definition:  nd_tasklet_connect
              definition:  nd_tasklet_disconnect
              definition:  nd_tasklet_get_router_ip_address
              definition:  nd_tasklet_init
              definition:  nd_tasklet_main
              definition:  nd_tasklet_network_init
              definition:  nd_tasklet_network_state_changed
              definition:  nd_tasklet_parse_network_event
              definition:  nd_tasklet_trace_bootstrap_info
              reference :  ns_dyn_mem_alloc
              reference :  ns_sw_mac_create
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/nanostack/mbed-mesh-api/source/thread_tasklet.o.
              reference :  __aeabi_memclr8
              reference :  arm_net_address_get
              reference :  arm_nwk_host_mode_set
              reference :  arm_nwk_interface_configure_6lowpan_bootstrap_set
              reference :  arm_nwk_interface_down
              reference :  arm_nwk_interface_lowpan_init
              reference :  arm_nwk_interface_up
              reference :  arm_nwk_mac_address_read
              reference :  common_write_16_bit
              reference :  eventOS_event_handler_create
              reference :  eventOS_event_timer_cancel
              reference :  eventOS_event_timer_request
              reference :  eventOS_timeout_cancel
              reference :  eventOS_timeout_every_ms
              reference :  mbed_assert_internal
              reference :  mbed_tracef
              reference :  memcmp
              reference :  mesh_system_send_connect_event
              reference :  ns_dyn_mem_alloc
              reference :  ns_dyn_mem_free
              reference :  ns_sw_mac_create
              definition:  read_link_configuration
              reference :  strcpy
              reference :  strlen
              reference :  thread_management_configuration_get
              reference :  thread_management_node_init
              definition:  thread_tasklet_configure_and_connect_to_network
              definition:  thread_tasklet_connect
              definition:  thread_tasklet_data_poll_rate_set
              definition:  thread_tasklet_device_eui64_get
              definition:  thread_tasklet_device_eui64_set
              definition:  thread_tasklet_device_pskd_set
              definition:  thread_tasklet_disconnect
              definition:  thread_tasklet_init
              definition:  thread_tasklet_main
              definition:  thread_tasklet_network_init
              definition:  thread_tasklet_network_state_changed
              definition:  thread_tasklet_parse_network_event
              definition:  thread_tasklet_poll_network_status
              definition:  thread_tasklet_trace_bootstrap_info
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/nanostack/mbed-mesh-api/source/wisun_tasklet.o.
              reference :  __aeabi_memclr4
              reference :  arm_network_own_certificate_add
              reference :  arm_network_own_certificates_remove
              reference :  arm_network_trusted_certificate_add
              reference :  arm_network_trusted_certificates_remove
              reference :  arm_nwk_interface_configure_6lowpan_bootstrap_set
              reference :  arm_nwk_interface_down
              reference :  arm_nwk_interface_lowpan_init
              reference :  arm_nwk_interface_up
              reference :  arm_nwk_nd_address_read
              reference :  eventOS_event_handler_create
              reference :  eventOS_event_timer_cancel
              reference :  eventOS_event_timer_request
              reference :  fhss_functions
              reference :  ip6tos
              reference :  mesh_system_send_connect_event
              reference :  ns_dyn_mem_alloc
              reference :  ns_dyn_mem_free
              reference :  ns_list_add_to_end_
              reference :  ns_list_get_next_
              reference :  ns_list_init_
              reference :  ns_list_remove_
              reference :  ns_sw_mac_create
              reference :  ns_sw_mac_statistics_start
              reference :  protocol_stats_start
              definition:  wisun_tasklet_connect
              definition:  wisun_tasklet_disconnect
              definition:  wisun_tasklet_get_router_ip_address
              definition:  wisun_tasklet_init
              definition:  wisun_tasklet_network_init
              definition:  wisun_tasklet_remove_own_certificates
              definition:  wisun_tasklet_remove_trusted_certificates
              definition:  wisun_tasklet_set_own_certificate
              definition:  wisun_tasklet_set_trusted_certificate
              definition:  wisun_tasklet_statistics_mac_read
              definition:  wisun_tasklet_statistics_nw_read
              definition:  wisun_tasklet_statistics_start
              reference :  ws_management_network_name_get
              reference :  ws_management_node_init
              reference :  ws_management_regulatory_domain_get
              reference :  ws_statistics_start
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/nanostack/nanostack-hal-mbed-cmsis-rtos/arm_hal_fhss_timer.o.
              weak defn :  T1* core_util_atomic_load<mbed::Timeout>(T1*const *)
              weak defn :  void core_util_atomic_store<mbed::Timeout>(T1**, T1*)
              reference :  mbed::TickerBase::attach(mbed::Callback<void()>, std::__1::chrono::duration<long long, std::__1::ratio<(long long)1, (long long)1000000>>)
              reference :  mbed::TickerBase::detach()
              weak defn :  mbed::HighResClock::now()
              weak defn :  mbed::HighResClock::lock()
              weak defn :  mbed::get_time_point(const ticker_event_s&)
              reference :  mbed::mbed_highprio_event_queue()
              reference :  mbed::Timeout::Timeout()
              weak defn :  void events::EventQueue::function_call<void(*)()>(void*)
              weak defn :  void events::EventQueue::function_dtor<void(*)()>(void*)
              weak defn :  int events::EventQueue::call<void(*)()>(T1)
              weak defn :  SingletonPtr<mbed::Timeout>::get() const
              weak defn :  SingletonPtr<mbed::Timeout>::operator ->() const
              weak defn :  mbed::TimeoutBase::remaining_time() const
              weak defn :  mbed::TimeoutBase::scheduled_time() const
              weak defn :  mbed::TickerDataClock::now() const
              reference :  equeue_alloc
              reference :  equeue_event_dtor
              reference :  equeue_post
              definition:  fhss_functions
              reference :  get_us_ticker_data
              reference :  mbed_assert_internal
              reference :  osMutexAcquire
              reference :  osMutexRelease
              reference :  platform_enter_critical
              reference :  platform_exit_critical
              reference :  singleton_mutex_id
              reference :  sleep_manager_lock_deep_sleep_internal
              reference :  ticker_read_us
              reference :  mbed::Callback<void()>::Callback__sub_object<void(*)(), (int)0>(T1)
              reference :  _ZNSt3__18literals15chrono_literalsli1sEy
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/nanostack/nanostack-hal-mbed-cmsis-rtos/arm_hal_interrupt.o.
              reference :  mbed_assert_internal
              reference :  osMutexAcquire
              reference :  osMutexNew
              reference :  osMutexRelease
              definition:  platform_critical_init
              definition:  platform_enter_critical
              definition:  platform_exit_critical
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/nanostack/nanostack-hal-mbed-cmsis-rtos/arm_hal_random.o.
              definition:  arm_random_module_init
              definition:  arm_random_seed_get
              reference :  mbedtls_hardware_poll
              reference :  mbedtls_platform_setup
              reference :  mbedtls_platform_teardown
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/nanostack/nanostack-hal-mbed-cmsis-rtos/arm_hal_timer.o.
              reference :  mbed::TickerBase::attach_absolute(mbed::Callback<void()>, std::__1::chrono::time_point<mbed::TickerDataClock, std::__1::chrono::duration<long long, std::__1::ratio<(long long)1, (long long)1000000>>>)
              reference :  mbed::TickerBase::detach()
              reference :  mbed::mbed_highprio_event_queue()
              weak defn :  void mbed::Timeout::attach_absolute<void(&)()>(T1&&, std::__1::chrono::time_point<mbed::HighResClock, std::__1::chrono::duration<long long, std::__1::ratio<(long long)1, (long long)1000000>>>)
              reference :  mbed::Timeout::Timeout()
              reference :  __aeabi_ldivmod
              reference :  equeue_alloc
              reference :  equeue_event_dtor
              reference :  equeue_post
              reference :  get_us_ticker_data
              reference :  mbed_assert_internal
              reference :  osMutexAcquire
              reference :  osMutexRelease
              definition:  platform_timer_disable
              definition:  platform_timer_enable
              definition:  platform_timer_get_remaining_slots
              definition:  platform_timer_set_cb
              definition:  platform_timer_start
              reference :  singleton_mutex_id
              reference :  ticker_read_us
              reference :  SingletonPtr<mbed::Timeout>::get() const
              reference :  SingletonPtr<mbed::Timeout>::operator ->() const
              reference :  mbed::HighResClock::now()
              reference :  mbed::Callback<void()>::Callback__sub_object<void(*)(), (int)0>(T1)
              reference :  int events::EventQueue::call<void(*)()>(T1)
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/nanostack/nanostack-hal-mbed-cmsis-rtos/ns_event_loop.o.
              definition:  eventOS_scheduler_idle
              reference :  eventOS_scheduler_mutex_release
              reference :  eventOS_scheduler_mutex_wait
              reference :  eventOS_scheduler_run
              definition:  eventOS_scheduler_signal
              reference :  mbed_assert_internal
              definition:  ns_event_loop_init
              reference :  ns_event_loop_mutex_init
              definition:  ns_event_loop_thread_create
              definition:  ns_event_loop_thread_start
              reference :  osThreadFlagsSet
              reference :  osThreadFlagsWait
              reference :  osThreadNew
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/nanostack/nanostack-hal-mbed-cmsis-rtos/ns_event_loop_mbed.o.
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/nanostack/nanostack-hal-mbed-cmsis-rtos/ns_event_loop_mutex.o.
              definition:  eventOS_scheduler_mutex_is_owner
              definition:  eventOS_scheduler_mutex_release
              definition:  eventOS_scheduler_mutex_wait
              reference :  mbed_assert_internal
              definition:  ns_event_loop_mutex_init
              reference :  osMutexAcquire
              reference :  osMutexNew
              reference :  osMutexRelease
              reference :  osThreadGetId
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/nanostack/nanostack-hal-mbed-cmsis-rtos/ns_file_system_api.o.
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/nanostack/nanostack-hal-mbed-cmsis-rtos/ns_hal_init.o.
              reference :  __aeabi_assert
              reference :  eventOS_scheduler_init
              reference :  malloc
              reference :  ns_dyn_mem_init
              reference :  ns_event_loop_init
              reference :  ns_event_loop_thread_create
              reference :  ns_event_loop_thread_start
              definition:  ns_hal_init
              reference :  platform_critical_init
              reference :  platform_timer_enable
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/nanostack/nanostack-hal-mbed-cmsis-rtos/nvm/nvm_ram.o.
              reference :  __aeabi_memcpy
              reference :  eventOS_timeout_ms
              reference :  free
              reference :  malloc
              reference :  ns_list_add_to_end_
              reference :  ns_list_get_next_
              reference :  ns_list_init_
              reference :  ns_list_remove_
              definition:  platform_nvm_finalize
              definition:  platform_nvm_flush
              definition:  platform_nvm_init
              definition:  platform_nvm_key_create
              definition:  platform_nvm_key_delete
              definition:  platform_nvm_read
              definition:  platform_nvm_write
              reference :  strcmp
              reference :  strlen
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/nanostack/sal-stack-nanostack-eventloop/source/event.o.
              definition:  curr_tasklet
              definition:  eventOS_cancel
              definition:  eventOS_event_cancel_critical
              definition:  eventOS_event_find_by_id_critical
              definition:  eventOS_event_handler_create
              definition:  eventOS_event_send
              definition:  eventOS_event_send_timer_allocated
              definition:  eventOS_event_send_user_allocated
              definition:  eventOS_scheduler_dispatch_event
              definition:  eventOS_scheduler_get_active_tasklet
              reference :  eventOS_scheduler_idle
              definition:  eventOS_scheduler_init
              definition:  eventOS_scheduler_run
              definition:  eventOS_scheduler_run_until_idle
              definition:  eventOS_scheduler_set_active_tasklet
              reference :  eventOS_scheduler_signal
              definition:  eventOS_scheduler_timer_stop
              definition:  eventOS_scheduler_timer_synch_after_sleep
              definition:  event_core_free_push
              definition:  event_tasklet_handler_id_valid
              reference :  ns_dyn_mem_alloc
              reference :  ns_dyn_mem_free
              reference :  ns_dyn_mem_temporary_alloc
              reference :  ns_list_add_before_
              reference :  ns_list_add_to_end_
              reference :  ns_list_add_to_start_
              reference :  ns_list_get_next_
              reference :  ns_list_init_
              reference :  ns_list_remove_
              reference :  ns_timer_sleep
              reference :  platform_enter_critical
              reference :  platform_exit_critical
              reference :  system_timer_tick_update
              reference :  timer_sys_disable
              reference :  timer_sys_event_cancel_critical
              reference :  timer_sys_event_free
              reference :  timer_sys_init
              reference :  timer_sys_wakeup
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/nanostack/sal-stack-nanostack-eventloop/source/ns_timeout.o.
              reference :  eventOS_cancel
              reference :  eventOS_event_handler_create
              reference :  eventOS_event_timer_request_at
              reference :  eventOS_event_timer_request_every
              reference :  eventOS_event_timer_ticks
              definition:  eventOS_timeout_cancel
              definition:  eventOS_timeout_every_ms
              definition:  eventOS_timeout_ms
              reference :  ns_dyn_mem_alloc
              reference :  ns_dyn_mem_free
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/nanostack/sal-stack-nanostack-eventloop/source/ns_timer.o.
              definition:  eventOS_callback_timer_register
              definition:  eventOS_callback_timer_start
              definition:  eventOS_callback_timer_stop
              definition:  eventOS_callback_timer_unregister
              reference :  ns_dyn_mem_alloc
              reference :  ns_dyn_mem_free
              reference :  ns_list_add_to_end_
              reference :  ns_list_get_next_
              reference :  ns_list_remove_
              definition:  ns_timer_sleep
              reference :  platform_enter_critical
              reference :  platform_exit_critical
              reference :  platform_timer_disable
              reference :  platform_timer_get_remaining_slots
              reference :  platform_timer_set_cb
              reference :  platform_timer_start
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/nanostack/sal-stack-nanostack-eventloop/source/system_timer.o.
              reference :  eventOS_callback_timer_register
              reference :  eventOS_callback_timer_start
              reference :  eventOS_callback_timer_stop
              reference :  eventOS_cancel
              reference :  eventOS_event_find_by_id_critical
              reference :  eventOS_event_send_timer_allocated
              definition:  eventOS_event_timer_cancel
              definition:  eventOS_event_timer_request
              definition:  eventOS_event_timer_request_at
              definition:  eventOS_event_timer_request_every
              definition:  eventOS_event_timer_request_in
              definition:  eventOS_event_timer_shortest_active_timer
              definition:  eventOS_event_timer_ticks
              reference :  event_tasklet_handler_id_valid
              reference :  ns_dyn_mem_alloc
              reference :  ns_list_add_before_
              reference :  ns_list_add_to_end_
              reference :  ns_list_add_to_start_
              reference :  ns_list_get_next_
              reference :  ns_list_remove_
              reference :  platform_enter_critical
              reference :  platform_exit_critical
              definition:  system_timer_tick_update
              definition:  timer_sys_disable
              definition:  timer_sys_event_cancel_critical
              definition:  timer_sys_event_free
              definition:  timer_sys_init
              definition:  timer_sys_wakeup
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/nanostack/sal-stack-nanostack/source/6LoWPAN/Bootstraps/Generic/network_lib.o.
              reference :  addr_ipv6_scope
              reference :  address_module_init
              reference :  buffer_free
              reference :  buffer_socket_set
              reference :  mbed_tracef
              definition:  network_library_init
              reference :  nwk_bootsrap_state_update
              definition:  nwk_parent_poll_fail_cb
              definition:  nwk_ready
              definition:  nwk_udp_rx_security_check
              reference :  protocol_init
              reference :  protocol_stack_interface_info_get
              reference :  protocol_stack_interface_info_get_by_id
              reference :  socket_init
              reference :  socket_lookup_ipv6
              reference :  thread_attach_ready
              reference :  thread_bootstrap_connection_error
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/nanostack/sal-stack-nanostack/source/6LoWPAN/Bootstraps/Generic/protocol_6lowpan.o.
              reference :  ADDR_LINK_LOCAL_ALL_NODES
              reference :  ADDR_LINK_LOCAL_PREFIX
              reference :  ADDR_SHORT_ADR_SUFFIC
              reference :  addr_iid_matches_eui64
              reference :  addr_is_ipv6_link_local
              reference :  arm_nwk_6lowpan_borderrouter_data_free
              reference :  buffer_free
              reference :  check_power_state
              reference :  cipv6_frag_reassembly
              reference :  common_read_16_bit
              reference :  common_write_16_bit
              reference :  etx_storage_entry_get
              reference :  icmpv6_down
              reference :  icmpv6_up
              reference :  ipv6_down
              reference :  ipv6_forwarding_down
              reference :  ipv6_forwarding_up
              reference :  ipv6_neighbour_invalidate_ll_addr
              reference :  ipv6_route_add
              reference :  lowpan_adaptation_data_process_tx_preprocess
              reference :  lowpan_adaptation_interface_tx
              reference :  lowpan_down
              reference :  lowpan_up
              reference :  mac_data_poll_init
              reference :  mac_helper_coordinator_address_get
              reference :  mac_helper_coordinator_address_set
              reference :  mac_helper_mac16_address_get
              reference :  mac_helper_pib_boolean_set
              reference :  mac_neighbor_table_address_discover
              reference :  mac_neighbor_table_neighbor_refresh
              reference :  mac_neighbor_table_neighbor_remove
              reference :  mbed_tracef
              reference :  memcmp
              reference :  mesh_down
              reference :  mesh_up
              reference :  mle_class_active_neigh_counter
              reference :  nd_6lowpan_set_radv_params
              reference :  nd_params
              reference :  nd_remove_registration
              reference :  ns_list_get_next_
              definition:  protocol_6lowpan_allocate_mac16
              definition:  protocol_6lowpan_beacon_compare_rx
              definition:  protocol_6lowpan_beacon_join_priority_tx
              definition:  protocol_6lowpan_configure_core
              definition:  protocol_6lowpan_host_init
              definition:  protocol_6lowpan_interface_common_init
              definition:  protocol_6lowpan_interface_compare_cordinator_netid
              definition:  protocol_6lowpan_interface_get_link_local_cordinator_address
              definition:  protocol_6lowpan_interface_get_mac_coordinator_address
              definition:  protocol_6lowpan_latency_estimate_get
              reference :  protocol_6lowpan_mle_data_get
              definition:  protocol_6lowpan_neighbor_address_state_synch
              definition:  protocol_6lowpan_neighbor_priority_clear_all
              definition:  protocol_6lowpan_neighbor_priority_set
              definition:  protocol_6lowpan_neighbor_priority_update
              definition:  protocol_6lowpan_neighbor_remove
              definition:  protocol_6lowpan_neighbor_second_priority_set
              definition:  protocol_6lowpan_register_handlers
              definition:  protocol_6lowpan_release_long_link_address_from_neighcache
              definition:  protocol_6lowpan_release_short_link_address_from_neighcache
              definition:  protocol_6lowpan_router_init
              definition:  protocol_6lowpan_rpl_domain
              definition:  protocol_6lowpan_rpl_global_priority_get
              definition:  protocol_6lowpan_rpl_root_dodag
              definition:  protocol_6lowpan_stack
              definition:  protocol_6lowpan_stagger_estimate_get
              definition:  protocol_init
              reference :  protocol_push
              reference :  protocol_stack_interface_info_get_by_id
              reference :  protocol_stats_update
              reference :  randLIB_get_16bit
              reference :  randLIB_get_random_in_range
              reference :  rpl_control_create_domain
              reference :  rpl_instance_list_read
              reference :  rpl_read_dodag_info
              reference :  sec_libray_init
              reference :  socket_up
              reference :  tcp_up
              reference :  thread_addr_is_mesh_local
              reference :  thread_nd_address_remove
              reference :  udp_down
              reference :  udp_up
              reference :  ws_cfg_settings_init
              reference :  ws_common_datarate_get
              reference :  ws_common_latency_estimate_get
              reference :  ws_common_network_size_estimate_get
              reference :  ws_common_primary_parent_update
              reference :  ws_common_secondary_parent_update
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/nanostack/sal-stack-nanostack/source/6LoWPAN/Bootstraps/Generic/protocol_6lowpan_bootstrap.o.
              reference :  ADDR_LINK_LOCAL_ALL_ROUTERS
              reference :  ADDR_LINK_LOCAL_PREFIX
              reference :  ADDR_REALM_LOCAL_ALL_ROUTERS
              reference :  ADDR_SHORT_ADR_SUFFIC
              reference :  __aeabi_memclr4
              reference :  __aeabi_memcpy
              reference :  addr_add
              reference :  addr_add_group
              reference :  addr_add_router_groups
              reference :  addr_delete
              reference :  addr_interface_set_ll64
              definition:  arm_6lowpan_bootstarp_bootstrap_set
              definition:  arm_6lowpan_bootstrap_init
              definition:  arm_6lowpan_mle_service_ready_for_security_init
              definition:  arm_6lowpan_security_init_ifup
              reference :  arm_border_router_ready
              reference :  arm_net_get_scanned_nwk_list
              definition:  arm_network_processor_up
              reference :  arm_nwk_6lowpan_borderrouter_data_free
              reference :  arm_nwk_6lowpan_borderrouter_init
              reference :  beacon_join_priority_update
              reference :  blacklist_init
              reference :  blacklist_reject
              reference :  blacklist_ttl_update
              reference :  blacklist_update
              reference :  bootsrap_next_state_kick
              definition:  bootstrap_timer_handle
              reference :  border_router_start
              reference :  clear_power_state
              reference :  common_read_16_bit
              reference :  common_read_32_bit
              reference :  common_write_16_bit
              reference :  etx_local_incoming_idr_read
              reference :  etx_lqi_dbm_update
              reference :  etx_neighbor_remove
              reference :  etx_remote_incoming_idr_update
              reference :  etx_storage_entry_get
              reference :  etx_storage_list_allocate
              reference :  icmp_nd_routers_init
              reference :  icmp_nd_set_nd_def_router_address
              reference :  icmpv6_build_rs
              reference :  icmpv6_restart_router_advertisements
              reference :  lowpan_adaptation_interface_etx_update_enable
              reference :  lowpan_adaptation_neigh_remove_free_tx_tables
              definition:  lowpan_neighbour_data_clean
              reference :  mac_beacon_link_beacon_compare_rx_callback_set
              reference :  mac_beacon_link_beacon_join_priority_tx_callback_set
              reference :  mac_create_scan_request
              reference :  mac_data_poll_disable
              reference :  mac_data_poll_host_timeout
              reference :  mac_data_poll_init
              reference :  mac_data_poll_init_protocol_poll
              reference :  mac_data_poll_protocol_poll_mode_decrement
              reference :  mac_data_poll_protocol_poll_mode_disable
              reference :  mac_helper_beacon_payload_reallocate
              reference :  mac_helper_beacon_payload_register
              reference :  mac_helper_coordinator_address_get
              reference :  mac_helper_coordinator_address_set
              reference :  mac_helper_default_security_key_id_mode_set
              reference :  mac_helper_default_security_level_get
              reference :  mac_helper_default_security_level_set
              reference :  mac_helper_devicetable_remove
              reference :  mac_helper_drop_selected_from_the_scanresult
              reference :  mac_helper_free_pan_descriptions
              reference :  mac_helper_free_scan_confirm
              reference :  mac_helper_link_frame_counter_set
              reference :  mac_helper_mac16_address_get
              reference :  mac_helper_mac16_address_set
              reference :  mac_helper_mac_mlme_max_retry_set
              reference :  mac_helper_panid_get
              reference :  mac_helper_panid_set
              reference :  mac_helper_pib_boolean_set
              reference :  mac_helper_security_default_key_set
              reference :  mac_helper_security_key_swap_next_to_default
              reference :  mac_helper_select_best_lqi
              reference :  mac_neighbor_entry_get_by_ll64
              reference :  mac_neighbor_table_address_discover
              reference :  mac_neighbor_table_create
              reference :  mac_neighbor_table_delete
              reference :  mac_neighbor_table_neighbor_refresh
              reference :  mac_neighbor_table_neighbor_remove
              reference :  mbed_trace_ipv6
              reference :  mbed_tracef
              reference :  memcmp
              definition:  mle_6lowpan_message_handler
              reference :  mle_class_active_neigh_counter
              reference :  mle_general_write_link_layer_framecounter
              reference :  mle_general_write_source_address
              definition:  mle_general_write_timeout
              reference :  mle_mode_parse_to_mac_entry
              reference :  mle_neigh_entry_frame_counter_update
              reference :  mle_service_check_msg_response
              reference :  mle_service_check_msg_sent
              reference :  mle_service_frame_counter_entry_add
              reference :  mle_service_frame_counter_entry_delete
              reference :  mle_service_frame_counter_table_allocate
              reference :  mle_service_get_data_pointer
              reference :  mle_service_get_msg_destination_address_pointer
              reference :  mle_service_interface_receiver_bypass_handler_update
              reference :  mle_service_interface_receiver_handler_update
              reference :  mle_service_interface_register
              reference :  mle_service_interface_registeration_validate
              reference :  mle_service_interface_token_bucket_settings_set
              reference :  mle_service_interface_unregister
              reference :  mle_service_msg_allocate
              reference :  mle_service_reject_message_build
              reference :  mle_service_security_get_frame_counter
              reference :  mle_service_security_init
              reference :  mle_service_security_key_trig
              reference :  mle_service_security_level_get
              reference :  mle_service_security_set_frame_counter
              reference :  mle_service_security_set_security_key
              reference :  mle_service_send_message
              reference :  mle_service_set_accept_invalid_frame_counter
              reference :  mle_service_set_frame_counter_check
              reference :  mle_service_set_msg_destination_address
              reference :  mle_service_set_msg_response_true
              reference :  mle_service_set_msg_timeout_parameters
              reference :  mle_service_set_msg_token_bucket_priority
              reference :  mle_service_set_packet_callback
              reference :  mle_service_update_length_by_ptr
              reference :  mle_tlv_option_discover
              reference :  mle_tlv_validate_response
              reference :  mle_tlv_write_link_quality
              reference :  mle_tlv_write_mode
              reference :  mle_tlv_write_response
              reference :  mle_tlv_write_source_address
              reference :  mle_tlv_write_timeout
              reference :  nd_get_object_by_nwk_id
              reference :  nd_get_pana_address
              reference :  nd_object_active
              reference :  nd_parent_loose_indcate
              reference :  net_load_balance_internal_state_activate
              reference :  ns_dyn_mem_alloc
              reference :  ns_list_add_before_
              reference :  ns_list_add_to_end_
              reference :  ns_list_get_last_
              reference :  ns_list_get_next_
              reference :  ns_list_get_previous_
              reference :  ns_list_remove_
              definition:  nwk_6lowpan_bootsrap_pana_authentication_cb
              definition:  nwk_6lowpan_bootstrap_ready
              reference :  nwk_6lowpan_down
              definition:  nwk_6lowpan_nd_address_registartion_ready
              definition:  nwk_6lowpan_pana_key_pull
              definition:  nwk_6lowpan_router_scan_state
              definition:  nwk_6lowpan_rpl_router_discover
              definition:  nwk_6lowpan_rpl_router_result_check
              reference :  nwk_6lowpan_up
              reference :  nwk_bootsrap_state_update
              definition:  nwk_bootstrap_icmp_rpl_dis_msg_tx
              reference :  pan_coordinator_blacklist_free
              reference :  pan_cordinator_blacklist_pan_set
              reference :  pana_client_init
              reference :  pana_key_get
              reference :  pana_ping_notify_msg_tx
              reference :  pana_reset_client_session
              reference :  protocol_6lowpan_beacon_compare_rx
              reference :  protocol_6lowpan_beacon_join_priority_tx
              definition:  protocol_6lowpan_bootsrap_link_set
              definition:  protocol_6lowpan_bootsrap_start
              definition:  protocol_6lowpan_bootstrap
              definition:  protocol_6lowpan_bootstrap_nd_ready
              definition:  protocol_6lowpan_bootstrap_re_start
              definition:  protocol_6lowpan_child_update
              definition:  protocol_6lowpan_del_ll16
              reference :  protocol_6lowpan_host_init
              reference :  protocol_6lowpan_interface_compare_cordinator_netid
              reference :  protocol_6lowpan_interface_get_link_local_cordinator_address
              definition:  protocol_6lowpan_link_advertise_handle
              definition:  protocol_6lowpan_mac_scan_confirm
              definition:  protocol_6lowpan_mle_data_get
              definition:  protocol_6lowpan_mle_service_security_notify_cb
              definition:  protocol_6lowpan_mle_timer
              definition:  protocol_6lowpan_nd_border_router_address_get
              definition:  protocol_6lowpan_nd_borderrouter_connection_down
              definition:  protocol_6lowpan_parent_link_req
              reference :  protocol_6lowpan_register_handlers
              reference :  protocol_6lowpan_release_long_link_address_from_neighcache
              reference :  protocol_6lowpan_release_short_link_address_from_neighcache
              definition:  protocol_6lowpan_rf_link_scalability_from_lqi
              reference :  protocol_6lowpan_router_init
              definition:  protocol_6lowpan_router_synch_to_new_router
              reference :  protocol_6lowpan_rpl_domain
              definition:  protocol_6lowpan_set_ll16
              reference :  protocol_interface_info_list
              reference :  protocol_mac_reset
              reference :  protocol_push
              reference :  protocol_stack_interface_info_get_by_id
              reference :  protocol_timer_start
              reference :  randLIB_get_random_in_range
              reference :  randLIB_randomise_base
              reference :  rpl_control_force_leaf
              reference :  rpl_control_have_dodag
              reference :  rpl_control_set_callback
              reference :  rpl_control_set_domain_on_interface
              reference :  rpl_control_transmit_dis
              reference :  thread_info_deallocate
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/nanostack/sal-stack-nanostack/source/6LoWPAN/Bootstraps/Generic/protocol_6lowpan_interface.o.
              reference :  blacklist_clear
              reference :  icmp_nd_routers_init
              reference :  lowpan_adaptation_interface_reset
              reference :  mac_helper_default_security_level_set
              reference :  mac_helper_free_scan_confirm
              reference :  mac_helper_mac16_address_set
              reference :  mac_helper_panid_set
              reference :  mac_neighbor_table_neighbor_list_clean
              reference :  neighbor_cache_flush
              reference :  net_load_balance_internal_state_activate
              reference :  ns_dyn_mem_free
              definition:  nwk_6lowpan_down
              definition:  nwk_6lowpan_up
              reference :  pana_reset_values
              reference :  protocol_6lowpan_interface_common_init
              reference :  protocol_core_interface_info_reset
              definition:  protocol_mac_reset
              reference :  reassembly_interface_reset
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/nanostack/sal-stack-nanostack/source/6LoWPAN/Fragmentation/cipv6_fragmenter.o.
              reference :  __aeabi_memcpy
              reference :  addr_len_from_type
              reference :  buffer_copy_metadata
              reference :  buffer_corrupt_check
              reference :  buffer_free
              reference :  buffer_get
              definition:  cipv6_frag_reassembly
              definition:  cipv6_frag_timer
              reference :  common_read_16_bit
              reference :  iphc_header_scan
              reference :  mbed_tracef
              reference :  memcmp
              reference :  ns_dyn_mem_alloc
              reference :  ns_dyn_mem_free
              reference :  ns_list_add_to_end_
              reference :  ns_list_add_to_start_
              reference :  ns_list_get_next_
              reference :  ns_list_init_
              reference :  ns_list_remove_
              reference :  protocol_stats_update
              definition:  reassembly_interface_free
              definition:  reassembly_interface_init
              definition:  reassembly_interface_reset
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/nanostack/sal-stack-nanostack/source/6LoWPAN/IPHC_Decode/6lowpan_iphc.o.
              reference :  addr_check_broadcast
              reference :  addr_iid_matches_eui64
              reference :  addr_iid_matches_lowpan_short
              reference :  addr_is_ipv6_link_local
              reference :  buffer_corrupt_check
              reference :  buffer_free
              reference :  common_read_16_bit
              reference :  common_write_16_bit
              reference :  iphc_compress
              reference :  iphc_decompress
              reference :  ipv6_interface_resolve_new
              definition:  lowpan_down
              definition:  lowpan_up
              reference :  mac_helper_frame_overhead
              reference :  mac_helper_max_payload_size
              reference :  mac_helper_write_our_addr
              reference :  mbed_tracef
              reference :  mesh_address_map
              reference :  mesh_header_size
              reference :  protocol_6lowpan_interface_get_mac_coordinator_address
              reference :  protocol_stats_update
              reference :  thread_insist_that_mesh_isnt_a_link
              reference :  thread_stable_context_check
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/nanostack/sal-stack-nanostack/source/6LoWPAN/IPHC_Decode/iphc_compress.o.
              reference :  ADDR_LINK_LOCAL_ALL_NODES
              reference :  ADDR_LINK_LOCAL_PREFIX
              reference :  ADDR_SHORT_ADR_SUFFIC
              reference :  ADDR_UNSPECIFIED
              reference :  __aeabi_memcpy
              reference :  addr_iid_from_outer
              reference :  addr_ipv6_equal
              reference :  bitcopy
              reference :  bitsequal
              reference :  buffer_corrupt_check
              reference :  buffer_free
              reference :  buffer_headroom
              reference :  common_read_16_bit
              reference :  common_read_24_bit
              reference :  common_write_16_bit
              reference :  common_write_24_bit
              definition:  iphc_compress
              reference :  memcmp
              reference :  ns_dyn_mem_free
              reference :  ns_dyn_mem_temporary_alloc
              reference :  ns_list_get_next_
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/nanostack/sal-stack-nanostack/source/6LoWPAN/IPHC_Decode/iphc_decompress.o.
              reference :  ADDR_LINK_LOCAL_ALL_NODES
              reference :  ADDR_LINK_LOCAL_PREFIX
              reference :  ADDR_SHORT_ADR_SUFFIC
              reference :  __aeabi_memcpy
              reference :  addr_iid_from_outer
              reference :  bitcopy
              reference :  buffer_corrupt_check
              reference :  buffer_free
              reference :  buffer_headroom
              reference :  common_write_16_bit
              definition:  iphc_decompress
              definition:  iphc_header_scan
              reference :  lowpan_context_get_by_id
              reference :  mbed_tracef
              reference :  ns_dyn_mem_free
              reference :  ns_dyn_mem_temporary_alloc
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/nanostack/sal-stack-nanostack/source/6LoWPAN/IPHC_Decode/lowpan_context.o.
              reference :  bitcopy
              reference :  bitsequal
              definition:  lowpan_context_get_by_address
              definition:  lowpan_context_get_by_id
              definition:  lowpan_context_list_free
              definition:  lowpan_context_timer
              definition:  lowpan_context_update
              reference :  mbed_tracef
              reference :  ns_dyn_mem_alloc
              reference :  ns_dyn_mem_free
              reference :  ns_list_add_before_
              reference :  ns_list_add_to_end_
              reference :  ns_list_get_next_
              reference :  ns_list_remove_
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/nanostack/sal-stack-nanostack/source/6LoWPAN/MAC/beacon_handler.o.
              reference :  __aeabi_memclr4
              reference :  __aeabi_memcpy
              reference :  __aeabi_memmove
              definition:  beacon_join_priority_update
              definition:  beacon_received
              reference :  common_write_16_bit
              definition:  mac_beacon_link_beacon_compare_rx_callback_set
              definition:  mac_beacon_link_beacon_join_priority_tx_callback_set
              reference :  mac_helper_beacon_payload_length_get
              reference :  mac_helper_beacon_payload_pointer_get
              reference :  mac_helper_beacon_payload_reallocate
              reference :  mac_helper_beacon_payload_register
              reference :  memcmp
              reference :  ns_dyn_mem_alloc
              reference :  ns_dyn_mem_free
              reference :  ns_dyn_mem_temporary_alloc
              reference :  pan_blacklist_filter
              reference :  pan_cordinator_blacklist_filter
              reference :  protocol_stack_interface_info_get_by_id
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/nanostack/sal-stack-nanostack/source/6LoWPAN/MAC/mac_data_poll.o.
              reference :  eventOS_event_handler_create
              reference :  eventOS_event_send
              reference :  eventOS_event_timer_cancel
              reference :  eventOS_event_timer_request
              definition:  mac_data_poll_disable
              definition:  mac_data_poll_enable_check
              definition:  mac_data_poll_get_max_sleep_period
              definition:  mac_data_poll_host_mode_get
              definition:  mac_data_poll_host_mode_set
              definition:  mac_data_poll_host_poll_time_max
              definition:  mac_data_poll_host_timeout
              definition:  mac_data_poll_init
              definition:  mac_data_poll_init_protocol_poll
              definition:  mac_data_poll_protocol_poll_mode_decrement
              definition:  mac_data_poll_protocol_poll_mode_disable
              reference :  mac_helper_coordinator_address_get
              reference :  mac_helper_default_key_index_get
              reference :  mac_helper_default_security_key_id_mode_get
              reference :  mac_helper_default_security_level_get
              reference :  mac_helper_panid_get
              reference :  mac_helper_pib_boolean_set
              definition:  mac_mlme_poll_confirm
              reference :  mac_neighbor_table_address_discover
              definition:  mac_poll_timer_trig
              reference :  mbed_tracef
              reference :  ns_dyn_mem_alloc
              reference :  ns_dyn_mem_free
              reference :  nwk_parent_poll_fail_cb
              reference :  protocol_6lowpan_child_update
              reference :  protocol_stack_interface_info_get_by_id
              reference :  thread_bootstrap_child_update_trig
              reference :  thread_neighbor_communication_update
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/nanostack/sal-stack-nanostack/source/6LoWPAN/MAC/mac_helper.o.
              reference :  __aeabi_memclr4
              reference :  __aeabi_memcpy
              reference :  common_read_16_bit
              reference :  common_write_16_bit
              definition:  mac_create_scan_request
              definition:  mac_helper_beacon_payload_length_get
              definition:  mac_helper_beacon_payload_pointer_get
              definition:  mac_helper_beacon_payload_reallocate
              definition:  mac_helper_beacon_payload_register
              definition:  mac_helper_coordinator_address_get
              definition:  mac_helper_coordinator_address_set
              definition:  mac_helper_default_key_index_get
              definition:  mac_helper_default_key_index_set
              definition:  mac_helper_default_security_key_id_mode_get
              definition:  mac_helper_default_security_key_id_mode_set
              definition:  mac_helper_default_security_level_get
              definition:  mac_helper_default_security_level_set
              definition:  mac_helper_device_description_write
              definition:  mac_helper_devicetable_direct_set
              definition:  mac_helper_devicetable_remove
              definition:  mac_helper_devicetable_set
              definition:  mac_helper_drop_selected_from_the_scanresult
              definition:  mac_helper_frame_overhead
              definition:  mac_helper_free_pan_descriptions
              definition:  mac_helper_free_scan_confirm
              definition:  mac_helper_key_link_frame_counter_read
              definition:  mac_helper_key_link_frame_counter_set
              definition:  mac_helper_link_frame_counter_read
              definition:  mac_helper_link_frame_counter_set
              definition:  mac_helper_mac16_address_get
              definition:  mac_helper_mac16_address_set
              definition:  mac_helper_mac64_set
              definition:  mac_helper_mac_channel_set
              definition:  mac_helper_mac_device_description_pan_id_update
              definition:  mac_helper_mac_mlme_max_retry_set
              definition:  mac_helper_max_payload_size
              definition:  mac_helper_nwk_id_filter_set
              definition:  mac_helper_panid_get
              definition:  mac_helper_panid_set
              definition:  mac_helper_pib_boolean_set
              definition:  mac_helper_security_auto_request_key_index_set
              definition:  mac_helper_security_default_key_set
              definition:  mac_helper_security_default_recv_key_set
              definition:  mac_helper_security_key_clean
              definition:  mac_helper_security_key_descriptor_clear
              definition:  mac_helper_security_key_swap_next_to_default
              definition:  mac_helper_security_key_to_descriptor_set
              definition:  mac_helper_security_next_key_set
              definition:  mac_helper_security_pairwisekey_set
              definition:  mac_helper_security_prev_key_set
              definition:  mac_helper_select_best_lqi
              definition:  mac_helper_set_default_key_source
              definition:  mac_helper_start_auto_cca_threshold
              definition:  mac_helper_write_our_addr
              reference :  ns_dyn_mem_alloc
              reference :  ns_dyn_mem_free
              reference :  protocol_stack_interface_info_get_by_id
              definition:  test_6lowpan_fragmentation_mtu_size_override
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/nanostack/sal-stack-nanostack/source/6LoWPAN/MAC/mac_ie_lib.o.
              reference :  common_read_16_bit_inverse
              reference :  common_write_16_bit_inverse
              definition:  mac_ie_header_base_write
              definition:  mac_ie_header_discover
              definition:  mac_ie_header_sub_id_discover
              definition:  mac_ie_nested_discover
              definition:  mac_ie_nested_ie_long_base_write
              definition:  mac_ie_nested_ie_short_base_write
              definition:  mac_ie_payload_base_write
              definition:  mac_ie_payload_discover
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/nanostack/sal-stack-nanostack/source/6LoWPAN/MAC/mac_pairwise_key.o.
              reference :  __aeabi_memclr
              reference :  mac_helper_device_description_write
              reference :  mac_helper_devicetable_set
              reference :  mac_helper_security_pairwisekey_set
              reference :  mac_neighbor_entry_get_by_mac64
              reference :  mac_neighbor_table_attribute_discover
              reference :  mac_neighbor_table_neighbor_remove
              reference :  mac_neighbor_table_trusted_neighbor
              definition:  mac_pairwise_key_add
              definition:  mac_pairwise_key_del
              definition:  mac_pairwise_key_flush_list
              definition:  mac_pairwise_key_info_get
              definition:  mac_pairwise_key_interface_register
              definition:  mac_pairwise_key_interface_unregister
              reference :  ns_dyn_mem_alloc
              reference :  ns_dyn_mem_free
              reference :  ns_list_add_to_end_
              reference :  ns_list_get_next_
              reference :  ns_list_remove_
              reference :  protocol_stack_interface_info_get_by_id
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/nanostack/sal-stack-nanostack/source/6LoWPAN/MAC/mac_response_handler.o.
              reference :  lowpan_adaptation_interface_data_ind
              reference :  lowpan_adaptation_interface_tx_confirm
              reference :  mac_mlme_poll_confirm
              reference :  mac_neighbor_table_address_discover
              reference :  mbed_tracef
              definition:  mcps_data_confirm_handler
              definition:  mcps_data_indication_handler
              definition:  mcps_purge_confirm_handler
              definition:  mlme_confirm_handler
              definition:  mlme_indication_handler
              reference :  nwk_bootsrap_state_update
              reference :  protocol_stack_interface_info_get_by_id
              reference :  protocol_timer_stop
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/nanostack/sal-stack-nanostack/source/6LoWPAN/Mesh/mesh.o.
              reference :  __aeabi_memcpy
              reference :  addr_check_broadcast
              reference :  buffer_corrupt_check
              reference :  buffer_free
              reference :  buffer_headroom
              reference :  common_read_16_bit
              reference :  common_write_16_bit
              definition:  force_mesh_headers
              reference :  mac_helper_write_our_addr
              reference :  mbed_trace_array
              reference :  mbed_tracef
              definition:  mesh_address_map
              definition:  mesh_all_addresses_unicast
              definition:  mesh_down
              definition:  mesh_forwardable_address
              definition:  mesh_header_len_from_buffer_type_byte
              definition:  mesh_header_len_from_type_byte
              definition:  mesh_header_needed
              definition:  mesh_header_size
              definition:  mesh_rewrite_bc0_header
              definition:  mesh_short_address_is_broadcast_or_multicast
              definition:  mesh_short_address_is_multicast
              definition:  mesh_supports_multicast
              definition:  mesh_up
              reference :  nwk_interface_compare_mac_address
              reference :  protocol_stats_update
              reference :  socket_tx_buffer_event_and_free
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/nanostack/sal-stack-nanostack/source/6LoWPAN/ND/nd_router_object.o.
              reference :  ADDR_LINK_LOCAL_ALL_NODES
              reference :  ADDR_LINK_LOCAL_PREFIX
              reference :  ADDR_SHORT_ADR_SUFFIC
              reference :  ADDR_UNSPECIFIED
              reference :  __aeabi_memcpy
              reference :  addr_interface_address_compare
              reference :  addr_interface_get_ll_address
              reference :  addr_ipv6_equal
              reference :  addr_is_ipv6_link_local
              reference :  arm_6lowpan_bootstrap_init
              reference :  arm_net_protocol_packet_handler
              reference :  bootsrap_next_state_kick
              reference :  buffer_corrupt_check
              reference :  buffer_free
              reference :  buffer_get
              reference :  common_read_16_bit
              reference :  common_read_32_bit
              reference :  common_serial_number_greater_32
              reference :  common_write_16_bit
              reference :  common_write_32_bit
              definition:  gp_address_add_to_end
              definition:  gp_address_list_free
              definition:  icmp_nd_border_router_release
              definition:  icmp_nd_compare_to_def_next_hop
              definition:  icmp_nd_prefixs_parse
              definition:  icmp_nd_router_context_ttl_update
              definition:  icmp_nd_router_object_get
              definition:  icmp_nd_router_object_release
              definition:  icmp_nd_router_object_reset
              definition:  icmp_nd_router_prefix_proxy_update
              definition:  icmp_nd_router_prefix_ttl_update
              definition:  icmp_nd_router_prefix_update
              definition:  icmp_nd_router_prefix_valid
              definition:  icmp_nd_routers_init
              definition:  icmp_nd_set_nd_def_router_address
              definition:  icmp_nd_set_next_hop
              reference :  icmpv6_build_dad
              reference :  icmpv6_build_na
              reference :  icmpv6_build_ns
              reference :  icmpv6_build_rs
              reference :  icmpv6_options_well_formed_in_buffer
              reference :  icmpv6_prefix_add
              reference :  icmpv6_prefix_compare
              reference :  icmpv6_prefix_list_free
              reference :  icmpv6_restart_router_advertisements
              reference :  icmpv6_slaac_address_add
              reference :  icmpv6_slaac_prefix_register_trig
              reference :  icmpv6_slaac_prefix_update
              reference :  icmpv6_stop_router_advertisements
              reference :  icmpv6_trigger_ra_from_rs
              reference :  icmpv6_write_icmp_lla
              reference :  icmpv6_write_mtu_option
              reference :  icmpv6_write_prefix_option
              reference :  ipv6_neighbour_entry_remove
              reference :  ipv6_neighbour_entry_update_unsolicited
              reference :  ipv6_neighbour_ll_addr_match
              reference :  ipv6_neighbour_lookup
              reference :  ipv6_neighbour_lookup_or_create
              reference :  ipv6_neighbour_set_state
              reference :  ipv6_route_add_metric
              reference :  ipv6_route_choose_next_hop
              reference :  ipv6_route_delete
              reference :  lowpan_context_list_free
              reference :  lowpan_context_update
              reference :  mac_data_poll_init_protocol_poll
              reference :  mac_data_poll_protocol_poll_mode_decrement
              reference :  mac_helper_panid_get
              reference :  mac_neighbor_table_address_discover
              reference :  mbed_trace_ipv6
              reference :  mbed_tracef
              reference :  memcmp
              definition:  nd_6lowpan_set_radv_params
              definition:  nd_base_tick
              reference :  nd_border_router_setup_refresh
              definition:  nd_dac_handler
              definition:  nd_dar_parse
              definition:  nd_get_object_by_nwk_id
              definition:  nd_get_pana_address
              definition:  nd_ns_aro_handler
              definition:  nd_ns_build
              definition:  nd_ns_trig
              definition:  nd_object_active
              definition:  nd_object_time_to_next_nd_reg
              definition:  nd_object_timer
              definition:  nd_params
              definition:  nd_parent_loose_indcate
              definition:  nd_prefix_dst_check
              definition:  nd_ra_build_by_abro
              definition:  nd_ra_process_abro
              definition:  nd_ra_process_lowpan_context_option
              definition:  nd_ra_timing
              definition:  nd_remove_registration
              definition:  nd_router_base_init
              definition:  nd_rs_build
              definition:  nd_set_br
              definition:  nd_trigger_ras_from_rs
              reference :  ns_dyn_mem_alloc
              reference :  ns_dyn_mem_free
              reference :  ns_list_add_to_end_
              reference :  ns_list_add_to_start_
              reference :  ns_list_count_
              reference :  ns_list_get_next_
              reference :  ns_list_init_
              reference :  ns_list_link_init_
              reference :  ns_list_remove_
              reference :  pan_blacklist_pan_set
              reference :  protocol_6lowpan_allocate_mac16
              reference :  protocol_6lowpan_bootstrap_nd_ready
              reference :  protocol_6lowpan_bootstrap_re_start
              reference :  protocol_6lowpan_del_ll16
              reference :  protocol_6lowpan_link_advertise_handle
              reference :  protocol_6lowpan_nd_borderrouter_connection_down
              reference :  protocol_6lowpan_neighbor_address_state_synch
              reference :  protocol_6lowpan_neighbor_priority_update
              reference :  protocol_6lowpan_neighbor_remove
              reference :  protocol_6lowpan_rpl_domain
              reference :  protocol_core_monotonic_time
              reference :  protocol_push
              reference :  protocol_stack_interface_info_get
              reference :  randLIB_get_16bit
              reference :  randLIB_get_random_in_range
              reference :  rpl_control_publish_host_address
              reference :  rpl_control_unpublish_address
              reference :  rpl_data_is_rpl_parent_route
              reference :  set_power_state
              reference :  whiteboard_table_update
              reference :  ws_common_allow_child_registration
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/nanostack/sal-stack-nanostack/source/6LoWPAN/NVM/nwk_nvm.o.
              reference :  mac_helper_link_frame_counter_read
              reference :  mle_service_security_get_frame_counter
              definition:  net_nvm_wpan_params_storage_disable
              definition:  net_nvm_wpan_params_storage_enable
              definition:  net_nvm_wpan_params_storage_reset
              reference :  ns_dyn_mem_alloc
              reference :  ns_dyn_mem_free
              reference :  protocol_stack_interface_info_get_by_id
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/nanostack/sal-stack-nanostack/source/6LoWPAN/Thread/thread_bbr_api.o.
              reference :  ADDR_UNSPECIFIED
              reference :  DHCPv6_server_service_delete
              reference :  __aeabi_memcpy
              reference :  arm_net_address_get
              reference :  arm_nwk_ipv6_neighbour_cache_configure
              reference :  coap_service_close_secure_connection
              reference :  coap_service_delete
              reference :  coap_service_initialize
              reference :  coap_service_register_uri
              reference :  coap_service_request_send
              reference :  coap_service_response_send_by_msg_id
              reference :  coap_service_unregister_uri
              reference :  common_read_16_bit
              reference :  common_write_16_bit
              reference :  icmpv6_build_na
              reference :  ipv6_route_add
              reference :  ipv6_route_add_with_info
              reference :  ipv6_route_delete
              reference :  ipv6_route_lookup_with_info
              reference :  mac_helper_mac16_address_get
              reference :  mbed_trace_array
              reference :  mbed_tracef
              reference :  memcmp
              reference :  multicast_fwd_full_for_scope
              reference :  multicast_fwd_set_forwarding
              reference :  multicast_fwd_set_proxy_upstream
              reference :  ns_dyn_mem_alloc
              reference :  ns_dyn_mem_free
              reference :  ns_list_add_to_start_
              reference :  ns_list_get_next_
              reference :  ns_list_remove_
              reference :  protocol_core_monotonic_time
              reference :  protocol_push
              reference :  protocol_stack_interface_info_get_by_id
              reference :  randLIB_get_random_in_range
              reference :  socket_bind
              reference :  socket_close
              reference :  socket_open
              reference :  socket_read
              reference :  socket_sendto
              reference :  strncmp
              reference :  thread_bbr_commercial_address_set
              reference :  thread_bbr_commercial_delete
              reference :  thread_bbr_commercial_init
              reference :  thread_bbr_commercial_mcast_fwd_check
              reference :  thread_bbr_commercial_prefix_set
              reference :  thread_bbr_commercial_route_update
              reference :  thread_bbr_commercial_seconds_timer
              reference :  thread_bbr_commercial_sequence_number_set
              reference :  thread_bbr_commercial_timeout_set
              definition:  thread_bbr_commissioner_proxy_service_update
              definition:  thread_bbr_delete
              definition:  thread_bbr_dua_entry_add
              definition:  thread_bbr_get_commissioner_service
              definition:  thread_bbr_init
              definition:  thread_bbr_na_send
              definition:  thread_bbr_nd_entry_add
              definition:  thread_bbr_network_data_update_notify
              definition:  thread_bbr_prefix_set
              definition:  thread_bbr_proxy_state_update
              definition:  thread_bbr_routing_enabled
              definition:  thread_bbr_seconds_timer
              definition:  thread_bbr_sequence_number_set
              definition:  thread_bbr_start
              definition:  thread_bbr_stop
              definition:  thread_bbr_timeout_set
              definition:  thread_bbr_validation_interface_address_set
              reference :  thread_border_router_prefix_add
              reference :  thread_border_router_prefix_delete
              reference :  thread_border_router_publish
              reference :  thread_dhcp6_server_init
              reference :  thread_joiner_application_get_config
              reference :  thread_joiner_application_random_mac_get
              reference :  thread_management_get_commissioner_address
              reference :  thread_management_get_leader_address
              reference :  thread_management_get_ml_prefix_112
              reference :  thread_management_server_tmf_get_request_handler
              reference :  thread_mdns_network_data_update_notify
              reference :  thread_mdns_start
              reference :  thread_mdns_stop
              reference :  thread_meshcop_tlv_data_get_uint16
              reference :  thread_meshcop_tlv_data_write
              reference :  thread_meshcop_tlv_find
              reference :  thread_nd_hosted_by_this_routerid
              reference :  thread_nd_on_mesh_address_valid
              reference :  thread_on_mesh_route_possible_add
              reference :  thread_router_bootstrap_router_id_request
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/nanostack/sal-stack-nanostack/source/6LoWPAN/Thread/thread_bbr_commercial.o.
              reference :  ADDR_LINK_LOCAL_ALL_ROUTERS
              reference :  ADDR_UNSPECIFIED
              reference :  __aeabi_memclr4
              reference :  __aeabi_memcpy
              reference :  addr_get_entry
              reference :  addr_interface_address_compare
              reference :  addr_is_assigned_to_interface
              reference :  addr_multicast_fwd_remove
              reference :  bitsequal
              reference :  coap_service_close_secure_connection
              reference :  coap_service_delete
              reference :  coap_service_initialize
              reference :  coap_service_register_uri
              reference :  coap_service_request_delete_by_service_id
              reference :  coap_service_request_send
              reference :  coap_service_response_send
              reference :  coap_service_unregister_uri
              reference :  coap_service_virtual_socket_recv
              reference :  coap_service_virtual_socket_set_cb
              reference :  common_write_16_bit
              reference :  common_write_32_bit
              reference :  ipv6_neighbour_entry_remove
              reference :  ipv6_neighbour_lookup
              reference :  ipv6_route_add_with_info
              reference :  ipv6_route_choose_next_hop
              reference :  ipv6_route_delete
              reference :  ipv6_route_lookup_with_info
              reference :  ipv6_route_table_remove_info
              reference :  mac_helper_mac16_address_get
              reference :  mbed_trace_array
              reference :  mbed_trace_ipv6
              reference :  mbed_tracef
              reference :  memchr
              reference :  memcmp
              reference :  multicast_add_address
              reference :  multicast_free_address
              reference :  multicast_fwd_add
              reference :  multicast_fwd_full_for_scope
              reference :  ns_dyn_mem_alloc
              reference :  ns_dyn_mem_free
              reference :  ns_dyn_mem_temporary_alloc
              reference :  ns_list_add_to_start_
              reference :  ns_list_get_next_
              reference :  ns_list_remove_
              reference :  protocol_core_monotonic_time
              reference :  protocol_stack_interface_info_get_by_id
              reference :  randLIB_get_8bit
              reference :  thread_active_timestamp_write
              reference :  thread_addr_write_mesh_local_16
              reference :  thread_attach_ready
              definition:  thread_bbr_commercial_address_set
              definition:  thread_bbr_commercial_delete
              definition:  thread_bbr_commercial_init
              definition:  thread_bbr_commercial_mcast_fwd_check
              definition:  thread_bbr_commercial_nd_query_process
              definition:  thread_bbr_commercial_old_partition_data_clean
              definition:  thread_bbr_commercial_prefix_set
              definition:  thread_bbr_commercial_route_update
              definition:  thread_bbr_commercial_seconds_timer
              definition:  thread_bbr_commercial_sequence_number_set
              definition:  thread_bbr_commercial_status_override_get
              definition:  thread_bbr_commercial_status_override_set
              definition:  thread_bbr_commercial_timeout_set
              reference :  thread_bbr_dua_entry_add
              reference :  thread_bbr_get_commissioner_service
              reference :  thread_bbr_na_send
              reference :  thread_border_router_prefix_add
              reference :  thread_border_router_prefix_delete
              reference :  thread_border_router_publish
              reference :  thread_border_router_service_add
              reference :  thread_border_router_service_delete
              reference :  thread_ccm_network_certificate_enable
              reference :  thread_common_primary_bbr_get
              reference :  thread_joiner_application_active_config_length
              reference :  thread_joiner_application_active_config_write
              reference :  thread_joiner_application_get_config
              reference :  thread_joiner_application_get_device_config
              reference :  thread_joiner_application_network_name_get
              reference :  thread_management_get_ml_prefix
              reference :  thread_management_get_ml_prefix_112
              reference :  thread_management_partition_weighting_set
              reference :  thread_meshcop_tlv_data_get_uint16
              reference :  thread_meshcop_tlv_data_get_uint32
              reference :  thread_meshcop_tlv_data_write
              reference :  thread_meshcop_tlv_data_write_uint16
              reference :  thread_meshcop_tlv_data_write_uint32
              reference :  thread_meshcop_tlv_data_write_uint8
              reference :  thread_meshcop_tlv_find
              reference :  thread_meshcop_tlv_list_type_available
              reference :  thread_resolution_client_address_error
              reference :  thread_version
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/nanostack/sal-stack-nanostack/source/6LoWPAN/Thread/thread_beacon.o.
              reference :  crc16_ansi
              reference :  crc16_ccitt
              definition:  thread_beacon_calculate_bloom_filter
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/nanostack/sal-stack-nanostack/source/6LoWPAN/Thread/thread_bootstrap.o.
              reference :  ADDR_ALL_MPL_FORWARDERS
              reference :  ADDR_LINK_LOCAL_ALL_NODES
              reference :  ADDR_LINK_LOCAL_PREFIX
              reference :  ADDR_REALM_LOCAL_ALL_NODES
              reference :  ADDR_REALM_LOCAL_ALL_ROUTERS
              reference :  ADDR_SHORT_ADR_SUFFIC
              reference :  ADDR_SITE_LOCAL_ALL_ROUTERS
              reference :  __aeabi_memclr4
              reference :  __aeabi_memcpy
              reference :  addr_add
              reference :  addr_add_group
              reference :  addr_add_router_groups
              reference :  addr_delete
              reference :  addr_delete_entry
              reference :  addr_delete_matching
              reference :  addr_get_entry
              reference :  addr_interface_set_ll64
              reference :  addr_ipv6_equal
              reference :  addr_ipv6_scope
              reference :  addr_remove_group
              reference :  addr_set_preferred_lifetime
              reference :  arm_thread_private_ula_prefix_set
              reference :  bitsequal
              reference :  blacklist_clear
              reference :  blacklist_params_set
              reference :  blacklist_reject
              reference :  blacklist_update
              reference :  bootsrap_next_state_kick
              reference :  clear_power_state
              reference :  coap_service_request_send
              reference :  common_read_16_bit
              reference :  common_read_32_bit
              reference :  common_serial_number_greater_8
              reference :  common_write_16_bit
              reference :  dhcp_client_configure
              reference :  dhcp_client_delete
              reference :  dhcp_client_get_global_address
              reference :  dhcp_client_global_address_delete
              reference :  dhcp_client_init
              reference :  etx_neighbor_remove
              reference :  etx_storage_list_allocate
              reference :  eventOS_event_handler_create
              reference :  eventOS_event_send
              reference :  eventOS_timeout_ms
              reference :  icmpv6_slaac_address_add
              reference :  ipv6_destination_cache_configure
              reference :  ipv6_neighbour_cache_configure
              reference :  ipv6_neighbour_cache_flush
              reference :  ipv6_neighbour_entry_remove
              reference :  ipv6_neighbour_lookup
              reference :  ipv6_route_add
              reference :  ipv6_route_choose_next_hop
              reference :  ipv6_route_table_remove_info
              reference :  ipv6_stack_route_advert_update
              reference :  lowpan_adaptation_interface_etx_update_enable
              reference :  lowpan_adaptation_neigh_remove_free_tx_tables
              reference :  lowpan_context_update
              reference :  mac_data_poll_disable
              reference :  mac_data_poll_init
              reference :  mac_data_poll_init_protocol_poll
              reference :  mac_data_poll_protocol_poll_mode_decrement
              reference :  mac_helper_beacon_payload_reallocate
              reference :  mac_helper_coordinator_address_set
              reference :  mac_helper_default_security_key_id_mode_set
              reference :  mac_helper_default_security_level_set
              reference :  mac_helper_free_scan_confirm
              reference :  mac_helper_link_frame_counter_read
              reference :  mac_helper_mac16_address_get
              reference :  mac_helper_mac16_address_set
              reference :  mac_helper_mac64_set
              reference :  mac_helper_mac_device_description_pan_id_update
              reference :  mac_helper_mac_mlme_max_retry_set
              reference :  mac_helper_pib_boolean_set
              reference :  mac_helper_security_key_clean
              reference :  mac_neighbor_table_address_discover
              reference :  mac_neighbor_table_create
              reference :  mac_neighbor_table_neighbor_list_clean
              reference :  mac_neighbor_table_neighbor_remove
              reference :  mac_poll_timer_trig
              reference :  mbed_trace_array
              reference :  mbed_trace_ipv6
              reference :  mbed_tracef
              reference :  mbedtls_sha256_ret
              reference :  memcmp
              reference :  mle_class_active_neigh_counter
              reference :  mle_class_free_entry_count_get
              reference :  mle_service_frame_counter_entry_delete
              reference :  mle_service_frame_counter_table_allocate
              reference :  mle_service_get_data_pointer
              reference :  mle_service_get_msg_destination_address_pointer
              reference :  mle_service_interface_receiver_handler_update
              reference :  mle_service_interface_register
              reference :  mle_service_interface_tx_queue_size
              reference :  mle_service_msg_allocate
              reference :  mle_service_msg_free
              reference :  mle_service_msg_update_security_params
              reference :  mle_service_security_get_frame_counter
              reference :  mle_service_send_message
              reference :  mle_service_set_fragmented_msg_ll_security
              reference :  mle_service_set_frame_counter_check
              reference :  mle_service_set_msg_destination_address
              reference :  mle_service_set_msg_link_layer_security_mode
              reference :  mle_service_set_msg_panid
              reference :  mle_service_set_msg_rf_channel
              reference :  mle_service_set_msg_timeout_parameters
              reference :  mle_service_set_packet_callback
              reference :  mle_service_update_length_by_ptr
              reference :  mle_tlv_req_tlv
              reference :  mpl_domain_create
              reference :  nd_proxy_downstream_interface_register
              reference :  nd_proxy_enabled_for_upstream
              reference :  nd_proxy_upstream_route_onlink
              reference :  neighbor_cache_flush
              reference :  ns_dyn_mem_alloc
              reference :  ns_dyn_mem_free
              reference :  ns_dyn_mem_temporary_alloc
              reference :  ns_list_count_
              reference :  ns_list_get_next_
              reference :  ns_list_remove_
              reference :  nwk_bootsrap_state_update
              definition:  nwk_thread_host_control
              reference :  prefixBits_to_bytes
              reference :  protocol_6lowpan_interface_common_init
              reference :  protocol_6lowpan_interface_get_link_local_cordinator_address
              reference :  protocol_core_interface_info_reset
              reference :  protocol_stack_interface_info_get_by_bootstrap_id
              reference :  protocol_stack_interface_info_get_by_id
              reference :  randLIB_get_random_in_range
              reference :  rpl_control_remove_domain_from_interface
              reference :  thread_active_timestamp_write
              reference :  thread_addr_is_child
              reference :  thread_addr_is_equal_or_child
              reference :  thread_addr_write_mesh_local_16
              reference :  thread_addresses_needs_to_be_registered
              reference :  thread_anycast_address_policy_update
              reference :  thread_attach_active_router
              reference :  thread_attach_ready
              reference :  thread_bbr_commercial_route_update
              reference :  thread_bbr_commissioner_proxy_service_update
              reference :  thread_bbr_network_data_update_notify
              reference :  thread_bbr_proxy_state_update
              reference :  thread_beacon_calculate_bloom_filter
              reference :  thread_beacon_create_payload
              definition:  thread_bootsrap_device_synch_fail
              definition:  thread_bootsrap_discovery_ready_cb
              definition:  thread_bootsrap_event_trig
              definition:  thread_bootstrap_address_registration
              definition:  thread_bootstrap_address_registration_deinit
              definition:  thread_bootstrap_address_registration_init
              definition:  thread_bootstrap_address_registration_running
              definition:  thread_bootstrap_address_registration_timer
              definition:  thread_bootstrap_address_registration_timer_set
              definition:  thread_bootstrap_all_nodes_address_generate
              definition:  thread_bootstrap_all_nodes_multicast_register
              definition:  thread_bootstrap_all_nodes_multicast_unregister
              definition:  thread_bootstrap_announce_send
              definition:  thread_bootstrap_announcement_start
              definition:  thread_bootstrap_attached_active_router
              definition:  thread_bootstrap_attached_downgrade_router
              definition:  thread_bootstrap_attached_finish
              definition:  thread_bootstrap_attached_ready
              definition:  thread_bootstrap_attched_upgrade_reed
              definition:  thread_bootstrap_child_address_registration_response_process
              definition:  thread_bootstrap_child_id_request
              definition:  thread_bootstrap_child_update_trig
              definition:  thread_bootstrap_clear_neighbor_entries
              definition:  thread_bootstrap_connection_error
              definition:  thread_bootstrap_dua_address_generate
              definition:  thread_bootstrap_dynamic_configuration_save
              definition:  thread_bootstrap_is_domain_prefix
              definition:  thread_bootstrap_joiner_application_commission_done_cb
              definition:  thread_bootstrap_link_create_allowed
              definition:  thread_bootstrap_link_create_check
              definition:  thread_bootstrap_mac_activate
              definition:  thread_bootstrap_network_data_activate
              definition:  thread_bootstrap_network_data_process
              definition:  thread_bootstrap_network_data_save
              definition:  thread_bootstrap_network_data_update
              definition:  thread_bootstrap_network_prefixes_process
              definition:  thread_bootstrap_parent_network_data_request
              definition:  thread_bootstrap_partition_process
              definition:  thread_bootstrap_ready
              definition:  thread_bootstrap_request_network_data
              definition:  thread_bootstrap_reset
              definition:  thread_bootstrap_reset_restart
              definition:  thread_bootstrap_router_id_get_fail
              definition:  thread_bootstrap_router_id_release_ready
              definition:  thread_bootstrap_routing_activate
              definition:  thread_bootstrap_should_register_address
              definition:  thread_bootstrap_start_network_discovery
              definition:  thread_bootstrap_state_machine
              definition:  thread_bootstrap_stop
              definition:  thread_bootstrap_tasklet_init
              definition:  thread_bootstrap_temporary_attach
              definition:  thread_bootstrap_update_ml16_address
              reference :  thread_border_router_network_data_update_notify
              reference :  thread_border_router_publish
              reference :  thread_border_router_resubmit_timer_set
              definition:  thread_calculate_link_margin
              reference :  thread_ccm_commission_start
              reference :  thread_ccm_network_select
              definition:  thread_check_is_this_my_parent
              reference :  thread_child_id_request_entry_clean
              reference :  thread_child_set_default_route
              definition:  thread_clean_old_16_bit_address_based_addresses
              reference :  thread_common_ccm_enabled
              reference :  thread_common_primary_bbr_get
              definition:  thread_compute_link_margin
              definition:  thread_configuration_6lowpan_activate
              definition:  thread_configuration_mac_activate
              definition:  thread_configuration_mle_activate
              definition:  thread_configuration_mle_disable
              definition:  thread_configuration_thread_activate
              reference :  thread_data_base_init
              definition:  thread_delete_ml16_addresses
              definition:  thread_delete_ml64_address
              definition:  thread_device_synch_timeout
              definition:  thread_dhcpv6_address_entry_available
              definition:  thread_discover_native_commissioner_response
              reference :  thread_discovery_announce_network_scan
              reference :  thread_discovery_network_description_get
              reference :  thread_discovery_network_scan
              reference :  thread_discovery_reset
              reference :  thread_discovery_responser_enable
              reference :  thread_dynamic_storage_build_mle_table
              reference :  thread_dynamic_storage_child_info_store
              definition:  thread_end_device_mode_set
              reference :  thread_endevice_synch_start
              reference :  thread_general_mle_receive_cb
              definition:  thread_generate_ml16_address
              definition:  thread_generate_ml64_address
              reference :  thread_get_router_count_from_route_tlv
              reference :  thread_host_bootstrap_child_update
              reference :  thread_i_am_router
              definition:  thread_interface_init
              definition:  thread_interface_up
              reference :  thread_is_router_addr
              reference :  thread_joiner_application_get_config
              reference :  thread_joiner_application_get_device_config
              reference :  thread_joiner_application_link_configuration_store
              reference :  thread_joiner_application_ml_eid_get
              reference :  thread_joiner_application_nvm_link_configuration_load
              reference :  thread_joiner_application_old_config_activate
              reference :  thread_joiner_application_old_config_delete
              reference :  thread_joiner_application_old_config_exists
              reference :  thread_joiner_application_pending_config_enable
              reference :  thread_joiner_application_pending_config_exists
              reference :  thread_joiner_application_pending_config_timeout_get
              reference :  thread_joiner_application_pending_delay_timer_in_sync
              reference :  thread_joiner_application_provisioning_get
              reference :  thread_joiner_application_pskd_commission_start
              reference :  thread_joiner_application_random_mac_get
              reference :  thread_joiner_pending_config_activate
              reference :  thread_key_guard_timer_calculate
              reference :  thread_leader_data_tlv_size
              reference :  thread_leader_data_tlv_write
              definition:  thread_leader_data_validation
              reference :  thread_leader_service_generate_network_data
              reference :  thread_leader_service_leader_data_free
              reference :  thread_leader_service_network_data_changed
              reference :  thread_leader_service_thread_partitition_generate
              definition:  thread_link_configuration_activate
              definition:  thread_link_request_timeout
              reference :  thread_maintenance_timer_set
              reference :  thread_management_client_addr_ntf_send
              reference :  thread_management_client_get_interface_id_by_service_id
              reference :  thread_management_client_init
              reference :  thread_management_client_mlr_req_send
              reference :  thread_management_get_current_keysequence
              reference :  thread_management_server_ccm_service_init
              reference :  thread_management_server_joiner_router_init
              reference :  thread_management_server_service_id_get
              reference :  thread_max_mcast_addr
              reference :  thread_meshcop_tlv_data_get_uint8
              reference :  thread_meshcop_tlv_data_write
              reference :  thread_meshcop_tlv_data_write_uint16
              reference :  thread_meshcop_tlv_data_write_uint64
              reference :  thread_meshcop_tlv_find
              definition:  thread_mle_class_init
              reference :  thread_mle_parent_discover_receive_cb
              definition:  thread_mode_get_by_interface_ptr
              reference :  thread_nd_client_service_activate
              reference :  thread_nd_context_id_allocate
              reference :  thread_nd_hosted_by_this_routerid
              reference :  thread_nd_icmp_handler
              reference :  thread_nd_local_list_add_contexts
              reference :  thread_nd_local_list_add_on_mesh_prefix
              reference :  thread_nd_local_list_add_route
              reference :  thread_nd_local_list_add_service
              reference :  thread_nd_local_list_del_on_mesh_server
              reference :  thread_nd_ns_transmit
              reference :  thread_nd_on_mesh_address_valid
              reference :  thread_nd_own_service_list_data_size
              reference :  thread_nd_service_activate
              reference :  thread_nd_service_delete
              reference :  thread_nd_service_disable
              reference :  thread_nd_snoop
              reference :  thread_nd_special_forwarding
              reference :  thread_nd_verify_contex_id_is_free
              reference :  thread_neighbor_class_create
              reference :  thread_neighbor_class_delete
              reference :  thread_neighbor_class_get_mleid
              definition:  thread_neighbor_list_clean
              reference :  thread_network_attach_start
              reference :  thread_network_data_malformed_check
              reference :  thread_network_data_request_send
              reference :  thread_network_data_router_id_free
              reference :  thread_network_data_router_id_mark_delete
              reference :  thread_network_data_sub_tlv_malformed_check
              definition:  thread_network_data_timeout
              reference :  thread_network_synch_data_free
              reference :  thread_nvm_store_fast_data_check_and_write
              reference :  thread_nvm_store_frame_counters_check_and_write
              reference :  thread_nvm_store_link_info_clear
              reference :  thread_nvm_store_link_info_get
              reference :  thread_nvm_store_link_info_write
              reference :  thread_on_mesh_route_possible_add
              reference :  thread_parent_data_allocate
              definition:  thread_parent_margin_calc
              definition:  thread_parent_scan
              reference :  thread_partition_info_update
              reference :  thread_partition_match
              reference :  thread_pending_timestamp_write
              reference :  thread_prefix_entry_find
              definition:  thread_proxy_validate
              definition:  thread_reed_fed_neighbour_links_clean
              reference :  thread_registered_mcast_addr_entry_clean
              reference :  thread_reset_neighbour_info
              reference :  thread_router_bootstrap_active_router_attach
              reference :  thread_router_bootstrap_address_change_notify_send
              reference :  thread_router_bootstrap_anycast_address_register
              reference :  thread_router_bootstrap_child_count_get
              reference :  thread_router_bootstrap_child_id_handler
              reference :  thread_router_bootstrap_child_id_reject
              reference :  thread_router_bootstrap_child_information_clear
              reference :  thread_router_bootstrap_link_synch_start
              reference :  thread_router_bootstrap_multicast_forwarder_enable
              reference :  thread_router_bootstrap_network_data_distribute
              reference :  thread_router_bootstrap_reed_advertisements_start
              reference :  thread_router_bootstrap_router_id_release
              reference :  thread_router_bootstrap_router_id_request
              reference :  thread_router_bootstrap_routing_allowed
              reference :  thread_routing_count_active_routers
              reference :  thread_routing_deactivate
              reference :  thread_routing_reset
              reference :  thread_routing_set_mesh_callbacks
              reference :  thread_security_key_generate
              reference :  thread_security_next_key_generate
              reference :  thread_security_prev_key_generate
              definition:  thread_set_link_local_address
              definition:  thread_tasklet
              definition:  thread_tlv_request
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/nanostack/sal-stack-nanostack/source/6LoWPAN/Thread/thread_border_router_api.o.
              reference :  __aeabi_memcpy
              reference :  bitsequal
              reference :  coap_service_delete
              reference :  coap_service_initialize
              reference :  coap_service_register_uri
              reference :  coap_service_request_delete_by_service_id
              reference :  coap_service_response_send
              reference :  common_write_16_bit
              reference :  mac_helper_mac16_address_get
              reference :  mac_neighbor_table_address_discover
              reference :  mbed_tracef
              reference :  memcmp
              reference :  ns_dyn_mem_alloc
              reference :  ns_dyn_mem_free
              reference :  ns_dyn_mem_temporary_alloc
              reference :  ns_list_add_to_start_
              reference :  ns_list_get_next_
              reference :  ns_list_remove_
              reference :  prefixBits_to_bytes
              reference :  protocol_stack_interface_info_get_by_id
              reference :  randLIB_get_random_in_range
              reference :  thread_addr_is_child
              reference :  thread_attach_ready
              reference :  thread_bbr_commercial_old_partition_data_clean
              definition:  thread_border_router_delete
              definition:  thread_border_router_delete_all
              definition:  thread_border_router_dns_search_list_option_set
              definition:  thread_border_router_init
              definition:  thread_border_router_mdns_responder_start
              definition:  thread_border_router_mdns_responder_stop
              definition:  thread_border_router_network_data_appl_callback
              definition:  thread_border_router_network_data_callback_register
              definition:  thread_border_router_network_data_update_notify
              definition:  thread_border_router_old_partition_data_clean
              definition:  thread_border_router_prefix_add
              definition:  thread_border_router_prefix_context_id
              definition:  thread_border_router_prefix_delete
              definition:  thread_border_router_prefix_tlv_find
              definition:  thread_border_router_publish
              definition:  thread_border_router_recursive_dns_server_option_set
              definition:  thread_border_router_resubmit_timer_set
              definition:  thread_border_router_route_add
              definition:  thread_border_router_route_delete
              definition:  thread_border_router_seconds_timer
              definition:  thread_border_router_server_tlv_find
              definition:  thread_border_router_service_add
              definition:  thread_border_router_service_delete
              definition:  thread_border_router_service_tlv_find
              definition:  thread_border_router_tlv_find
              reference :  thread_is_router_addr
              reference :  thread_local_server_add_route
              reference :  thread_local_server_del_route
              reference :  thread_local_server_list_add_on_mesh_server
              reference :  thread_local_server_list_del_on_mesh_server
              reference :  thread_local_service_list_add
              reference :  thread_local_service_list_del
              reference :  thread_management_client_coap_message_delete
              reference :  thread_management_client_network_data_register
              reference :  thread_management_client_network_data_unregister
              reference :  thread_mdns_start
              reference :  thread_mdns_stop
              reference :  thread_meshcop_tlv_data_write_header
              reference :  thread_meshcop_tlv_data_write_uint16
              reference :  thread_meshcop_tlv_find
              reference :  thread_meshcop_tlv_find_next
              reference :  thread_nd_hosted_by_this_routerid
              reference :  thread_nd_own_service_list_data_size
              reference :  thread_nd_own_service_list_data_write
              reference :  thread_network_data_service_entry_find
              reference :  thread_network_data_service_hosted_by_this_router_id
              reference :  thread_network_data_tlv_size
              reference :  thread_network_data_tlv_write
              reference :  thread_network_local_data_free_and_clean
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/nanostack/sal-stack-nanostack/source/6LoWPAN/Thread/thread_ccm.o.
              reference :  __aeabi_memclr4
              reference :  __aeabi_memcpy
              reference :  coap_service_certificate_set
              reference :  coap_service_close_secure_connection
              reference :  coap_service_initialize
              reference :  coap_service_request_send
              reference :  common_read_16_bit
              reference :  common_write_64_bit
              reference :  eventOS_timeout_ms
              reference :  joiner_application_security_done_cb
              reference :  mbed_trace_array
              reference :  mbed_tracef
              reference :  memchr
              reference :  memcmp
              definition:  meshcop_nmkp_resp_ignore
              reference :  ns_dyn_mem_alloc
              reference :  ns_dyn_mem_free
              reference :  ns_list_add_to_start_
              reference :  ns_list_get_next_
              reference :  ns_list_remove_
              reference :  protocol_stack_interface_info_get_by_id
              reference :  randLIB_get_64bit
              reference :  strncmp
              reference :  thread_bootstrap_connection_error
              definition:  thread_ccm_allocate
              definition:  thread_ccm_commission_start
              definition:  thread_ccm_device_certificate_set
              definition:  thread_ccm_free
              definition:  thread_ccm_network_certificate_available
              definition:  thread_ccm_network_certificate_enable
              definition:  thread_ccm_network_certificate_set
              definition:  thread_ccm_network_private_key_set
              definition:  thread_ccm_network_reattach
              definition:  thread_ccm_network_select
              definition:  thread_ccm_parse_rat_response
              definition:  thread_ccm_reenrollment_start
              definition:  thread_ccm_thread_name_length_get
              definition:  thread_ccm_thread_name_ptr_get
              definition:  thread_ccm_thread_name_set
              reference :  thread_joiner_application_active_configuration_update
              reference :  thread_joiner_application_device_configuration_build
              reference :  thread_joiner_application_device_configuration_length
              reference :  thread_joiner_application_get_device_config
              reference :  thread_joiner_application_link_configuration_delete
              reference :  thread_joiner_application_pskd_commission_start
              reference :  thread_management_server_interface_id_get
              reference :  thread_meshcop_tlv_data_write
              reference :  thread_meshcop_tlv_find
              reference :  thread_nvm_store_link_info_clear
              reference :  thread_nvm_store_mleid_rloc_map_remove
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/nanostack/sal-stack-nanostack/source/6LoWPAN/Thread/thread_commissioning_api.o.
              reference :  ADDR_SHORT_ADR_SUFFIC
              reference :  __aeabi_memclr
              reference :  __aeabi_memclr4
              reference :  __aeabi_memcpy
              definition:  any_device
              reference :  coap_service_close_secure_connection
              reference :  coap_service_delete
              reference :  coap_service_initialize
              reference :  coap_service_register_uri
              reference :  coap_service_request_send
              reference :  coap_service_response_send
              reference :  coap_service_virtual_socket_recv
              reference :  coap_service_virtual_socket_set_cb
              reference :  common_read_16_bit
              reference :  common_write_16_bit
              reference :  mbed_trace_array
              reference :  mbed_tracef
              reference :  mbedtls_sha256_ret
              reference :  memcmp
              reference :  ns_dyn_mem_alloc
              reference :  ns_dyn_mem_free
              reference :  ns_list_add_to_start_
              reference :  ns_list_get_next_
              reference :  ns_list_init_
              reference :  ns_list_remove_
              reference :  protocol_stack_interface_info_get_by_id
              reference :  randLIB_get_16bit
              reference :  strlen
              reference :  thread_beacon_calculate_bloom_filter
              definition:  thread_commission_device_get_next
              definition:  thread_commissioning_attach
              definition:  thread_commissioning_device_add
              definition:  thread_commissioning_device_delete
              definition:  thread_commissioning_get_management_id
              definition:  thread_commissioning_native_commissioner_connect
              definition:  thread_commissioning_native_commissioner_get_connection_info
              definition:  thread_commissioning_native_commissioner_start
              definition:  thread_commissioning_native_commissioner_stop
              definition:  thread_commissioning_petition_keep_alive
              definition:  thread_commissioning_petition_start
              definition:  thread_commissioning_register
              definition:  thread_commissioning_unregister
              reference :  thread_management_get_leader_aloc
              reference :  thread_management_get_ml_prefix
              reference :  thread_meshcop_tlv_data_get_uint16
              reference :  thread_meshcop_tlv_data_write
              reference :  thread_meshcop_tlv_data_write_uint16
              reference :  thread_meshcop_tlv_data_write_uint8
              reference :  thread_meshcop_tlv_find
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/nanostack/sal-stack-nanostack/source/6LoWPAN/Thread/thread_commissioning_if.o.
              reference :  mac_helper_default_security_key_id_mode_set
              reference :  mac_helper_default_security_level_set
              reference :  mac_pairwise_key_add
              reference :  mac_pairwise_key_del
              reference :  mac_pairwise_key_flush_list
              reference :  protocol_stack_interface_info_get_by_id
              definition:  thread_commissioning_if_border_router_locator_get
              definition:  thread_commissioning_if_enable_security
              definition:  thread_commissioning_if_pairwise_key_add
              definition:  thread_commissioning_if_pairwise_key_del
              definition:  thread_commissioning_if_pairwise_key_delete_all
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/nanostack/sal-stack-nanostack/source/6LoWPAN/Thread/thread_common.o.
              reference :  ADDR_ALL_MPL_FORWARDERS
              reference :  ADDR_LINK_LOCAL_ALL_NODES
              reference :  ADDR_LINK_LOCAL_ALL_ROUTERS
              reference :  ADDR_MULTICAST_SOLICITED
              reference :  ADDR_REALM_LOCAL_ALL_NODES
              reference :  ADDR_REALM_LOCAL_ALL_ROUTERS
              reference :  ADDR_SHORT_ADR_SUFFIC
              reference :  __aeabi_memclr4
              reference :  __aeabi_memcpy
              reference :  addr_interface_set_ll64
              reference :  addr_ipv6_equal
              reference :  addr_ipv6_scope
              reference :  addr_notification_register
              reference :  addr_policy_table_add_entry
              reference :  addr_policy_table_delete_entry
              reference :  blacklist_ttl_update
              reference :  common_read_16_bit
              reference :  common_read_32_bit
              reference :  common_write_16_bit
              reference :  common_write_32_bit
              reference :  common_write_64_bit
              reference :  etx_accum_failures_callback_register
              reference :  eventOS_timeout_cancel
              reference :  ipv6_neighbour_cache_flush
              reference :  lowpan_context_get_by_address
              reference :  mac_data_poll_disable
              reference :  mac_helper_beacon_payload_reallocate
              reference :  mac_helper_beacon_payload_register
              reference :  mac_helper_devicetable_remove
              reference :  mac_helper_link_frame_counter_read
              reference :  mac_helper_mac16_address_get
              reference :  mac_helper_mac16_address_set
              reference :  mac_helper_pib_boolean_set
              reference :  mac_helper_security_key_swap_next_to_default
              reference :  mac_neighbor_table_address_discover
              reference :  mac_neighbor_table_attribute_discover
              reference :  mac_neighbor_table_neighbor_remove
              reference :  mac_pairwise_key_flush_list
              reference :  mbed_tracef
              reference :  memcmp
              reference :  mle_active_configuration_dataset_ignore_tlvs
              reference :  mle_active_configuration_dataset_ignore_tlvs_size
              reference :  mle_class_free_entry_count_get
              reference :  mle_class_rfd_entry_count_get
              reference :  mle_class_sleepy_entry_count_get
              reference :  mle_pending_configuration_dataset_ignore_tlvs
              reference :  mle_pending_configuration_dataset_ignore_tlvs_size
              reference :  mle_service_get_data_pointer
              reference :  mle_service_interface_unregister
              reference :  mle_service_msg_allocate
              reference :  mle_service_msg_update_security_params
              reference :  mle_service_security_default_key_get
              reference :  mle_service_security_default_key_id_get
              reference :  mle_service_security_get_frame_counter
              reference :  mle_service_security_init
              reference :  mle_service_security_instance_allocate
              reference :  mle_service_security_next_key_get
              reference :  mle_service_security_next_key_id_get
              reference :  mle_service_send_message
              reference :  mle_service_set_msg_destination_address
              reference :  mle_service_set_msg_timeout_parameters
              reference :  mle_service_update_length_by_ptr
              reference :  mle_tlv_option_discover
              reference :  nd_proxy_downstream_interface_unregister
              reference :  ns_dyn_mem_alloc
              reference :  ns_dyn_mem_free
              reference :  ns_list_add_to_end_
              reference :  ns_list_get_next_
              reference :  ns_list_init_
              reference :  ns_list_remove_
              reference :  nwk_6lowpan_down
              reference :  nwk_6lowpan_up
              reference :  nwk_bootsrap_state_update
              reference :  prefixBits_to_bytes
              reference :  protocol_6lowpan_register_handlers
              reference :  protocol_6lowpan_release_long_link_address_from_neighcache
              reference :  protocol_mac_reset
              reference :  protocol_stack_interface_info_get_by_id
              reference :  randLIB_get_16bit
              reference :  randLIB_get_random_in_range
              definition:  thread_active_operational_dataset_process
              definition:  thread_active_operational_dataset_size
              definition:  thread_active_operational_dataset_write
              definition:  thread_active_timestamp_write
              reference :  thread_addr_is_child
              definition:  thread_addr_is_mesh_local
              definition:  thread_addr_is_mesh_local_16
              definition:  thread_addr_write_mesh_local_16
              definition:  thread_address_registration_tlv_write
              definition:  thread_addresses_needs_to_be_registered
              definition:  thread_allocate_and_init_leader_private_data
              definition:  thread_anycast_address_policy_update
              definition:  thread_attach_active_router
              definition:  thread_attach_ready
              reference :  thread_bbr_seconds_timer
              definition:  thread_beacon_create_payload
              definition:  thread_beacon_indication
              reference :  thread_bootstrap_address_registration
              reference :  thread_bootstrap_address_registration_timer
              reference :  thread_bootstrap_address_registration_timer_set
              reference :  thread_bootstrap_all_nodes_address_generate
              reference :  thread_bootstrap_child_update_trig
              reference :  thread_bootstrap_connection_error
              definition:  thread_bootstrap_down
              reference :  thread_bootstrap_dynamic_configuration_save
              reference :  thread_bootstrap_network_data_activate
              reference :  thread_bootstrap_should_register_address
              reference :  thread_bootstrap_stop
              reference :  thread_bootstrap_tasklet_init
              definition:  thread_bootstrap_up
              reference :  thread_border_router_old_partition_data_clean
              reference :  thread_border_router_prefix_context_id
              reference :  thread_border_router_seconds_timer
              reference :  thread_ccm_free
              definition:  thread_child_id_request_allocate
              definition:  thread_child_id_request_entry_clean
              definition:  thread_child_id_request_entry_get
              definition:  thread_child_id_request_entry_get_from_the_list
              definition:  thread_child_id_request_entry_remove
              definition:  thread_child_id_request_info_init
              definition:  thread_child_mcast_entries_remove
              definition:  thread_child_mcast_entry_find
              definition:  thread_child_mcast_entry_get
              definition:  thread_common_ccm_allocate
              definition:  thread_common_ccm_enabled
              definition:  thread_common_ccm_free
              definition:  thread_common_primary_bbr_get
              reference :  thread_configuration_thread_activate
              definition:  thread_connectivity_tlv_parse
              definition:  thread_connectivity_tlv_write
              definition:  thread_data_base_init
              reference :  thread_diagnostic_delete
              reference :  thread_discovery_reset
              definition:  thread_dynamic_reed_initialize
              definition:  thread_get_router_count_from_route_tlv
              reference :  thread_i_am_router
              definition:  thread_info_allocate_and_init
              definition:  thread_info_deallocate
              definition:  thread_init
              definition:  thread_insist_that_mesh_isnt_a_link
              reference :  thread_interface_up
              reference :  thread_is_router_addr
              reference :  thread_joiner_application_active_config_length
              reference :  thread_joiner_application_active_config_write
              reference :  thread_joiner_application_active_timestamp_get
              reference :  thread_joiner_application_active_timestamp_set
              reference :  thread_joiner_application_configuration_nvm_save
              reference :  thread_joiner_application_deinit
              reference :  thread_joiner_application_get_config
              reference :  thread_joiner_application_next_active_config_delete
              reference :  thread_joiner_application_next_active_config_exists
              reference :  thread_joiner_application_next_active_config_save
              reference :  thread_joiner_application_next_pending_config_delete
              reference :  thread_joiner_application_next_pending_config_exists
              reference :  thread_joiner_application_next_pending_config_save
              reference :  thread_joiner_application_pending_config_build
              reference :  thread_joiner_application_pending_config_create
              reference :  thread_joiner_application_pending_config_enable
              reference :  thread_joiner_application_pending_config_exists
              reference :  thread_joiner_application_pending_config_length
              reference :  thread_joiner_application_pending_config_timestamp_get
              reference :  thread_joiner_application_pending_config_timestamp_set
              reference :  thread_joiner_application_provisioning_get
              reference :  thread_joiner_application_seconds_timer
              reference :  thread_joiner_application_security_policy_get
              reference :  thread_joiner_application_update_configuration
              reference :  thread_key_get
              definition:  thread_key_guard_timer_calculate
              definition:  thread_key_guard_timer_reset
              definition:  thread_leader_commissioner_create
              definition:  thread_leader_data_generate
              definition:  thread_leader_data_get
              definition:  thread_leader_data_parse
              definition:  thread_leader_data_tlv_size
              definition:  thread_leader_data_tlv_write
              reference :  thread_leader_mleid_rloc_map_to_nvm_write
              reference :  thread_leader_service_leader_data_free
              definition:  thread_link_cost_sum
              definition:  thread_link_margin_to_quality
              definition:  thread_link_quality_to_cost
              definition:  thread_link_reject_send
              definition:  thread_log2_aprx
              reference :  thread_lowpower_timer
              definition:  thread_maintenance_timer_set
              reference :  thread_management_client_active_set
              reference :  thread_management_client_delete
              reference :  thread_management_client_old_partition_data_clean
              reference :  thread_management_client_pending_set
              reference :  thread_management_client_provision_request
              reference :  thread_management_get_commissioner_address
              reference :  thread_management_get_current_keysequence
              reference :  thread_management_get_leader_address
              definition:  thread_management_key_request_with_sequence
              reference :  thread_management_key_sets_calc
              reference :  thread_management_server_commisoner_data_get
              reference :  thread_management_server_delete
              definition:  thread_mcast_addr_child_entry_allocate
              definition:  thread_mcast_group_change
              reference :  thread_meshcop_tlv_data_get_uint32
              reference :  thread_meshcop_tlv_find_next
              definition:  thread_ml_address_tlv_write
              reference :  thread_mle_class_init
              definition:  thread_mle_service_security_notify_cb
              reference :  thread_nd_commission_data_write_steering_data
              reference :  thread_nd_service_delete
              reference :  thread_nd_service_disable
              reference :  thread_neighbor_class_entry_remove
              reference :  thread_neighbor_class_request_full_data_setup
              definition:  thread_neighbor_communication_update
              reference :  thread_neighbor_entry_linkmargin_get
              reference :  thread_neighbor_last_communication_time_update
              reference :  thread_neighbor_list_clean
              reference :  thread_network_data_base_init
              reference :  thread_network_data_free_and_clean
              definition:  thread_network_data_generate_stable_set
              definition:  thread_network_data_request_send
              definition:  thread_network_data_tlv_length
              definition:  thread_network_data_tlv_size
              definition:  thread_network_data_tlv_write
              reference :  thread_network_local_data_free_and_clean
              reference :  thread_network_local_server_data_base_init
              reference :  thread_nvm_store_fast_data_write
              reference :  thread_nvm_store_seconds_timer
              definition:  thread_on_mesh_route_possible_add
              definition:  thread_parent_data_allocate
              definition:  thread_partition_data_purge
              definition:  thread_partition_info_update
              definition:  thread_partition_match
              definition:  thread_pending_operational_dataset_process
              definition:  thread_pending_operational_dataset_size
              definition:  thread_pending_operational_dataset_write
              definition:  thread_pending_timestamp_tlv_size
              definition:  thread_pending_timestamp_write
              reference :  thread_reed_fed_neighbour_links_clean
              definition:  thread_registered_mcast_addr_entry_allocate
              definition:  thread_registered_mcast_addr_entry_clean
              definition:  thread_registered_mcast_addr_entry_find
              definition:  thread_reset_neighbour_info
              reference :  thread_resolution_client_timer
              definition:  thread_route_option_size
              definition:  thread_route_option_write
              definition:  thread_route_ready_to_leader
              reference :  thread_router_bootstrap_child_count_get
              reference :  thread_router_bootstrap_mle_advertise
              reference :  thread_router_bootstrap_reset_child_info
              reference :  thread_router_bootstrap_timer
              reference :  thread_routing_cost_get_by_router_id
              reference :  thread_routing_count_active_routers
              reference :  thread_routing_count_active_routers_from_mask
              reference :  thread_routing_free
              reference :  thread_routing_get_route_data
              reference :  thread_routing_get_route_data_size
              reference :  thread_routing_init
              reference :  thread_routing_remove_link
              reference :  thread_routing_reset
              reference :  thread_routing_timer
              definition:  thread_scan_mask_validation
              definition:  thread_seconds_timer
              reference :  thread_security_update_from_mac
              definition:  thread_stable_context_check
              definition:  thread_sum_rx_path_cost_and_link_cost
              definition:  thread_timer
              reference :  thread_tlv_request
              definition:  thread_version
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/nanostack/sal-stack-nanostack/source/6LoWPAN/Thread/thread_dhcpv6_server.o.
              reference :  DHCPv6_server_service_callback_set
              reference :  DHCPv6_server_service_init
              reference :  DHCPv6_server_service_set_address_validlifetime
              reference :  ipv6_neighbour_entry_remove
              reference :  ipv6_neighbour_lookup
              reference :  ipv6_route_add_with_info
              reference :  ipv6_route_delete
              reference :  ipv6_route_table_remove_info
              reference :  protocol_stack_interface_info_get_by_id
              reference :  thread_bbr_nd_entry_add
              definition:  thread_dhcp6_server_init
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/nanostack/sal-stack-nanostack/source/6LoWPAN/Thread/thread_diagnostic.o.
              reference :  __aeabi_memclr4
              reference :  arm_net_address_list_get
              reference :  arm_net_interface_address_list_size
              reference :  coap_service_register_uri
              reference :  coap_service_request_send
              reference :  coap_service_response_send
              reference :  coap_service_unregister_uri
              reference :  mac_helper_mac16_address_get
              reference :  mbed_tracef
              reference :  mle_mode_write_from_mac_entry
              reference :  ns_dyn_mem_alloc
              reference :  ns_dyn_mem_free
              reference :  ns_list_add_to_start_
              reference :  ns_list_get_next_
              reference :  ns_list_remove_
              reference :  protocol_stack_interface_info_get_by_id
              reference :  thread_connectivity_tlv_write
              definition:  thread_diag_mode_get_by_interface_ptr
              definition:  thread_diagnostic_delete
              definition:  thread_diagnostic_init
              reference :  thread_leader_data_tlv_write
              reference :  thread_log2_aprx
              reference :  thread_management_server_service_id_get
              reference :  thread_meshcop_tlv_data_write
              reference :  thread_meshcop_tlv_data_write_uint16
              reference :  thread_meshcop_tlv_data_write_uint32
              reference :  thread_meshcop_tlv_data_write_uint8
              reference :  thread_meshcop_tlv_find
              reference :  thread_neighbor_class_mode_write_from_entry
              reference :  thread_network_data_tlv_size
              reference :  thread_network_data_tlv_write
              reference :  thread_route_option_size
              reference :  thread_route_option_write
              reference :  thread_router_addr_from_addr
              reference :  thread_router_bootstrap_child_count_get
              reference :  thread_router_bootstrap_child_max_timeout_get
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/nanostack/sal-stack-nanostack/source/6LoWPAN/Thread/thread_discovery.o.
              reference :  ADDR_LINK_LOCAL_ALL_NODES
              reference :  ADDR_LINK_LOCAL_PREFIX
              reference :  __aeabi_memclr4
              reference :  __aeabi_memcpy
              reference :  addr_is_ipv6_link_local
              reference :  common_read_16_bit
              reference :  common_write_16_bit
              reference :  eventOS_event_handler_create
              reference :  eventOS_event_timer_request
              reference :  mac_data_poll_init
              reference :  mac_helper_beacon_payload_reallocate
              reference :  mac_helper_default_security_level_set
              reference :  mac_helper_mac16_address_set
              reference :  mac_helper_mac64_set
              reference :  mbed_tracef
              reference :  memchr
              reference :  memcmp
              reference :  mle_class_free_entry_count_get
              reference :  mle_service_get_data_pointer
              reference :  mle_service_get_msg_destination_address_pointer
              reference :  mle_service_interface_receiver_bypass_handler_update
              reference :  mle_service_interface_receiver_handler_update
              reference :  mle_service_interface_register
              reference :  mle_service_msg_allocate
              reference :  mle_service_msg_update_security_params
              reference :  mle_service_send_message
              reference :  mle_service_set_msg_destination_address
              reference :  mle_service_set_msg_link_layer_security_mode
              reference :  mle_service_set_msg_panid
              reference :  mle_service_set_msg_timeout_parameters
              reference :  mle_service_update_length_by_ptr
              reference :  mle_tlv_option_discover
              reference :  ns_dyn_mem_alloc
              reference :  ns_dyn_mem_free
              reference :  ns_dyn_mem_temporary_alloc
              reference :  ns_list_add_before_
              reference :  ns_list_add_to_end_
              reference :  ns_list_add_to_start_
              reference :  ns_list_count_
              reference :  ns_list_get_last_
              reference :  ns_list_get_next_
              reference :  ns_list_get_previous_
              reference :  ns_list_init_
              reference :  ns_list_remove_
              reference :  protocol_stack_interface_info_get_by_id
              reference :  randLIB_get_n_bytes_random
              reference :  randLIB_get_random_in_range
              reference :  thread_ccm_thread_name_length_get
              reference :  thread_ccm_thread_name_ptr_get
              definition:  thread_discovery_announce_network_scan
              definition:  thread_discovery_ccm_info_write
              definition:  thread_discovery_ccm_joining_enabled
              definition:  thread_discovery_ccm_response_read
              definition:  thread_discovery_init
              definition:  thread_discovery_network_description_get
              definition:  thread_discovery_network_scan
              definition:  thread_discovery_reset
              definition:  thread_discovery_responser_enable
              definition:  thread_discovery_tlv_spesific_data_discover
              reference :  thread_end_device_mode_set
              reference :  thread_joiner_application_get_config
              reference :  thread_management_get_current_keysequence
              reference :  thread_management_server_commisoner_data_get
              reference :  thread_meshcop_tlv_data_get_uint16
              reference :  thread_meshcop_tlv_data_get_uint64
              reference :  thread_meshcop_tlv_data_write
              reference :  thread_meshcop_tlv_data_write_uint16
              reference :  thread_meshcop_tlv_data_write_uint64
              reference :  thread_meshcop_tlv_find
              reference :  thread_set_link_local_address
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/nanostack/sal-stack-nanostack/source/6LoWPAN/Thread/thread_host_bootstrap.o.
              reference :  ADDR_LINK_LOCAL_ALL_ROUTERS
              reference :  ADDR_LINK_LOCAL_PREFIX
              reference :  __aeabi_memcpy
              reference :  addr_is_ipv6_link_local
              reference :  blacklist_reject
              reference :  blacklist_update
              reference :  common_read_32_bit
              reference :  common_serial_number_greater_8
              reference :  common_write_16_bit
              reference :  ipv6_route_add
              reference :  ipv6_route_table_remove_info
              reference :  mac_data_poll_host_mode_get
              reference :  mac_data_poll_init_protocol_poll
              reference :  mac_data_poll_protocol_poll_mode_decrement
              reference :  mac_helper_coordinator_address_set
              reference :  mac_helper_default_key_index_get
              reference :  mac_helper_device_description_write
              reference :  mac_helper_devicetable_set
              reference :  mac_neighbor_entry_get_by_ll64
              reference :  mac_neighbor_entry_get_by_mac64
              reference :  mac_neighbor_table_address_discover
              reference :  mac_neighbor_table_neighbor_refresh
              reference :  mac_neighbor_table_neighbor_remove
              reference :  mbed_tracef
              reference :  memcmp
              reference :  mle_general_write_link_layer_framecounter
              reference :  mle_general_write_source_address
              reference :  mle_service_frame_counter_entry_add
              reference :  mle_service_get_data_pointer
              reference :  mle_service_get_msg_destination_address_pointer
              reference :  mle_service_get_payload_length
              reference :  mle_service_get_payload_start_point
              reference :  mle_service_interface_receiver_handler_update
              reference :  mle_service_interface_tx_queue_clean
              reference :  mle_service_msg_allocate
              reference :  mle_service_msg_free
              reference :  mle_service_msg_update_security_params
              reference :  mle_service_security_get_frame_counter
              reference :  mle_service_send_message
              reference :  mle_service_set_msg_destination_address
              reference :  mle_service_set_msg_timeout_parameters
              reference :  mle_service_set_msg_timeout_parameters_fast
              reference :  mle_service_set_packet_callback
              reference :  mle_service_update_length_by_ptr
              reference :  mle_tlv_option_discover
              reference :  mle_tlv_read_16_bit_tlv
              reference :  mle_tlv_read_32_bit_tlv
              reference :  mle_tlv_read_64_bit_tlv
              reference :  mle_tlv_read_8_bit_tlv
              reference :  mle_tlv_read_tlv
              reference :  mle_tlv_req_tlv
              reference :  mle_tlv_validate_response
              reference :  mle_tlv_write_framecounter
              reference :  mle_tlv_write_mode
              reference :  mle_tlv_write_response
              reference :  mle_tlv_write_scan_mask
              reference :  mle_tlv_write_timeout
              reference :  mle_tlv_write_version
              reference :  mpl_clear_realm_scope_seeds
              reference :  ns_dyn_mem_free
              reference :  ns_dyn_mem_temporary_alloc
              reference :  nwk_thread_host_control
              reference :  protocol_stack_interface_info_get_by_id
              reference :  thread_active_operational_dataset_process
              reference :  thread_active_timestamp_write
              reference :  thread_addr_is_child
              reference :  thread_address_registration_tlv_write
              reference :  thread_bootsrap_device_synch_fail
              reference :  thread_bootstrap_attached_ready
              reference :  thread_bootstrap_child_update_trig
              reference :  thread_bootstrap_clear_neighbor_entries
              reference :  thread_bootstrap_connection_error
              reference :  thread_bootstrap_network_data_save
              reference :  thread_bootstrap_parent_network_data_request
              reference :  thread_bootstrap_partition_process
              reference :  thread_bootstrap_reset_restart
              reference :  thread_bootstrap_update_ml16_address
              reference :  thread_calculate_link_margin
              reference :  thread_check_is_this_my_parent
              definition:  thread_child_set_default_route
              reference :  thread_clean_old_16_bit_address_based_addresses
              reference :  thread_common_ccm_enabled
              reference :  thread_compute_link_margin
              reference :  thread_connectivity_tlv_parse
              reference :  thread_device_synch_timeout
              reference :  thread_end_device_mode_set
              definition:  thread_endevice_synch_start
              reference :  thread_general_mle_receive_cb
              definition:  thread_host_bootstrap_child_update
              definition:  thread_host_bootstrap_child_update_negative_response
              reference :  thread_is_router_addr
              reference :  thread_joiner_application_get_config
              reference :  thread_joiner_application_next_pending_config_save
              reference :  thread_joiner_application_pending_config_delete
              reference :  thread_joiner_application_pending_config_timestamp_get
              reference :  thread_joiner_application_pending_delay_timer_in_sync
              reference :  thread_key_guard_timer_calculate
              reference :  thread_key_guard_timer_reset
              reference :  thread_leader_data_parse
              reference :  thread_leader_data_tlv_write
              reference :  thread_leader_service_leader_data_free
              reference :  thread_leader_service_stop
              reference :  thread_link_margin_to_quality
              reference :  thread_management_get_current_keysequence
              reference :  thread_management_key_sets_calc
              reference :  thread_management_key_synch_req
              reference :  thread_ml_address_tlv_write
              definition:  thread_mle_parent_discover_receive_cb
              reference :  thread_mode_get_by_interface_ptr
              reference :  thread_neighbor_class_update_link
              reference :  thread_neighbor_last_communication_time_update
              reference :  thread_neighbor_list_clean
              definition:  thread_network_attach_start
              reference :  thread_network_data_router_id_free
              reference :  thread_network_data_router_id_mark_delete
              reference :  thread_parent_data_allocate
              reference :  thread_parent_margin_calc
              reference :  thread_partition_data_purge
              reference :  thread_partition_match
              reference :  thread_pending_operational_dataset_process
              reference :  thread_route_ready_to_leader
              reference :  thread_router_bootstrap_route_tlv_push
              reference :  thread_routing_trickle_advance
              reference :  thread_routing_update_link_margin
              reference :  thread_sum_rx_path_cost_and_link_cost
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/nanostack/sal-stack-nanostack/source/6LoWPAN/Thread/thread_joiner_application.o.
              reference :  ADDR_SHORT_ADR_SUFFIC
              reference :  ADDR_UNSPECIFIED
              reference :  __aeabi_memclr4
              reference :  __aeabi_memclr8
              reference :  __aeabi_memcpy
              reference :  __aeabi_memcpy8
              reference :  __aeabi_memmove
              definition:  active_configuration_dataset_tlvs
              definition:  active_configuration_dataset_tlvs_size
              reference :  addr_iid_reserved
              reference :  blacklist_update
              reference :  coap_service_close_secure_connection
              reference :  coap_service_delete
              reference :  coap_service_initialize
              reference :  coap_service_register_uri
              reference :  coap_service_request_send
              reference :  coap_service_response_send
              reference :  common_read_16_bit
              reference :  common_read_64_bit
              reference :  common_write_16_bit
              reference :  common_write_64_bit
              definition:  entrust_dataset_tlvs
              definition:  entrust_dataset_tlvs_size
              reference :  eventOS_timeout_cancel
              reference :  eventOS_timeout_ms
              definition:  joiner_application_security_done_cb
              reference :  mac_helper_link_frame_counter_set
              reference :  mbed_trace_array
              reference :  mbed_tracef
              reference :  mbedtls_sha256_ret
              reference :  memchr
              reference :  memcmp
              definition:  meshcop_active_set_ignore
              definition:  meshcop_pending_set_ignore
              definition:  mle_active_configuration_dataset_ignore_tlvs
              definition:  mle_active_configuration_dataset_ignore_tlvs_size
              definition:  mle_active_configuration_dataset_tlvs
              definition:  mle_active_configuration_dataset_tlvs_size
              definition:  mle_pending_configuration_dataset_ignore_tlvs
              definition:  mle_pending_configuration_dataset_ignore_tlvs_size
              definition:  mle_pending_configuration_dataset_tlvs
              definition:  mle_pending_configuration_dataset_tlvs_size
              reference :  mle_service_security_set_frame_counter
              reference :  ns_dyn_mem_alloc
              reference :  ns_dyn_mem_free
              reference :  ns_dyn_mem_temporary_alloc
              reference :  ns_list_add_to_start_
              reference :  ns_list_get_next_
              reference :  ns_list_remove_
              definition:  pending_configuration_dataset_tlvs
              definition:  pending_configuration_dataset_tlvs_size
              reference :  protocol_stack_interface_info_get_by_id
              reference :  randLIB_add_seed
              reference :  randLIB_get_n_bytes_random
              reference :  randLIB_get_random_in_range
              reference :  strcpy
              reference :  strlen
              reference :  thread_commissioning_if_enable_security
              reference :  thread_commissioning_if_pairwise_key_add
              reference :  thread_commissioning_if_pairwise_key_delete_all
              definition:  thread_joiner_application_active_config_length
              definition:  thread_joiner_application_active_config_params_get
              definition:  thread_joiner_application_active_config_tlv_list_get
              definition:  thread_joiner_application_active_config_write
              definition:  thread_joiner_application_active_configuration_update
              definition:  thread_joiner_application_active_timestamp_get
              definition:  thread_joiner_application_active_timestamp_set
              definition:  thread_joiner_application_configuration_nvm_save
              definition:  thread_joiner_application_deinit
              definition:  thread_joiner_application_device_configuration_build
              definition:  thread_joiner_application_device_configuration_length
              definition:  thread_joiner_application_finalisation_cb
              definition:  thread_joiner_application_form_network
              definition:  thread_joiner_application_get_config
              definition:  thread_joiner_application_get_device_config
              definition:  thread_joiner_application_init
              definition:  thread_joiner_application_link_configuration_delete
              definition:  thread_joiner_application_link_configuration_store
              definition:  thread_joiner_application_ml_eid_get
              definition:  thread_joiner_application_network_name_get
              definition:  thread_joiner_application_next_active_config_delete
              definition:  thread_joiner_application_next_active_config_exists
              definition:  thread_joiner_application_next_active_config_length
              definition:  thread_joiner_application_next_active_config_save
              definition:  thread_joiner_application_next_active_config_write
              definition:  thread_joiner_application_next_pending_config_build
              definition:  thread_joiner_application_next_pending_config_delete
              definition:  thread_joiner_application_next_pending_config_exists
              definition:  thread_joiner_application_next_pending_config_length
              definition:  thread_joiner_application_next_pending_config_save
              definition:  thread_joiner_application_nvm_link_configuration_load
              definition:  thread_joiner_application_old_config_activate
              definition:  thread_joiner_application_old_config_delete
              definition:  thread_joiner_application_old_config_exists
              definition:  thread_joiner_application_pending_config_add_missing_fields
              definition:  thread_joiner_application_pending_config_build
              definition:  thread_joiner_application_pending_config_create
              definition:  thread_joiner_application_pending_config_delete
              definition:  thread_joiner_application_pending_config_enable
              definition:  thread_joiner_application_pending_config_exists
              definition:  thread_joiner_application_pending_config_length
              definition:  thread_joiner_application_pending_config_timeout_get
              definition:  thread_joiner_application_pending_config_timestamp_get
              definition:  thread_joiner_application_pending_config_timestamp_set
              definition:  thread_joiner_application_pending_config_tlv_list_get
              definition:  thread_joiner_application_pending_delay_timer_in_sync
              definition:  thread_joiner_application_provisioning_get
              definition:  thread_joiner_application_provisioning_set
              definition:  thread_joiner_application_pskd_commission_start
              definition:  thread_joiner_application_random_mac_get
              definition:  thread_joiner_application_seconds_timer
              definition:  thread_joiner_application_security_policy_get
              definition:  thread_joiner_application_update_configuration
              definition:  thread_joiner_attach_if_needed
              definition:  thread_joiner_pending_config_activate
              reference :  thread_link_configuration_activate
              reference :  thread_meshcop_tlv_data_get_uint32
              reference :  thread_meshcop_tlv_data_get_uint64
              reference :  thread_meshcop_tlv_data_get_uint8
              reference :  thread_meshcop_tlv_data_write
              reference :  thread_meshcop_tlv_data_write_uint16
              reference :  thread_meshcop_tlv_data_write_uint32
              reference :  thread_meshcop_tlv_data_write_uint64
              reference :  thread_meshcop_tlv_data_write_uint8
              reference :  thread_meshcop_tlv_exist
              reference :  thread_meshcop_tlv_find
              reference :  thread_meshcop_tlv_get_next
              reference :  thread_meshcop_tlv_length
              reference :  thread_meshcop_tlv_length_required
              reference :  thread_meshcop_tlv_list_generate
              reference :  thread_meshcop_tlv_list_present
              reference :  thread_meshcop_tlv_list_remove
              reference :  thread_meshcop_tlv_list_type_available
              reference :  thread_nvm_store_active_configuration_read
              reference :  thread_nvm_store_active_configuration_remove
              reference :  thread_nvm_store_active_configuration_write
              reference :  thread_nvm_store_device_configuration_read
              reference :  thread_nvm_store_device_configuration_write
              reference :  thread_nvm_store_fast_data_read
              reference :  thread_nvm_store_fast_data_write
              reference :  thread_nvm_store_link_info_read
              reference :  thread_nvm_store_pending_configuration_read
              reference :  thread_nvm_store_pending_configuration_remove
              reference :  thread_nvm_store_pending_configuration_write
              reference :  thread_nvm_store_seq_counter_write
              reference :  thread_router_bootstrap_delay_reed_jitter
              reference :  thread_security_key_generate
              reference :  thread_security_next_key_generate
              reference :  thread_security_prev_key_generate
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/nanostack/sal-stack-nanostack/source/6LoWPAN/Thread/thread_leader_service.o.
              reference :  ADDR_SHORT_ADR_SUFFIC
              reference :  __aeabi_memclr
              reference :  __aeabi_memclr4
              reference :  __aeabi_memcpy
              reference :  bit_clear
              reference :  bit_set
              reference :  bit_test
              reference :  coap_service_register_uri
              reference :  coap_service_request_send
              reference :  coap_service_response_send
              reference :  coap_service_unregister_uri
              reference :  common_read_16_bit
              reference :  common_write_16_bit
              reference :  dhcp_client_delete
              reference :  eventOS_timeout_cancel
              reference :  eventOS_timeout_ms
              reference :  ipv6_neighbour_cache_flush
              reference :  ipv6_route_table_remove_info
              reference :  mac_helper_default_security_key_id_mode_set
              reference :  mac_helper_default_security_level_set
              reference :  mac_helper_mac16_address_get
              reference :  mac_helper_pib_boolean_set
              reference :  mbed_trace_array
              reference :  mbed_tracef
              reference :  memcmp
              reference :  mle_service_interface_tx_queue_clean
              reference :  mpl_clear_realm_scope_seeds
              reference :  ns_dyn_mem_alloc
              reference :  ns_dyn_mem_free
              reference :  ns_dyn_mem_temporary_alloc
              reference :  ns_list_add_to_start_
              reference :  ns_list_get_next_
              reference :  ns_list_remove_
              reference :  nwk_bootsrap_state_update
              reference :  protocol_stack_interface_info_get_by_id
              reference :  randLIB_get_32bit
              reference :  randLIB_get_8bit
              reference :  randLIB_get_random_in_range
              reference :  strlen
              reference :  thread_allocate_and_init_leader_private_data
              reference :  thread_beacon_create_payload
              reference :  thread_bootstrap_network_data_process
              reference :  thread_bootstrap_network_data_update
              reference :  thread_bootstrap_ready
              reference :  thread_bootstrap_routing_activate
              reference :  thread_bootstrap_update_ml16_address
              reference :  thread_border_router_publish
              reference :  thread_configuration_mle_activate
              reference :  thread_configuration_thread_activate
              reference :  thread_delay_timer_default
              reference :  thread_discovery_responser_enable
              reference :  thread_generate_ml64_address
              reference :  thread_interface_init
              reference :  thread_is_router_addr
              reference :  thread_joiner_application_configuration_nvm_save
              reference :  thread_joiner_application_get_config
              reference :  thread_joiner_application_pending_config_add_missing_fields
              reference :  thread_joiner_application_pending_config_create
              reference :  thread_joiner_application_pending_config_enable
              reference :  thread_joiner_application_pending_config_exists
              reference :  thread_joiner_application_pending_config_timestamp_get
              reference :  thread_joiner_application_pending_config_timestamp_set
              reference :  thread_joiner_application_update_configuration
              definition:  thread_leader_mleid_rloc_map_populate
              definition:  thread_leader_mleid_rloc_map_to_nvm_write
              definition:  thread_leader_service_child_id_from_networkdata_get
              definition:  thread_leader_service_delete
              definition:  thread_leader_service_generate_network_data
              definition:  thread_leader_service_init
              definition:  thread_leader_service_leader_data_free
              definition:  thread_leader_service_network_data_changed
              definition:  thread_leader_service_route_mask_bit_clear
              definition:  thread_leader_service_router_id_valid_lifetime_update
              definition:  thread_leader_service_router_state_changed
              definition:  thread_leader_service_start
              definition:  thread_leader_service_stop
              definition:  thread_leader_service_thread_partitition_generate
              definition:  thread_leader_service_thread_partitition_restart
              definition:  thread_leader_service_timer
              definition:  thread_leader_service_update_id_set
              reference :  thread_meshcop_tlv_data_get_uint16
              reference :  thread_meshcop_tlv_data_get_uint32
              reference :  thread_meshcop_tlv_data_get_uint64
              reference :  thread_meshcop_tlv_data_write
              reference :  thread_meshcop_tlv_data_write_uint16
              reference :  thread_meshcop_tlv_data_write_uint8
              reference :  thread_meshcop_tlv_exist
              reference :  thread_meshcop_tlv_find
              reference :  thread_nd_own_service_list_data_size
              reference :  thread_nd_service_delete
              reference :  thread_neighbor_list_clean
              reference :  thread_network_data_base_init
              reference :  thread_network_data_context_re_use_timer_update
              reference :  thread_network_data_free_and_clean
              reference :  thread_network_data_prefix_set_size
              reference :  thread_network_data_prefix_set_write
              reference :  thread_network_data_resulting_tlv_size
              reference :  thread_network_data_router_id_free
              reference :  thread_network_data_router_id_mark_delete
              reference :  thread_network_data_service_child_id_from_networkdata_get
              reference :  thread_network_data_service_set_size
              reference :  thread_network_data_service_set_write
              reference :  thread_nvm_store_link_info_write
              reference :  thread_nvm_store_mleid_rloc_map_read
              reference :  thread_nvm_store_mleid_rloc_map_remove
              reference :  thread_nvm_store_mleid_rloc_map_write
              reference :  thread_partition_data_purge
              reference :  thread_router_addr_from_id
              reference :  thread_router_id_from_addr
              reference :  thread_routing_activate
              reference :  thread_routing_count_active_routers_from_mask
              reference :  thread_routing_free
              reference :  thread_routing_update_id_set
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/nanostack/sal-stack-nanostack/source/6LoWPAN/Thread/thread_lowpower_api.o.
              reference :  __aeabi_memclr4
              reference :  __aeabi_memcpy
              reference :  common_read_16_bit
              reference :  common_write_16_bit
              definition:  data_response_ptr
              reference :  mac_data_poll_init_protocol_poll
              reference :  mbed_trace_array
              reference :  mbed_trace_ipv6
              reference :  mbed_tracef
              reference :  memcmp
              reference :  mle_service_get_data_pointer
              reference :  mle_service_msg_allocate
              reference :  mle_service_msg_update_security_params
              reference :  mle_service_send_message
              reference :  mle_service_set_msg_destination_address
              reference :  mle_service_update_length_by_ptr
              reference :  mle_tlv_option_discover
              reference :  mle_tlv_read_tlv
              reference :  mle_tlv_req_tlv
              reference :  mle_tlv_type_requested
              reference :  ns_dyn_mem_alloc
              reference :  ns_dyn_mem_free
              reference :  ns_list_add_to_start_
              reference :  ns_list_get_next_
              reference :  ns_list_remove_
              reference :  protocol_stack_interface_info_get_by_id
              reference :  thread_active_timestamp_write
              reference :  thread_leader_data_tlv_size
              reference :  thread_leader_data_tlv_write
              definition:  thread_lowpower_data_metrics_delete
              definition:  thread_lowpower_link_metrics_length
              definition:  thread_lowpower_link_metrics_write
              definition:  thread_lowpower_metrics_management_query_request_process
              definition:  thread_lowpower_metrics_management_request_send
              definition:  thread_lowpower_process_request
              definition:  thread_lowpower_process_response
              definition:  thread_lowpower_test_probe_send
              definition:  thread_lowpower_timer
              reference :  thread_management_get_current_keysequence
              reference :  thread_management_get_parent_address
              reference :  thread_meshcop_tlv_data_get_uint16
              reference :  thread_meshcop_tlv_find
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/nanostack/sal-stack-nanostack/source/6LoWPAN/Thread/thread_lowpower_private_api.o.
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/nanostack/sal-stack-nanostack/source/6LoWPAN/Thread/thread_management_api.o.
              reference :  __aeabi_memcpy
              reference :  coap_service_delete
              reference :  coap_service_initialize
              reference :  coap_service_register_uri
              reference :  coap_service_request_send
              reference :  coap_service_virtual_socket_recv
              reference :  coap_service_virtual_socket_set_cb
              reference :  common_read_16_bit
              reference :  common_write_16_bit
              reference :  mbed_tracef
              reference :  ns_dyn_mem_alloc
              reference :  ns_dyn_mem_free
              reference :  ns_list_add_to_start_
              reference :  ns_list_get_next_
              reference :  ns_list_remove_
              reference :  protocol_stack_interface_info_get_by_id
              reference :  randLIB_get_16bit
              reference :  thread_commissioning_native_commissioner_get_connection_info
              definition:  thread_management_get
              reference :  thread_management_get_leader_aloc
              definition:  thread_management_recv_get_response_cb
              definition:  thread_management_recv_set_response_cb
              definition:  thread_management_register
              definition:  thread_management_set
              definition:  thread_management_set_commissioning_data_timestamp
              definition:  thread_management_set_security_policy
              definition:  thread_management_set_steering_data
              definition:  thread_management_unregister
              reference :  thread_meshcop_tlv_data_write
              reference :  thread_meshcop_tlv_data_write_uint16
              reference :  thread_meshcop_tlv_find
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/nanostack/sal-stack-nanostack/source/6LoWPAN/Thread/thread_management_client.o.
              reference :  __aeabi_memcpy
              reference :  coap_service_request_delete
              reference :  coap_service_request_delete_by_service_id
              reference :  coap_service_request_send
              reference :  mbed_tracef
              reference :  ns_dyn_mem_alloc
              reference :  ns_dyn_mem_free
              reference :  ns_list_add_to_start_
              reference :  ns_list_get_next_
              reference :  ns_list_remove_
              reference :  protocol_stack_interface_info_get_by_id
              reference :  thread_bootstrap_is_domain_prefix
              reference :  thread_common_primary_bbr_get
              reference :  thread_joiner_application_device_configuration_build
              reference :  thread_joiner_application_device_configuration_length
              reference :  thread_joiner_application_get_device_config
              reference :  thread_joiner_application_next_active_config_length
              reference :  thread_joiner_application_next_active_config_write
              reference :  thread_joiner_application_next_pending_config_build
              reference :  thread_joiner_application_next_pending_config_length
              reference :  thread_joiner_application_provisioning_get
              reference :  thread_joiner_application_provisioning_set
              definition:  thread_management_client_active_set
              definition:  thread_management_client_addr_ntf_send
              definition:  thread_management_client_coap_message_delete
              definition:  thread_management_client_delete
              definition:  thread_management_client_get_interface_id_by_service_id
              definition:  thread_management_client_init
              definition:  thread_management_client_mlr_req_send
              definition:  thread_management_client_neighbor_discovery_data_request
              definition:  thread_management_client_network_data_register
              definition:  thread_management_client_network_data_unregister
              definition:  thread_management_client_old_partition_data_clean
              definition:  thread_management_client_pending_set
              definition:  thread_management_client_proactive_an
              definition:  thread_management_client_provision_request
              definition:  thread_management_client_router_id_get
              definition:  thread_management_client_router_id_release
              reference :  thread_management_get_leader_address
              reference :  thread_management_server_service_id_get
              reference :  thread_meshcop_tlv_data_get_uint16
              reference :  thread_meshcop_tlv_data_get_uint8
              reference :  thread_meshcop_tlv_data_write
              reference :  thread_meshcop_tlv_data_write_header
              reference :  thread_meshcop_tlv_data_write_uint16
              reference :  thread_meshcop_tlv_data_write_uint8
              reference :  thread_meshcop_tlv_find
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/nanostack/sal-stack-nanostack/source/6LoWPAN/Thread/thread_management_if.o.
              reference :  ADDR_LINK_LOCAL_PREFIX
              reference :  ADDR_SHORT_ADR_SUFFIC
              reference :  DHCPv6_server_service_delete
              reference :  DHCPv6_server_service_set_address_autonous_flag
              reference :  DHCPv6_server_service_set_address_validlifetime
              reference :  DHCPv6_server_service_set_max_clients_accepts_count
              reference :  SHALIB_finish_HMAC
              reference :  SHALIB_init_HMAC
              reference :  SHALIB_push_data_HMAC
              reference :  __aeabi_memclr4
              reference :  addr_opaque_iid_key_is_set
              reference :  arm_nwk_ipv6_opaque_iid_enable
              reference :  arm_nwk_ipv6_opaque_iid_key
              definition:  arm_thread_private_ula_prefix_set
              reference :  blacklist_init
              reference :  blacklist_params_set
              reference :  common_read_32_bit
              reference :  common_write_16_bit
              reference :  common_write_32_bit
              reference :  ipv6_route_delete
              reference :  lowpan_adaptation_indirect_queue_params_set
              reference :  mac_helper_link_frame_counter_set
              reference :  mac_helper_mac16_address_get
              reference :  mac_helper_security_default_key_set
              reference :  mac_helper_security_key_clean
              reference :  mac_helper_security_key_swap_next_to_default
              reference :  mac_helper_security_next_key_set
              reference :  mac_helper_security_prev_key_set
              reference :  mac_neighbor_table_address_discover
              reference :  mac_pairwise_key_interface_register
              reference :  mac_pairwise_key_interface_unregister
              reference :  mbed_tracef
              reference :  mle_service_security_key_trig
              reference :  mle_service_security_next_key_get
              reference :  mle_service_security_next_key_id_get
              reference :  mle_service_security_set_security_key
              reference :  protocol_6lowpan_host_init
              reference :  protocol_6lowpan_router_init
              reference :  protocol_stack_interface_info_get_by_id
              reference :  rpl_control_remove_domain_from_interface
              reference :  thread_addr_write_mesh_local_16
              reference :  thread_attach_ready
              reference :  thread_bootstrap_child_update_trig
              reference :  thread_bootstrap_reset_restart
              reference :  thread_ccm_device_certificate_set
              reference :  thread_ccm_network_certificate_set
              reference :  thread_ccm_network_private_key_set
              definition:  thread_comm_status_indication_cb
              reference :  thread_common_ccm_enabled
              definition:  thread_delay_timer_default
              reference :  thread_dhcp6_server_init
              definition:  thread_dhcpv6_server_add
              definition:  thread_dhcpv6_server_delete
              definition:  thread_dhcpv6_server_set_anonymous_addressing
              definition:  thread_dhcpv6_server_set_lifetime
              definition:  thread_dhcpv6_server_set_max_client
              reference :  thread_diagnostic_init
              reference :  thread_discovery_init
              reference :  thread_info_allocate_and_init
              reference :  thread_init
              reference :  thread_joiner_application_get_config
              reference :  thread_joiner_application_get_device_config
              reference :  thread_joiner_application_init
              reference :  thread_joiner_application_link_configuration_delete
              reference :  thread_joiner_application_link_configuration_store
              reference :  thread_joiner_application_update_configuration
              definition:  thread_joiner_port
              definition:  thread_key_get
              reference :  thread_key_guard_timer_calculate
              reference :  thread_local_server_list_add_on_mesh_server
              reference :  thread_local_server_list_del_on_mesh_server
              definition:  thread_management_configuration_get
              definition:  thread_management_device_certificate_set
              definition:  thread_management_device_configuration_get
              definition:  thread_management_device_type_set
              definition:  thread_management_get_commissioner_address
              definition:  thread_management_get_current_keysequence
              definition:  thread_management_get_leader_address
              definition:  thread_management_get_leader_aloc
              definition:  thread_management_get_link_timeout
              definition:  thread_management_get_ml16_address
              definition:  thread_management_get_ml64_address
              definition:  thread_management_get_ml_prefix
              definition:  thread_management_get_ml_prefix_112
              definition:  thread_management_get_my_iid16
              definition:  thread_management_get_parent_address
              definition:  thread_management_get_request_full_nwk_data
              definition:  thread_management_increment_key_sequence_counter
              definition:  thread_management_key_sets_calc
              definition:  thread_management_key_synch_req
              definition:  thread_management_link_configuration_add
              definition:  thread_management_link_configuration_delete
              definition:  thread_management_link_configuration_store
              definition:  thread_management_max_child_count
              definition:  thread_management_network_certificate_set
              definition:  thread_management_node_init
              definition:  thread_management_partition_weighting_set
              reference :  thread_management_server_init
              definition:  thread_management_set_link_timeout
              definition:  thread_management_set_request_full_nwk_data
              definition:  thread_max_mcast_addr
              reference :  thread_nd_service_delete
              reference :  thread_neighbor_communication_update
              definition:  thread_node_bootstrap_init
              reference :  thread_nvm_store_fast_data_write_all
              reference :  thread_nvm_store_link_info_clear
              reference :  thread_router_addr_from_id
              definition:  thread_router_selection_jitter
              definition:  thread_security_key_generate
              definition:  thread_security_next_key_generate
              definition:  thread_security_prev_key_generate
              definition:  thread_security_update_from_mac
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/nanostack/sal-stack-nanostack/source/6LoWPAN/Thread/thread_management_server.o.
              reference :  ADDR_LINK_LOCAL_PREFIX
              reference :  __aeabi_d2uiz
              reference :  __aeabi_dadd
              reference :  __aeabi_ddiv
              reference :  __aeabi_memclr
              reference :  __aeabi_memclr4
              reference :  __aeabi_memcpy
              reference :  __aeabi_ui2d
              reference :  addr_ipv6_scope
              reference :  coap_service_delete
              reference :  coap_service_initialize
              reference :  coap_service_msg_prevalidate_callback_set
              reference :  coap_service_register_uri
              reference :  coap_service_request_send
              reference :  coap_service_response_send
              reference :  coap_service_unregister_uri
              reference :  common_read_16_bit
              reference :  common_read_32_bit
              reference :  entrust_dataset_tlvs
              reference :  entrust_dataset_tlvs_size
              reference :  eventOS_timeout_cancel
              reference :  eventOS_timeout_ms
              definition:  joiner_router_recv_commission_msg
              reference :  mac_create_scan_request
              reference :  mac_data_poll_disable
              reference :  mac_data_poll_host_mode_set
              reference :  mac_data_poll_init
              reference :  mac_helper_default_security_key_id_mode_set
              reference :  mac_helper_default_security_level_set
              reference :  mac_helper_mac16_address_get
              reference :  mac_helper_panid_set
              reference :  mac_helper_pib_boolean_set
              reference :  mbed_trace_array
              reference :  mbed_tracef
              reference :  memcmp
              reference :  ns_dyn_mem_alloc
              reference :  ns_dyn_mem_free
              reference :  ns_dyn_mem_temporary_alloc
              reference :  ns_list_add_to_start_
              reference :  ns_list_get_next_
              reference :  ns_list_remove_
              reference :  protocol_stack_interface_info_get_by_id
              reference :  socket_close
              reference :  socket_open
              reference :  socket_read
              reference :  socket_sendto
              reference :  socket_setsockopt
              reference :  strncmp
              reference :  thread_addr_write_mesh_local_16
              reference :  thread_bbr_delete
              reference :  thread_bbr_init
              reference :  thread_bootstrap_announcement_start
              reference :  thread_bootstrap_attached_downgrade_router
              reference :  thread_bootstrap_connection_error
              reference :  thread_bootstrap_dua_address_generate
              reference :  thread_border_router_delete
              reference :  thread_border_router_init
              reference :  thread_ccm_network_certificate_available
              reference :  thread_ccm_network_certificate_set
              reference :  thread_ccm_network_private_key_set
              reference :  thread_ccm_reenrollment_start
              reference :  thread_commissioning_if_border_router_locator_get
              reference :  thread_commissioning_if_pairwise_key_add
              reference :  thread_commissioning_if_pairwise_key_del
              reference :  thread_common_primary_bbr_get
              reference :  thread_discovery_responser_enable
              definition:  thread_energy_scan_timeout_cb
              reference :  thread_joiner_application_active_config_length
              reference :  thread_joiner_application_active_config_tlv_list_get
              reference :  thread_joiner_application_active_config_write
              reference :  thread_joiner_application_device_configuration_build
              reference :  thread_joiner_application_device_configuration_length
              reference :  thread_joiner_application_get_config
              reference :  thread_joiner_application_get_device_config
              reference :  thread_joiner_application_link_configuration_delete
              reference :  thread_joiner_application_pending_config_build
              reference :  thread_joiner_application_pending_config_exists
              reference :  thread_joiner_application_pending_config_length
              reference :  thread_joiner_application_pending_config_tlv_list_get
              reference :  thread_joiner_application_security_policy_get
              reference :  thread_joiner_port
              reference :  thread_leader_service_delete
              reference :  thread_leader_service_init
              reference :  thread_log2_aprx
              reference :  thread_management_client_get_interface_id_by_service_id
              reference :  thread_management_configuration_get
              reference :  thread_management_get_ml16_address
              definition:  thread_management_server_ccm_service_init
              definition:  thread_management_server_commisoner_data_get
              definition:  thread_management_server_delete
              definition:  thread_management_server_init
              definition:  thread_management_server_interface_id_get
              definition:  thread_management_server_joiner_router_deinit
              definition:  thread_management_server_joiner_router_init
              definition:  thread_management_server_service_id_get
              definition:  thread_management_server_source_address_check
              definition:  thread_management_server_tmf_get_request_handler
              reference :  thread_meshcop_tlv_data_get_uint16
              reference :  thread_meshcop_tlv_data_get_uint8
              reference :  thread_meshcop_tlv_data_write
              reference :  thread_meshcop_tlv_data_write_uint16
              reference :  thread_meshcop_tlv_data_write_uint32
              reference :  thread_meshcop_tlv_data_write_uint8
              reference :  thread_meshcop_tlv_find
              reference :  thread_meshcop_tlv_list_remove
              reference :  thread_nvm_store_link_info_clear
              reference :  thread_nvm_store_mleid_rloc_map_remove
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/nanostack/sal-stack-nanostack/source/6LoWPAN/Thread/thread_mdns.o.
              reference :  __aeabi_memcpy
              reference :  common_write_32_bit
              reference :  crc16_ccitt
              reference :  mbed_tracef
              reference :  mbedtls_sha256_ret
              reference :  ns_dyn_mem_alloc
              reference :  ns_dyn_mem_free
              reference :  ns_mdns_announcement_send
              reference :  ns_mdns_server_start
              reference :  ns_mdns_server_stop
              reference :  ns_mdns_service_register
              reference :  thread_joiner_application_get_config
              reference :  thread_management_configuration_get
              reference :  thread_management_device_configuration_get
              definition:  thread_mdns_network_data_update_notify
              definition:  thread_mdns_start
              definition:  thread_mdns_stop
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/nanostack/sal-stack-nanostack/source/6LoWPAN/Thread/thread_meshcop_lib.o.
              reference :  __aeabi_memcpy
              reference :  __aeabi_memmove
              reference :  common_read_16_bit
              reference :  common_read_32_bit
              reference :  common_read_64_bit
              reference :  common_write_16_bit
              reference :  common_write_32_bit
              reference :  common_write_64_bit
              definition:  thread_meshcop_tlv_data_get_uint16
              definition:  thread_meshcop_tlv_data_get_uint32
              definition:  thread_meshcop_tlv_data_get_uint64
              definition:  thread_meshcop_tlv_data_get_uint8
              definition:  thread_meshcop_tlv_data_write
              definition:  thread_meshcop_tlv_data_write_header
              definition:  thread_meshcop_tlv_data_write_uint16
              definition:  thread_meshcop_tlv_data_write_uint32
              definition:  thread_meshcop_tlv_data_write_uint64
              definition:  thread_meshcop_tlv_data_write_uint8
              definition:  thread_meshcop_tlv_exist
              definition:  thread_meshcop_tlv_find
              definition:  thread_meshcop_tlv_find_next
              definition:  thread_meshcop_tlv_get_next
              definition:  thread_meshcop_tlv_length
              definition:  thread_meshcop_tlv_length_required
              definition:  thread_meshcop_tlv_list_generate
              definition:  thread_meshcop_tlv_list_present
              definition:  thread_meshcop_tlv_list_remove
              definition:  thread_meshcop_tlv_list_type_available
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/nanostack/sal-stack-nanostack/source/6LoWPAN/Thread/thread_mle_message_handler.o.
              reference :  addr_ipv6_scope
              reference :  addr_is_ipv6_link_local
              reference :  addr_set_preferred_lifetime
              reference :  blacklist_update
              reference :  common_read_16_bit
              reference :  common_read_32_bit
              reference :  common_serial_number_greater_8
              reference :  mac_data_poll_protocol_poll_mode_decrement
              reference :  mac_helper_device_description_write
              reference :  mac_helper_devicetable_set
              reference :  mac_neighbor_entry_get_by_ll64
              reference :  mac_neighbor_table_neighbor_refresh
              reference :  mac_neighbor_table_neighbor_remove
              reference :  mbed_tracef
              reference :  memcmp
              reference :  mle_general_write_link_layer_framecounter
              reference :  mle_general_write_source_address
              reference :  mle_neigh_entry_frame_counter_update
              reference :  mle_service_frame_counter_entry_add
              reference :  mle_service_get_data_pointer
              reference :  mle_service_get_msg_destination_address_pointer
              reference :  mle_service_msg_allocate
              reference :  mle_service_msg_free
              reference :  mle_service_msg_update_security_params
              reference :  mle_service_security_get_frame_counter
              reference :  mle_service_send_message
              reference :  mle_service_set_msg_destination_address
              reference :  mle_service_set_msg_timeout_parameters
              reference :  mle_service_set_packet_callback
              reference :  mle_service_update_length_by_ptr
              reference :  mle_tlv_read_16_bit_tlv
              reference :  mle_tlv_read_32_bit_tlv
              reference :  mle_tlv_read_64_bit_tlv
              reference :  mle_tlv_read_8_bit_tlv
              reference :  mle_tlv_read_tlv
              reference :  mle_tlv_requested
              reference :  mle_tlv_validate_response
              reference :  mle_tlv_write_framecounter
              reference :  mle_tlv_write_mode
              reference :  mle_tlv_write_response
              reference :  mle_tlv_write_timeout
              reference :  mle_tlv_write_version
              reference :  ns_list_get_next_
              reference :  thread_active_operational_dataset_process
              reference :  thread_addr_is_mesh_local_16
              reference :  thread_address_registration_tlv_write
              reference :  thread_attach_active_router
              reference :  thread_bootsrap_event_trig
              reference :  thread_bootstrap_announce_send
              reference :  thread_bootstrap_child_address_registration_response_process
              reference :  thread_bootstrap_connection_error
              reference :  thread_bootstrap_link_create_allowed
              reference :  thread_bootstrap_link_create_check
              reference :  thread_bootstrap_network_data_save
              reference :  thread_bootstrap_network_data_update
              reference :  thread_bootstrap_parent_network_data_request
              reference :  thread_bootstrap_partition_process
              reference :  thread_bootstrap_request_network_data
              reference :  thread_bootstrap_temporary_attach
              reference :  thread_check_is_this_my_parent
              reference :  thread_compute_link_margin
              reference :  thread_dynamic_storage_child_info_clear
              definition:  thread_general_mle_receive_cb
              reference :  thread_get_router_count_from_route_tlv
              reference :  thread_host_bootstrap_child_update_negative_response
              reference :  thread_i_am_router
              reference :  thread_is_router_addr
              reference :  thread_joiner_application_active_timestamp_get
              reference :  thread_joiner_application_get_config
              reference :  thread_joiner_application_pending_config_timestamp_get
              reference :  thread_leader_data_parse
              reference :  thread_leader_data_tlv_write
              reference :  thread_leader_data_validation
              reference :  thread_leader_service_network_data_changed
              reference :  thread_link_reject_send
              reference :  thread_link_request_timeout
              reference :  thread_lowpower_metrics_management_query_request_process
              reference :  thread_lowpower_process_request
              reference :  thread_lowpower_process_response
              reference :  thread_management_get_current_keysequence
              reference :  thread_management_key_synch_req
              reference :  thread_meshcop_tlv_data_get_uint16
              reference :  thread_meshcop_tlv_data_get_uint64
              reference :  thread_meshcop_tlv_find
              reference :  thread_mle_parent_discover_receive_cb
              reference :  thread_mode_get_by_interface_ptr
              reference :  thread_neighbor_class_request_full_data_setup_set
              reference :  thread_neighbor_class_update_link
              reference :  thread_neighbor_last_communication_time_update
              reference :  thread_network_data_request_send
              reference :  thread_partition_info_update
              reference :  thread_partition_match
              reference :  thread_pending_operational_dataset_process
              reference :  thread_router_addr_from_addr
              reference :  thread_router_bootstrap_advertiment_analyze
              reference :  thread_router_bootstrap_mle_receive_cb
              reference :  thread_router_bootstrap_reed_merge_advertisement
              reference :  thread_router_bootstrap_route_tlv_push
              reference :  thread_routing_update_link_margin
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/nanostack/sal-stack-nanostack/source/6LoWPAN/Thread/thread_nd.o.
              reference :  ADDR_SHORT_ADR_SUFFIC
              reference :  addr_duplicate_detected
              reference :  addr_get_entry
              reference :  addr_ipv6_equal
              reference :  addr_is_assigned_to_interface
              reference :  addr_is_ipv6_link_local
              reference :  addr_select_source
              reference :  buffer_free
              reference :  buffer_free_route
              reference :  common_read_16_bit
              reference :  common_write_16_bit
              reference :  icmpv6_build_echo_req
              reference :  icmpv6_error
              reference :  ipv6_buffer_route
              reference :  ipv6_neighbour_entry_remove
              reference :  ipv6_neighbour_entry_update_unsolicited
              reference :  ipv6_neighbour_ll_addr_match
              reference :  ipv6_neighbour_lookup
              reference :  ipv6_neighbour_lookup_or_create
              reference :  ipv6_neighbour_set_state
              reference :  ipv6_neighbour_update_from_na
              reference :  ipv6_neighbour_update_unsolicited
              reference :  ipv6_route_add
              reference :  ipv6_route_choose_next_hop
              reference :  libdhcpv6_server_data_get_by_prefix_and_interfaceid
              reference :  mac_helper_mac16_address_get
              reference :  mac_neighbor_table_address_discover
              reference :  mbed_trace_ipv6
              reference :  mbed_tracef
              reference :  memcmp
              reference :  nd_proxy_enabled_for_upstream
              reference :  ns_list_get_next_
              reference :  protocol_core_monotonic_time
              reference :  protocol_stack_interface_info_get_by_id
              reference :  thread_addr_is_equal_or_child
              reference :  thread_addr_is_mesh_local_16
              reference :  thread_addr_write_mesh_local_16
              reference :  thread_bbr_commercial_nd_query_process
              reference :  thread_bbr_routing_enabled
              reference :  thread_bootstrap_dua_address_generate
              reference :  thread_common_primary_bbr_get
              reference :  thread_i_am_router
              definition:  thread_nd_address_registration
              definition:  thread_nd_address_remove
              definition:  thread_nd_client_service_activate
              reference :  thread_nd_dhcp_anycast_address_mapping_from_network_data
              definition:  thread_nd_flush_neighbour_cache_for_short_addr
              definition:  thread_nd_icmp_handler
              definition:  thread_nd_map_anycast_address
              definition:  thread_nd_ns_transmit
              definition:  thread_nd_service_activate
              reference :  thread_nd_service_anycast_address_mapping_from_network_data
              definition:  thread_nd_service_delete
              definition:  thread_nd_service_disable
              definition:  thread_nd_snoop
              definition:  thread_nd_special_forwarding
              reference :  thread_neighbor_class_get_mleid
              reference :  thread_neighbor_last_communication_time_get
              definition:  thread_pbbr_aloc_map
              reference :  thread_resolution_client_address_error
              reference :  thread_resolution_client_delete
              reference :  thread_resolution_client_init
              reference :  thread_resolution_client_resolve
              reference :  thread_resolution_client_set_error_cb
              reference :  thread_resolution_client_set_notification_cb
              reference :  thread_resolution_server_delete
              reference :  thread_resolution_server_init
              reference :  thread_router_addr_from_addr
              reference :  thread_router_addr_from_id
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/nanostack/sal-stack-nanostack/source/6LoWPAN/Thread/thread_neighbor_class.o.
              reference :  __aeabi_memclr4
              reference :  memcmp
              reference :  ns_dyn_mem_alloc
              reference :  ns_dyn_mem_free
              reference :  protocol_core_monotonic_time
              definition:  thread_neighbor_class_add_mleid
              definition:  thread_neighbor_class_create
              definition:  thread_neighbor_class_delete
              definition:  thread_neighbor_class_entry_remove
              definition:  thread_neighbor_class_get_mleid
              definition:  thread_neighbor_class_mleid_compare
              definition:  thread_neighbor_class_mode_parse_to_entry
              definition:  thread_neighbor_class_mode_write_from_entry
              definition:  thread_neighbor_class_request_full_data_setup
              definition:  thread_neighbor_class_request_full_data_setup_set
              definition:  thread_neighbor_class_secured_data_request
              definition:  thread_neighbor_class_secured_data_request_set
              definition:  thread_neighbor_class_update_link
              definition:  thread_neighbor_entry_linkmargin_get
              definition:  thread_neighbor_last_communication_time_get
              definition:  thread_neighbor_last_communication_time_update
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/nanostack/sal-stack-nanostack/source/6LoWPAN/Thread/thread_net_config_api.o.
              reference :  thread_management_client_neighbor_discovery_data_request
              definition:  thread_net_config_nd_data_request
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/nanostack/sal-stack-nanostack/source/6LoWPAN/Thread/thread_network_data_lib.o.
              reference :  __aeabi_memcpy
              reference :  common_write_16_bit
              reference :  mbed_tracef
              definition:  prefixBits_to_bytes
              definition:  thread_nd_commission_data_write_steering_data
              definition:  thread_nd_network_data_border_router_tlv_write
              definition:  thread_nd_network_data_has_route_tlv_write
              definition:  thread_network_data_malformed_check
              definition:  thread_network_data_sub_tlv_malformed_check
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/nanostack/sal-stack-nanostack/source/6LoWPAN/Thread/thread_network_data_storage.o.
              reference :  ADDR_SHORT_ADR_SUFFIC
              reference :  DHCPv6_server_service_delete
              reference :  __aeabi_memclr
              reference :  __aeabi_memcpy
              reference :  addr_delete_matching
              reference :  bitcopy
              reference :  bitsequal
              reference :  common_read_16_bit
              reference :  common_write_16_bit
              reference :  common_write_32_bit
              reference :  dhcp_client_global_address_delete
              reference :  ipv6_route_delete
              reference :  lowpan_context_update
              reference :  mac_helper_mac16_address_get
              reference :  mbed_trace_ipv6
              reference :  mbed_tracef
              reference :  memcmp
              reference :  ns_dyn_mem_alloc
              reference :  ns_dyn_mem_free
              reference :  ns_list_add_before_
              reference :  ns_list_add_to_end_
              reference :  ns_list_count_
              reference :  ns_list_get_next_
              reference :  ns_list_init_
              reference :  ns_list_remove_
              reference :  prefixBits_to_bytes
              reference :  thread_addr_is_child
              definition:  thread_context_service_list_allocate
              definition:  thread_context_service_list_free
              definition:  thread_get_context_by_id
              definition:  thread_get_context_id_by_length
              definition:  thread_get_dhcp_server_from_list
              definition:  thread_get_main_context_list
              definition:  thread_local_prefix_entry_find
              definition:  thread_local_prefix_entry_get
              definition:  thread_local_server_add_route
              definition:  thread_local_server_del_route
              definition:  thread_local_server_list_add_on_mesh_server
              definition:  thread_local_server_list_del_on_mesh_server
              definition:  thread_local_service_entry_find
              definition:  thread_local_service_entry_save
              definition:  thread_local_service_list_add
              definition:  thread_local_service_list_allocate
              definition:  thread_local_service_list_del
              definition:  thread_nd_border_routerserver_list_size
              definition:  thread_nd_context_id_allocate
              definition:  thread_nd_context_list_size
              definition:  thread_nd_context_list_write
              definition:  thread_nd_dhcp_anycast_address_mapping_from_network_data
              definition:  thread_nd_hosted_by_this_routerid
              definition:  thread_nd_local_data_length_updated
              definition:  thread_nd_local_list_add_contexts
              definition:  thread_nd_local_list_add_on_mesh_prefix
              definition:  thread_nd_local_list_add_route
              definition:  thread_nd_local_list_add_service
              definition:  thread_nd_local_list_del_on_mesh_server
              reference :  thread_nd_network_data_border_router_tlv_write
              reference :  thread_nd_network_data_has_route_tlv_write
              definition:  thread_nd_network_data_print
              definition:  thread_nd_on_mesh_address_valid
              definition:  thread_nd_own_service_list_data_size
              definition:  thread_nd_own_service_list_data_write
              definition:  thread_nd_prefix_based_on_list_entry_size
              definition:  thread_nd_server_external_route_list_size
              definition:  thread_nd_server_list_write
              definition:  thread_nd_service_anycast_address_mapping_from_network_data
              definition:  thread_nd_service_based_on_list_entry_size
              definition:  thread_nd_service_server_list_write
              definition:  thread_nd_verify_contex_id_is_free
              definition:  thread_network_data_base_init
              definition:  thread_network_data_context_re_use_timer_update
              definition:  thread_network_data_free_and_clean
              definition:  thread_network_data_prefix_set_size
              definition:  thread_network_data_prefix_set_write
              definition:  thread_network_data_resulting_tlv_size
              definition:  thread_network_data_router_id_free
              definition:  thread_network_data_router_id_mark_delete
              definition:  thread_network_data_service_child_id_from_networkdata_get
              definition:  thread_network_data_service_entry_find
              definition:  thread_network_data_service_hosted_by_this_router_id
              definition:  thread_network_data_service_set_size
              definition:  thread_network_data_service_set_write
              definition:  thread_network_data_services_registered
              definition:  thread_network_local_data_free_and_clean
              definition:  thread_network_local_server_data_base_init
              definition:  thread_prefix_entry_find
              definition:  thread_prefix_entry_get
              definition:  thread_prefix_service_list_allocate
              definition:  thread_server_entry_allocate
              definition:  thread_server_entry_get
              definition:  thread_server_entry_search
              definition:  thread_server_list_free
              definition:  thread_server_prefix_length
              definition:  thread_service_entry_get
              definition:  thread_service_next_free_service_type_id
              definition:  thread_service_server_entry_get
              definition:  thread_service_server_entry_search
              definition:  thread_service_server_list_free
              reference :  thread_version
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/nanostack/sal-stack-nanostack/source/6LoWPAN/Thread/thread_network_synch.o.
              reference :  __aeabi_memclr4
              reference :  common_write_16_bit
              reference :  lowpan_adaptation_free_messages_from_queues_by_address
              reference :  mac_helper_device_description_write
              reference :  mac_helper_devicetable_set
              reference :  mac_neighbor_entry_get_by_mac64
              reference :  memcmp
              reference :  mle_mode_parse_to_mac_entry
              reference :  mle_mode_write_from_mac_entry
              reference :  mle_service_frame_counter_entry_add
              reference :  mle_service_neighbor_frame_counter_get
              reference :  ns_dyn_mem_alloc
              reference :  ns_dyn_mem_free
              reference :  ns_list_add_to_end_
              reference :  ns_list_get_next_
              reference :  protocol_6lowpan_release_short_link_address_from_neighcache
              reference :  protocol_stack_interface_info_get_by_id
              definition:  thread_dynamic_storage_build_mle_table
              definition:  thread_dynamic_storage_child_info_clear
              definition:  thread_dynamic_storage_child_info_store
              reference :  thread_neighbor_class_mode_parse_to_entry
              reference :  thread_neighbor_class_mode_write_from_entry
              reference :  thread_neighbor_class_update_link
              reference :  thread_neighbor_last_communication_time_update
              definition:  thread_network_synch_create
              definition:  thread_network_synch_data_free
              definition:  thread_network_synch_delete
              definition:  thread_network_synch_find
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/nanostack/sal-stack-nanostack/source/6LoWPAN/Thread/thread_nvm_store.o.
              reference :  ADDR_UNSPECIFIED
              definition:  DEVICE_CONF_FILE
              definition:  FAST_DATA_FILE
              definition:  LEADER_INFO_FILE
              definition:  LINK_INFO_FILE
              definition:  THREAD_NVM_ACTIVE_CONF_FILE
              definition:  THREAD_NVM_PENDING_CONF_FILE
              definition:  cached_fast_data
              definition:  cached_link_info
              reference :  mbed_trace_array
              reference :  mbed_tracef
              reference :  memcmp
              reference :  ns_fclose
              reference :  ns_file_system_get_root_path
              reference :  ns_fopen
              reference :  ns_fread
              reference :  ns_fwrite
              reference :  remove
              reference :  strcat
              reference :  strcpy
              reference :  strlen
              definition:  thread_nvm_store_active_configuration_read
              definition:  thread_nvm_store_active_configuration_remove
              definition:  thread_nvm_store_active_configuration_write
              definition:  thread_nvm_store_device_configuration_read
              definition:  thread_nvm_store_device_configuration_write
              definition:  thread_nvm_store_fast_data_check_and_write
              definition:  thread_nvm_store_fast_data_read
              definition:  thread_nvm_store_fast_data_write
              definition:  thread_nvm_store_fast_data_write_all
              definition:  thread_nvm_store_frame_counters_check_and_write
              definition:  thread_nvm_store_link_info_clear
              definition:  thread_nvm_store_link_info_get
              definition:  thread_nvm_store_link_info_read
              definition:  thread_nvm_store_link_info_write
              definition:  thread_nvm_store_mleid_rloc_map_read
              definition:  thread_nvm_store_mleid_rloc_map_remove
              definition:  thread_nvm_store_mleid_rloc_map_write
              definition:  thread_nvm_store_pending_configuration_read
              definition:  thread_nvm_store_pending_configuration_remove
              definition:  thread_nvm_store_pending_configuration_write
              definition:  thread_nvm_store_seconds_timer
              definition:  thread_nvm_store_seq_counter_write
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/nanostack/sal-stack-nanostack/source/6LoWPAN/Thread/thread_resolution_client.o.
              reference :  addr_ipv6_equal
              reference :  coap_service_register_uri
              reference :  coap_service_request_send
              reference :  coap_service_response_send
              reference :  coap_service_unregister_uri
              reference :  mbed_trace_array
              reference :  mbed_trace_ipv6
              reference :  mbed_tracef
              reference :  memcmp
              reference :  ns_dyn_mem_alloc
              reference :  ns_dyn_mem_free
              reference :  ns_list_add_to_start_
              reference :  ns_list_get_last_
              reference :  ns_list_get_next_
              reference :  ns_list_get_previous_
              reference :  ns_list_init_
              reference :  ns_list_remove_
              reference :  thread_management_server_service_id_get
              reference :  thread_meshcop_tlv_data_get_uint16
              reference :  thread_meshcop_tlv_data_get_uint32
              reference :  thread_meshcop_tlv_data_write
              reference :  thread_meshcop_tlv_find
              definition:  thread_resolution_client_address_error
              definition:  thread_resolution_client_delete
              definition:  thread_resolution_client_init
              definition:  thread_resolution_client_resolve
              definition:  thread_resolution_client_set_error_cb
              definition:  thread_resolution_client_set_notification_cb
              definition:  thread_resolution_client_timer
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/nanostack/sal-stack-nanostack/source/6LoWPAN/Thread/thread_resolution_server.o.
              reference :  coap_service_register_uri
              reference :  coap_service_request_send
              reference :  coap_service_unregister_uri
              reference :  common_read_16_bit
              reference :  mbed_tracef
              reference :  ns_dyn_mem_alloc
              reference :  ns_dyn_mem_free
              reference :  ns_list_add_to_start_
              reference :  ns_list_get_next_
              reference :  ns_list_remove_
              reference :  thread_management_server_service_id_get
              reference :  thread_meshcop_tlv_data_write
              reference :  thread_meshcop_tlv_data_write_uint16
              reference :  thread_meshcop_tlv_data_write_uint32
              reference :  thread_meshcop_tlv_find
              definition:  thread_resolution_server_delete
              definition:  thread_resolution_server_init
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/nanostack/sal-stack-nanostack/source/6LoWPAN/Thread/thread_router_bootstrap.o.
              reference :  ADDR_LINK_LOCAL_ALL_NODES
              reference :  ADDR_LINK_LOCAL_ALL_ROUTERS
              reference :  ADDR_LINK_LOCAL_PREFIX
              reference :  ADDR_SHORT_ADR_SUFFIC
              reference :  __aeabi_memcpy
              reference :  addr_add
              reference :  addr_add_group
              reference :  addr_delete_matching
              reference :  addr_get_entry
              reference :  addr_iid_matches_eui64
              reference :  addr_ipv6_equal
              reference :  addr_is_ipv6_link_local
              reference :  arm_nwk_6lowpan_thread_test_print_routing_database
              reference :  bit_test
              reference :  blacklist_update
              reference :  buffer_clone
              reference :  common_read_32_bit
              reference :  common_serial_number_greater_8
              reference :  common_write_16_bit
              reference :  eventOS_timeout_cancel
              reference :  eventOS_timeout_ms
              reference :  ipv6_buffer_route_to
              reference :  lowpan_context_get_by_id
              reference :  mac_data_poll_protocol_poll_mode_decrement
              reference :  mac_helper_device_description_write
              reference :  mac_helper_devicetable_set
              reference :  mac_helper_mac16_address_get
              reference :  mac_helper_mac16_address_set
              reference :  mac_neighbor_entry_get_by_ll64
              reference :  mac_neighbor_table_address_discover
              reference :  mac_neighbor_table_neighbor_refresh
              reference :  mac_neighbor_table_neighbor_remove
              reference :  mbed_trace_ipv6
              reference :  mbed_tracef
              reference :  memcmp
              reference :  mle_class_free_entry_count_get
              reference :  mle_class_rfd_entry_count_get
              reference :  mle_class_sleepy_entry_count_get
              reference :  mle_general_write_link_layer_framecounter
              reference :  mle_general_write_source_address
              reference :  mle_mode_parse_to_mac_entry
              reference :  mle_mode_write_from_mac_entry
              reference :  mle_neigh_entry_frame_counter_update
              reference :  mle_service_frame_counter_entry_add
              reference :  mle_service_get_data_pointer
              reference :  mle_service_get_msg_destination_address_pointer
              reference :  mle_service_interface_receiver_handler_update
              reference :  mle_service_interface_tx_queue_size
              reference :  mle_service_msg_allocate
              reference :  mle_service_msg_free
              reference :  mle_service_msg_update_security_params
              reference :  mle_service_security_get_frame_counter
              reference :  mle_service_send_message
              reference :  mle_service_set_msg_destination_address
              reference :  mle_service_set_msg_timeout_parameters
              reference :  mle_service_set_packet_callback
              reference :  mle_service_update_length_by_ptr
              reference :  mle_tlv_ignore
              reference :  mle_tlv_option_discover
              reference :  mle_tlv_read_16_bit_tlv
              reference :  mle_tlv_read_32_bit_tlv
              reference :  mle_tlv_read_64_bit_tlv
              reference :  mle_tlv_read_8_bit_tlv
              reference :  mle_tlv_read_tlv
              reference :  mle_tlv_req_tlv
              reference :  mle_tlv_requested
              reference :  mle_tlv_rssi_tlv
              reference :  mle_tlv_type_requested
              reference :  mle_tlv_validate_response
              reference :  mle_tlv_write_framecounter
              reference :  mle_tlv_write_mode
              reference :  mle_tlv_write_response
              reference :  mle_tlv_write_short_address
              reference :  mle_tlv_write_timeout
              reference :  mle_tlv_write_version
              reference :  ns_dyn_mem_free
              reference :  ns_list_get_next_
              reference :  prefixBits_to_bytes
              reference :  protocol_6lowpan_release_short_link_address_from_neighcache
              reference :  protocol_push
              reference :  protocol_stack_interface_info_get_by_id
              reference :  randLIB_get_random_in_range
              reference :  thread_active_operational_dataset_size
              reference :  thread_active_operational_dataset_write
              reference :  thread_active_timestamp_write
              reference :  thread_addr_is_child
              reference :  thread_addr_write_mesh_local_16
              reference :  thread_attach_active_router
              reference :  thread_bootstrap_address_registration
              reference :  thread_bootstrap_all_nodes_address_generate
              reference :  thread_bootstrap_attached_active_router
              reference :  thread_bootstrap_attached_downgrade_router
              reference :  thread_bootstrap_attached_ready
              reference :  thread_bootstrap_attched_upgrade_reed
              reference :  thread_bootstrap_child_id_request
              reference :  thread_bootstrap_connection_error
              reference :  thread_bootstrap_link_create_allowed
              reference :  thread_bootstrap_link_create_check
              reference :  thread_bootstrap_network_prefixes_process
              reference :  thread_bootstrap_ready
              reference :  thread_bootstrap_reset_restart
              reference :  thread_bootstrap_router_id_get_fail
              reference :  thread_bootstrap_router_id_release_ready
              reference :  thread_bootstrap_update_ml16_address
              reference :  thread_check_is_this_my_parent
              reference :  thread_child_id_request_entry_get
              reference :  thread_child_id_request_entry_get_from_the_list
              reference :  thread_child_id_request_entry_remove
              reference :  thread_child_mcast_entries_remove
              reference :  thread_child_mcast_entry_get
              reference :  thread_clean_old_16_bit_address_based_addresses
              reference :  thread_common_primary_bbr_get
              reference :  thread_compute_link_margin
              reference :  thread_connectivity_tlv_write
              reference :  thread_device_synch_timeout
              reference :  thread_dynamic_storage_child_info_clear
              reference :  thread_dynamic_storage_child_info_store
              reference :  thread_host_bootstrap_child_update_negative_response
              reference :  thread_i_am_router
              reference :  thread_is_router_addr
              reference :  thread_joiner_application_get_config
              reference :  thread_joiner_application_pending_config_timestamp_get
              reference :  thread_key_guard_timer_reset
              reference :  thread_leader_data_parse
              reference :  thread_leader_data_tlv_size
              reference :  thread_leader_data_tlv_write
              reference :  thread_leader_service_thread_partitition_restart
              reference :  thread_leader_service_timer
              reference :  thread_link_reject_send
              reference :  thread_link_request_timeout
              reference :  thread_lowpower_link_metrics_length
              reference :  thread_lowpower_link_metrics_write
              reference :  thread_management_client_network_data_unregister
              reference :  thread_management_client_proactive_an
              reference :  thread_management_client_router_id_get
              reference :  thread_management_client_router_id_release
              reference :  thread_management_configuration_get
              reference :  thread_management_get_current_keysequence
              reference :  thread_management_key_synch_req
              reference :  thread_mode_get_by_interface_ptr
              reference :  thread_nd_address_registration
              reference :  thread_nd_service_activate
              reference :  thread_neighbor_class_add_mleid
              reference :  thread_neighbor_class_mode_parse_to_entry
              reference :  thread_neighbor_class_mode_write_from_entry
              reference :  thread_neighbor_class_request_full_data_setup
              reference :  thread_neighbor_class_request_full_data_setup_set
              reference :  thread_neighbor_class_update_link
              reference :  thread_neighbor_entry_linkmargin_get
              reference :  thread_neighbor_last_communication_time_get
              reference :  thread_neighbor_last_communication_time_update
              reference :  thread_network_data_request_send
              reference :  thread_network_data_services_registered
              reference :  thread_network_data_tlv_size
              reference :  thread_network_data_tlv_write
              reference :  thread_nvm_store_link_info_write
              reference :  thread_nvm_store_mleid_rloc_map_remove
              reference :  thread_partition_match
              reference :  thread_pending_operational_dataset_size
              reference :  thread_pending_operational_dataset_write
              reference :  thread_pending_timestamp_tlv_size
              reference :  thread_pending_timestamp_write
              reference :  thread_registered_mcast_addr_entry_find
              reference :  thread_route_option_size
              reference :  thread_route_option_write
              reference :  thread_route_ready_to_leader
              reference :  thread_router_addr_from_addr
              definition:  thread_router_bootstrap_active_router_attach
              definition:  thread_router_bootstrap_address_change_notify_send
              definition:  thread_router_bootstrap_advertiment_analyze
              definition:  thread_router_bootstrap_anycast_address_register
              definition:  thread_router_bootstrap_child_count_get
              definition:  thread_router_bootstrap_child_id_handler
              definition:  thread_router_bootstrap_child_id_reject
              definition:  thread_router_bootstrap_child_information_clear
              definition:  thread_router_bootstrap_child_max_timeout_get
              definition:  thread_router_bootstrap_delay_reed_jitter
              definition:  thread_router_bootstrap_link_synch_start
              definition:  thread_router_bootstrap_mle_advertise
              definition:  thread_router_bootstrap_mle_receive_cb
              definition:  thread_router_bootstrap_multicast_forwarder_enable
              definition:  thread_router_bootstrap_network_data_distribute
              definition:  thread_router_bootstrap_random_upgrade_jitter
              definition:  thread_router_bootstrap_reed_advertisements_start
              definition:  thread_router_bootstrap_reed_merge_advertisement
              definition:  thread_router_bootstrap_reed_upgrade
              definition:  thread_router_bootstrap_reset_child_info
              definition:  thread_router_bootstrap_route_tlv_push
              definition:  thread_router_bootstrap_router_downgrade
              definition:  thread_router_bootstrap_router_id_release
              definition:  thread_router_bootstrap_router_id_request
              definition:  thread_router_bootstrap_routing_allowed
              definition:  thread_router_bootstrap_timer
              reference :  thread_router_id_from_addr
              reference :  thread_router_selection_jitter
              reference :  thread_routing_activate
              reference :  thread_routing_add_link
              reference :  thread_routing_count_active_routers
              reference :  thread_routing_count_neighbours_for_downgrade
              reference :  thread_routing_force_next_hop
              reference :  thread_routing_leader_connection_validate
              reference :  thread_routing_update_id_set
              reference :  thread_routing_update_link_margin
              reference :  thread_scan_mask_validation
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/nanostack/sal-stack-nanostack/source/6LoWPAN/Thread/thread_routing.o.
              reference :  __aeabi_memset4
              reference :  addr_check_broadcast
              reference :  bit_set
              reference :  bit_test
              reference :  common_count_bits
              reference :  common_read_16_bit
              reference :  common_serial_number_greater_8
              reference :  common_write_16_bit
              reference :  ipv6_route_table_modify_router_metric
              reference :  mac_helper_mac16_address_get
              reference :  mac_neighbor_table_address_discover
              reference :  mbed_tracef
              reference :  mesh_all_addresses_unicast
              reference :  ns_dyn_mem_alloc
              reference :  ns_dyn_mem_free
              reference :  ns_list_add_to_end_
              reference :  ns_list_get_next_
              reference :  ns_list_init_
              reference :  ns_list_remove_
              reference :  randLIB_get_random_in_range
              definition:  router_id_sequence_is_greater
              definition:  thread_addr_is_child
              definition:  thread_addr_is_equal_or_child
              reference :  thread_addr_write_mesh_local_16
              definition:  thread_i_am_router
              definition:  thread_is_router_addr
              reference :  thread_leader_service_router_state_changed
              reference :  thread_link_cost_sum
              reference :  thread_link_margin_to_quality
              reference :  thread_link_quality_to_cost
              reference :  thread_nd_flush_neighbour_cache_for_short_addr
              reference :  thread_nd_map_anycast_address
              definition:  thread_router_addr_from_addr
              definition:  thread_router_addr_from_id
              definition:  thread_router_id_from_addr
              definition:  thread_routing_activate
              definition:  thread_routing_add_link
              definition:  thread_routing_cost_get_by_router_id
              definition:  thread_routing_count_active_routers
              definition:  thread_routing_count_active_routers_from_mask
              definition:  thread_routing_count_neighbours_for_downgrade
              definition:  thread_routing_deactivate
              definition:  thread_routing_force_link_margin
              definition:  thread_routing_force_next_hop
              definition:  thread_routing_free
              definition:  thread_routing_get_route_data
              definition:  thread_routing_get_route_data_size
              definition:  thread_routing_init
              definition:  thread_routing_leader_connection_validate
              definition:  thread_routing_remove_link
              definition:  thread_routing_reset
              definition:  thread_routing_set_mesh_callbacks
              definition:  thread_routing_timer
              definition:  thread_routing_trickle_advance
              definition:  thread_routing_update_id_set
              definition:  thread_routing_update_link_margin
              reference :  trickle_inconsistent_heard
              reference :  trickle_running
              reference :  trickle_start
              reference :  trickle_timer
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/nanostack/sal-stack-nanostack/source/6LoWPAN/Thread/thread_test_api.o.
              reference :  __aeabi_memcpy
              reference :  addr_opaque_initial_iid_set
              definition:  arm_nwk_6lowpan_thread_test_add_neighbour
              definition:  arm_nwk_6lowpan_thread_test_print_routing_database
              definition:  arm_nwk_6lowpan_thread_test_remove_neighbour
              reference :  coap_service_initialize
              reference :  coap_service_register_uri
              reference :  coap_service_request_send
              reference :  coap_service_response_send
              reference :  mac_helper_link_frame_counter_set
              reference :  mac_helper_mac16_address_get
              reference :  mac_helper_security_default_key_set
              reference :  mbed_trace_array
              reference :  mbed_tracef
              reference :  mle_general_write_source_address
              reference :  mle_service_get_data_pointer
              reference :  mle_service_msg_allocate
              reference :  mle_service_msg_update_security_params
              reference :  mle_service_security_set_security_key
              reference :  mle_service_send_message
              reference :  mle_service_set_msg_destination_address
              reference :  mle_service_update_length_by_ptr
              reference :  ns_list_get_next_
              reference :  protocol_stack_interface_info_get_by_id
              reference :  strcmp
              reference :  thread_active_operational_dataset_size
              reference :  thread_active_operational_dataset_write
              reference :  thread_active_timestamp_write
              reference :  thread_attach_ready
              reference :  thread_bbr_commercial_status_override_set
              reference :  thread_bootstrap_announce_send
              reference :  thread_bootstrap_attached_downgrade_router
              reference :  thread_ccm_thread_name_set
              reference :  thread_delay_timer_default
              reference :  thread_i_am_router
              reference :  thread_joiner_application_get_config
              reference :  thread_joiner_port
              reference :  thread_key_get
              reference :  thread_key_guard_timer_calculate
              reference :  thread_leader_data_tlv_write
              reference :  thread_leader_service_route_mask_bit_clear
              reference :  thread_leader_service_update_id_set
              reference :  thread_management_get_current_keysequence
              reference :  thread_management_increment_key_sequence_counter
              reference :  thread_management_key_sets_calc
              reference :  thread_max_mcast_addr
              reference :  thread_meshcop_tlv_data_get_uint16
              reference :  thread_meshcop_tlv_data_write
              reference :  thread_meshcop_tlv_data_write_uint16
              reference :  thread_meshcop_tlv_data_write_uint8
              reference :  thread_meshcop_tlv_find
              reference :  thread_nd_network_data_print
              reference :  thread_neighbor_entry_linkmargin_get
              reference :  thread_network_data_tlv_size
              reference :  thread_network_data_tlv_write
              reference :  thread_nvm_store_link_info_clear
              reference :  thread_pending_operational_dataset_size
              reference :  thread_pending_operational_dataset_write
              definition:  thread_reed_set_advertisement_interval
              reference :  thread_router_addr_from_addr
              reference :  thread_router_bootstrap_child_count_get
              reference :  thread_router_bootstrap_random_upgrade_jitter
              reference :  thread_router_bootstrap_reed_upgrade
              reference :  thread_router_bootstrap_router_downgrade
              reference :  thread_router_bootstrap_router_id_request
              reference :  thread_router_id_from_addr
              reference :  thread_router_selection_jitter
              reference :  thread_routing_add_link
              reference :  thread_routing_count_active_routers
              definition:  thread_routing_get_network_id_timeout
              reference :  thread_routing_remove_link
              definition:  thread_routing_set_network_id_timeout
              reference :  thread_security_next_key_generate
              definition:  thread_test_announce_begin_send
              definition:  thread_test_announce_ntf_send
              definition:  thread_test_child_count_get
              definition:  thread_test_child_info_get
              definition:  thread_test_coap_request_send
              definition:  thread_test_diagnostic_command_send
              definition:  thread_test_energy_scan_send
              definition:  thread_test_extension_name_set
              definition:  thread_test_increment_key_sequence_counter
              definition:  thread_test_initial_slaac_iid_set
              definition:  thread_test_joiner_router_joiner_port_set
              definition:  thread_test_key_rotation_update
              definition:  thread_test_key_sequence_counter_update
              definition:  thread_test_max_accepted_router_id_limit_set
              definition:  thread_test_mcast_address_per_message_set
              definition:  thread_test_min_delay_timer_set
              definition:  thread_test_mle_message_send
              definition:  thread_test_neighbour_info_get
              definition:  thread_test_panid_query_send
              definition:  thread_test_parent_priority_set
              definition:  thread_test_partition_info_get
              definition:  thread_test_partition_info_set
              definition:  thread_test_pbbr_response_override_set
              definition:  thread_test_print_network_data
              definition:  thread_test_remove_router_by_id
              definition:  thread_test_router_address_set
              definition:  thread_test_router_downgrade
              definition:  thread_test_router_id_request_send
              definition:  thread_test_router_select_threshold_values_set
              definition:  thread_test_router_selection_jitter_set
              definition:  thread_test_security_material_set
              definition:  thread_test_set_context_id_reuse_timeout
              definition:  thread_test_stack_cache_reset
              definition:  thread_test_thread_information_get
              definition:  thread_test_version_set
              reference :  thread_version
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/nanostack/sal-stack-nanostack/source/6LoWPAN/adaptation_interface.o.
              reference :  __aeabi_memclr4
              reference :  __aeabi_memcpy
              reference :  addr_check_broadcast
              reference :  addr_ipv6_equal
              reference :  buffer_corrupt_check
              reference :  buffer_data_add
              reference :  buffer_free
              reference :  buffer_free_list
              reference :  buffer_get
              reference :  common_read_16_bit
              reference :  common_write_16_bit
              reference :  common_write_32_bit
              reference :  etx_storage_entry_get
              reference :  etx_transm_attempts_update
              reference :  iphc_header_scan
              definition:  lowpan_adaptation_data_process_tx_preprocess
              definition:  lowpan_adaptation_free_messages_from_queues_by_address
              definition:  lowpan_adaptation_indirect_queue_params_set
              definition:  lowpan_adaptation_interface_data_ind
              definition:  lowpan_adaptation_interface_etx_update_enable
              definition:  lowpan_adaptation_interface_free
              definition:  lowpan_adaptation_interface_init
              definition:  lowpan_adaptation_interface_mpx_register
              definition:  lowpan_adaptation_interface_reset
              definition:  lowpan_adaptation_interface_tx
              definition:  lowpan_adaptation_interface_tx_confirm
              definition:  lowpan_adaptation_neigh_remove_free_tx_tables
              definition:  lowpan_adaptation_tx_active
              reference :  mac_helper_default_key_index_get
              reference :  mac_helper_default_security_key_id_mode_get
              reference :  mac_helper_default_security_level_get
              reference :  mac_helper_frame_overhead
              reference :  mac_helper_mac_channel_set
              reference :  mac_helper_max_payload_size
              reference :  mac_helper_panid_get
              reference :  mac_neighbor_table_address_discover
              reference :  mbed_trace_array
              reference :  mbed_tracef
              reference :  memcmp
              reference :  mesh_header_len_from_type_byte
              reference :  ns_dyn_mem_alloc
              reference :  ns_dyn_mem_free
              reference :  ns_dyn_mem_temporary_alloc
              reference :  ns_list_add_before_
              reference :  ns_list_add_to_end_
              reference :  ns_list_count_
              reference :  ns_list_get_last_
              reference :  ns_list_get_next_
              reference :  ns_list_get_previous_
              reference :  ns_list_init_
              reference :  ns_list_remove_
              reference :  protocol_push
              reference :  protocol_stack_interface_info_get_by_id
              reference :  protocol_stats_update
              reference :  randLIB_get_16bit
              reference :  randLIB_get_8bit
              reference :  rpl_data_is_rpl_parent_route
              reference :  socket_tx_buffer_event_and_free
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/nanostack/sal-stack-nanostack/source/6LoWPAN/ws/ws_bbr_api.o.
              reference :  ADDR_6TO4
              reference :  ADDR_LINK_LOCAL_PREFIX
              reference :  ADDR_UNSPECIFIED
              reference :  DHCPv6_server_service_callback_set
              reference :  DHCPv6_server_service_delete
              reference :  DHCPv6_server_service_init
              reference :  DHCPv6_server_service_set_address_autonous_flag
              reference :  DHCPv6_server_service_set_address_validlifetime
              reference :  DHCPv6_server_service_set_dns_server
              reference :  DHCPv6_server_service_set_max_clients_accepts_count
              reference :  DHCPv6_server_service_set_vendor_data
              reference :  __aeabi_memclr
              reference :  __aeabi_memclr8
              reference :  addr_get_entry
              reference :  addr_policy_table_add_entry
              reference :  addr_policy_table_delete_entry
              reference :  addr_select_with_prefix
              reference :  arm_net_address_get
              reference :  dhcp_client_global_address_delete
              reference :  icmpv6_build_na
              reference :  icmpv6_slaac_address_add
              reference :  icmpv6_slaac_prefix_update
              reference :  ipv6_route_add_with_info
              reference :  ipv6_route_choose_next_hop
              reference :  mbed_trace_ipv6
              reference :  mbed_trace_ipv6_prefix
              reference :  mbed_tracef
              reference :  memcmp
              reference :  nd_proxy_downstream_interface_register
              reference :  net_dns_option_vendor_option_data_dns_query_length
              reference :  net_dns_option_vendor_option_data_dns_query_write
              reference :  net_dns_server_get
              reference :  ns_dyn_mem_alloc
              reference :  ns_dyn_mem_free
              reference :  protocol_6lowpan_rpl_domain
              reference :  protocol_6lowpan_rpl_root_dodag
              reference :  protocol_address_prefix_cmp
              reference :  protocol_core_monotonic_time
              reference :  protocol_interface_address_compare
              reference :  protocol_push
              reference :  protocol_stack_interface_info_get_by_id
              reference :  rpl_control_create_dodag_root
              reference :  rpl_control_delete_dodag_root
              reference :  rpl_control_get_instance_dao_target_count
              reference :  rpl_control_increment_dodag_version
              reference :  rpl_control_lookup_instance
              reference :  rpl_control_read_dodag_info
              reference :  rpl_control_route_table_get
              reference :  rpl_control_set_memory_limits
              reference :  rpl_control_update_dodag_config
              reference :  rpl_control_update_dodag_prefix
              reference :  rpl_control_update_dodag_route
              reference :  rpl_data_init_root
              reference :  strcasecmp
              reference :  strcpy
              reference :  strlen
              definition:  test_pan_size_override
              definition:  ws_bbr_backbone_address_get
              definition:  ws_bbr_configure
              definition:  ws_bbr_dhcp_address_lifetime_set
              definition:  ws_bbr_dns_query_result_set
              definition:  ws_bbr_eapol_node_limit_set
              definition:  ws_bbr_ext_certificate_validation_set
              definition:  ws_bbr_info_get
              definition:  ws_bbr_key_storage_memory_set
              definition:  ws_bbr_key_storage_settings_set
              definition:  ws_bbr_node_access_revoke_start
              definition:  ws_bbr_node_keys_remove
              definition:  ws_bbr_pan_configuration_get
              definition:  ws_bbr_pan_configuration_set
              definition:  ws_bbr_pan_configuration_validate
              definition:  ws_bbr_pan_size
              definition:  ws_bbr_pan_version_increase
              definition:  ws_bbr_radius_address_get
              definition:  ws_bbr_radius_address_set
              definition:  ws_bbr_radius_shared_secret_get
              definition:  ws_bbr_radius_shared_secret_set
              definition:  ws_bbr_radius_timing_get
              definition:  ws_bbr_radius_timing_set
              definition:  ws_bbr_radius_timing_validate
              definition:  ws_bbr_ready_to_start
              definition:  ws_bbr_routing_table_get
              definition:  ws_bbr_rpl_config
              definition:  ws_bbr_rpl_parameters_get
              definition:  ws_bbr_rpl_parameters_set
              definition:  ws_bbr_rpl_parameters_validate
              definition:  ws_bbr_seconds_timer
              definition:  ws_bbr_start
              definition:  ws_bbr_stop
              reference :  ws_bootstrap_configuration_trickle_reset
              definition:  ws_border_router_proxy_state_update
              reference :  ws_cfg_bbr_get
              reference :  ws_cfg_bbr_set
              reference :  ws_cfg_bbr_validate
              reference :  ws_cfg_gen_get
              reference :  ws_cfg_gen_set
              reference :  ws_cfg_gen_validate
              reference :  ws_dhcp_client_address_request
              reference :  ws_pae_controller_ext_certificate_validation_set
              reference :  ws_pae_controller_node_access_revoke_start
              reference :  ws_pae_controller_node_keys_remove
              reference :  ws_pae_controller_node_limit_set
              reference :  ws_pae_controller_nw_info_set
              reference :  ws_pae_controller_radius_address_get
              reference :  ws_pae_controller_radius_address_set
              reference :  ws_pae_controller_radius_shared_secret_get
              reference :  ws_pae_controller_radius_shared_secret_set
              reference :  ws_pae_controller_radius_timing_get
              reference :  ws_pae_controller_radius_timing_set
              reference :  ws_pae_controller_radius_timing_validate
              reference :  ws_pae_key_storage_memory_set
              reference :  ws_pae_key_storage_settings_set
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/nanostack/sal-stack-nanostack/source/6LoWPAN/ws/ws_bootstrap.o.
              reference :  ADDR_ALL_MPL_FORWARDERS
              reference :  ADDR_LINK_LOCAL_ALL_RPL_NODES
              reference :  ADDR_LINK_LOCAL_PREFIX
              reference :  ADDR_REALM_LOCAL_ALL_NODES
              reference :  ADDR_REALM_LOCAL_ALL_ROUTERS
              reference :  ADDR_UNSPECIFIED
              reference :  DEVICE_MIN_SENS
              reference :  __aeabi_memclr4
              reference :  __aeabi_memcpy
              reference :  __aeabi_memcpy4
              reference :  addr_add_group
              reference :  addr_add_router_groups
              reference :  addr_delete_entry
              reference :  addr_interface_get_ll_address
              reference :  addr_interface_set_ll64
              reference :  addr_ipv6_scope
              reference :  addr_is_ipv6_link_local
              reference :  addr_notification_register
              reference :  addr_policy_remove_by_label
              reference :  addr_policy_table_add_entry
              reference :  blacklist_clear
              reference :  blacklist_init
              reference :  blacklist_params_set
              reference :  blacklist_reject
              reference :  channel_list_count_channels
              reference :  clear_power_state
              reference :  common_read_16_bit_inverse
              reference :  common_serial_number_greater_16
              reference :  dhcp_client_configure
              reference :  dhcp_client_delete
              reference :  dhcp_client_get_global_address
              reference :  dhcp_client_global_address_delete
              reference :  dhcp_client_init
              reference :  dhcp_client_option_notification_cb_set
              reference :  dhcp_client_server_address_update
              reference :  dhcp_client_solicit_timeout_set
              reference :  dhcp_relay_agent_enable
              reference :  dhcp_service_link_local_rx_cb_set
              reference :  etx_cached_etx_parameter_set
              reference :  etx_local_etx_read
              reference :  etx_lqi_dbm_update
              reference :  etx_max_set
              reference :  etx_max_update_set
              reference :  etx_neighbor_remove
              reference :  etx_storage_entry_get
              reference :  etx_storage_list_allocate
              reference :  eventOS_event_handler_create
              reference :  eventOS_event_send
              reference :  icmpv6_build_ns
              reference :  icmpv6_slaac_prefix_update
              reference :  ipv6_interface_slaac_handler
              reference :  ipv6_neighbour_cache_flush
              reference :  ipv6_neighbour_entry_remove
              reference :  ipv6_neighbour_has_registered_by_eui64
              reference :  lowpan_adaptation_interface_mpx_register
              reference :  lowpan_adaptation_neigh_remove_free_tx_tables
              reference :  lowpan_context_list_free
              reference :  mac_data_poll_protocol_poll_mode_decrement
              reference :  mac_helper_default_key_index_get
              reference :  mac_helper_default_security_key_id_mode_get
              reference :  mac_helper_default_security_key_id_mode_set
              reference :  mac_helper_default_security_level_get
              reference :  mac_helper_default_security_level_set
              reference :  mac_helper_device_description_write
              reference :  mac_helper_devicetable_direct_set
              reference :  mac_helper_devicetable_remove
              reference :  mac_helper_devicetable_set
              reference :  mac_helper_key_link_frame_counter_read
              reference :  mac_helper_key_link_frame_counter_set
              reference :  mac_helper_mac64_set
              reference :  mac_helper_mac_mlme_max_retry_set
              reference :  mac_helper_pib_boolean_set
              reference :  mac_helper_security_auto_request_key_index_set
              reference :  mac_helper_security_key_descriptor_clear
              reference :  mac_helper_security_key_to_descriptor_set
              reference :  mac_helper_start_auto_cca_threshold
              reference :  mac_neighbor_entry_get_by_ll64
              reference :  mac_neighbor_entry_get_priority
              reference :  mac_neighbor_table_address_discover
              reference :  mac_neighbor_table_attribute_discover
              reference :  mac_neighbor_table_create
              reference :  mac_neighbor_table_delete
              reference :  mac_neighbor_table_entry_allocate
              reference :  mac_neighbor_table_neighbor_connected
              reference :  mac_neighbor_table_neighbor_list_clean
              reference :  mac_neighbor_table_neighbor_refresh
              reference :  mac_neighbor_table_neighbor_remove
              reference :  mac_neighbor_table_trusted_neighbor
              reference :  mbed_trace_array
              reference :  mbed_trace_ipv6
              reference :  mbed_tracef
              reference :  memcmp
              reference :  mpl_domain_create
              reference :  nd_proxy_downstream_interface_unregister
              reference :  net_dns_option_vendor_option_data_dns_query_read
              reference :  net_dns_option_vendor_option_data_get_next
              reference :  net_dns_query_result_set
              reference :  net_dns_server_address_set
              reference :  net_dns_server_search_list_set
              reference :  ns_fhss_delete
              reference :  ns_fhss_set_neighbor_info_fp
              reference :  ns_fhss_ws_configuration_get
              reference :  ns_fhss_ws_configuration_set
              reference :  ns_fhss_ws_create
              reference :  ns_fhss_ws_set_hop_count
              reference :  ns_fhss_ws_set_parent
              reference :  ns_list_add_before_
              reference :  ns_list_add_to_end_
              reference :  ns_list_get_last_
              reference :  ns_list_get_next_
              reference :  ns_list_remove_
              reference :  ns_sw_mac_enable_frame_counter_per_key
              reference :  ns_sw_mac_fhss_register
              reference :  ns_sw_mac_fhss_unregister
              reference :  ns_sw_mac_get_fhss_api
              reference :  ns_sw_mac_read_current_timestamp
              reference :  nwk_6lowpan_down
              reference :  nwk_6lowpan_up
              reference :  nwk_bootsrap_state_update
              reference :  protocol_6lowpan_neighbor_priority_clear_all
              reference :  protocol_6lowpan_release_long_link_address_from_neighcache
              reference :  protocol_6lowpan_release_short_link_address_from_neighcache
              reference :  protocol_6lowpan_rpl_domain
              reference :  protocol_core_monotonic_time
              reference :  protocol_mac_reset
              reference :  protocol_push
              reference :  protocol_read_tasklet_id
              reference :  protocol_stack_interface_info_get_by_bootstrap_id
              reference :  protocol_stack_interface_info_get_by_fhss_api
              reference :  protocol_stack_interface_info_get_by_id
              reference :  randLIB_get_n_bytes_random
              reference :  randLIB_get_random_in_range
              reference :  rpl_control_candidate_list_size
              reference :  rpl_control_current_rank
              reference :  rpl_control_dao_timeout
              reference :  rpl_control_enumerate_instances
              reference :  rpl_control_find_worst_neighbor
              reference :  rpl_control_force_leaf
              reference :  rpl_control_free_domain_instances_from_interface
              reference :  rpl_control_have_dodag
              reference :  rpl_control_is_dodag_parent
              reference :  rpl_control_is_dodag_parent_candidate
              reference :  rpl_control_neighbor_delete
              reference :  rpl_control_probe_parent_candidate
              reference :  rpl_control_process_routes
              reference :  rpl_control_read_dodag_info
              reference :  rpl_control_register_address
              reference :  rpl_control_request_parent_link_confirmation
              reference :  rpl_control_selected_parent_count
              reference :  rpl_control_set_address_registration_timeout
              reference :  rpl_control_set_callback
              reference :  rpl_control_set_dao_retry_count
              reference :  rpl_control_set_dio_multicast_min_config_advertisment_count
              reference :  rpl_control_set_domain_on_interface
              reference :  rpl_control_set_initial_dao_ack_wait
              reference :  rpl_control_set_memory_limits
              reference :  rpl_control_set_minimum_dao_target_refresh
              reference :  rpl_control_set_mrhof_parent_set_size
              reference :  rpl_control_transmit_dis
              reference :  rpl_policy_forward_link_etx_threshold_set
              reference :  rpl_possible_better_candidate
              reference :  strlen
              reference :  strncmp
              reference :  strncpy
              reference :  trickle_consistent_heard
              reference :  trickle_inconsistent_heard
              reference :  trickle_start
              reference :  trickle_timer
              reference :  trickle_timer_max
              reference :  ws_bbr_backbone_address_get
              reference :  ws_bbr_pan_size
              reference :  ws_bbr_pan_version_increase
              reference :  ws_bbr_ready_to_start
              definition:  ws_bootstrap_aro_failure
              definition:  ws_bootstrap_configuration_reset
              definition:  ws_bootstrap_configuration_trickle_reset
              definition:  ws_bootstrap_configure_process
              definition:  ws_bootstrap_eapol_parent_synch
              definition:  ws_bootstrap_eapol_tx_temporary_clear
              definition:  ws_bootstrap_eapol_tx_temporary_set
              definition:  ws_bootstrap_event_authentication_start
              definition:  ws_bootstrap_event_configuration_start
              definition:  ws_bootstrap_event_discovery_start
              definition:  ws_bootstrap_event_operation_start
              definition:  ws_bootstrap_event_routing_ready
              definition:  ws_bootstrap_get_info
              definition:  ws_bootstrap_init
              definition:  ws_bootstrap_mac_neighbor_add
              definition:  ws_bootstrap_mac_neighbor_short_time_set
              definition:  ws_bootstrap_nd_ns_transmit
              definition:  ws_bootstrap_neighbor_remove
              definition:  ws_bootstrap_neighbor_set_stable
              definition:  ws_bootstrap_network_scan_process
              definition:  ws_bootstrap_primary_parent_update
              definition:  ws_bootstrap_restart
              definition:  ws_bootstrap_restart_delayed
              definition:  ws_bootstrap_rpl_wait_process
              definition:  ws_bootstrap_secondary_parent_update
              definition:  ws_bootstrap_seconds_timer
              definition:  ws_bootstrap_set_rf_config
              definition:  ws_bootstrap_state_machine
              definition:  ws_bootstrap_trickle_timer
              definition:  ws_bootstrap_validate_channel_function
              definition:  ws_bootstrap_validate_channel_plan
              reference :  ws_cfg_gen_get
              reference :  ws_cfg_gen_set
              reference :  ws_cfg_network_size_configure
              reference :  ws_cfg_settings_interface_set
              reference :  ws_common_allocate_and_init
              reference :  ws_common_regulatory_domain_config
              reference :  ws_common_temporary_entry_size
              reference :  ws_decode_channel_spacing
              definition:  ws_dhcp_client_address_delete
              definition:  ws_dhcp_client_address_request
              reference :  ws_eapol_auth_relay_delete
              reference :  ws_eapol_auth_relay_start
              reference :  ws_eapol_pdu_delete
              reference :  ws_eapol_pdu_init
              reference :  ws_eapol_pdu_mpx_register
              reference :  ws_eapol_relay_delete
              reference :  ws_eapol_relay_start
              definition:  ws_eapol_relay_state_active
              definition:  ws_etx_read
              reference :  ws_generate_channel_list
              reference :  ws_get_datarate_using_operating_mode
              reference :  ws_get_modulation_index_using_operating_mode
              reference :  ws_llc_asynch_request
              reference :  ws_llc_create
              reference :  ws_llc_delete
              reference :  ws_llc_free_multicast_temp_entry
              reference :  ws_llc_get_multicast_temp_entry
              reference :  ws_llc_hopping_schedule_config
              reference :  ws_llc_mpx_api_get
              reference :  ws_llc_reset
              reference :  ws_llc_set_gtkhash
              reference :  ws_llc_set_network_name
              reference :  ws_llc_set_pan_information_pointer
              reference :  ws_llc_timer_seconds
              reference :  ws_neighbor_class_alloc
              reference :  ws_neighbor_class_dealloc
              reference :  ws_neighbor_class_entry_get
              reference :  ws_neighbor_class_entry_remove
              reference :  ws_neighbor_class_neighbor_broadcast_schedule_set
              reference :  ws_neighbor_class_neighbor_broadcast_time_info_update
              reference :  ws_neighbor_class_neighbor_unicast_schedule_set
              reference :  ws_neighbor_class_neighbor_unicast_time_info_update
              reference :  ws_neighbor_class_rsl_from_dbm_calculate
              definition:  ws_nud_active_timer
              definition:  ws_nud_entry_remove_active
              reference :  ws_pae_controller_auth_cb_register
              reference :  ws_pae_controller_auth_init
              reference :  ws_pae_controller_authenticate
              reference :  ws_pae_controller_authenticator_start
              reference :  ws_pae_controller_bootstrap_done
              reference :  ws_pae_controller_border_router_addr_write
              reference :  ws_pae_controller_cb_register
              reference :  ws_pae_controller_configure
              reference :  ws_pae_controller_delete
              reference :  ws_pae_controller_gtk_hash_ptr_get
              reference :  ws_pae_controller_gtk_hash_update
              reference :  ws_pae_controller_init
              reference :  ws_pae_controller_nw_info_set
              reference :  ws_pae_controller_nw_key_index_update
              reference :  ws_pae_controller_nw_key_valid
              reference :  ws_pae_controller_nw_keys_remove
              reference :  ws_pae_controller_set_target
              reference :  ws_pae_controller_stop
              reference :  ws_pae_controller_supp_init
              reference :  ws_stats_update
              definition:  ws_time_from_last_unicast_traffic
              reference :  ws_wh_bt_read
              reference :  ws_wh_utt_read
              reference :  ws_wp_nested_bs_read
              reference :  ws_wp_nested_gtkhash_read
              reference :  ws_wp_nested_network_name_read
              reference :  ws_wp_nested_pan_read
              reference :  ws_wp_nested_pan_version_read
              reference :  ws_wp_nested_us_read
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/nanostack/sal-stack-nanostack/source/6LoWPAN/ws/ws_cfg_settings.o.
              reference :  __aeabi_memclr
              reference :  __aeabi_memclr4
              reference :  __aeabi_memcpy
              reference :  __aeabi_memcpy4
              reference :  mbed_tracef
              reference :  memcmp
              reference :  mpl_domain_change_timing
              reference :  ns_dyn_mem_alloc
              reference :  ns_dyn_mem_free
              definition:  nw_size_external_cfg
              reference :  strcmp
              reference :  strlen
              reference :  strncpy
              reference :  ws_bbr_dhcp_address_lifetime_set
              reference :  ws_bbr_rpl_config
              reference :  ws_bootstrap_restart_delayed
              definition:  ws_cfg
              definition:  ws_cfg_bbr_get
              definition:  ws_cfg_bbr_set
              definition:  ws_cfg_bbr_validate
              definition:  ws_cfg_fhss_get
              definition:  ws_cfg_fhss_set
              definition:  ws_cfg_fhss_validate
              definition:  ws_cfg_gen_get
              definition:  ws_cfg_gen_set
              definition:  ws_cfg_gen_validate
              definition:  ws_cfg_mpl_get
              definition:  ws_cfg_mpl_set
              definition:  ws_cfg_mpl_validate
              definition:  ws_cfg_network_size_configure
              definition:  ws_cfg_network_size_get
              definition:  ws_cfg_network_size_set
              definition:  ws_cfg_network_size_validate
              definition:  ws_cfg_phy_get
              definition:  ws_cfg_phy_set
              definition:  ws_cfg_phy_validate
              definition:  ws_cfg_sec_prot_get
              definition:  ws_cfg_sec_prot_set
              definition:  ws_cfg_sec_prot_validate
              definition:  ws_cfg_sec_timer_get
              definition:  ws_cfg_sec_timer_set
              definition:  ws_cfg_sec_timer_validate
              definition:  ws_cfg_settings_default_set
              definition:  ws_cfg_settings_get
              definition:  ws_cfg_settings_init
              definition:  ws_cfg_settings_interface_set
              definition:  ws_cfg_settings_set
              definition:  ws_cfg_settings_validate
              definition:  ws_cfg_timing_get
              definition:  ws_cfg_timing_set
              definition:  ws_cfg_timing_validate
              reference :  ws_common_regulatory_domain_config
              reference :  ws_pae_controller_configure
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/nanostack/sal-stack-nanostack/source/6LoWPAN/ws/ws_common.o.
              definition:  DEVICE_MIN_SENS
              reference :  __aeabi_memclr4
              reference :  blacklist_ttl_update
              reference :  blacklist_update
              reference :  ipv6_neighbour_has_registered_by_eui64
              reference :  mac_neighbor_entry_get_by_ll64
              reference :  mac_neighbor_entry_get_by_mac64
              reference :  mac_neighbor_table_address_discover
              reference :  mac_neighbor_table_neighbor_refresh
              reference :  mbed_trace_ipv6
              reference :  mbed_tracef
              reference :  ns_dyn_mem_alloc
              reference :  ns_list_get_next_
              reference :  ns_list_init_
              reference :  rpl_control_parent_candidate_list_size
              definition:  test_max_child_count_override
              definition:  ws_active_channel_count
              reference :  ws_bbr_seconds_timer
              reference :  ws_bootstrap_aro_failure
              reference :  ws_bootstrap_neighbor_remove
              reference :  ws_bootstrap_neighbor_set_stable
              reference :  ws_bootstrap_primary_parent_update
              reference :  ws_bootstrap_secondary_parent_update
              reference :  ws_bootstrap_seconds_timer
              reference :  ws_bootstrap_trickle_timer
              definition:  ws_common_allocate_and_init
              definition:  ws_common_allow_child_registration
              definition:  ws_common_aro_failure
              definition:  ws_common_channel_number_calc
              definition:  ws_common_datarate_get
              definition:  ws_common_fast_timer
              definition:  ws_common_latency_estimate_get
              definition:  ws_common_negative_aro_mark
              definition:  ws_common_neighbor_remove
              definition:  ws_common_neighbor_update
              definition:  ws_common_network_size_estimate_get
              definition:  ws_common_primary_parent_update
              definition:  ws_common_regulatory_domain_config
              definition:  ws_common_secondary_parent_update
              definition:  ws_common_seconds_timer
              definition:  ws_common_temporary_entry_size
              definition:  ws_decode_channel_spacing
              definition:  ws_generate_channel_list
              definition:  ws_get_datarate_using_operating_mode
              definition:  ws_get_modulation_index_using_operating_mode
              reference :  ws_llc_fast_timer
              reference :  ws_neighbor_class_entry_get
              reference :  ws_nud_active_timer
              reference :  ws_nud_entry_remove_active
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/nanostack/sal-stack-nanostack/source/6LoWPAN/ws/ws_eapol_auth_relay.o.
              reference :  common_read_16_bit
              reference :  common_write_16_bit
              reference :  ns_dyn_mem_alloc
              reference :  ns_dyn_mem_free
              reference :  ns_dyn_mem_temporary_alloc
              reference :  ns_list_add_to_end_
              reference :  ns_list_get_next_
              reference :  ns_list_remove_
              reference :  socket_close
              reference :  socket_open
              reference :  socket_recvfrom
              reference :  socket_sendmsg
              definition:  ws_eapol_auth_relay_delete
              definition:  ws_eapol_auth_relay_start
              reference :  ws_eapol_relay_lib_send_to_relay
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/nanostack/sal-stack-nanostack/source/6LoWPAN/ws/ws_eapol_pdu.o.
              reference :  __aeabi_memclr4
              reference :  mac_helper_panid_get
              reference :  mbed_tracef
              reference :  ns_dyn_mem_alloc
              reference :  ns_dyn_mem_free
              reference :  ns_dyn_mem_temporary_alloc
              reference :  ns_list_add_before_
              reference :  ns_list_add_to_end_
              reference :  ns_list_add_to_start_
              reference :  ns_list_get_next_
              reference :  ns_list_init_
              reference :  ns_list_remove_
              definition:  ws_eapol_pdu_cb_register
              definition:  ws_eapol_pdu_cb_unregister
              definition:  ws_eapol_pdu_delete
              definition:  ws_eapol_pdu_init
              definition:  ws_eapol_pdu_mpx_register
              definition:  ws_eapol_pdu_send_to_mpx
              reference :  ws_llc_eapol_relay_forward_filter
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/nanostack/sal-stack-nanostack/source/6LoWPAN/ws/ws_eapol_relay.o.
              reference :  ns_dyn_mem_alloc
              reference :  ns_dyn_mem_free
              reference :  ns_dyn_mem_temporary_alloc
              reference :  ns_list_add_to_end_
              reference :  ns_list_get_next_
              reference :  ns_list_remove_
              reference :  socket_close
              reference :  socket_open
              reference :  socket_recvfrom
              reference :  ws_eapol_pdu_cb_register
              reference :  ws_eapol_pdu_cb_unregister
              reference :  ws_eapol_pdu_send_to_mpx
              definition:  ws_eapol_relay_delete
              reference :  ws_eapol_relay_lib_send_to_relay
              definition:  ws_eapol_relay_start
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/nanostack/sal-stack-nanostack/source/6LoWPAN/ws/ws_eapol_relay_lib.o.
              reference :  __aeabi_memcpy
              reference :  socket_sendmsg
              definition:  ws_eapol_relay_lib_send_to_relay
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/nanostack/sal-stack-nanostack/source/6LoWPAN/ws/ws_empty_functions.o.
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/nanostack/sal-stack-nanostack/source/6LoWPAN/ws/ws_ie_lib.o.
              reference :  __aeabi_memcpy
              reference :  common_read_16_bit_inverse
              reference :  common_read_24_bit_inverse
              reference :  common_read_32_bit_inverse
              reference :  common_write_16_bit_inverse
              reference :  common_write_24_bit_inverse
              reference :  common_write_32_bit
              reference :  common_write_32_bit_inverse
              reference :  mac_ie_header_base_write
              reference :  mac_ie_header_sub_id_discover
              reference :  mac_ie_nested_discover
              reference :  mac_ie_nested_ie_long_base_write
              reference :  mac_ie_nested_ie_short_base_write
              reference :  mac_ie_payload_base_write
              definition:  ws_wh_bt_read
              definition:  ws_wh_bt_write
              definition:  ws_wh_ea_read
              definition:  ws_wh_ea_write
              definition:  ws_wh_fc_read
              definition:  ws_wh_fc_write
              definition:  ws_wh_rsl_read
              definition:  ws_wh_rsl_write
              definition:  ws_wh_utt_read
              definition:  ws_wh_utt_write
              definition:  ws_wh_vh_write
              definition:  ws_wp_base_write
              definition:  ws_wp_nested_bs_read
              definition:  ws_wp_nested_gtkhash_read
              definition:  ws_wp_nested_gtkhash_write
              definition:  ws_wp_nested_hopping_schedule_length
              definition:  ws_wp_nested_hopping_schedule_write
              definition:  ws_wp_nested_netname_write
              definition:  ws_wp_nested_network_name_read
              definition:  ws_wp_nested_pan_info_write
              definition:  ws_wp_nested_pan_read
              definition:  ws_wp_nested_pan_ver_write
              definition:  ws_wp_nested_pan_version_read
              definition:  ws_wp_nested_us_read
              definition:  ws_wp_nested_vp_write
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/nanostack/sal-stack-nanostack/source/6LoWPAN/ws/ws_llc_data_service.o.
              reference :  __aeabi_memclr4
              reference :  __aeabi_memcpy4
              reference :  eapol_parse_pdu_header
              reference :  eapol_pdu_key_mask_get
              reference :  etx_lqi_dbm_update
              reference :  etx_transm_attempts_update
              reference :  mac_ie_payload_base_write
              reference :  mac_ie_payload_discover
              reference :  mac_neighbor_table_neighbor_remove
              reference :  mac_neighbor_table_trusted_neighbor
              reference :  mbed_tracef
              reference :  memcmp
              reference :  ns_dyn_mem_alloc
              reference :  ns_dyn_mem_free
              reference :  ns_dyn_mem_temporary_alloc
              reference :  ns_fhss_ws_set_parent
              reference :  ns_list_add_to_end_
              reference :  ns_list_add_to_start_
              reference :  ns_list_count_
              reference :  ns_list_get_last_
              reference :  ns_list_get_next_
              reference :  ns_list_init_
              reference :  ns_list_remove_
              reference :  protocol_stack_interface_info_get_by_id
              reference :  ws_bootstrap_eapol_parent_synch
              reference :  ws_bootstrap_eapol_tx_temporary_clear
              reference :  ws_bootstrap_eapol_tx_temporary_set
              reference :  ws_bootstrap_validate_channel_function
              reference :  ws_bootstrap_validate_channel_plan
              reference :  ws_eapol_relay_state_active
              definition:  ws_llc_asynch_request
              definition:  ws_llc_create
              definition:  ws_llc_delete
              definition:  ws_llc_eapol_relay_forward_filter
              definition:  ws_llc_fast_timer
              definition:  ws_llc_free_multicast_temp_entry
              definition:  ws_llc_get_multicast_temp_entry
              definition:  ws_llc_hopping_schedule_config
              definition:  ws_llc_mpx_api_get
              reference :  ws_llc_mpx_header_frame_parse
              reference :  ws_llc_mpx_header_write
              definition:  ws_llc_reset
              definition:  ws_llc_set_gtkhash
              definition:  ws_llc_set_network_name
              definition:  ws_llc_set_pan_information_pointer
              definition:  ws_llc_set_vendor_header_data
              definition:  ws_llc_set_vendor_payload_data
              definition:  ws_llc_timer_seconds
              reference :  ws_neighbor_class_neighbor_broadcast_schedule_set
              reference :  ws_neighbor_class_neighbor_broadcast_time_info_update
              reference :  ws_neighbor_class_neighbor_duplicate_packet_check
              reference :  ws_neighbor_class_neighbor_unicast_schedule_set
              reference :  ws_neighbor_class_neighbor_unicast_time_info_update
              reference :  ws_neighbor_class_rf_sensitivity_calculate
              reference :  ws_neighbor_class_rsl_from_dbm_calculate
              reference :  ws_neighbor_class_rsl_in_calculate
              reference :  ws_neighbor_class_rsl_out_calculate
              reference :  ws_pae_controller_border_router_addr_read
              reference :  ws_pae_controller_border_router_addr_write
              definition:  ws_test_drop_edfe_data_frames
              definition:  ws_test_skip_edfe_data_send
              reference :  ws_wh_bt_read
              reference :  ws_wh_bt_write
              reference :  ws_wh_ea_read
              reference :  ws_wh_ea_write
              reference :  ws_wh_fc_read
              reference :  ws_wh_fc_write
              reference :  ws_wh_rsl_read
              reference :  ws_wh_rsl_write
              reference :  ws_wh_utt_read
              reference :  ws_wh_utt_write
              reference :  ws_wh_vh_write
              reference :  ws_wp_base_write
              reference :  ws_wp_nested_bs_read
              reference :  ws_wp_nested_gtkhash_write
              reference :  ws_wp_nested_hopping_schedule_length
              reference :  ws_wp_nested_hopping_schedule_write
              reference :  ws_wp_nested_netname_write
              reference :  ws_wp_nested_pan_info_write
              reference :  ws_wp_nested_pan_ver_write
              reference :  ws_wp_nested_us_read
              reference :  ws_wp_nested_vp_write
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/nanostack/sal-stack-nanostack/source/6LoWPAN/ws/ws_management_api.o.
              reference :  DEVICE_MIN_SENS
              reference :  __aeabi_memcpy
              reference :  protocol_stack_interface_info_get_by_id
              reference :  strncpy
              reference :  ws_bootstrap_get_info
              reference :  ws_cfg_fhss_get
              reference :  ws_cfg_fhss_set
              reference :  ws_cfg_fhss_validate
              reference :  ws_cfg_gen_get
              reference :  ws_cfg_gen_set
              reference :  ws_cfg_gen_validate
              reference :  ws_cfg_network_size_get
              reference :  ws_cfg_network_size_set
              reference :  ws_cfg_network_size_validate
              reference :  ws_cfg_phy_get
              reference :  ws_cfg_phy_set
              reference :  ws_cfg_phy_validate
              reference :  ws_cfg_timing_get
              reference :  ws_cfg_timing_set
              reference :  ws_cfg_timing_validate
              definition:  ws_device_min_sens_set
              definition:  ws_management_channel_mask_get
              definition:  ws_management_channel_mask_set
              definition:  ws_management_channel_mask_validate
              definition:  ws_management_channel_plan_set
              definition:  ws_management_fhss_broadcast_channel_function_configure
              definition:  ws_management_fhss_broadcast_channel_function_get
              definition:  ws_management_fhss_broadcast_channel_function_validate
              definition:  ws_management_fhss_timing_configure
              definition:  ws_management_fhss_unicast_channel_function_configure
              definition:  ws_management_fhss_unicast_channel_function_get
              definition:  ws_management_fhss_unicast_channel_function_validate
              definition:  ws_management_network_name_get
              definition:  ws_management_network_name_set
              definition:  ws_management_network_name_validate
              definition:  ws_management_network_size_get
              definition:  ws_management_network_size_set
              definition:  ws_management_network_size_validate
              definition:  ws_management_node_init
              definition:  ws_management_regulatory_domain_get
              definition:  ws_management_regulatory_domain_set
              definition:  ws_management_regulatory_domain_validate
              definition:  ws_management_timing_parameters_get
              definition:  ws_management_timing_parameters_set
              definition:  ws_management_timing_parameters_validate
              definition:  ws_stack_info_get
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/nanostack/sal-stack-nanostack/source/6LoWPAN/ws/ws_mpx_header.o.
              reference :  common_read_16_bit_inverse
              reference :  common_write_16_bit_inverse
              definition:  ws_llc_mpx_header_frame_parse
              definition:  ws_llc_mpx_header_write
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/nanostack/sal-stack-nanostack/source/6LoWPAN/ws/ws_neighbor_class.o.
              reference :  DEVICE_MIN_SENS
              reference :  __aeabi_memclr4
              reference :  common_read_16_bit_inverse
              reference :  common_read_32_bit
              reference :  ns_dyn_mem_alloc
              reference :  ns_dyn_mem_free
              reference :  ws_active_channel_count
              reference :  ws_common_channel_number_calc
              reference :  ws_generate_channel_list
              definition:  ws_neighbor_class_alloc
              definition:  ws_neighbor_class_dealloc
              definition:  ws_neighbor_class_entry_get
              definition:  ws_neighbor_class_entry_index_get
              definition:  ws_neighbor_class_entry_remove
              definition:  ws_neighbor_class_neighbor_broadcast_schedule_set
              definition:  ws_neighbor_class_neighbor_broadcast_time_info_update
              definition:  ws_neighbor_class_neighbor_duplicate_packet_check
              definition:  ws_neighbor_class_neighbor_unicast_schedule_set
              definition:  ws_neighbor_class_neighbor_unicast_time_info_update
              definition:  ws_neighbor_class_rf_sensitivity_calculate
              definition:  ws_neighbor_class_rsl_from_dbm_calculate
              definition:  ws_neighbor_class_rsl_in_calculate
              definition:  ws_neighbor_class_rsl_out_calculate
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/nanostack/sal-stack-nanostack/source/6LoWPAN/ws/ws_pae_auth.o.
              reference :  __aeabi_memclr
              reference :  arm_nwk_mac_address_read
              reference :  auth_eap_tls_sec_prot_register
              reference :  auth_fwh_sec_prot_register
              reference :  auth_gkh_sec_prot_register
              reference :  auth_key_sec_prot_register
              reference :  eventOS_event_handler_create
              reference :  eventOS_event_send
              reference :  kmp_address_copy
              reference :  kmp_address_eui_64_get
              reference :  kmp_address_eui_64_set
              reference :  kmp_api_addr_set
              reference :  kmp_api_cb_register
              reference :  kmp_api_create
              reference :  kmp_api_create_request
              reference :  kmp_api_create_response
              reference :  kmp_api_data_get
              reference :  kmp_api_data_set
              reference :  kmp_api_delete
              reference :  kmp_api_sec_keys_set
              reference :  kmp_api_service_get
              reference :  kmp_api_start
              reference :  kmp_api_type_get
              reference :  kmp_service_cb_register
              reference :  kmp_service_create
              reference :  kmp_service_delete
              reference :  kmp_service_event_if_event
              reference :  kmp_service_event_if_register
              reference :  kmp_service_shared_comp_if_register
              reference :  kmp_service_timer_if_register
              reference :  kmp_service_timer_if_timeout
              reference :  kmp_socket_if_register
              reference :  kmp_socket_if_unregister
              reference :  mbed_trace_array
              reference :  mbed_tracef
              reference :  ns_dyn_mem_alloc
              reference :  ns_dyn_mem_free
              reference :  ns_list_add_to_end_
              reference :  ns_list_add_to_start_
              reference :  ns_list_get_next_
              reference :  ns_list_remove_
              reference :  protocol_core_monotonic_time
              reference :  radius_client_sec_prot_register
              reference :  radius_eap_tls_sec_prot_register
              reference :  randLIB_get_n_bytes_random
              reference :  sec_prot_keys_gtk_clear
              reference :  sec_prot_keys_gtk_get
              reference :  sec_prot_keys_gtk_insert_index_from_gtkl_get
              reference :  sec_prot_keys_gtk_install_index_get
              reference :  sec_prot_keys_gtk_install_order_first_index_get
              reference :  sec_prot_keys_gtk_install_order_last_index_get
              reference :  sec_prot_keys_gtk_install_order_second_index_get
              reference :  sec_prot_keys_gtk_is_set
              reference :  sec_prot_keys_gtk_lifetime_decrement
              reference :  sec_prot_keys_gtk_lifetime_get
              reference :  sec_prot_keys_gtk_set
              reference :  sec_prot_keys_gtk_status_active_get
              reference :  sec_prot_keys_gtk_status_active_set
              reference :  sec_prot_keys_gtk_status_all_fresh_set
              reference :  sec_prot_keys_gtk_valid_check
              reference :  sec_prot_keys_gtks_hash_generate
              reference :  sec_prot_keys_init
              reference :  sec_prot_keys_pmk_delete
              reference :  sec_prot_keys_ptk_delete
              reference :  sec_prot_keys_ptk_installed_gtk_hash_mismatch_check
              reference :  server_tls_sec_prot_register
              reference :  strcmp
              reference :  strcpy
              reference :  strlen
              definition:  ws_pae_auth_addresses_set
              definition:  ws_pae_auth_cb_register
              definition:  ws_pae_auth_delete
              definition:  ws_pae_auth_fast_timer
              definition:  ws_pae_auth_forced_gc
              definition:  ws_pae_auth_gtks_updated
              definition:  ws_pae_auth_init
              definition:  ws_pae_auth_node_access_revoke_start
              definition:  ws_pae_auth_node_keys_remove
              definition:  ws_pae_auth_node_limit_set
              definition:  ws_pae_auth_nw_info_set
              definition:  ws_pae_auth_nw_key_index_update
              definition:  ws_pae_auth_radius_address_set
              definition:  ws_pae_auth_slow_timer
              definition:  ws_pae_auth_start
              reference :  ws_pae_current_time_get
              reference :  ws_pae_key_storage_supp_delete
              reference :  ws_pae_key_storage_supp_read
              reference :  ws_pae_key_storage_timer
              reference :  ws_pae_lib_kmp_list_add
              reference :  ws_pae_lib_kmp_list_delete
              reference :  ws_pae_lib_kmp_list_entry_get
              reference :  ws_pae_lib_kmp_list_type_get
              reference :  ws_pae_lib_kmp_timer_start
              reference :  ws_pae_lib_kmp_timer_stop
              reference :  ws_pae_lib_shared_comp_list_add
              reference :  ws_pae_lib_shared_comp_list_free
              reference :  ws_pae_lib_shared_comp_list_init
              reference :  ws_pae_lib_shared_comp_list_remove
              reference :  ws_pae_lib_shared_comp_list_timeout
              reference :  ws_pae_lib_supp_list_active_limit_reached
              reference :  ws_pae_lib_supp_list_add
              reference :  ws_pae_lib_supp_list_delete
              reference :  ws_pae_lib_supp_list_entry_eui_64_get
              reference :  ws_pae_lib_supp_list_entry_retry_timer_get
              reference :  ws_pae_lib_supp_list_init
              reference :  ws_pae_lib_supp_list_kmp_count
              reference :  ws_pae_lib_supp_list_kmp_receive_check
              reference :  ws_pae_lib_supp_list_purge
              reference :  ws_pae_lib_supp_list_slow_timer_update
              reference :  ws_pae_lib_supp_list_timer_update
              reference :  ws_pae_lib_supp_timer_ticks_set
              reference :  ws_pae_timers_gtk_new_activation_time
              reference :  ws_pae_timers_gtk_new_install_required
              reference :  ws_pae_timers_gtk_revocation_lifetime_get
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/nanostack/sal-stack-nanostack/source/6LoWPAN/ws/ws_pae_controller.o.
              reference :  __aeabi_memclr4
              reference :  __aeabi_memcpy
              reference :  mbed_trace_array
              reference :  mbed_tracef
              reference :  mbedtls_sha256_finish_ret
              reference :  mbedtls_sha256_free
              reference :  mbedtls_sha256_init
              reference :  mbedtls_sha256_starts_ret
              reference :  mbedtls_sha256_update_ret
              reference :  memcmp
              reference :  ns_dyn_mem_alloc
              reference :  ns_dyn_mem_free
              reference :  ns_list_add_to_end_
              reference :  ns_list_get_next_
              reference :  ns_list_remove_
              definition:  pae_controller_config
              reference :  protocol_core_monotonic_time
              reference :  protocol_stack_interface_info_get_by_id
              reference :  sec_prot_certs_cert_chain_entry_len_get
              reference :  sec_prot_certs_cert_set
              reference :  sec_prot_certs_chain_entry_create
              reference :  sec_prot_certs_chain_entry_delete
              reference :  sec_prot_certs_chain_entry_init
              reference :  sec_prot_certs_chain_list_add
              reference :  sec_prot_certs_chain_list_delete
              reference :  sec_prot_certs_chain_list_entry_delete
              reference :  sec_prot_certs_chain_list_entry_find
              reference :  sec_prot_certs_delete
              reference :  sec_prot_certs_ext_certificate_validation_set
              reference :  sec_prot_certs_init
              reference :  sec_prot_certs_priv_key_set
              reference :  sec_prot_certs_revocat_list_entry_create
              reference :  sec_prot_certs_revocat_list_entry_delete
              reference :  sec_prot_certs_revocat_list_set
              reference :  sec_prot_certs_revocat_lists_add
              reference :  sec_prot_certs_revocat_lists_entry_delete
              reference :  sec_prot_certs_revocat_lists_entry_find
              reference :  sec_prot_keys_gtk_clear
              reference :  sec_prot_keys_gtk_count
              reference :  sec_prot_keys_gtk_get
              reference :  sec_prot_keys_gtk_hash_generate
              reference :  sec_prot_keys_gtk_install_order_first_index_get
              reference :  sec_prot_keys_gtk_install_order_last_lifetime_get
              reference :  sec_prot_keys_gtk_set
              reference :  sec_prot_keys_gtk_status_active_set
              reference :  sec_prot_keys_gtk_status_active_to_fresh_set
              reference :  sec_prot_keys_gtks_are_updated
              reference :  sec_prot_keys_gtks_init
              reference :  sec_prot_keys_gtks_updated_reset
              reference :  strcmp
              reference :  strlen
              reference :  strncpy
              reference :  ws_pae_auth_addresses_set
              reference :  ws_pae_auth_cb_register
              reference :  ws_pae_auth_delete
              reference :  ws_pae_auth_fast_timer
              reference :  ws_pae_auth_forced_gc
              reference :  ws_pae_auth_gtks_updated
              reference :  ws_pae_auth_init
              reference :  ws_pae_auth_node_access_revoke_start
              reference :  ws_pae_auth_node_keys_remove
              reference :  ws_pae_auth_node_limit_set
              reference :  ws_pae_auth_nw_info_set
              reference :  ws_pae_auth_nw_key_index_update
              reference :  ws_pae_auth_radius_address_set
              reference :  ws_pae_auth_slow_timer
              reference :  ws_pae_auth_start
              definition:  ws_pae_controller_active_key_update
              definition:  ws_pae_controller_auth_cb_register
              definition:  ws_pae_controller_auth_init
              definition:  ws_pae_controller_authenticate
              definition:  ws_pae_controller_authenticator_start
              definition:  ws_pae_controller_bootstrap_done
              definition:  ws_pae_controller_border_router_addr_read
              definition:  ws_pae_controller_border_router_addr_write
              definition:  ws_pae_controller_cb_register
              definition:  ws_pae_controller_certificate_chain_set
              definition:  ws_pae_controller_certificate_revocation_list_add
              definition:  ws_pae_controller_certificate_revocation_list_remove
              definition:  ws_pae_controller_configure
              definition:  ws_pae_controller_delete
              definition:  ws_pae_controller_ext_certificate_validation_set
              definition:  ws_pae_controller_fast_timer
              definition:  ws_pae_controller_forced_gc
              definition:  ws_pae_controller_gtk_hash_ptr_get
              definition:  ws_pae_controller_gtk_hash_update
              definition:  ws_pae_controller_gtk_update
              definition:  ws_pae_controller_init
              definition:  ws_pae_controller_next_gtk_update
              definition:  ws_pae_controller_node_access_revoke_start
              definition:  ws_pae_controller_node_keys_remove
              definition:  ws_pae_controller_node_limit_set
              definition:  ws_pae_controller_nvm_tlv_get
              definition:  ws_pae_controller_nw_info_set
              definition:  ws_pae_controller_nw_key_index_update
              definition:  ws_pae_controller_nw_key_valid
              definition:  ws_pae_controller_nw_keys_remove
              definition:  ws_pae_controller_own_certificate_add
              definition:  ws_pae_controller_own_certificates_remove
              definition:  ws_pae_controller_radius_address_get
              definition:  ws_pae_controller_radius_address_set
              definition:  ws_pae_controller_radius_config_get
              definition:  ws_pae_controller_radius_shared_secret_get
              definition:  ws_pae_controller_radius_shared_secret_set
              definition:  ws_pae_controller_radius_timing_get
              definition:  ws_pae_controller_radius_timing_set
              definition:  ws_pae_controller_radius_timing_validate
              definition:  ws_pae_controller_set_target
              definition:  ws_pae_controller_slow_timer
              definition:  ws_pae_controller_stop
              definition:  ws_pae_controller_supp_init
              definition:  ws_pae_controller_trusted_certificate_add
              definition:  ws_pae_controller_trusted_certificate_remove
              definition:  ws_pae_controller_trusted_certificates_remove
              reference :  ws_pae_current_time_set
              reference :  ws_pae_key_storage_delete
              reference :  ws_pae_key_storage_init
              reference :  ws_pae_key_storage_read
              reference :  ws_pae_key_storage_remove
              reference :  ws_pae_key_storage_store
              reference :  ws_pae_nvm_store_frame_counter_tlv_create
              reference :  ws_pae_nvm_store_frame_counter_tlv_read
              reference :  ws_pae_nvm_store_generic_tlv_allocate_and_create
              reference :  ws_pae_nvm_store_generic_tlv_create
              reference :  ws_pae_nvm_store_generic_tlv_free
              reference :  ws_pae_nvm_store_nw_info_tlv_create
              reference :  ws_pae_nvm_store_nw_info_tlv_read
              reference :  ws_pae_nvm_store_tlv_file_read
              reference :  ws_pae_nvm_store_tlv_file_write
              reference :  ws_pae_supp_authenticate
              reference :  ws_pae_supp_border_router_addr_read
              reference :  ws_pae_supp_border_router_addr_write
              reference :  ws_pae_supp_cb_register
              reference :  ws_pae_supp_delete
              reference :  ws_pae_supp_eapol_target_remove
              reference :  ws_pae_supp_fast_timer
              reference :  ws_pae_supp_gtk_hash_update
              reference :  ws_pae_supp_gtks_set
              reference :  ws_pae_supp_init
              reference :  ws_pae_supp_nw_info_set
              reference :  ws_pae_supp_nw_key_index_update
              reference :  ws_pae_supp_nw_key_valid
              reference :  ws_pae_supp_slow_timer
              reference :  ws_pae_timers_settings_init
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/nanostack/sal-stack-nanostack/source/6LoWPAN/ws/ws_pae_key_storage.o.
              reference :  __aeabi_memclr4
              reference :  kmp_address_init
              reference :  mbed_trace_array
              reference :  mbed_tracef
              reference :  memcmp
              reference :  ns_dyn_mem_alloc
              reference :  ns_dyn_mem_free
              reference :  ns_dyn_mem_temporary_alloc
              reference :  ns_list_add_to_end_
              reference :  ns_list_get_next_
              reference :  ns_list_remove_
              reference :  sec_prot_keys_init
              reference :  sec_prot_keys_pmk_delete
              reference :  sec_prot_keys_ptk_delete
              reference :  ws_pae_current_time_get
              reference :  ws_pae_current_time_update
              definition:  ws_pae_key_storage_delete
              definition:  ws_pae_key_storage_init
              definition:  ws_pae_key_storage_memory_set
              definition:  ws_pae_key_storage_read
              definition:  ws_pae_key_storage_remove
              definition:  ws_pae_key_storage_settings_set
              definition:  ws_pae_key_storage_store
              definition:  ws_pae_key_storage_storing_interval_get
              definition:  ws_pae_key_storage_supp_delete
              definition:  ws_pae_key_storage_supp_read
              definition:  ws_pae_key_storage_supp_write
              definition:  ws_pae_key_storage_timer
              reference :  ws_pae_lib_supp_init
              reference :  ws_pae_nvm_store_generic_tlv_allocate_and_create
              reference :  ws_pae_nvm_store_generic_tlv_free
              reference :  ws_pae_nvm_store_key_storage_index_tlv_create
              reference :  ws_pae_nvm_store_key_storage_index_tlv_read
              reference :  ws_pae_nvm_store_key_storage_tlv_create
              reference :  ws_pae_nvm_store_key_storage_tlv_read
              reference :  ws_pae_nvm_store_tlv_file_read
              reference :  ws_pae_nvm_store_tlv_file_remove
              reference :  ws_pae_nvm_store_tlv_file_write
              reference :  ws_pae_time_diff_calc
              reference :  ws_pae_time_from_short_convert
              reference :  ws_pae_time_from_short_time_compare
              reference :  ws_pae_time_to_short_convert
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/nanostack/sal-stack-nanostack/source/6LoWPAN/ws/ws_pae_lib.o.
              reference :  __aeabi_memclr8
              reference :  kmp_address_copy
              reference :  kmp_address_eui_64_get
              reference :  kmp_api_delete
              reference :  kmp_api_instance_id_get
              reference :  kmp_api_receive_check
              reference :  kmp_api_receive_disable
              reference :  kmp_api_type_get
              reference :  mbed_trace_array
              reference :  mbed_tracef
              reference :  memcmp
              reference :  ns_dyn_mem_alloc
              reference :  ns_dyn_mem_free
              reference :  ns_dyn_mem_temporary_alloc
              reference :  ns_list_add_to_end_
              reference :  ns_list_add_to_start_
              reference :  ns_list_count_
              reference :  ns_list_get_last_
              reference :  ns_list_get_next_
              reference :  ns_list_init_
              reference :  ns_list_remove_
              reference :  protocol_core_monotonic_time
              reference :  sec_prot_keys_pmk_lifetime_decrement
              reference :  sec_prot_keys_ptk_lifetime_decrement
              reference :  ws_pae_key_storage_storing_interval_get
              reference :  ws_pae_key_storage_supp_write
              definition:  ws_pae_lib_kmp_list_add
              definition:  ws_pae_lib_kmp_list_count
              definition:  ws_pae_lib_kmp_list_delete
              definition:  ws_pae_lib_kmp_list_empty
              definition:  ws_pae_lib_kmp_list_entry_get
              definition:  ws_pae_lib_kmp_list_free
              definition:  ws_pae_lib_kmp_list_init
              definition:  ws_pae_lib_kmp_list_instance_id_get
              definition:  ws_pae_lib_kmp_list_type_get
              definition:  ws_pae_lib_kmp_timer_start
              definition:  ws_pae_lib_kmp_timer_stop
              definition:  ws_pae_lib_kmp_timer_update
              definition:  ws_pae_lib_shared_comp_list_add
              definition:  ws_pae_lib_shared_comp_list_free
              definition:  ws_pae_lib_shared_comp_list_init
              definition:  ws_pae_lib_shared_comp_list_remove
              definition:  ws_pae_lib_shared_comp_list_timeout
              definition:  ws_pae_lib_supp_delete
              definition:  ws_pae_lib_supp_init
              definition:  ws_pae_lib_supp_list_active_limit_reached
              definition:  ws_pae_lib_supp_list_add
              definition:  ws_pae_lib_supp_list_delete
              definition:  ws_pae_lib_supp_list_entry_eui_64_get
              definition:  ws_pae_lib_supp_list_entry_retry_timer_get
              definition:  ws_pae_lib_supp_list_init
              definition:  ws_pae_lib_supp_list_kmp_count
              definition:  ws_pae_lib_supp_list_kmp_receive_check
              definition:  ws_pae_lib_supp_list_purge
              definition:  ws_pae_lib_supp_list_remove
              definition:  ws_pae_lib_supp_list_slow_timer_update
              definition:  ws_pae_lib_supp_list_timer_update
              definition:  ws_pae_lib_supp_list_to_active
              definition:  ws_pae_lib_supp_list_to_inactive
              definition:  ws_pae_lib_supp_timer_is_running
              definition:  ws_pae_lib_supp_timer_ticks_add
              definition:  ws_pae_lib_supp_timer_ticks_set
              definition:  ws_pae_lib_supp_timer_update
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/nanostack/sal-stack-nanostack/source/6LoWPAN/ws/ws_pae_nvm_data.o.
              reference :  __aeabi_memclr
              reference :  __aeabi_memcpy
              reference :  common_read_16_bit
              reference :  common_read_32_bit
              reference :  common_read_64_bit
              reference :  common_write_16_bit
              reference :  common_write_32_bit
              reference :  common_write_64_bit
              reference :  ns_dyn_mem_alloc
              reference :  ns_dyn_mem_free
              reference :  sec_prot_keys_gtk_count
              reference :  sec_prot_keys_gtk_expirytime_set
              reference :  sec_prot_keys_gtk_exptime_from_lifetime_get
              reference :  sec_prot_keys_gtk_get
              reference :  sec_prot_keys_gtk_install_order_get
              reference :  sec_prot_keys_gtk_install_order_set
              reference :  sec_prot_keys_gtk_is_set
              reference :  sec_prot_keys_gtk_set
              reference :  sec_prot_keys_gtk_status_get
              reference :  sec_prot_keys_gtk_status_set
              reference :  sec_prot_keys_gtks_updated_reset
              reference :  sec_prot_keys_pmk_get
              reference :  sec_prot_keys_pmk_lifetime_get
              reference :  sec_prot_keys_pmk_replay_cnt_get
              reference :  sec_prot_keys_pmk_replay_cnt_set
              reference :  sec_prot_keys_pmk_write
              reference :  sec_prot_keys_ptk_eui_64_get
              reference :  sec_prot_keys_ptk_eui_64_write
              reference :  sec_prot_keys_ptk_get
              reference :  sec_prot_keys_ptk_lifetime_get
              reference :  sec_prot_keys_ptk_write
              reference :  sec_prot_keys_updated_reset
              reference :  strlen
              reference :  strncpy
              reference :  ws_pae_current_time_get
              definition:  ws_pae_nvm_store_frame_counter_tlv_create
              definition:  ws_pae_nvm_store_frame_counter_tlv_read
              definition:  ws_pae_nvm_store_generic_tlv_allocate_and_create
              definition:  ws_pae_nvm_store_generic_tlv_create
              definition:  ws_pae_nvm_store_generic_tlv_free
              definition:  ws_pae_nvm_store_key_storage_index_tlv_create
              definition:  ws_pae_nvm_store_key_storage_index_tlv_read
              definition:  ws_pae_nvm_store_key_storage_tlv_create
              definition:  ws_pae_nvm_store_key_storage_tlv_read
              definition:  ws_pae_nvm_store_keys_tlv_create
              definition:  ws_pae_nvm_store_keys_tlv_read
              definition:  ws_pae_nvm_store_nw_info_tlv_create
              definition:  ws_pae_nvm_store_nw_info_tlv_read
              reference :  ws_pae_time_diff_calc
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/nanostack/sal-stack-nanostack/source/6LoWPAN/ws/ws_pae_nvm_store.o.
              reference :  mbed_tracef
              reference :  ns_fclose
              reference :  ns_file_system_get_root_path
              reference :  ns_fopen
              reference :  ns_fread
              reference :  ns_fremove
              reference :  ns_fwrite
              reference :  strcat
              reference :  strcpy
              reference :  strlen
              definition:  ws_pae_nvm_store_tlv_file_read
              definition:  ws_pae_nvm_store_tlv_file_remove
              definition:  ws_pae_nvm_store_tlv_file_write
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/nanostack/sal-stack-nanostack/source/6LoWPAN/ws/ws_pae_supp.o.
              reference :  __aeabi_memcpy
              reference :  __aeabi_memcpy8
              reference :  arm_nwk_mac_address_read
              reference :  client_tls_sec_prot_register
              reference :  eventOS_event_handler_create
              reference :  eventOS_event_send
              reference :  kmp_address_copy
              reference :  kmp_address_eui_64_get
              reference :  kmp_address_eui_64_set
              reference :  kmp_address_init
              reference :  kmp_api_addr_set
              reference :  kmp_api_cb_register
              reference :  kmp_api_create
              reference :  kmp_api_create_request
              reference :  kmp_api_create_response
              reference :  kmp_api_data_get
              reference :  kmp_api_data_set
              reference :  kmp_api_delete
              reference :  kmp_api_receive_disable
              reference :  kmp_api_sec_keys_set
              reference :  kmp_api_service_get
              reference :  kmp_api_start
              reference :  kmp_api_type_get
              reference :  kmp_eapol_pdu_if_receive
              reference :  kmp_eapol_pdu_if_register
              reference :  kmp_eapol_pdu_if_unregister
              reference :  kmp_service_cb_register
              reference :  kmp_service_create
              reference :  kmp_service_delete
              reference :  kmp_service_event_if_event
              reference :  kmp_service_event_if_register
              reference :  kmp_service_timer_if_register
              reference :  kmp_service_timer_if_timeout
              reference :  mbed_trace_array
              reference :  mbed_tracef
              reference :  memcmp
              reference :  ns_dyn_mem_alloc
              reference :  ns_dyn_mem_free
              reference :  ns_list_add_to_end_
              reference :  ns_list_get_next_
              reference :  ns_list_remove_
              reference :  randLIB_get_random_in_range
              reference :  rpl_control_enumerate_instances
              reference :  rpl_control_preferred_parent_addr
              reference :  rpl_control_read_dodag_info
              reference :  sec_prot_keys_are_updated
              reference :  sec_prot_keys_gtk_count
              reference :  sec_prot_keys_gtk_is_set
              reference :  sec_prot_keys_gtk_lifetime_decrement
              reference :  sec_prot_keys_gtk_status_active_set
              reference :  sec_prot_keys_gtks_hash_update
              reference :  sec_prot_keys_gtks_init
              reference :  sec_prot_keys_gtks_updated_set
              reference :  sec_prot_keys_init
              reference :  sec_prot_keys_pmk_delete
              reference :  sec_prot_keys_pmk_get
              reference :  sec_prot_keys_ptk_delete
              reference :  sec_prot_keys_ptk_eui_64_delete
              reference :  sec_prot_keys_ptk_eui_64_get
              reference :  sec_prot_keys_ptk_get
              reference :  sec_prot_keys_updated_reset
              reference :  strcmp
              reference :  strlen
              reference :  supp_eap_tls_sec_prot_register
              reference :  supp_fwh_sec_prot_register
              reference :  supp_gkh_sec_prot_register
              reference :  supp_key_sec_prot_register
              reference :  trickle_running
              reference :  trickle_start
              reference :  trickle_timer
              reference :  ws_eapol_pdu_cb_register
              reference :  ws_eapol_pdu_cb_unregister
              reference :  ws_pae_controller_nvm_tlv_get
              reference :  ws_pae_current_time_get
              reference :  ws_pae_lib_kmp_list_add
              reference :  ws_pae_lib_kmp_list_count
              reference :  ws_pae_lib_kmp_list_delete
              reference :  ws_pae_lib_kmp_list_instance_id_get
              reference :  ws_pae_lib_kmp_list_type_get
              reference :  ws_pae_lib_kmp_timer_start
              reference :  ws_pae_lib_kmp_timer_stop
              reference :  ws_pae_lib_supp_delete
              reference :  ws_pae_lib_supp_init
              reference :  ws_pae_lib_supp_timer_is_running
              reference :  ws_pae_lib_supp_timer_ticks_add
              reference :  ws_pae_lib_supp_timer_ticks_set
              reference :  ws_pae_lib_supp_timer_update
              reference :  ws_pae_nvm_store_generic_tlv_create
              reference :  ws_pae_nvm_store_keys_tlv_create
              reference :  ws_pae_nvm_store_keys_tlv_read
              reference :  ws_pae_nvm_store_tlv_file_read
              reference :  ws_pae_nvm_store_tlv_file_write
              definition:  ws_pae_supp_authenticate
              definition:  ws_pae_supp_border_router_addr_read
              definition:  ws_pae_supp_border_router_addr_write
              definition:  ws_pae_supp_cb_register
              definition:  ws_pae_supp_delete
              definition:  ws_pae_supp_eapol_target_remove
              definition:  ws_pae_supp_fast_timer
              definition:  ws_pae_supp_gtk_hash_update
              definition:  ws_pae_supp_gtks_set
              definition:  ws_pae_supp_init
              definition:  ws_pae_supp_nw_info_set
              definition:  ws_pae_supp_nw_key_index_update
              definition:  ws_pae_supp_nw_key_valid
              definition:  ws_pae_supp_slow_timer
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/nanostack/sal-stack-nanostack/source/6LoWPAN/ws/ws_pae_time.o.
              reference :  mbed_tracef
              definition:  ns_time_api_system_time_callback_set
              definition:  ws_pae_current_time_get
              definition:  ws_pae_current_time_set
              definition:  ws_pae_current_time_update
              definition:  ws_pae_time_diff_calc
              definition:  ws_pae_time_from_short_convert
              definition:  ws_pae_time_from_short_time_compare
              definition:  ws_pae_time_to_short_convert
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/nanostack/sal-stack-nanostack/source/6LoWPAN/ws/ws_pae_timers.o.
              reference :  mbed_tracef
              definition:  ws_pae_timers_gtk_new_activation_time
              definition:  ws_pae_timers_gtk_new_install_required
              definition:  ws_pae_timers_gtk_revocation_lifetime_get
              definition:  ws_pae_timers_gtk_time_settings_set
              definition:  ws_pae_timers_lifetime_set
              definition:  ws_pae_timers_settings_init
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/nanostack/sal-stack-nanostack/source/6LoWPAN/ws/ws_stats.o.
              reference :  protocol_stack_interface_info_get_by_id
              definition:  ws_statistics_start
              definition:  ws_statistics_stop
              definition:  ws_stats_update
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/nanostack/sal-stack-nanostack/source/6LoWPAN/ws/ws_test_api.o.
              reference :  protocol_stack_interface_info_get_by_id
              reference :  test_6lowpan_fragmentation_mtu_size_override
              reference :  test_max_child_count_override
              reference :  test_pan_size_override
              reference :  ws_cfg_sec_timer_get
              reference :  ws_cfg_sec_timer_set
              reference :  ws_pae_controller_active_key_update
              reference :  ws_pae_controller_gtk_update
              reference :  ws_pae_controller_next_gtk_update
              definition:  ws_test_6lowpan_fragmentation_mtu_size_set
              definition:  ws_test_active_key_set
              definition:  ws_test_gtk_set
              definition:  ws_test_gtk_time_settings_set
              definition:  ws_test_key_lifetime_set
              definition:  ws_test_max_child_count_set
              definition:  ws_test_next_gtk_set
              definition:  ws_test_pan_size_set
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/nanostack/sal-stack-nanostack/source/BorderRouter/border_router.o.
              reference :  ADDR_REALM_LOCAL_ALL_ROUTERS
              reference :  ADDR_SHORT_ADR_SUFFIC
              reference :  addr_add_group
              reference :  addr_add_router_groups
              reference :  addr_interface_set_ll64
              reference :  arm_6lowpan_security_init_ifup
              definition:  arm_border_router_proxy_state_update
              definition:  arm_border_router_ready
              definition:  arm_nwk_6lowpan_border_route_nd_default_prefix_timeout_set
              definition:  arm_nwk_6lowpan_border_router_configure_push
              definition:  arm_nwk_6lowpan_border_router_context_parameter_update
              definition:  arm_nwk_6lowpan_border_router_context_remove_by_id
              definition:  arm_nwk_6lowpan_border_router_context_update
              definition:  arm_nwk_6lowpan_border_router_init
              definition:  arm_nwk_6lowpan_border_router_nd_context_load
              definition:  arm_nwk_6lowpan_borderrouter_data_free
              definition:  arm_nwk_6lowpan_borderrouter_init
              reference :  beacon_join_priority_update
              reference :  blacklist_clear
              reference :  bootsrap_next_state_kick
              reference :  bootstrap_timer_handle
              definition:  border_router_start
              reference :  common_count_bits
              reference :  common_read_16_bit
              reference :  common_write_16_bit
              reference :  common_write_32_bit
              reference :  icmp_nd_border_router_release
              reference :  icmp_nd_router_object_reset
              reference :  icmp_nd_router_prefix_proxy_update
              reference :  icmp_nd_router_prefix_update
              reference :  icmpv6_prefix_list_free
              reference :  icmpv6_recv_ra_routes
              reference :  icmpv6_restart_router_advertisements
              reference :  ipv6_prefix_on_link_remove
              reference :  ipv6_prefix_on_link_update
              reference :  ipv6_route_choose_next_hop
              reference :  lowpan_adaptation_interface_reset
              reference :  lowpan_context_get_by_id
              reference :  lowpan_context_list_free
              reference :  lowpan_context_update
              reference :  mac_helper_beacon_payload_reallocate
              reference :  mac_helper_beacon_payload_register
              reference :  mac_helper_default_security_level_set
              reference :  mac_helper_link_frame_counter_set
              reference :  mac_helper_mac16_address_set
              reference :  mac_helper_mac_mlme_max_retry_set
              reference :  mac_helper_panid_set
              reference :  mac_helper_pib_boolean_set
              reference :  mac_neighbor_table_neighbor_list_clean
              reference :  mbed_tracef
              reference :  mle_service_security_get_frame_counter
              reference :  mle_service_security_set_frame_counter
              definition:  nd_border_router_setup_refresh
              reference :  nd_proxy_downstream_interface_register
              reference :  nd_proxy_downstream_interface_unregister
              reference :  nd_router_base_init
              reference :  nd_set_br
              reference :  neighbor_cache_flush
              reference :  net_load_balance_internal_state_activate
              reference :  ns_dyn_mem_alloc
              reference :  ns_dyn_mem_free
              reference :  ns_dyn_mem_temporary_alloc
              reference :  ns_list_count_
              reference :  ns_list_get_next_
              reference :  ns_list_init_
              reference :  ns_list_remove_
              reference :  nwk_bootsrap_state_update
              reference :  pana_server_key_material_load
              reference :  protocol_6lowpan_interface_common_init
              reference :  protocol_6lowpan_router_synch_to_new_router
              reference :  protocol_6lowpan_rpl_domain
              reference :  protocol_6lowpan_set_ll16
              reference :  protocol_core_interface_info_reset
              reference :  protocol_stack_interface_info_get
              reference :  protocol_stack_interface_info_get_by_id
              reference :  protocol_timer_start
              reference :  reassembly_interface_reset
              reference :  rpl_control_remove_domain_from_interface
              reference :  rpl_control_set_domain_on_interface
              reference :  thread_interface_up
              reference :  whiteboard_init
              reference :  whiteboard_interface_register
              reference :  whiteboard_interface_unregister_all_address
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/nanostack/sal-stack-nanostack/source/Common_Protocols/icmpv6.o.
              reference :  ADDR_LINK_LOCAL_ALL_NODES
              reference :  ADDR_LINK_LOCAL_ALL_ROUTERS
              reference :  ADDR_LINK_LOCAL_PREFIX
              reference :  ADDR_MULTICAST_SOLICITED
              reference :  ADDR_SHORT_ADR_SUFFIC
              reference :  ADDR_UNSPECIFIED
              definition:  ack_receive_cb
              definition:  ack_remove_neighbour_cb
              reference :  addr_add
              reference :  addr_cb
              reference :  addr_duplicate_detected
              reference :  addr_generate_opaque_iid
              reference :  addr_get_entry
              reference :  addr_interface_address_compare
              reference :  addr_interface_get_ll_address
              reference :  addr_interface_select_source
              reference :  addr_is_assigned_to_interface
              reference :  addr_is_ipv6_link_local
              reference :  addr_is_tentative_for_interface
              reference :  addr_lifetime_update
              reference :  addr_opaque_iid_key_is_set
              reference :  addr_select_source
              reference :  addr_select_with_prefix
              reference :  addr_set_non_preferred
              reference :  bitsequal
              reference :  buffer_corrupt_check
              reference :  buffer_free
              reference :  buffer_get
              reference :  buffer_headroom
              reference :  buffer_ipv6_fcf
              reference :  buffer_turnaround
              reference :  common_read_16_bit
              reference :  common_read_32_bit
              reference :  common_write_16_bit
              reference :  common_write_32_bit
              definition:  icmpv6_build_dad
              definition:  icmpv6_build_echo_req
              definition:  icmpv6_build_na
              definition:  icmpv6_build_ns
              definition:  icmpv6_build_rs
              definition:  icmpv6_down
              definition:  icmpv6_error
              definition:  icmpv6_find_option
              definition:  icmpv6_find_option_in_buffer
              definition:  icmpv6_options_well_formed
              definition:  icmpv6_options_well_formed_in_buffer
              definition:  icmpv6_packet_too_big_handler
              definition:  icmpv6_recv_ra_prefixes
              definition:  icmpv6_recv_ra_routes
              reference :  icmpv6_rs_handler
              definition:  icmpv6_slaac_address_add
              definition:  icmpv6_slaac_prefix_register_trig
              definition:  icmpv6_slaac_prefix_update
              definition:  icmpv6_up
              definition:  icmpv6_write_icmp_lla
              definition:  icmpv6_write_mtu_option
              definition:  icmpv6_write_prefix_option
              reference :  ipv6_buffer_route
              reference :  ipv6_buffer_route_to
              reference :  ipv6_destination_lookup_or_create
              reference :  ipv6_destination_redirect
              reference :  ipv6_interface_slaac_handler
              reference :  ipv6_max_unfragmented_payload
              reference :  ipv6_neighbour_lookup
              reference :  ipv6_neighbour_reachability_confirmation
              reference :  ipv6_neighbour_update_from_na
              reference :  ipv6_neighbour_update_unsolicited
              reference :  ipv6_route_add
              reference :  ipv6_route_delete
              reference :  ipv6_route_table_remove_info
              reference :  mbed_trace_array
              reference :  mbed_trace_ipv6
              reference :  mbed_trace_ipv6_prefix
              reference :  mbed_tracef
              reference :  memcmp
              reference :  memswap
              reference :  mld_query_handler
              reference :  mld_report_handler
              reference :  mpl_control_handler
              reference :  nd_dac_handler
              reference :  nd_dar_parse
              reference :  nd_ns_aro_handler
              reference :  nd_proxy_enabled_for_downstream
              reference :  nd_proxy_target_address_validation
              reference :  nd_ra_process_abro
              reference :  nd_ra_process_lowpan_context_option
              reference :  net_dns_server_address_set
              reference :  net_dns_server_search_list_set
              reference :  ns_list_get_next_
              reference :  protocol_6lowpan_interface_compare_cordinator_netid
              reference :  protocol_push
              reference :  protocol_stack_interface_set_reachable_time
              reference :  protocol_stats_update
              reference :  randLIB_get_random_in_range
              reference :  rpl_control_address_register_done
              reference :  rpl_control_handler
              reference :  rpl_control_source_route_error_handler
              reference :  rpl_data_get_srh_last_address
              reference :  ws_common_aro_failure
              reference :  ws_common_negative_aro_mark
              reference :  ws_common_neighbor_remove
              reference :  ws_common_neighbor_update
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/nanostack/sal-stack-nanostack/source/Common_Protocols/icmpv6_prefix.o.
              reference :  bitcopy0
              reference :  bitsequal
              definition:  icmpv6_prefix_add
              definition:  icmpv6_prefix_compare
              definition:  icmpv6_prefix_list_free
              reference :  ns_dyn_mem_alloc
              reference :  ns_dyn_mem_free
              reference :  ns_list_add_to_end_
              reference :  ns_list_get_next_
              reference :  ns_list_remove_
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/nanostack/sal-stack-nanostack/source/Common_Protocols/icmpv6_radv.o.
              reference :  ADDR_LINK_LOCAL_ALL_NODES
              reference :  ADDR_UNSPECIFIED
              reference :  addr_ipv6_equal
              reference :  buffer_free
              reference :  icmpv6_find_option_in_buffer
              reference :  icmpv6_options_well_formed_in_buffer
              definition:  icmpv6_queue_ra
              definition:  icmpv6_radv_init
              definition:  icmpv6_radv_timer
              definition:  icmpv6_restart_router_advertisements
              definition:  icmpv6_rs_handler
              definition:  icmpv6_stop_router_advertisements
              definition:  icmpv6_trigger_ra_from_rs
              definition:  icmpv6_unqueue_ra
              reference :  ipv6_nd_ra_advert
              reference :  ipv6_neighbour_lookup
              reference :  ipv6_neighbour_update_unsolicited
              reference :  ipv6_router_gone
              reference :  memcmp
              reference :  nd_ra_build_by_abro
              reference :  nd_ra_timing
              reference :  nd_trigger_ras_from_rs
              reference :  ns_dyn_mem_alloc
              reference :  ns_dyn_mem_free
              reference :  ns_list_add_before_
              reference :  ns_list_add_to_end_
              reference :  ns_list_get_next_
              reference :  ns_list_remove_
              reference :  protocol_core_monotonic_time
              reference :  randLIB_get_random_in_range
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/nanostack/sal-stack-nanostack/source/Common_Protocols/ipv6.o.
              reference :  ADDR_LOOPBACK
              reference :  ADDR_UNSPECIFIED
              reference :  addr_am_group_member_on_interface
              reference :  addr_interface_address_compare
              reference :  addr_interface_select_source
              reference :  addr_ipv6_scope
              reference :  addr_multicast_fwd_check
              reference :  addr_select_source
              reference :  buffer_clone
              reference :  buffer_corrupt_check
              reference :  buffer_free
              reference :  buffer_headroom
              reference :  buffer_note_predecessor
              reference :  buffer_socket_set
              reference :  common_read_16_bit
              reference :  common_read_24_bit
              reference :  common_write_16_bit
              reference :  common_write_32_bit
              reference :  icmpv6_error
              definition:  ipv6_buffer_route
              definition:  ipv6_buffer_route_to
              reference :  ipv6_destination_lookup_or_create
              definition:  ipv6_down
              reference :  ipv6_flow_2tuple_flow
              reference :  ipv6_flow_5tuple
              reference :  ipv6_flow_auto_label
              definition:  ipv6_forwarding_down
              definition:  ipv6_forwarding_up
              reference :  ipv6_frag_down
              reference :  ipv6_frag_up
              definition:  ipv6_header_size_required
              definition:  ipv6_max_unfragmented_payload
              definition:  ipv6_mtu
              reference :  ipv6_neighbour_lookup_or_create
              reference :  ipv6_route_choose_next_hop
              definition:  ipv6_set_exthdr_provider
              definition:  ipv6_transmit_multicast_on_interface
              reference :  mbed_trace_ipv6
              reference :  mbed_tracef
              reference :  memcmp
              reference :  mpl_forwarder_process_message
              reference :  mpl_hbh_len_check
              reference :  mpl_process_hbh
              reference :  ns_dyn_mem_free
              reference :  ns_dyn_mem_temporary_alloc
              reference :  ns_list_get_next_
              reference :  protocol_interface_info_list
              reference :  protocol_push
              reference :  protocol_stack_interface_info_get_by_id
              reference :  protocol_stats_update
              reference :  rpl_data_forwarding_error
              reference :  rpl_data_get_route_predicate
              reference :  rpl_data_is_rpl_route
              reference :  rpl_data_process_hbh
              reference :  rpl_data_process_routing_header
              reference :  rpl_data_remember_outer
              reference :  socket_lookup_ipv6
              reference :  socket_tx_buffer_event_and_free
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/nanostack/sal-stack-nanostack/source/Common_Protocols/ipv6_flow.o.
              reference :  fnv_hash_1a_32_reverse_block
              reference :  fnv_hash_1a_32_reverse_block_update
              definition:  ipv6_flow_2tuple_flow
              definition:  ipv6_flow_5tuple
              definition:  ipv6_flow_auto_label
              definition:  ipv6_flow_random
              reference :  randLIB_get_32bit
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/nanostack/sal-stack-nanostack/source/Common_Protocols/ipv6_fragmentation.o.
              reference :  __aeabi_memcpy
              reference :  __aeabi_memmove
              reference :  addr_ipv6_equal
              reference :  buffer_copy_metadata
              reference :  buffer_corrupt_check
              reference :  buffer_free
              reference :  buffer_get
              reference :  buffer_socket_set
              reference :  common_read_16_bit
              reference :  common_read_32_bit
              reference :  common_write_16_bit
              reference :  common_write_32_bit
              reference :  icmpv6_error
              reference :  ipv6_destination_lookup_or_create
              definition:  ipv6_frag_down
              definition:  ipv6_frag_set_mru
              definition:  ipv6_frag_timer
              definition:  ipv6_frag_up
              reference :  ipv6_mtu
              reference :  mbed_tracef
              reference :  ns_dyn_mem_free
              reference :  ns_dyn_mem_temporary_alloc
              reference :  ns_list_add_to_start_
              reference :  ns_list_get_last_
              reference :  ns_list_get_next_
              reference :  ns_list_remove_
              reference :  protocol_push
              reference :  protocol_stats_update
              reference :  socket_tx_buffer_event_and_free
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/nanostack/sal-stack-nanostack/source/Common_Protocols/ipv6_resolution.o.
              reference :  __aeabi_memcpy
              reference :  addr_is_ipv6_link_local
              reference :  addr_len_from_type
              reference :  buffer_free
              reference :  icmpv6_build_ns
              reference :  icmpv6_error
              reference :  ipv6_buffer_route
              definition:  ipv6_interface_resolution_failed
              definition:  ipv6_interface_resolve_new
              definition:  ipv6_interface_resolve_send_ns
              definition:  ipv6_map_ip_to_ll
              definition:  ipv6_map_ip_to_ll_and_call_ll_addr_handler
              definition:  ipv6_map_ll_to_ip_link_local
              definition:  ipv6_neighbour_cache_by_interface_id
              reference :  ipv6_neighbour_ll_addr_match
              reference :  ipv6_neighbour_lookup
              reference :  ipv6_neighbour_lookup_or_create
              reference :  ipv6_neighbour_set_state
              reference :  ipv6_neighbour_update_from_na
              reference :  ipv6_neighbour_used
              definition:  ipv6_send_queued
              reference :  mbed_trace_ipv6
              reference :  mbed_tracef
              reference :  ns_list_add_to_end_
              reference :  ns_list_count_
              reference :  ns_list_get_next_
              reference :  ns_list_remove_
              reference :  protocol_push
              reference :  protocol_stack_interface_info_get_by_id
              reference :  socket_tx_buffer_event
              reference :  socket_tx_buffer_event_and_free
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/nanostack/sal-stack-nanostack/source/Common_Protocols/mld.o.
              reference :  ADDR_LINK_LOCAL_ALL_NODES
              reference :  ADDR_LINK_LOCAL_ALL_ROUTERS
              reference :  ADDR_UNSPECIFIED
              reference :  addr_get_group_entry
              reference :  addr_interface_get_ll_address
              reference :  addr_ipv6_scope
              reference :  addr_is_assigned_to_interface
              reference :  addr_is_ipv6_link_local
              reference :  buffer_corrupt_check
              reference :  buffer_free
              reference :  buffer_get
              reference :  common_read_16_bit
              reference :  common_write_16_bit
              reference :  ipv6_buffer_route_to
              reference :  memcmp
              definition:  mld_build
              definition:  mld_fast_timer
              definition:  mld_querier
              definition:  mld_query_handler
              definition:  mld_report_handler
              definition:  mld_slow_timer
              definition:  mld_start_listening
              definition:  mld_stop_listening
              reference :  ns_list_get_next_
              reference :  protocol_push
              reference :  randLIB_get_random_in_range
              reference :  thread_mcast_group_change
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/nanostack/sal-stack-nanostack/source/Common_Protocols/tcp.o.
              reference :  __aeabi_memcpy
              reference :  addr_ipv6_equal
              reference :  buffer_corrupt_check
              reference :  buffer_data_add
              reference :  buffer_free
              reference :  buffer_get
              reference :  buffer_headroom
              reference :  buffer_ipv6_fcf
              reference :  buffer_socket_set
              reference :  common_read_16_bit
              reference :  common_read_32_bit
              reference :  common_serial_number_greater_32
              reference :  common_write_16_bit
              reference :  common_write_32_bit
              reference :  eventOS_event_send
              reference :  ipv6_flow_auto_label
              reference :  ipv6_flow_random
              reference :  ipv6_neighbour_reachability_confirmation
              reference :  ipv6_neighbour_reachability_problem
              reference :  mbed_trace_ipv6
              reference :  mbed_tracef
              reference :  mbedtls_sha256_finish_ret
              reference :  mbedtls_sha256_free
              reference :  mbedtls_sha256_init
              reference :  mbedtls_sha256_starts_ret
              reference :  mbedtls_sha256_update_ret
              reference :  ns_dyn_mem_alloc
              reference :  ns_dyn_mem_free
              reference :  ns_in6addr_any
              reference :  ns_list_get_next_
              reference :  protocol_core_monotonic_time
              reference :  protocol_push
              reference :  protocol_stats_update
              reference :  protocol_timer_start
              reference :  protocol_timer_stop
              reference :  randLIB_get_16bit
              reference :  randLIB_get_8bit
              reference :  randLIB_get_n_bytes_random
              reference :  sockbuf_append_and_compress
              reference :  sockbuf_drop
              reference :  sockbuf_space
              reference :  socket_cant_recv_more
              reference :  socket_connection_abandoned
              reference :  socket_connection_complete
              reference :  socket_data_queued_event_push
              reference :  socket_dereference
              reference :  socket_event_handler_id_get
              reference :  socket_event_push
              reference :  socket_inet_pcb_set_buffer_hop_limit
              reference :  socket_interface_determine
              reference :  socket_list
              reference :  socket_lookup_ipv6
              reference :  socket_new_incoming_connection
              reference :  socket_reference
              reference :  socket_release
              reference :  socket_tx_buffer_event_and_free
              definition:  tcp_handle_time_event
              definition:  tcp_session_abort
              definition:  tcp_session_close
              definition:  tcp_session_data_received
              definition:  tcp_session_open
              definition:  tcp_session_ptr_allocate
              definition:  tcp_session_ptr_free
              definition:  tcp_session_send
              definition:  tcp_session_shutdown_read
              definition:  tcp_socket_released
              definition:  tcp_state_name
              definition:  tcp_test_drop_reset
              definition:  tcp_test_drop_rx
              definition:  tcp_test_drop_tx
              definition:  tcp_up
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/nanostack/sal-stack-nanostack/source/Common_Protocols/udp.o.
              reference :  addr_select_source
              reference :  buffer_corrupt_check
              reference :  buffer_free
              reference :  buffer_headroom
              reference :  buffer_ipv6_fcf
              reference :  buffer_socket_set
              reference :  buffer_turnaround
              reference :  common_read_16_bit
              reference :  common_write_16_bit
              reference :  icmpv6_error
              reference :  mbed_trace_ipv6
              reference :  mbed_tracef
              reference :  memswap
              reference :  nwk_udp_rx_security_check
              reference :  protocol_stats_update
              reference :  socket_lookup_ipv6
              definition:  udp_checksum_write
              definition:  udp_down
              definition:  udp_up
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/nanostack/sal-stack-nanostack/source/Core/buffer_dyn.o.
              reference :  __aeabi_memclr4
              reference :  __aeabi_memcpy
              reference :  __aeabi_memcpy4
              reference :  __aeabi_memmove
              definition:  buffer_clone
              definition:  buffer_copy_metadata
              definition:  buffer_corrupt_check
              definition:  buffer_count
              definition:  buffer_data_add
              definition:  buffer_free
              definition:  buffer_free_list
              definition:  buffer_free_route
              definition:  buffer_get
              definition:  buffer_get_minimal
              definition:  buffer_get_specific
              definition:  buffer_headroom
              definition:  buffer_ipv6_fcf
              definition:  buffer_note_predecessor
              definition:  buffer_socket_set
              definition:  buffer_turnaround
              reference :  ipv6_fcf
              reference :  mbed_trace_array
              reference :  mbed_tracef
              reference :  ns_dyn_mem_free
              reference :  ns_dyn_mem_temporary_alloc
              reference :  ns_list_get_next_
              reference :  ns_list_remove_
              reference :  platform_enter_critical
              reference :  platform_exit_critical
              reference :  protocol_stats_update
              reference :  socket_dereference
              reference :  socket_reference
              reference :  socket_tx_buffer_event_and_free
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/nanostack/sal-stack-nanostack/source/Core/ns_address_internal.o.
              definition:  ADDR_6TO4
              definition:  ADDR_ALL_DHCP_RELAY_AGENTS_AND_SERVERS
              definition:  ADDR_ALL_MPL_FORWARDERS
              definition:  ADDR_IF_LOCAL_ALL_NODES
              definition:  ADDR_IF_LOCAL_ALL_ROUTERS
              definition:  ADDR_IPV4_MAPPED_PREFIX
              definition:  ADDR_LINK_LOCAL_ALL_MLDV2_ROUTERS
              definition:  ADDR_LINK_LOCAL_ALL_NODES
              definition:  ADDR_LINK_LOCAL_ALL_ROUTERS
              definition:  ADDR_LINK_LOCAL_MDNS
              definition:  ADDR_LINK_LOCAL_PREFIX
              definition:  ADDR_LOOPBACK
              definition:  ADDR_MULTICAST_SOLICITED
              definition:  ADDR_REALM_LOCAL_ALL_NODES
              definition:  ADDR_REALM_LOCAL_ALL_ROUTERS
              definition:  ADDR_SHORT_ADR_SUFFIC
              definition:  ADDR_SITE_LOCAL_ALL_ROUTERS
              definition:  ADDR_UNSPECIFIED
              reference :  __aeabi_memclr4
              reference :  __aeabi_memcpy
              definition:  addr_add
              definition:  addr_add_group
              definition:  addr_add_router_groups
              definition:  addr_am_group_member_on_interface
              definition:  addr_cb
              definition:  addr_check_broadcast
              definition:  addr_delete
              definition:  addr_delete_entry
              definition:  addr_delete_group
              definition:  addr_delete_group_entry
              definition:  addr_delete_matching
              definition:  addr_deprecate
              definition:  addr_duplicate_detected
              definition:  addr_fast_timer
              definition:  addr_generate_opaque_iid
              definition:  addr_get_entry
              definition:  addr_get_group_entry
              definition:  addr_iid_from_outer
              definition:  addr_iid_matches_eui64
              definition:  addr_iid_matches_lowpan_short
              definition:  addr_iid_reserved
              definition:  addr_interface_address_compare
              definition:  addr_interface_all_address_ready
              definition:  addr_interface_get_ll_address
              definition:  addr_interface_gp_prefix_compare
              definition:  addr_interface_select_source
              definition:  addr_interface_set_ll64
              definition:  addr_ipv6_equal
              definition:  addr_ipv6_scope
              definition:  addr_ipv6_write_from_lowpan_short
              definition:  addr_is_assigned_to_interface
              definition:  addr_is_ipv6_link_local
              definition:  addr_is_tentative_for_interface
              definition:  addr_len_from_type
              definition:  addr_lifetime_update
              definition:  addr_max_slaac_entries_set
              definition:  addr_multicast_fwd_add
              definition:  addr_multicast_fwd_adjust_upstream_full
              definition:  addr_multicast_fwd_check
              definition:  addr_multicast_fwd_remove
              definition:  addr_multicast_fwd_set_forwarding
              definition:  addr_notification_register
              definition:  addr_opaque_iid_key_is_set
              definition:  addr_opaque_iid_key_set
              definition:  addr_opaque_initial_iid_set
              definition:  addr_policy_remove_by_label
              definition:  addr_policy_table_add_entry
              definition:  addr_policy_table_delete_entry
              definition:  addr_policy_table_print
              definition:  addr_preferences_default
              definition:  addr_remove_group
              definition:  addr_select_source
              definition:  addr_select_with_prefix
              definition:  addr_set_non_preferred
              definition:  addr_set_preferred_lifetime
              definition:  addr_set_valid_lifetime
              definition:  addr_slow_timer
              definition:  address_module_init
              reference :  bitcopy
              reference :  bitsequal
              reference :  common_count_leading_zeros_8
              reference :  common_write_16_bit
              reference :  icmpv6_build_ns
              reference :  ip6tos
              reference :  mbed_trace_array
              reference :  mbed_trace_ipv6
              reference :  mbed_tracef
              reference :  mbedtls_sha256_finish_ret
              reference :  mbedtls_sha256_free
              reference :  mbedtls_sha256_init
              reference :  mbedtls_sha256_starts_ret
              reference :  mbedtls_sha256_update_ret
              reference :  memcmp
              definition:  memswap
              reference :  mld_start_listening
              reference :  mld_stop_listening
              reference :  multicast_fwd_set_proxy_upstream
              reference :  ns_dyn_mem_alloc
              reference :  ns_dyn_mem_free
              reference :  ns_list_add_before_
              reference :  ns_list_add_to_end_
              reference :  ns_list_get_next_
              reference :  ns_list_remove_
              reference :  protocol_core_multicast_upstream
              reference :  protocol_interface_any_address_match
              reference :  protocol_interface_info_list
              reference :  protocol_push
              reference :  randLIB_get_random_in_range
              reference :  strlen
              reference :  thread_addr_is_mesh_local
              definition:  trace_sockaddr
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/nanostack/sal-stack-nanostack/source/Core/ns_monitor.o.
              reference :  ipv6_destination_cache_forced_gc
              reference :  mbed_tracef
              reference :  ns_dyn_mem_alloc
              reference :  ns_dyn_mem_free
              reference :  ns_dyn_mem_get_mem_stat
              definition:  ns_monitor_clear
              definition:  ns_monitor_heap_gc_threshold_set
              definition:  ns_monitor_init
              definition:  ns_monitor_packet_allocation_allowed
              definition:  ns_monitor_packet_ingress_rate_limit_by_memory
              definition:  ns_monitor_timer
              reference :  ws_pae_controller_forced_gc
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/nanostack/sal-stack-nanostack/source/Core/ns_socket.o.
              reference :  ADDR_UNSPECIFIED
              reference :  NS_CMSG_NXTHDR
              reference :  __2sprintf
              reference :  __aeabi_memclr4
              reference :  __aeabi_memcpy4
              reference :  _printf_d
              reference :  _printf_int_dec
              reference :  _printf_percent
              reference :  _printf_return_value
              reference :  addr_add_group
              reference :  addr_delete_group
              reference :  addr_ipv6_equal
              reference :  addr_ipv6_scope
              reference :  addr_select_source
              reference :  buffer_corrupt_check
              reference :  buffer_data_add
              reference :  buffer_free
              reference :  buffer_get
              reference :  buffer_socket_set
              reference :  eventOS_event_handler_create
              reference :  eventOS_event_send
              reference :  eventOS_scheduler_get_active_tasklet
              reference :  eventOS_scheduler_set_active_tasklet
              reference :  ip6tos
              reference :  ipv6_buffer_route
              reference :  ipv6_buffer_route_to
              reference :  ipv6_route_choose_next_hop
              reference :  mbed_trace_ipv6
              reference :  mbed_tracef
              reference :  memcmp
              reference :  ns_dyn_mem_alloc
              reference :  ns_dyn_mem_free
              reference :  ns_dyn_mem_temporary_alloc
              reference :  ns_in6addr_any
              reference :  ns_list_add_to_end_
              reference :  ns_list_count_
              reference :  ns_list_get_next_
              reference :  ns_list_init_
              reference :  ns_list_remove_
              reference :  protocol_interface_address_compare
              reference :  protocol_push
              reference :  protocol_stack_interface_info_get
              reference :  protocol_stack_interface_info_get_by_id
              reference :  randLIB_get_random_in_range
              reference :  sockbuf_append
              reference :  sockbuf_check
              reference :  sockbuf_flush
              reference :  sockbuf_init
              reference :  sockbuf_reserve
              reference :  sockbuf_space
              definition:  socket_allocate
              definition:  socket_buffer_cb_run
              definition:  socket_buffer_sendmsg
              definition:  socket_cant_recv_more
              definition:  socket_cb_run
              definition:  socket_connection_abandoned
              definition:  socket_connection_complete
              definition:  socket_create
              definition:  socket_data_queued_event_push
              definition:  socket_dereference
              definition:  socket_event_handler_id_get
              definition:  socket_event_push
              definition:  socket_generate_random_port
              definition:  socket_id_assign_and_attach
              definition:  socket_id_detach
              definition:  socket_inet_pcb_allocate
              definition:  socket_inet_pcb_clone
              definition:  socket_inet_pcb_free
              definition:  socket_inet_pcb_join_group
              definition:  socket_inet_pcb_leave_group
              definition:  socket_inet_pcb_set_buffer_hop_limit
              definition:  socket_init
              definition:  socket_interface_determine
              definition:  socket_leave_pending_state
              definition:  socket_list
              definition:  socket_list_print
              definition:  socket_lookup
              definition:  socket_lookup_ipv6
              definition:  socket_message_validate_iov
              definition:  socket_new_incoming_connection
              definition:  socket_pointer_get
              definition:  socket_port_validate
              definition:  socket_reference
              definition:  socket_release
              definition:  socket_tasklet_event_handler
              definition:  socket_tx_buffer_event
              definition:  socket_tx_buffer_event_and_free
              definition:  socket_up
              definition:  socket_validate_listen_backlog
              reference :  tcp_handle_time_event
              reference :  tcp_session_close
              reference :  tcp_session_send
              reference :  tcp_session_shutdown_read
              reference :  tcp_socket_released
              reference :  tcp_state_name
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/nanostack/sal-stack-nanostack/source/Core/sockbuf.o.
              reference :  __aeabi_memmove
              reference :  buffer_corrupt_check
              reference :  buffer_data_add
              reference :  buffer_free
              reference :  buffer_free_list
              reference :  buffer_socket_set
              reference :  mbed_tracef
              reference :  ns_list_add_to_end_
              reference :  ns_list_get_last_
              reference :  ns_list_get_next_
              reference :  ns_list_init_
              reference :  ns_list_remove_
              definition:  sockbuf_alloc
              definition:  sockbuf_append
              definition:  sockbuf_append_and_compress
              definition:  sockbuf_check
              definition:  sockbuf_drop
              definition:  sockbuf_drop_first
              definition:  sockbuf_flush
              definition:  sockbuf_free
              definition:  sockbuf_init
              definition:  sockbuf_reserve
              definition:  sockbuf_space
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/nanostack/sal-stack-nanostack/source/DHCPv6_Server/DHCPv6_Server_service.o.
              definition:  DHCPV6_server_service_request_handler
              definition:  DHCPv6_server_respond_client
              definition:  DHCPv6_server_service_callback_set
              definition:  DHCPv6_server_service_delete
              definition:  DHCPv6_server_service_duid_update
              definition:  DHCPv6_server_service_init
              definition:  DHCPv6_server_service_set_address_autonous_flag
              definition:  DHCPv6_server_service_set_address_validlifetime
              definition:  DHCPv6_server_service_set_dns_server
              definition:  DHCPv6_server_service_set_max_clients_accepts_count
              definition:  DHCPv6_server_service_set_vendor_data
              definition:  DHCPv6_server_service_tasklet
              definition:  DHCPv6_server_service_timeout_cb
              reference :  __aeabi_memcpy
              reference :  dhcp_service_delete
              reference :  dhcp_service_init
              reference :  dhcp_service_send_resp
              reference :  eventOS_cancel
              reference :  eventOS_event_handler_create
              reference :  eventOS_event_timer_request_every
              reference :  libdhcpv6_address_allocated_list_scan
              reference :  libdhcpv6_address_reply_message_len
              reference :  libdhcpv6_address_rm_from_allocated_list
              reference :  libdhcpv6_allocated_address_write
              reference :  libdhcpv6_compare_DUID
              reference :  libdhcpv6_dns_server_allocate
              reference :  libdhcpv6_dns_server_message_sizes
              reference :  libdhcpv6_dns_server_message_writes
              reference :  libdhcpv6_duid_length_validate
              reference :  libdhcpv6_duid_option_write
              reference :  libdhcpv6_get_link_address_from_duid
              reference :  libdhcpv6_gua_server_allocate
              reference :  libdhcpv6_gua_server_free_by_prefix_and_interfaceid
              reference :  libdhcpv6_gua_server_list_empty
              reference :  libdhcpv6_gua_servers_time_update
              reference :  libdhcpv6_header_write
              reference :  libdhcpv6_ia_address_option_write
              reference :  libdhcpv6_identity_association_option_write
              reference :  libdhcpv6_identity_association_option_write_with_status
              reference :  libdhcpv6_rapid_commit_option_at_packet
              reference :  libdhcpv6_rapid_commit_option_write
              reference :  libdhcpv6_renew_message_options_validate
              reference :  libdhcpv6_server_data_get_by_prefix_and_interfaceid
              reference :  libdhcpv6_server_data_get_by_prefix_and_socketinstance
              reference :  libdhcpv6_server_duid_set
              reference :  libdhcpv6_solication_message_options_validate
              reference :  libdhcpv6_vendor_data_allocate
              reference :  libdhcpv6_vendor_data_message_sizes
              reference :  libdhcpv6_vendor_data_message_writes
              reference :  mbed_tracef
              reference :  ns_dyn_mem_alloc
              reference :  ns_dyn_mem_free
              reference :  ns_dyn_mem_temporary_alloc
              reference :  ns_list_get_next_
              reference :  protocol_core_dhcpv6_allocated_address_remove
              reference :  protocol_stack_interface_info_get_by_id
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/nanostack/sal-stack-nanostack/source/DHCPv6_client/dhcpv6_client_service.o.
              reference :  __aeabi_memclr4
              reference :  __aeabi_memcpy
              reference :  addr_add
              reference :  addr_delete
              reference :  addr_deprecate
              reference :  addr_get_entry
              reference :  addr_set_preferred_lifetime
              reference :  addr_set_valid_lifetime
              reference :  common_read_16_bit
              reference :  common_read_32_bit
              reference :  common_write_16_bit
              definition:  dhcp_client_configure
              definition:  dhcp_client_delete
              definition:  dhcp_client_get_global_address
              definition:  dhcp_client_global_address_delete
              definition:  dhcp_client_global_address_renew
              definition:  dhcp_client_init
              definition:  dhcp_client_option_notification_cb_set
              definition:  dhcp_client_server_address_update
              definition:  dhcp_client_solicit_timeout_set
              definition:  dhcp_relay_agent_enable
              reference :  dhcp_service_delete
              reference :  dhcp_service_init
              reference :  dhcp_service_relay_global_addres_get
              reference :  dhcp_service_relay_instance_enable
              reference :  dhcp_service_req_remove_all
              reference :  dhcp_service_send_req
              reference :  dhcp_service_set_retry_timers
              reference :  dhcp_service_update_server_address
              definition:  dhcp_solicit_resp_cb
              definition:  dhcpv6_client_send_error_cb
              definition:  dhcpv6_renew
              reference :  libdhcpv6_address_request_message_len
              reference :  libdhcpv6_compare_DUID
              reference :  libdhcpv6_duid_linktype_size
              reference :  libdhcpv6_generic_nontemporal_address_message_write
              reference :  libdhcpv6_nonTemporal_entry_get_by_iaid
              reference :  libdhcpv6_nonTemporal_entry_get_by_instance
              reference :  libdhcpv6_nonTemporal_entry_get_by_prefix
              reference :  libdhcpv6_nonTemporal_entry_get_unique_instance_id
              reference :  libdhcpv6_nonTemporal_validate_class_pointer
              reference :  libdhcpv6_renew_time_define
              reference :  libdhcpv6_reply_message_option_validate
              reference :  libdhcpv6_solication_message_length
              reference :  libdhcpv6_txid_get
              reference :  libdhcvp6_nontemporalAddress_server_data_allocate
              reference :  libdhcvp6_nontemporalAddress_server_data_free
              reference :  mbed_tracef
              reference :  memcmp
              reference :  ns_dyn_mem_alloc
              reference :  ns_dyn_mem_free
              reference :  ns_dyn_mem_temporary_alloc
              reference :  ns_list_add_to_end_
              reference :  ns_list_get_next_
              reference :  protocol_stack_interface_info_get_by_id
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/nanostack/sal-stack-nanostack/source/MAC/IEEE802_15_4/mac_cca_threshold.o.
              reference :  __aeabi_memset
              definition:  mac_cca_thr_deinit
              definition:  mac_cca_thr_get_dbm
              definition:  mac_cca_thr_init
              definition:  mac_cca_threshold_update
              definition:  mac_get_cca_threshold_table
              reference :  mbed_tracef
              reference :  ns_dyn_mem_alloc
              reference :  ns_dyn_mem_free
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/nanostack/sal-stack-nanostack/source/MAC/IEEE802_15_4/mac_fhss_callbacks.o.
              reference :  common_write_32_bit
              reference :  dev_get_phy_datarate
              reference :  get_sw_mac_api
              reference :  get_sw_mac_ptr_by_fhss_api
              definition:  mac_broadcast_notification
              definition:  mac_fhss_frame_tx
              definition:  mac_get_coordinator_mac_address
              reference :  mac_mlme_beacon_req_tx
              reference :  mac_mlme_beacon_tx
              reference :  mac_mlme_rf_channel_change
              definition:  mac_poll_tx_queue
              definition:  mac_read_64bit_mac_address
              definition:  mac_read_phy_datarate
              definition:  mac_read_phy_timestamp
              definition:  mac_read_tx_queue_sizes
              definition:  mac_set_channel
              definition:  mac_synch_lost
              reference :  mcps_sap_trig_tx
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/nanostack/sal-stack-nanostack/source/MAC/IEEE802_15_4/mac_filter.o.
              reference :  __aeabi_memclr4
              reference :  common_read_16_bit
              definition:  mac_filter_add_long
              definition:  mac_filter_add_short
              definition:  mac_filter_clear
              definition:  mac_filter_delete_long
              definition:  mac_filter_delete_short
              definition:  mac_filter_modify_link_quality
              definition:  mac_filter_set_address_mapping
              definition:  mac_filter_start
              definition:  mac_filter_stop
              reference :  mac_header_get_src_address
              reference :  memcmp
              reference :  ns_dyn_mem_alloc
              reference :  ns_dyn_mem_free
              reference :  ns_list_add_to_end_
              reference :  ns_list_add_to_start_
              reference :  ns_list_get_next_
              reference :  ns_list_init_
              reference :  ns_list_remove_
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/nanostack/sal-stack-nanostack/source/MAC/IEEE802_15_4/mac_header_helper_functions.o.
              reference :  __aeabi_memcpy
              reference :  common_read_16_bit
              reference :  common_read_16_bit_inverse
              reference :  common_read_32_bit_inverse
              reference :  common_write_16_bit_inverse
              reference :  common_write_32_bit_inverse
              definition:  mac_address_length
              definition:  mac_buffer_total_payload_length
              definition:  mac_dst_panid_present
              definition:  mac_generic_packet_write
              definition:  mac_header_address_length
              definition:  mac_header_get_dst_address
              definition:  mac_header_get_dst_panid
              definition:  mac_header_get_src_address
              definition:  mac_header_get_src_panid
              definition:  mac_header_information_elements_parse
              definition:  mac_header_information_elements_preparation
              definition:  mac_header_off_set_to_aux_header
              definition:  mac_header_parse_fcf_dsn
              definition:  mac_header_security_aux_header_length
              definition:  mac_header_security_aux_header_parse
              definition:  mac_header_security_components_read
              definition:  mac_header_security_parameter_set
              definition:  mac_payload_information_elements_parse
              definition:  mac_security_mic_length_get
              definition:  mac_src_panid_present
              definition:  mcps_mac_command_frame_id_get
              definition:  mcps_mac_header_length_from_received_frame
              definition:  mcps_mac_payload_pointer_get
              definition:  mcps_mac_security_frame_counter_read
              definition:  mcps_security_mic_pointer_get
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/nanostack/sal-stack-nanostack/source/MAC/IEEE802_15_4/mac_indirect_data.o.
              reference :  __aeabi_memclr4
              reference :  common_read_16_bit
              reference :  eventOS_callback_timer_start
              reference :  eventOS_callback_timer_stop
              reference :  get_sw_mac_api
              reference :  mac_header_get_dst_address
              reference :  mac_header_get_dst_panid
              reference :  mac_header_get_src_address
              reference :  mac_header_security_components_read
              definition:  mac_indirect_data_req_handle
              definition:  mac_indirect_data_ttl_handle
              definition:  mac_indirect_queue_write
              reference :  mbed_tracef
              reference :  mcps_sap_pd_req_queue_write
              reference :  mcps_sap_prebuild_frame_buffer_free
              reference :  memcmp
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/nanostack/sal-stack-nanostack/source/MAC/IEEE802_15_4/mac_mcps_sap.o.
              reference :  __aeabi_memclr4
              reference :  __aeabi_memcpy
              reference :  ccm_free
              reference :  ccm_process_run
              reference :  ccm_sec_init
              reference :  common_read_16_bit
              reference :  common_read_32_bit
              reference :  common_write_32_bit
              reference :  eventOS_callback_timer_start
              reference :  eventOS_callback_timer_stop
              reference :  eventOS_event_handler_create
              reference :  eventOS_event_send
              reference :  get_sw_mac_api
              reference :  mac_buffer_total_payload_length
              definition:  mac_cca_threshold_event_send
              reference :  mac_cca_threshold_update
              definition:  mac_convert_frame_type_to_fhss
              reference :  mac_csma_backoff_get
              reference :  mac_csma_backoff_start
              reference :  mac_csma_param_init
              definition:  mac_data_wait_timer_start
              reference :  mac_dst_panid_present
              reference :  mac_frame_src_address_set_from_interface
              definition:  mac_generic_event_trig
              reference :  mac_generic_packet_write
              reference :  mac_header_address_length
              reference :  mac_header_get_dst_address
              reference :  mac_header_get_dst_panid
              reference :  mac_header_get_src_address
              reference :  mac_header_get_src_panid
              reference :  mac_header_information_elements_preparation
              reference :  mac_header_off_set_to_aux_header
              reference :  mac_header_parse_fcf_dsn
              reference :  mac_header_security_aux_header_length
              reference :  mac_header_security_aux_header_parse
              reference :  mac_header_security_components_read
              reference :  mac_header_security_parameter_set
              reference :  mac_indirect_data_req_handle
              reference :  mac_indirect_data_ttl_handle
              reference :  mac_indirect_queue_write
              definition:  mac_is_ack_request_set
              definition:  mac_mcps_buffer_queue_free
              definition:  mac_mcps_sap_get_phy_timestamp
              definition:  mac_mcps_sap_tasklet_init
              definition:  mac_mcps_trig_buffer_from_queue
              reference :  mac_mib_device_descption_attribute_get_by_descriptor
              reference :  mac_mib_key_device_frame_counter_get
              reference :  mac_mlme_active_scan_response_timer_start
              reference :  mac_mlme_beacon_notify
              reference :  mac_mlme_beacon_tx
              reference :  mac_mlme_event_cb
              reference :  mac_mlme_get_panid
              reference :  mac_mlme_mac_radio_disabled
              reference :  mac_mlme_mac_radio_enable
              reference :  mac_mlme_poll_process_confirm
              reference :  mac_mlme_rf_channel_change
              reference :  mac_mlme_scan_confirmation_handle
              reference :  mac_mlme_scan_request
              reference :  mac_mlme_set_new_beacon_sqn
              reference :  mac_mlme_set_new_sqn
              reference :  mac_mlme_set_req
              reference :  mac_mlme_start_req
              reference :  mac_payload_information_elements_parse
              reference :  mac_pd_abort_active_tx
              reference :  mac_pd_sap_set_phy_tx_time
              reference :  mac_plme_cca_req
              reference :  mac_sec_key_description_get
              reference :  mac_sec_mib_device_description_blacklist
              reference :  mac_sec_mib_device_description_get
              reference :  mac_sec_mib_device_description_get_attribute_index
              reference :  mac_sec_mib_key_device_description_discover_from_list
              reference :  mac_sec_mib_key_device_description_list_update
              reference :  mac_sec_mib_key_device_frame_counter_set
              reference :  mac_sec_mib_key_outgoing_frame_counter_decrement
              reference :  mac_sec_mib_key_outgoing_frame_counter_get
              reference :  mac_sec_mib_key_outgoing_frame_counter_increment
              reference :  mac_security_mic_length_get
              reference :  mac_src_panid_present
              definition:  mac_virtual_sap_data_cb
              reference :  mbed_tracef
              definition:  mcps_edfe_data_request
              definition:  mcps_generic_ack_build
              definition:  mcps_generic_ack_data_request_init
              definition:  mcps_generic_edfe_frame_init
              reference :  mcps_mac_command_frame_id_get
              reference :  mcps_mac_header_length_from_received_frame
              reference :  mcps_mac_payload_pointer_get
              reference :  mcps_mac_security_frame_counter_read
              definition:  mcps_pd_data_rebuild
              definition:  mcps_pending_packet_counter_update_check
              definition:  mcps_sap_data_req_handler
              definition:  mcps_sap_data_req_handler_ext
              definition:  mcps_sap_pd_ack
              definition:  mcps_sap_pd_confirm
              definition:  mcps_sap_pd_confirm_failure
              definition:  mcps_sap_pd_ind
              definition:  mcps_sap_pd_req_queue_write
              definition:  mcps_sap_pre_parsed_frame_buffer_free
              definition:  mcps_sap_pre_parsed_frame_buffer_get
              definition:  mcps_sap_prebuild_frame_buffer_free
              definition:  mcps_sap_prebuild_frame_buffer_get
              definition:  mcps_sap_purge_reg_handler
              definition:  mcps_sap_trig_tx
              reference :  mcps_security_mic_pointer_get
              reference :  mlme_scan_analyze_next_channel
              reference :  ns_dyn_mem_free
              reference :  ns_dyn_mem_temporary_alloc
              reference :  platform_enter_critical
              reference :  platform_exit_critical
              reference :  sw_mac_stats_update
              reference :  timer_mac_start
              reference :  timer_mac_stop
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/nanostack/sal-stack-nanostack/source/MAC/IEEE802_15_4/mac_mlme.o.
              reference :  __aeabi_memclr
              reference :  __aeabi_memclr4
              reference :  __aeabi_memcpy
              reference :  common_read_16_bit_inverse
              reference :  common_write_16_bit
              reference :  dev_get_phy_datarate
              reference :  eventOS_callback_timer_register
              reference :  eventOS_callback_timer_start
              reference :  eventOS_callback_timer_stop
              reference :  eventOS_callback_timer_unregister
              reference :  eventOS_event_send
              reference :  get_sw_mac_api
              reference :  get_sw_mac_ptr_by_driver_id
              reference :  get_sw_mac_ptr_by_timer
              reference :  mac_cca_thr_deinit
              reference :  mac_cca_thr_init
              reference :  mac_data_edfe_force_stop
              reference :  mac_dst_panid_present
              definition:  mac_extended_mac_set
              definition:  mac_frame_src_address_set_from_interface
              reference :  mac_generic_event_trig
              reference :  mac_get_cca_threshold_table
              reference :  mac_header_address_length
              reference :  mac_header_security_aux_header_length
              reference :  mac_header_security_parameter_set
              reference :  mac_mcps_buffer_queue_free
              reference :  mac_mcps_sap_tasklet_init
              reference :  mac_mcps_trig_buffer_from_queue
              definition:  mac_mlme_active_scan_response_timer_start
              definition:  mac_mlme_beacon_notify
              definition:  mac_mlme_beacon_req_tx
              definition:  mac_mlme_beacon_tx
              definition:  mac_mlme_data_base_allocate
              definition:  mac_mlme_data_base_deallocate
              definition:  mac_mlme_event_cb
              definition:  mac_mlme_get_panid
              definition:  mac_mlme_get_req
              definition:  mac_mlme_mac_radio_disabled
              definition:  mac_mlme_mac_radio_enable
              definition:  mac_mlme_poll_process_confirm
              definition:  mac_mlme_poll_req
              definition:  mac_mlme_reset
              definition:  mac_mlme_rf_channel_change
              definition:  mac_mlme_scan_confirmation_handle
              definition:  mac_mlme_scan_request
              definition:  mac_mlme_set_active_state
              definition:  mac_mlme_set_new_beacon_sqn
              definition:  mac_mlme_set_new_sqn
              definition:  mac_mlme_set_req
              definition:  mac_mlme_start_req
              definition:  mac_mlme_virtual_confirmation_handle
              reference :  mac_pd_sap_rf_low_level_function_set
              reference :  mac_sec_key_description_get_by_attribute
              reference :  mac_sec_mib_deinit
              reference :  mac_sec_mib_device_description_get_attribute_index
              reference :  mac_sec_mib_device_description_pan_update
              reference :  mac_sec_mib_device_description_set
              reference :  mac_sec_mib_init
              reference :  mac_sec_mib_key_description_set
              reference :  mac_sec_mib_key_outgoing_frame_counter_set
              reference :  mac_security_mic_length_get
              reference :  mac_src_panid_present
              reference :  mbed_tracef
              reference :  mcps_sap_pd_req_queue_write
              reference :  mcps_sap_prebuild_frame_buffer_free
              reference :  mcps_sap_prebuild_frame_buffer_get
              definition:  mlme_scan_analyze_next_channel
              reference :  ns_dyn_mem_alloc
              reference :  ns_dyn_mem_free
              reference :  ns_dyn_mem_temporary_alloc
              reference :  platform_enter_critical
              reference :  platform_exit_critical
              reference :  randLIB_get_8bit
              reference :  sw_mac_stats_update
              reference :  timer_mac_interrupt
              reference :  timer_mac_stop
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/nanostack/sal-stack-nanostack/source/MAC/IEEE802_15_4/mac_pd_sap.o.
              reference :  common_read_32_bit
              reference :  common_write_16_bit
              reference :  get_sw_mac_api
              reference :  mac_address_length
              reference :  mac_cca_thr_get_dbm
              reference :  mac_cca_threshold_event_send
              reference :  mac_convert_frame_type_to_fhss
              definition:  mac_csma_backoff_get
              definition:  mac_csma_backoff_start
              definition:  mac_csma_param_init
              definition:  mac_data_edfe_force_stop
              reference :  mac_filter_modify_link_quality
              reference :  mac_header_address_length
              reference :  mac_header_get_dst_address
              reference :  mac_header_get_dst_panid
              reference :  mac_header_get_src_address
              reference :  mac_header_information_elements_parse
              reference :  mac_header_parse_fcf_dsn
              reference :  mac_is_ack_request_set
              reference :  mac_mcps_sap_get_phy_timestamp
              reference :  mac_mlme_rf_channel_change
              definition:  mac_pd_abort_active_tx
              definition:  mac_pd_sap_data_cb
              definition:  mac_pd_sap_req
              definition:  mac_pd_sap_rf_low_level_function_set
              definition:  mac_pd_sap_set_phy_tx_time
              definition:  mac_pd_sap_state_machine
              definition:  mac_plme_cca_req
              reference :  mac_security_mic_length_get
              reference :  mcps_edfe_data_request
              reference :  mcps_generic_ack_build
              reference :  mcps_generic_ack_data_request_init
              reference :  mcps_generic_edfe_frame_init
              reference :  mcps_pd_data_rebuild
              reference :  mcps_pending_packet_counter_update_check
              reference :  mcps_sap_pd_ack
              reference :  mcps_sap_pd_confirm
              reference :  mcps_sap_pd_ind
              reference :  mcps_sap_pre_parsed_frame_buffer_free
              reference :  mcps_sap_pre_parsed_frame_buffer_get
              reference :  memcmp
              reference :  mlme_scan_analyze_next_channel
              reference :  ns_monitor_packet_allocation_allowed
              reference :  randLIB_get_random_in_range
              reference :  sw_mac_stats_update
              reference :  timer_mac_start
              reference :  timer_mac_stop
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/nanostack/sal-stack-nanostack/source/MAC/IEEE802_15_4/mac_security_mib.o.
              reference :  __aeabi_memclr
              reference :  __aeabi_memclr4
              reference :  __aeabi_memcpy
              reference :  __aeabi_memcpy4
              reference :  __aeabi_memset4
              reference :  common_read_16_bit
              reference :  common_write_16_bit
              definition:  mac_mib_device_descption_attribute_get_by_descriptor
              definition:  mac_mib_key_device_frame_counter_get
              definition:  mac_sec_key_description_get
              definition:  mac_sec_key_description_get_by_attribute
              definition:  mac_sec_mib_deinit
              definition:  mac_sec_mib_device_description_blacklist
              definition:  mac_sec_mib_device_description_get
              definition:  mac_sec_mib_device_description_get_attribute_index
              definition:  mac_sec_mib_device_description_pan_update
              definition:  mac_sec_mib_device_description_set
              definition:  mac_sec_mib_frame_counter_per_key_set
              definition:  mac_sec_mib_init
              definition:  mac_sec_mib_key_description_set
              definition:  mac_sec_mib_key_device_description_discover_from_list
              definition:  mac_sec_mib_key_device_description_list_update
              definition:  mac_sec_mib_key_device_frame_counter_set
              definition:  mac_sec_mib_key_outgoing_frame_counter_decrement
              definition:  mac_sec_mib_key_outgoing_frame_counter_get
              definition:  mac_sec_mib_key_outgoing_frame_counter_increment
              definition:  mac_sec_mib_key_outgoing_frame_counter_set
              reference :  memcmp
              reference :  ns_dyn_mem_alloc
              reference :  ns_dyn_mem_free
              reference :  platform_enter_critical
              reference :  platform_exit_critical
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/nanostack/sal-stack-nanostack/source/MAC/IEEE802_15_4/mac_timer.o.
              reference :  eventOS_callback_timer_start
              reference :  eventOS_callback_timer_stop
              reference :  get_sw_mac_ptr_by_timer
              reference :  mac_pd_sap_state_machine
              reference :  platform_enter_critical
              reference :  platform_exit_critical
              definition:  timer_mac_interrupt
              definition:  timer_mac_start
              definition:  timer_mac_stop
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/nanostack/sal-stack-nanostack/source/MAC/IEEE802_15_4/sw_mac.o.
              reference :  __aeabi_memclr4
              reference :  __aeabi_memcpy
              reference :  arm_net_phy_driver_pointer
              reference :  arm_net_phy_init
              reference :  arm_net_virtual_config_rx_cb_set
              reference :  arm_net_virtual_confirmation_rx_cb_set
              reference :  common_read_32_bit
              reference :  common_write_16_bit
              reference :  common_write_32_bit
              reference :  eventOS_callback_timer_register
              reference :  eventOS_callback_timer_start
              definition:  get_sw_mac_api
              definition:  get_sw_mac_ptr_by_driver_id
              definition:  get_sw_mac_ptr_by_fhss_api
              definition:  get_sw_mac_ptr_by_mac_api
              definition:  get_sw_mac_ptr_by_timer
              reference :  mac_broadcast_notification
              reference :  mac_extended_mac_set
              reference :  mac_fhss_frame_tx
              reference :  mac_get_coordinator_mac_address
              reference :  mac_mlme_data_base_allocate
              reference :  mac_mlme_get_req
              reference :  mac_mlme_poll_req
              reference :  mac_mlme_reset
              reference :  mac_mlme_scan_request
              reference :  mac_mlme_set_req
              reference :  mac_mlme_start_req
              reference :  mac_mlme_virtual_confirmation_handle
              reference :  mac_pd_sap_data_cb
              reference :  mac_poll_tx_queue
              reference :  mac_read_64bit_mac_address
              reference :  mac_read_phy_datarate
              reference :  mac_read_phy_timestamp
              reference :  mac_read_tx_queue_sizes
              reference :  mac_sec_mib_frame_counter_per_key_set
              reference :  mac_set_channel
              reference :  mac_synch_lost
              reference :  mac_virtual_sap_data_cb
              reference :  mcps_sap_data_req_handler_ext
              reference :  mcps_sap_purge_reg_handler
              reference :  mcps_sap_trig_tx
              reference :  ns_dyn_mem_alloc
              reference :  ns_dyn_mem_free
              definition:  ns_sw_mac_create
              definition:  ns_sw_mac_enable_frame_counter_per_key
              definition:  ns_sw_mac_fhss_register
              definition:  ns_sw_mac_fhss_unregister
              definition:  ns_sw_mac_get_fhss_api
              definition:  ns_sw_mac_phy_statistics_start
              definition:  ns_sw_mac_read_current_timestamp
              definition:  ns_sw_mac_statistics_start
              definition:  ns_sw_mac_virtual_client_register
              definition:  ns_sw_mac_virtual_client_unregister
              definition:  sw_mac_stats_update
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/nanostack/sal-stack-nanostack/source/MAC/ethernet/ethernet_mac_api.o.
              reference :  __aeabi_memcpy
              reference :  arm_net_phy_driver_pointer
              reference :  arm_net_phy_init
              reference :  common_read_16_bit
              reference :  common_write_16_bit
              definition:  ethernet_mac_create
              definition:  ethernet_mac_destroy
              reference :  eventOS_event_handler_create
              reference :  eventOS_event_send
              reference :  ns_dyn_mem_alloc
              reference :  ns_dyn_mem_free
              reference :  ns_dyn_mem_temporary_alloc
              reference :  ns_monitor_packet_allocation_allowed
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/nanostack/sal-stack-nanostack/source/MAC/rf_driver_storage.o.
              definition:  arm_net_observer_cb_set
              definition:  arm_net_phy_driver_pointer
              definition:  arm_net_phy_init
              definition:  arm_net_phy_mac64_get
              definition:  arm_net_phy_mac64_set
              definition:  arm_net_phy_mtu_size
              definition:  arm_net_phy_register
              definition:  arm_net_phy_rf_type
              definition:  arm_net_phy_unregister
              definition:  arm_net_virtual_config_rx_cb_set
              definition:  arm_net_virtual_confirmation_rx_cb_set
              definition:  dev_get_phy_datarate
              reference :  ns_dyn_mem_alloc
              reference :  ns_dyn_mem_free
              reference :  ns_list_add_to_end_
              reference :  ns_list_get_next_
              reference :  ns_list_link_init_
              reference :  ns_list_remove_
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/nanostack/sal-stack-nanostack/source/MAC/serial/serial_mac_api.o.
              reference :  __aeabi_memcpy
              reference :  arm_net_phy_driver_pointer
              reference :  arm_net_phy_init
              reference :  eventOS_event_handler_create
              reference :  eventOS_event_send
              reference :  ns_dyn_mem_alloc
              reference :  ns_dyn_mem_free
              reference :  ns_dyn_mem_temporary_alloc
              reference :  ns_monitor_packet_allocation_allowed
              definition:  serial_mac_create
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/nanostack/sal-stack-nanostack/source/MAC/virtual_rf/virtual_rf_client.o.
              reference :  __aeabi_memclr4
              reference :  __aeabi_memcpy
              reference :  arm_net_phy_driver_pointer
              reference :  arm_net_phy_register
              definition:  virtual_rf_client_register
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/nanostack/sal-stack-nanostack/source/MAC/virtual_rf/virtual_rf_driver.o.
              reference :  __aeabi_memclr4
              reference :  arm_net_observer_cb_set
              reference :  arm_net_phy_register
              definition:  virtual_rf_device_register
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/nanostack/sal-stack-nanostack/source/MLE/mle.o.
              reference :  common_read_32_bit
              reference :  mac_helper_device_description_write
              reference :  mac_helper_devicetable_set
              reference :  mac_helper_link_frame_counter_read
              reference :  mac_helper_mac16_address_get
              definition:  mle_class_active_neigh_counter
              definition:  mle_class_free_entry_count_get
              definition:  mle_class_rfd_entry_count_get
              definition:  mle_class_set_new_key_pending
              definition:  mle_class_sleepy_entry_count_get
              definition:  mle_general_write_link_layer_framecounter
              definition:  mle_general_write_source_address
              definition:  mle_mode_parse_to_mac_entry
              definition:  mle_mode_write_from_mac_entry
              definition:  mle_neigh_entry_frame_counter_update
              reference :  mle_service_frame_counter_entry_new_key_pending_set
              reference :  mle_tlv_option_discover
              reference :  mle_tlv_write_link_layer_framecount
              reference :  mle_tlv_write_source_address
              reference :  ns_list_count_
              reference :  ns_list_get_next_
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/nanostack/sal-stack-nanostack/source/MLE/mle_tlv.o.
              reference :  __aeabi_memcpy
              reference :  common_read_16_bit
              reference :  common_read_32_bit
              reference :  common_read_64_bit
              reference :  common_write_16_bit
              reference :  common_write_32_bit
              definition:  mle_message_malformed_check
              definition:  mle_registerd_address_data_check
              reference :  mle_service_transaction_buffer_get_for_response
              definition:  mle_tlv_ignore
              definition:  mle_tlv_option_discover
              definition:  mle_tlv_read_16_bit_tlv
              definition:  mle_tlv_read_32_bit_tlv
              definition:  mle_tlv_read_64_bit_tlv
              definition:  mle_tlv_read_8_bit_tlv
              definition:  mle_tlv_read_tlv
              definition:  mle_tlv_req_tlv
              definition:  mle_tlv_requested
              definition:  mle_tlv_rssi_tlv
              definition:  mle_tlv_type_requested
              definition:  mle_tlv_validate_response
              definition:  mle_tlv_write_challenge
              definition:  mle_tlv_write_framecounter
              definition:  mle_tlv_write_link_layer_framecount
              definition:  mle_tlv_write_link_quality
              definition:  mle_tlv_write_mode
              definition:  mle_tlv_write_response
              definition:  mle_tlv_write_scan_mask
              definition:  mle_tlv_write_short_address
              definition:  mle_tlv_write_source_address
              definition:  mle_tlv_write_timeout
              definition:  mle_tlv_write_version
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/nanostack/sal-stack-nanostack/source/MPL/mpl.o.
              reference :  ADDR_ALL_MPL_FORWARDERS
              reference :  __aeabi_memclr
              reference :  __aeabi_memcpy
              reference :  addr_add_group
              reference :  addr_delete_group
              reference :  addr_ipv6_equal
              reference :  addr_is_assigned_to_interface
              reference :  addr_select_source
              reference :  bit_set
              reference :  bit_test
              reference :  buffer_corrupt_check
              reference :  buffer_data_add
              reference :  buffer_free
              reference :  buffer_get
              reference :  buffer_headroom
              reference :  common_read_16_bit
              reference :  common_serial_number_greater_8
              reference :  common_write_16_bit
              reference :  ipv6_set_exthdr_provider
              reference :  ipv6_transmit_multicast_on_interface
              reference :  mac_helper_mac16_address_get
              reference :  mbed_trace_ipv6
              reference :  mbed_tracef
              reference :  memcmp
              definition:  mpl_clear_realm_scope_seeds
              definition:  mpl_control_handler
              definition:  mpl_domain_change_timing
              definition:  mpl_domain_create
              definition:  mpl_domain_delete
              definition:  mpl_domain_lookup
              definition:  mpl_domain_lookup_with_realm_check
              definition:  mpl_forwarder_process_message
              definition:  mpl_hbh_len_check
              definition:  mpl_process_hbh
              definition:  mpl_slow_timer
              reference :  ns_dyn_mem_alloc
              reference :  ns_dyn_mem_free
              reference :  ns_list_add_after_
              reference :  ns_list_add_to_end_
              reference :  ns_list_add_to_start_
              reference :  ns_list_get_last_
              reference :  ns_list_get_next_
              reference :  ns_list_get_previous_
              reference :  ns_list_init_
              reference :  ns_list_remove_
              reference :  protocol_core_monotonic_time
              reference :  protocol_push
              reference :  protocol_timer_start
              reference :  randLIB_get_8bit
              definition:  rfc7731_default_control_message_trickle_params
              definition:  rfc7731_default_data_message_trickle_params
              reference :  thread_addr_is_mesh_local_16
              reference :  thread_i_am_router
              reference :  trickle_consistent_heard
              reference :  trickle_inconsistent_heard
              reference :  trickle_running
              reference :  trickle_start
              reference :  trickle_stop
              reference :  trickle_timer
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/nanostack/sal-stack-nanostack/source/NWK_INTERFACE/protocol_core.o.
              reference :  ADDR_UNSPECIFIED
              reference :  __aeabi_memclr4
              reference :  addr_add_router_groups
              reference :  addr_delete_entry
              reference :  addr_fast_timer
              reference :  addr_is_assigned_to_interface
              reference :  addr_max_slaac_entries_set
              reference :  addr_multicast_fwd_remove
              reference :  addr_slow_timer
              definition:  arm_net_protocol_packet_handler
              reference :  beacon_join_priority_update
              reference :  beacon_received
              reference :  bitsequal
              definition:  bootsrap_next_state_kick
              reference :  buffer_free
              reference :  buffer_free_route
              definition:  check_power_state
              reference :  cipv6_frag_timer
              definition:  clear_power_state
              reference :  common_read_16_bit
              reference :  common_read_64_bit
              definition:  core_timer_event_handle
              reference :  etx_cache_timer
              reference :  eventOS_event_handler_create
              reference :  eventOS_event_send
              reference :  eventOS_event_send_user_allocated
              reference :  icmpv6_radv_init
              reference :  icmpv6_radv_timer
              reference :  icmpv6_recv_ra_prefixes
              reference :  icmpv6_recv_ra_routes
              reference :  icmpv6_restart_router_advertisements
              reference :  icmpv6_stop_router_advertisements
              reference :  ipv6_buffer_route
              reference :  ipv6_core_slow_timer_event_handle
              reference :  ipv6_core_timer_event_handle
              reference :  ipv6_destination_cache_timer
              reference :  ipv6_frag_timer
              reference :  ipv6_interface_phy_sap_register
              reference :  ipv6_neighbour_cache_fast_timer
              reference :  ipv6_neighbour_cache_flush
              reference :  ipv6_neighbour_cache_init
              reference :  ipv6_neighbour_cache_print
              reference :  ipv6_neighbour_cache_slow_timer
              reference :  ipv6_route_table_set_max_entries
              reference :  ipv6_route_table_source_invalidated_reset
              reference :  ipv6_route_table_source_was_invalidated
              reference :  ipv6_route_table_ttl_update
              reference :  ipv6_stack_route_advert_remove
              reference :  lowpan_adaptation_interface_free
              reference :  lowpan_adaptation_interface_init
              reference :  lowpan_adaptation_tx_active
              reference :  lowpan_context_list_free
              reference :  lowpan_context_timer
              reference :  mac_data_poll_protocol_poll_mode_disable
              reference :  mac_helper_mac64_set
              reference :  mac_helper_set_default_key_source
              reference :  mac_neighbor_table_neighbor_timeout_update
              reference :  mbed_tracef
              reference :  mcps_data_confirm_handler
              reference :  mcps_data_indication_handler
              reference :  mcps_purge_confirm_handler
              reference :  memcmp
              reference :  mld_fast_timer
              reference :  mld_slow_timer
              reference :  mlme_confirm_handler
              reference :  mlme_indication_handler
              reference :  mpl_slow_timer
              reference :  nd_object_timer
              reference :  neighbor_cache_init
              definition:  net_bootsrap_cb_run
              reference :  net_dns_timer_seconds
              reference :  ns_dyn_mem_alloc
              reference :  ns_dyn_mem_free
              reference :  ns_list_add_to_start_
              reference :  ns_list_get_next_
              reference :  ns_list_init_
              reference :  ns_list_link_init_
              reference :  ns_list_remove_
              reference :  ns_monitor_init
              reference :  ns_monitor_timer
              definition:  nwk_bootsrap_ready
              definition:  nwk_bootsrap_state_update
              definition:  nwk_interface_compare_mac_address
              definition:  nwk_interface_flush_neigh_cache
              definition:  nwk_interface_get_ipv6_ptr
              definition:  nwk_interface_print_neigh_cache
              reference :  pan_blacklist_cache_init
              reference :  pan_blacklist_time_update
              reference :  pan_coordinator_blacklist_cache_init
              reference :  pan_coordinator_blacklist_time_update
              reference :  platform_enter_critical
              reference :  platform_exit_critical
              definition:  power_save_state
              reference :  protocol_6lowpan_bootstrap
              reference :  protocol_6lowpan_mle_timer
              definition:  protocol_address_prefix_cmp
              definition:  protocol_core_buffers_in_event_queue
              definition:  protocol_core_cb
              definition:  protocol_core_dhcpv6_allocated_address_remove
              definition:  protocol_core_init
              definition:  protocol_core_interface_info_reset
              definition:  protocol_core_monotonic_time
              definition:  protocol_core_multicast_upstream
              definition:  protocol_core_security_tick_update
              definition:  protocol_interface_address_compare
              definition:  protocol_interface_any_address_match
              definition:  protocol_interface_info_list
              definition:  protocol_push
              definition:  protocol_read_tasklet_id
              definition:  protocol_root_tasklet
              definition:  protocol_stack_interface_generate_ethernet
              definition:  protocol_stack_interface_generate_lowpan
              definition:  protocol_stack_interface_generate_ppp
              definition:  protocol_stack_interface_info_get
              definition:  protocol_stack_interface_info_get_by_bootstrap_id
              definition:  protocol_stack_interface_info_get_by_fhss_api
              definition:  protocol_stack_interface_info_get_by_id
              definition:  protocol_stack_interface_info_get_by_rpl_domain
              definition:  protocol_stack_interface_set_reachable_time
              definition:  protocol_stack_interface_sleep_possibility
              reference :  protocol_timer_cb
              reference :  protocol_timer_event_lock_free
              reference :  protocol_timer_init
              reference :  protocol_timer_start
              reference :  randLIB_add_seed
              reference :  randLIB_randomise_base
              reference :  reassembly_interface_free
              reference :  reassembly_interface_init
              reference :  rfc7731_default_control_message_trickle_params
              reference :  rfc7731_default_data_message_trickle_params
              reference :  rpl_control_fast_timer
              reference :  rpl_control_remove_domain_from_interface
              reference :  rpl_control_slow_timer
              reference :  sec_timer_handle
              definition:  set_power_state
              reference :  socket_tx_buffer_event
              reference :  socket_tx_buffer_event_and_free
              reference :  thread_bootstrap_state_machine
              reference :  thread_seconds_timer
              reference :  thread_timer
              reference :  ws_bootstrap_state_machine
              reference :  ws_common_fast_timer
              reference :  ws_common_seconds_timer
              reference :  ws_pae_controller_fast_timer
              reference :  ws_pae_controller_slow_timer
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/nanostack/sal-stack-nanostack/source/NWK_INTERFACE/protocol_core_sleep.o.
              definition:  arm_net_check_enter_deep_sleep_possibility
              definition:  arm_net_enter_sleep
              definition:  arm_net_wakeup_and_timer_synch
              reference :  clear_power_state
              reference :  mac_data_poll_get_max_sleep_period
              reference :  nd_object_time_to_next_nd_reg
              reference :  platform_enter_critical
              reference :  platform_exit_critical
              reference :  protocol_stack_interface_sleep_possibility
              reference :  protocol_timer_sleep_balance
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/nanostack/sal-stack-nanostack/source/NWK_INTERFACE/protocol_stats.o.
              reference :  __aeabi_memclr4
              definition:  nwk_stats_ptr
              definition:  protocol_stats_init
              definition:  protocol_stats_reset
              definition:  protocol_stats_start
              definition:  protocol_stats_stop
              definition:  protocol_stats_update
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/nanostack/sal-stack-nanostack/source/NWK_INTERFACE/protocol_timer.o.
              reference :  eventOS_callback_timer_register
              reference :  eventOS_callback_timer_start
              reference :  eventOS_event_send_user_allocated
              reference :  platform_enter_critical
              reference :  platform_exit_critical
              reference :  protocol_read_tasklet_id
              definition:  protocol_tick_handle_busy
              definition:  protocol_timer
              definition:  protocol_timer_cb
              definition:  protocol_timer_event_lock_free
              definition:  protocol_timer_id
              definition:  protocol_timer_init
              definition:  protocol_timer_interrupt
              definition:  protocol_timer_sleep_balance
              definition:  protocol_timer_start
              definition:  protocol_timer_stop
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/nanostack/sal-stack-nanostack/source/RPL/rpl_control.o.
              definition:  ADDR_LINK_LOCAL_ALL_RPL_NODES
              reference :  ADDR_LINK_LOCAL_PREFIX
              reference :  __aeabi_memcpy
              reference :  addr_add_group
              reference :  addr_delete_group
              reference :  addr_interface_address_compare
              reference :  addr_ipv6_scope
              reference :  addr_is_ipv6_link_local
              reference :  addr_notification_register
              reference :  addr_select_with_prefix
              reference :  bitcopy0
              reference :  buffer_clone
              reference :  buffer_corrupt_check
              reference :  buffer_free
              reference :  buffer_get
              reference :  common_read_16_bit
              reference :  common_read_32_bit
              reference :  common_write_16_bit
              reference :  common_write_32_bit
              reference :  etx_value_change_callback_register
              reference :  icmpv6_recv_ra_routes
              reference :  ipv6_route_add
              reference :  mbed_trace_ipv6
              reference :  mbed_tracef
              reference :  ns_dyn_mem_alloc
              reference :  ns_dyn_mem_free
              reference :  ns_list_add_to_start_
              reference :  ns_list_get_next_
              reference :  ns_list_init_
              reference :  ns_list_remove_
              reference :  protocol_core_monotonic_time
              reference :  protocol_push
              reference :  protocol_stack_interface_info_get_by_id
              reference :  protocol_stack_interface_info_get_by_rpl_domain
              reference :  protocol_stats_update
              definition:  rpl_alloc
              definition:  rpl_control_address_register_done
              definition:  rpl_control_candidate_list_size
              definition:  rpl_control_create_dodag_root
              definition:  rpl_control_create_domain
              definition:  rpl_control_current_rank
              definition:  rpl_control_dao_timeout
              definition:  rpl_control_delete_dodag_root
              definition:  rpl_control_delete_domain
              definition:  rpl_control_disable_ra_routes
              definition:  rpl_control_enumerate_instances
              definition:  rpl_control_event
              definition:  rpl_control_fast_timer
              definition:  rpl_control_find_worst_neighbor
              definition:  rpl_control_force_leaf
              definition:  rpl_control_free_domain_instances_from_interface
              definition:  rpl_control_get_dodag_config
              definition:  rpl_control_get_instance_dao_target_count
              definition:  rpl_control_handler
              definition:  rpl_control_have_dodag
              definition:  rpl_control_increment_dodag_version
              definition:  rpl_control_increment_dtsn
              definition:  rpl_control_is_dodag_parent
              definition:  rpl_control_is_dodag_parent_candidate
              definition:  rpl_control_lookup_instance
              definition:  rpl_control_neighbor_delete
              definition:  rpl_control_neighbor_delete_from_instance
              definition:  rpl_control_parent_candidate_list_size
              definition:  rpl_control_poison
              definition:  rpl_control_preferred_parent_addr
              definition:  rpl_control_print
              definition:  rpl_control_probe_parent_candidate
              definition:  rpl_control_process_prefix_option
              definition:  rpl_control_process_routes
              definition:  rpl_control_publish_host_address
              definition:  rpl_control_read_dodag_info
              definition:  rpl_control_register_address
              definition:  rpl_control_remove_domain_from_interface
              definition:  rpl_control_request_parent_link_confirmation
              definition:  rpl_control_route_table_get
              definition:  rpl_control_selected_parent_count
              definition:  rpl_control_set_address_registration_timeout
              definition:  rpl_control_set_callback
              definition:  rpl_control_set_dao_retry_count
              definition:  rpl_control_set_dio_multicast_min_config_advertisment_count
              definition:  rpl_control_set_dodag_pref
              definition:  rpl_control_set_domain_on_interface
              definition:  rpl_control_set_initial_dao_ack_wait
              definition:  rpl_control_set_memory_limits
              definition:  rpl_control_set_minimum_dao_target_refresh
              definition:  rpl_control_set_mrhof_parent_set_size
              definition:  rpl_control_slow_timer
              definition:  rpl_control_source_route_error_handler
              definition:  rpl_control_transmit
              definition:  rpl_control_transmit_dao
              definition:  rpl_control_transmit_dio
              definition:  rpl_control_transmit_dis
              definition:  rpl_control_unpublish_address
              definition:  rpl_control_update_dodag_config
              definition:  rpl_control_update_dodag_prefix
              definition:  rpl_control_update_dodag_route
              reference :  rpl_create_dodag
              reference :  rpl_create_dodag_version
              reference :  rpl_create_instance
              reference :  rpl_create_neighbour
              reference :  rpl_delete_dodag
              reference :  rpl_delete_dodag_root
              reference :  rpl_delete_instance
              reference :  rpl_delete_neighbour
              reference :  rpl_dodag_am_root
              reference :  rpl_dodag_delete_dio_route
              reference :  rpl_dodag_get_config
              reference :  rpl_dodag_get_prefix_list
              reference :  rpl_dodag_get_route_list
              reference :  rpl_dodag_get_version_number_as_root
              reference :  rpl_dodag_increment_dtsn
              reference :  rpl_dodag_mop
              reference :  rpl_dodag_set_leaf
              reference :  rpl_dodag_set_pref
              reference :  rpl_dodag_set_root
              reference :  rpl_dodag_set_version_number_as_root
              reference :  rpl_dodag_update_config
              reference :  rpl_dodag_update_dio_prefix
              reference :  rpl_dodag_update_dio_route
              reference :  rpl_dodag_update_unpublished_dio_prefix_finish
              reference :  rpl_dodag_update_unpublished_dio_prefix_start
              reference :  rpl_dodag_version_compare
              reference :  rpl_dodag_version_rank_indicates_possible_sub_dodag
              reference :  rpl_dodag_was_root
              reference :  rpl_downward_dao_slow_timer
              reference :  rpl_downward_dao_timer
              reference :  rpl_downward_paths_invalidate
              reference :  rpl_downward_print_instance
              reference :  rpl_downward_route_table_get
              reference :  rpl_downward_transit_error
              definition:  rpl_free
              reference :  rpl_instance_address_candidate_count
              reference :  rpl_instance_address_is_candidate
              reference :  rpl_instance_address_is_parent
              reference :  rpl_instance_address_registration_done
              reference :  rpl_instance_am_root
              reference :  rpl_instance_consistent_rx
              reference :  rpl_instance_current_dodag
              reference :  rpl_instance_current_dodag_version
              reference :  rpl_instance_current_rank
              reference :  rpl_instance_dao_acked
              reference :  rpl_instance_dao_received
              reference :  rpl_instance_dao_request
              reference :  rpl_instance_dao_timeout
              reference :  rpl_instance_delete_published_dao_target
              reference :  rpl_instance_dio_trigger
              reference :  rpl_instance_force_leaf
              reference :  rpl_instance_inconsistency
              reference :  rpl_instance_local_repair
              reference :  rpl_instance_mop
              reference :  rpl_instance_neighbours_changed
              reference :  rpl_instance_poison
              reference :  rpl_instance_possible_better_candidate
              reference :  rpl_instance_predicate_match
              reference :  rpl_instance_preferred_parent
              reference :  rpl_instance_publish_dao_target
              reference :  rpl_instance_purge
              reference :  rpl_instance_remove_interface
              reference :  rpl_instance_send_address_registration
              reference :  rpl_instance_set_dodag_version
              reference :  rpl_instance_slow_timer
              reference :  rpl_instance_trigger_parent_selection
              reference :  rpl_lookup_dodag
              reference :  rpl_lookup_dodag_version
              reference :  rpl_lookup_instance
              reference :  rpl_lookup_last_candidate_from_list
              reference :  rpl_lookup_neighbour_by_ll_address
              reference :  rpl_neighbour_global_address
              reference :  rpl_neighbour_ll_address
              reference :  rpl_neighbour_update_dodag_version
              reference :  rpl_neighbour_update_dtsn
              reference :  rpl_neighbour_update_global_address
              reference :  rpl_policy_etx_change_parent_selection_delay
              reference :  rpl_policy_etx_hysteresis
              reference :  rpl_policy_join_config
              reference :  rpl_policy_join_dodag
              reference :  rpl_policy_join_instance
              reference :  rpl_policy_mrhof_parent_set_size
              definition:  rpl_policy_mrhof_parent_set_size_get
              reference :  rpl_policy_parent_confirmation_requested
              reference :  rpl_policy_request_dao_acks
              reference :  rpl_policy_set_address_registration_timeout
              reference :  rpl_policy_set_dao_retry_count
              reference :  rpl_policy_set_dio_multicast_config_advertisment_min_count
              reference :  rpl_policy_set_initial_dao_ack_wait
              reference :  rpl_policy_set_minimum_dao_target_refresh
              reference :  rpl_policy_set_mrhof_parent_set_size
              reference :  rpl_policy_set_parent_confirmation_request
              reference :  rpl_policy_target_descriptor_for_host_address
              reference :  rpl_policy_target_descriptor_for_own_address
              definition:  rpl_possible_better_candidate
              reference :  rpl_rank_compare
              definition:  rpl_realloc
              reference :  rpl_seq_inc
              reference :  rpl_seq_init
              reference :  rpl_upward_accept_prefix_update
              reference :  rpl_upward_dio_timer
              reference :  rpl_upward_print_instance
              reference :  rpl_upward_read_dao_target_list_size
              reference :  rpl_upward_read_dodag_info
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/nanostack/sal-stack-nanostack/source/RPL/rpl_data.o.
              reference :  __aeabi_memclr
              reference :  __aeabi_memcpy
              reference :  addr_interface_address_compare
              reference :  addr_ipv6_equal
              reference :  addr_len_from_type
              reference :  buffer_corrupt_check
              reference :  buffer_free
              reference :  buffer_free_route
              reference :  buffer_headroom
              reference :  common_read_16_bit
              reference :  common_write_16_bit
              reference :  icmpv6_error
              reference :  ipv6_buffer_route_to
              reference :  ipv6_map_ip_to_ll
              reference :  ipv6_map_ll_to_ip_link_local
              reference :  ipv6_route_table_set_next_hop_fn
              reference :  ipv6_route_table_set_predicate_fn
              reference :  ipv6_set_exthdr_provider
              reference :  mbed_trace_ipv6
              reference :  mbed_trace_ipv6_prefix
              reference :  mbed_tracef
              reference :  memcmp
              reference :  memswap
              reference :  nrpl_dag_rank
              reference :  ns_dyn_mem_free
              reference :  ns_dyn_mem_temporary_alloc
              reference :  protocol_stack_interface_info_get_by_id
              reference :  protocol_stats_update
              reference :  rpl_alloc
              definition:  rpl_data_forwarding_error
              definition:  rpl_data_get_route_predicate
              definition:  rpl_data_get_srh_last_address
              definition:  rpl_data_init
              definition:  rpl_data_init_root
              definition:  rpl_data_is_rpl_parent_route
              definition:  rpl_data_is_rpl_route
              definition:  rpl_data_process_hbh
              definition:  rpl_data_process_routing_header
              definition:  rpl_data_remember_outer
              definition:  rpl_data_sr_invalidate
              definition:  rpl_data_sr_next_hop
              reference :  rpl_downward_compute_paths
              reference :  rpl_instance_am_root
              reference :  rpl_instance_current_dodag
              reference :  rpl_instance_inconsistency
              reference :  rpl_instance_match_dao_target
              reference :  rpl_lookup_instance
              reference :  rpl_neighbour_instance
              reference :  rpl_policy_srh_next_hop_interface
              reference :  rpl_rank_compare_dagrank_rank
              reference :  rpl_realloc
              reference :  trace_sockaddr
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/nanostack/sal-stack-nanostack/source/RPL/rpl_downward.o.
              reference :  ADDR_UNSPECIFIED
              reference :  __aeabi_memclr4
              reference :  addr_ipv6_equal
              reference :  addr_is_ipv6_link_local
              reference :  bitcopy0
              reference :  bitsequal
              reference :  common_read_32_bit
              reference :  common_write_32_bit
              reference :  icmpv6_build_ns
              reference :  ip6_prefix_tos
              reference :  ip6tos
              reference :  ipv6_neighbour_reachability_confirmation
              reference :  ipv6_neighbour_reachability_problem
              reference :  ipv6_route_add_with_info
              reference :  ipv6_route_delete_with_info
              reference :  ipv6_route_lookup_with_info
              reference :  ipv6_route_table_remove_info
              reference :  mbed_trace_ipv6
              reference :  mbed_trace_ipv6_prefix
              reference :  mbed_tracef
              reference :  memcmp
              reference :  ns_dyn_mem_free
              reference :  ns_dyn_mem_temporary_alloc
              reference :  ns_list_add_to_end_
              reference :  ns_list_add_to_start_
              reference :  ns_list_concatenate_
              reference :  ns_list_count_
              reference :  ns_list_get_next_
              reference :  ns_list_init_
              reference :  ns_list_remove_
              reference :  protocol_core_monotonic_time
              reference :  protocol_interface_address_compare
              reference :  protocol_push
              reference :  protocol_stack_interface_info_get_by_id
              reference :  protocol_stack_interface_info_get_by_rpl_domain
              reference :  randLIB_get_random_in_range
              reference :  randLIB_randomise_base
              reference :  rpl_alloc
              reference :  rpl_control_event
              reference :  rpl_control_transmit_dao
              definition:  rpl_create_dao_target
              reference :  rpl_data_sr_invalidate
              definition:  rpl_delete_dao_target
              reference :  rpl_delete_neighbour
              reference :  rpl_dodag_am_root
              reference :  rpl_dodag_get_config
              reference :  rpl_dodag_mop
              definition:  rpl_downward_compute_paths
              definition:  rpl_downward_convert_dodag_preferences_to_dao_path_control
              definition:  rpl_downward_dao_slow_timer
              definition:  rpl_downward_dao_timer
              definition:  rpl_downward_neighbour_gone
              definition:  rpl_downward_paths_invalidate
              definition:  rpl_downward_print_instance
              definition:  rpl_downward_process_dao_parent_changes
              definition:  rpl_downward_route_table_get
              definition:  rpl_downward_transit_error
              reference :  rpl_free
              definition:  rpl_instance_address_registration_done
              reference :  rpl_instance_am_root
              reference :  rpl_instance_current_dodag
              definition:  rpl_instance_dao_acked
              definition:  rpl_instance_dao_received
              definition:  rpl_instance_dao_request
              definition:  rpl_instance_dao_timeout
              definition:  rpl_instance_dao_trigger
              definition:  rpl_instance_delete_published_dao_target
              definition:  rpl_instance_get_active_target_confirmation
              reference :  rpl_instance_increment_dtsn
              definition:  rpl_instance_lookup_dao_target
              definition:  rpl_instance_lookup_published_dao_target
              definition:  rpl_instance_match_dao_target
              reference :  rpl_instance_mop
              definition:  rpl_instance_parent_address_reg_timer_update
              definition:  rpl_instance_publish_dao_target
              definition:  rpl_instance_send_address_registration
              definition:  rpl_instance_send_dao_update
              reference :  rpl_policy_address_registration_timeout
              reference :  rpl_policy_dao_retry_count
              reference :  rpl_policy_dao_trigger_after_srh_error
              reference :  rpl_policy_initial_dao_ack_wait
              reference :  rpl_policy_minimum_dao_target_refresh
              reference :  rpl_policy_modify_downward_cost_to_root_neighbour
              reference :  rpl_policy_parent_confirmation_requested
              reference :  rpl_seq_compare
              reference :  rpl_seq_inc
              reference :  rpl_seq_init
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/nanostack/sal-stack-nanostack/source/RPL/rpl_mrhof.o.
              reference :  common_serial_number_greater_32
              reference :  etx_read
              reference :  ipv6_map_ip_to_ll_and_call_ll_addr_handler
              reference :  mbed_tracef
              reference :  ns_list_add_to_end_
              reference :  ns_list_concatenate_
              reference :  ns_list_get_next_
              reference :  ns_list_remove_
              reference :  rpl_dodag_pref_compare
              reference :  rpl_dodag_version_raise_greediness
              reference :  rpl_downward_convert_dodag_preferences_to_dao_path_control
              reference :  rpl_instance_preferred_parent
              reference :  rpl_instance_set_dodag_version
              definition:  rpl_mrhof_init
              reference :  rpl_objective_register
              reference :  rpl_policy_mrhof_max_link_metric
              reference :  rpl_policy_mrhof_max_rank_stretch_for_extra_parents
              reference :  rpl_policy_mrhof_parent_set_size
              reference :  rpl_policy_mrhof_parent_switch_threshold
              reference :  rpl_rank_add
              reference :  rpl_rank_next_level
              reference :  rpl_rank_sub
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/nanostack/sal-stack-nanostack/source/RPL/rpl_objective.o.
              reference :  ns_list_add_to_end_
              reference :  ns_list_get_next_
              definition:  rpl_objective_lookup
              definition:  rpl_objective_register
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/nanostack/sal-stack-nanostack/source/RPL/rpl_of0.o.
              reference :  common_serial_number_greater_32
              reference :  etx_read
              reference :  ipv6_map_ip_to_ll_and_call_ll_addr_handler
              reference :  mbed_tracef
              reference :  ns_list_add_to_end_
              reference :  ns_list_concatenate_
              reference :  ns_list_get_next_
              reference :  ns_list_remove_
              reference :  rpl_dodag_pref_compare
              reference :  rpl_dodag_version_raise_greediness
              reference :  rpl_downward_convert_dodag_preferences_to_dao_path_control
              reference :  rpl_instance_preferred_parent
              reference :  rpl_instance_set_dodag_version
              reference :  rpl_objective_register
              definition:  rpl_of0_init
              reference :  rpl_policy_of0_dodag_preference_supersedes_grounded
              reference :  rpl_policy_of0_max_backup_successors
              reference :  rpl_policy_of0_rank_factor
              reference :  rpl_policy_of0_stretch_of_rank
              reference :  rpl_rank_add
              reference :  rpl_rank_compare
              reference :  rpl_rank_next_level
              reference :  rpl_seq_compare
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/nanostack/sal-stack-nanostack/source/RPL/rpl_policy.o.
              reference :  etx_read
              reference :  ipv6_map_ip_to_ll_and_call_ll_addr_handler
              reference :  ipv6_neighbour_cache_by_interface_id
              reference :  ipv6_neighbour_is_probably_reachable
              reference :  ipv6_neighbour_lookup
              reference :  ipv6_neighbour_used
              reference :  mbed_trace_ipv6
              reference :  mbed_tracef
              reference :  randLIB_get_random_in_range
              definition:  rpl_policy_address_registration_timeout
              definition:  rpl_policy_dao_retry_count
              definition:  rpl_policy_dao_trigger_after_srh_error
              definition:  rpl_policy_dio_multicast_config_advertisment_min_count
              definition:  rpl_policy_dio_parent_selection_delay
              definition:  rpl_policy_dio_validity_period
              definition:  rpl_policy_etx_change_parent_selection_delay
              definition:  rpl_policy_etx_hysteresis
              definition:  rpl_policy_forward_link_etx_threshold_set
              definition:  rpl_policy_initial_dao_ack_wait
              definition:  rpl_policy_join_config
              definition:  rpl_policy_join_dodag
              definition:  rpl_policy_join_instance
              definition:  rpl_policy_minimum_dao_target_refresh
              definition:  rpl_policy_modify_downward_cost_to_root_neighbour
              definition:  rpl_policy_mrhof_max_link_metric
              definition:  rpl_policy_mrhof_max_rank_stretch_for_extra_parents
              definition:  rpl_policy_mrhof_parent_set_size
              definition:  rpl_policy_mrhof_parent_switch_threshold
              definition:  rpl_policy_of0_dodag_preference_supersedes_grounded
              definition:  rpl_policy_of0_max_backup_successors
              definition:  rpl_policy_of0_rank_factor
              definition:  rpl_policy_of0_stretch_of_rank
              definition:  rpl_policy_parent_confirmation_requested
              definition:  rpl_policy_parent_selection_period
              definition:  rpl_policy_repair_dis_count
              definition:  rpl_policy_repair_initial_dis_delay
              definition:  rpl_policy_repair_maximum_dis_interval
              definition:  rpl_policy_repair_poison_count
              definition:  rpl_policy_request_dao_acks
              definition:  rpl_policy_set_address_registration_timeout
              definition:  rpl_policy_set_dao_retry_count
              definition:  rpl_policy_set_dio_multicast_config_advertisment_min_count
              definition:  rpl_policy_set_dio_validity_period
              definition:  rpl_policy_set_initial_dao_ack_wait
              definition:  rpl_policy_set_minimum_dao_target_refresh
              definition:  rpl_policy_set_mrhof_parent_set_size
              definition:  rpl_policy_set_parent_confirmation_request
              definition:  rpl_policy_srh_next_hop_interface
              definition:  rpl_policy_target_descriptor_for_host_address
              definition:  rpl_policy_target_descriptor_for_own_address
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/nanostack/sal-stack-nanostack/source/RPL/rpl_upward.o.
              reference :  __aeabi_memclr
              reference :  __aeabi_memclr4
              reference :  addr_ipv6_equal
              reference :  bitcopy
              reference :  bitcopy0
              reference :  bitsequal
              reference :  icmpv6_prefix_add
              reference :  ip6tos
              reference :  ipv6_map_ip_to_ll_and_call_ll_addr_handler
              reference :  ipv6_route_add_metric
              reference :  ipv6_route_pref_to_metric
              reference :  ipv6_route_table_remove_info
              reference :  mbed_trace_array
              reference :  mbed_trace_ipv6
              reference :  mbed_tracef
              reference :  mbed_vtracef
              definition:  nrpl_dag_rank
              definition:  nrpl_rank
              reference :  ns_dyn_mem_free
              reference :  ns_list_add_before_
              reference :  ns_list_add_to_end_
              reference :  ns_list_add_to_start_
              reference :  ns_list_count_
              reference :  ns_list_get_last_
              reference :  ns_list_get_next_
              reference :  ns_list_get_previous_
              reference :  ns_list_init_
              reference :  ns_list_remove_
              reference :  protocol_6lowpan_neighbor_priority_clear_all
              reference :  protocol_6lowpan_neighbor_priority_set
              reference :  protocol_6lowpan_neighbor_second_priority_set
              reference :  protocol_core_monotonic_time
              reference :  protocol_stack_interface_info_get_by_id
              reference :  protocol_stats_update
              reference :  randLIB_randomise_base
              reference :  rpl_alloc
              reference :  rpl_control_disable_ra_routes
              reference :  rpl_control_event
              reference :  rpl_control_print
              reference :  rpl_control_process_prefix_option
              reference :  rpl_control_transmit_dio
              reference :  rpl_control_transmit_dis
              definition:  rpl_create_dodag
              definition:  rpl_create_dodag_version
              definition:  rpl_create_instance
              definition:  rpl_create_neighbour
              reference :  rpl_delete_dao_target
              definition:  rpl_delete_dodag
              definition:  rpl_delete_dodag_root
              definition:  rpl_delete_dodag_version
              definition:  rpl_delete_instance
              definition:  rpl_delete_neighbour
              definition:  rpl_dodag_am_leaf
              definition:  rpl_dodag_am_root
              definition:  rpl_dodag_delete_dio_prefix
              definition:  rpl_dodag_delete_dio_route
              definition:  rpl_dodag_get_config
              definition:  rpl_dodag_get_prefix_list
              definition:  rpl_dodag_get_route_list
              definition:  rpl_dodag_get_version_number_as_root
              definition:  rpl_dodag_inconsistency
              definition:  rpl_dodag_increment_dtsn
              definition:  rpl_dodag_is_current
              definition:  rpl_dodag_mop
              definition:  rpl_dodag_pref_compare
              definition:  rpl_dodag_set_leaf
              definition:  rpl_dodag_set_pref
              definition:  rpl_dodag_set_root
              definition:  rpl_dodag_set_version_number_as_root
              definition:  rpl_dodag_update_config
              definition:  rpl_dodag_update_dio_prefix
              definition:  rpl_dodag_update_dio_route
              definition:  rpl_dodag_update_implicit_system_routes
              definition:  rpl_dodag_update_unpublished_dio_prefix_finish
              definition:  rpl_dodag_update_unpublished_dio_prefix_start
              definition:  rpl_dodag_version_compare
              definition:  rpl_dodag_version_is_current
              definition:  rpl_dodag_version_limit_greediness
              definition:  rpl_dodag_version_raise_greediness
              definition:  rpl_dodag_version_rank_indicates_possible_sub_dodag
              definition:  rpl_dodag_was_root
              reference :  rpl_downward_neighbour_gone
              reference :  rpl_downward_process_dao_parent_changes
              reference :  rpl_free
              definition:  rpl_instance_address_candidate_count
              definition:  rpl_instance_address_is_candidate
              definition:  rpl_instance_address_is_parent
              definition:  rpl_instance_am_root
              definition:  rpl_instance_candidate_rank
              definition:  rpl_instance_consistent_rx
              definition:  rpl_instance_current_dodag
              definition:  rpl_instance_current_dodag_version
              definition:  rpl_instance_current_rank
              definition:  rpl_instance_dio_trigger
              definition:  rpl_instance_force_leaf
              reference :  rpl_instance_get_active_target_confirmation
              definition:  rpl_instance_inconsistency
              definition:  rpl_instance_increment_dtsn
              definition:  rpl_instance_local_repair
              definition:  rpl_instance_mop
              definition:  rpl_instance_neighbor_delete
              definition:  rpl_instance_neighbours_changed
              reference :  rpl_instance_parent_address_reg_timer_update
              definition:  rpl_instance_poison
              definition:  rpl_instance_possible_better_candidate
              definition:  rpl_instance_predicate_match
              definition:  rpl_instance_preferred_parent
              definition:  rpl_instance_purge
              definition:  rpl_instance_remove_interface
              definition:  rpl_instance_run_parent_selection
              definition:  rpl_instance_set_dodag_version
              definition:  rpl_instance_set_local_repair
              definition:  rpl_instance_slow_timer
              definition:  rpl_instance_trigger_parent_selection
              definition:  rpl_lookup_dodag
              definition:  rpl_lookup_dodag_version
              definition:  rpl_lookup_instance
              definition:  rpl_lookup_last_candidate_from_list
              definition:  rpl_lookup_neighbour_by_ll_address
              definition:  rpl_neighbour_global_address
              definition:  rpl_neighbour_instance
              definition:  rpl_neighbour_ll_address
              definition:  rpl_neighbour_update_dodag_version
              definition:  rpl_neighbour_update_dtsn
              definition:  rpl_neighbour_update_global_address
              reference :  rpl_objective_lookup
              reference :  rpl_policy_dio_multicast_config_advertisment_min_count
              reference :  rpl_policy_dio_parent_selection_delay
              reference :  rpl_policy_dio_validity_period
              reference :  rpl_policy_parent_confirmation_requested
              reference :  rpl_policy_parent_selection_period
              reference :  rpl_policy_repair_dis_count
              reference :  rpl_policy_repair_initial_dis_delay
              reference :  rpl_policy_repair_maximum_dis_interval
              reference :  rpl_policy_repair_poison_count
              definition:  rpl_rank_add
              definition:  rpl_rank_compare
              definition:  rpl_rank_compare_dagrank_rank
              definition:  rpl_rank_max_at_level
              definition:  rpl_rank_next_level
              definition:  rpl_rank_sub
              definition:  rpl_seq_compare
              definition:  rpl_seq_inc
              definition:  rpl_seq_init
              definition:  rpl_upward_accept_prefix_update
              definition:  rpl_upward_dio_timer
              definition:  rpl_upward_print_dodag
              definition:  rpl_upward_print_instance
              definition:  rpl_upward_print_neighbour
              definition:  rpl_upward_print_neighbours_in_version
              definition:  rpl_upward_read_dao_target_list_size
              definition:  rpl_upward_read_dodag_info
              reference :  trickle_consistent_heard
              reference :  trickle_inconsistent_heard
              reference :  trickle_start
              reference :  trickle_timer
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/nanostack/sal-stack-nanostack/source/Security/Common/security_lib.o.
              reference :  __aeabi_memclr4
              reference :  __aeabi_memcpy
              definition:  active_ecc_sec_suite
              reference :  amr_tls_session_allocate
              reference :  arm_tls_session_clear
              reference :  buffer_free
              reference :  common_read_24_bit
              definition:  eap_fragmentation_init
              reference :  mbed_trace_array
              reference :  mbed_tracef
              reference :  memcmp
              reference :  ns_dyn_mem_alloc
              reference :  ns_dyn_mem_free
              reference :  ns_list_add_to_start_
              reference :  ns_list_get_next_
              reference :  ns_list_remove_
              reference :  pana_common_state_machine
              reference :  pana_free_dynamic_ram
              reference :  pana_handshake_timeout
              reference :  pana_heap_structure_allocate
              reference :  pana_key_update_delay_timer
              reference :  pana_retry_check
              reference :  pana_retry_req_max_get
              reference :  pana_session_base_init
              reference :  pana_session_nvm_udate
              reference :  pana_session_state_init
              reference :  pana_timeout_timer_set
              reference :  randLIB_get_32bit
              definition:  sec_auth_re_check
              definition:  sec_check_suite_ptrs
              definition:  sec_lib_security_session_allocate
              definition:  sec_lib_state_machine_lock
              definition:  sec_lib_state_machine_trig
              definition:  sec_libray_init
              definition:  sec_pana_key_update_trig
              definition:  sec_pana_protocol_init
              definition:  sec_prf_state_set
              definition:  sec_set_auth_timeout
              definition:  sec_suite_create
              definition:  sec_suite_list
              definition:  sec_suite_list_clean
              definition:  sec_suite_remove
              definition:  sec_suite_selected_address
              definition:  sec_suite_selected_pana_session
              definition:  sec_suite_selected_py_pan_id
              definition:  sec_suite_socket_event
              definition:  sec_suite_tls_free
              definition:  sec_suite_verify
              definition:  sec_timer_handle
              definition:  seclib_session_clean
              reference :  shalib_prf_calc
              reference :  shalib_prf_param_get
              reference :  tls_ccm_data_decrypt
              reference :  tls_finnish_copy
              reference :  tls_hanshake_hash_cal
              reference :  tls_heap_allocate
              reference :  tls_key_expansion_cal
              reference :  tls_master_key_cal
              reference :  tls_prepare_change_chipher_spec
              definition:  tls_server_certi_hash_copy
              reference :  tls_session_id_genrate
              reference :  tls_verify_calc
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/nanostack/sal-stack-nanostack/source/Security/PANA/eap_protocol.o.
              definition:  EAP_ANYMOUS
              reference :  __aeabi_memcpy
              reference :  buffer_corrupt_check
              reference :  buffer_free
              reference :  buffer_get
              reference :  buffer_headroom
              reference :  buffer_turnaround
              definition:  eap_down
              reference :  eap_header_build
              reference :  eap_header_parse
              reference :  eap_header_size
              reference :  eap_tls_header_build
              reference :  eap_tls_header_parse
              reference :  eap_tls_header_size
              reference :  eap_tls_payload_push
              definition:  eap_up
              reference :  mbed_tracef
              reference :  pana_eap_down
              definition:  pana_eap_frag_re_tx
              definition:  pana_eap_fragmetation_force_retry
              definition:  pana_eap_fragmetation_force_timeout
              definition:  pana_eap_fragmetation_start_filter
              definition:  pana_eap_identity_build
              reference :  pana_eap_payload_down
              definition:  pana_eap_tls_finnish_build
              definition:  pana_eap_tls_start_build
              reference :  pana_key_calculation
              reference :  pana_parameters_get
              reference :  pana_timeout_timer_set
              reference :  sec_lib_state_machine_trig
              reference :  sec_set_auth_timeout
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/nanostack/sal-stack-nanostack/source/Security/PANA/pana.o.
              definition:  PANA_AUTH_STRING
              definition:  PANA_PAA_ENC_KEY_STRING
              definition:  PANA_PAC_ENC_KEY_STRING
              reference :  SHALIB_finish_HMAC
              reference :  SHALIB_init_HMAC
              reference :  SHALIB_push_data_HMAC
              reference :  __aeabi_memclr4
              reference :  __aeabi_memcpy
              reference :  __aeabi_memmove
              reference :  addr_interface_get_ll_address
              reference :  addr_interface_select_source
              reference :  buffer_corrupt_check
              reference :  buffer_free
              reference :  buffer_headroom
              reference :  buffer_socket_set
              reference :  buffer_turnaround
              definition:  build_pana_base
              reference :  ccm_process_run
              reference :  ccm_sec_init
              reference :  common_read_16_bit
              reference :  common_read_32_bit
              reference :  common_write_16_bit
              reference :  common_write_32_bit
              reference :  eap_down
              reference :  eap_fragmentation_init
              definition:  eap_tls_payload_push
              reference :  eap_up
              reference :  eventOS_event_handler_create
              reference :  eventOS_event_send
              reference :  icmp_nd_set_nd_def_router_address
              reference :  mbed_tracef
              reference :  memcmp
              reference :  nd_get_pana_address
              reference :  ns_dyn_mem_alloc
              reference :  ns_dyn_mem_free
              reference :  ns_dyn_mem_temporary_alloc
              reference :  nwk_6lowpan_bootsrap_pana_authentication_cb
              definition:  pana_auth_check
              definition:  pana_auth_hash_calc
              definition:  pana_auth_message_handler
              definition:  pana_authentication_ready
              reference :  pana_avp_32_bit_write
              reference :  pana_avp_base_write
              reference :  pana_avp_discover
              reference :  pana_avp_write_n_bytes
              definition:  pana_ccm_data_crypt
              definition:  pana_common_state_machine
              definition:  pana_down
              definition:  pana_eap_down
              definition:  pana_eap_payload_down
              definition:  pana_eap_tls_up
              definition:  pana_event_handler
              definition:  pana_free_dynamic_ram
              definition:  pana_get_params
              definition:  pana_get_params_ptr
              definition:  pana_handshake_timeout
              reference :  pana_header_write
              definition:  pana_heap_structure_allocate
              definition:  pana_interface_certificate_chain_set
              definition:  pana_key_calculation
              definition:  pana_key_get
              definition:  pana_parameters_get
              definition:  pana_relay_avp_build
              definition:  pana_relay_parse
              definition:  pana_reset_values
              definition:  pana_retry_check
              definition:  pana_retry_req_max_get
              definition:  pana_session_allocate
              definition:  pana_session_base_init
              definition:  pana_session_init_by_session_ptr
              definition:  pana_session_startms_parse
              definition:  pana_session_state_init
              definition:  pana_set_agend_address
              definition:  pana_set_params
              definition:  pana_socket
              definition:  pana_socket_id_get
              definition:  pana_socket_init
              definition:  pana_start_message_build
              definition:  pana_timeout_timer_set
              reference :  protocol_6lowpan_interface_get_link_local_cordinator_address
              reference :  protocol_6lowpan_nd_border_router_address_get
              reference :  protocol_push
              reference :  randLIB_get_8bit
              reference :  randLIB_get_n_bytes_random
              reference :  sec_check_suite_ptrs
              reference :  sec_lib_state_machine_trig
              reference :  sec_pana_protocol_init
              reference :  sec_suite_selected_py_pan_id
              reference :  sec_suite_socket_event
              reference :  sec_suite_tls_free
              reference :  sec_suite_verify
              reference :  socket_close
              reference :  socket_create
              reference :  socket_dereference
              reference :  socket_pointer_get
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/nanostack/sal-stack-nanostack/source/Security/PANA/pana_avp.o.
              reference :  __aeabi_memclr
              reference :  __aeabi_memcpy
              reference :  common_read_16_bit
              reference :  common_read_32_bit
              reference :  common_write_16_bit
              reference :  common_write_32_bit
              definition:  pana_avp_32_bit_write
              definition:  pana_avp_base_write
              definition:  pana_avp_discover
              definition:  pana_avp_vendor_id_write_n_bytes
              definition:  pana_avp_write_n_bytes
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/nanostack/sal-stack-nanostack/source/Security/PANA/pana_client.o.
              reference :  __aeabi_memcpy
              reference :  addr_interface_get_ll_address
              reference :  arm_tls_check_key
              reference :  buffer_corrupt_check
              reference :  buffer_free
              reference :  buffer_get
              reference :  buffer_turnaround
              reference :  build_pana_base
              reference :  common_read_32_bit
              reference :  common_write_32_bit
              reference :  eap_fragmentation_init
              reference :  eap_header_parse
              reference :  lowpan_neighbour_data_clean
              reference :  mac_data_poll_enable_check
              reference :  mac_data_poll_protocol_poll_mode_disable
              reference :  mac_helper_default_key_index_get
              reference :  mac_helper_security_next_key_set
              reference :  mbed_tracef
              reference :  memcmp
              reference :  mle_service_reject_message_build
              reference :  mle_service_security_set_security_key
              reference :  ns_dyn_mem_alloc
              reference :  pana_auth_check
              reference :  pana_auth_hash_calc
              reference :  pana_auth_message_handler
              reference :  pana_authentication_ready
              reference :  pana_avp_32_bit_write
              reference :  pana_avp_discover
              reference :  pana_avp_vendor_id_write_n_bytes
              reference :  pana_avp_write_n_bytes
              reference :  pana_ccm_data_crypt
              definition:  pana_client_init
              definition:  pana_client_interface_init
              definition:  pana_client_key_pull
              definition:  pana_client_nvm_callback_set
              definition:  pana_client_parameter_allocate
              reference :  pana_down
              reference :  pana_eap_down
              reference :  pana_eap_identity_build
              reference :  pana_eap_tls_finnish_build
              reference :  pana_eap_tls_up
              reference :  pana_free_dynamic_ram
              reference :  pana_header_parse
              reference :  pana_key_calculation
              reference :  pana_key_get
              definition:  pana_ping_notify_msg_tx
              reference :  pana_relay_avp_build
              reference :  pana_relay_parse
              definition:  pana_reset_client_session
              reference :  pana_session_init_by_session_ptr
              reference :  pana_session_startms_parse
              reference :  pana_session_state_init
              reference :  pana_set_agend_address
              reference :  pana_socket_init
              reference :  pana_start_message_build
              reference :  pana_timeout_timer_set
              reference :  protocol_push
              reference :  protocol_stack_interface_info_get_by_id
              reference :  sec_auth_re_check
              reference :  sec_check_suite_ptrs
              reference :  sec_lib_security_session_allocate
              reference :  sec_lib_state_machine_lock
              reference :  sec_lib_state_machine_trig
              reference :  sec_set_auth_timeout
              reference :  sec_suite_list_clean
              reference :  sec_suite_selected_py_pan_id
              reference :  sec_suite_tls_free
              reference :  seclib_session_clean
              reference :  tls_alert_build
              reference :  tls_build_client_change_chipher_suite_finnish
              reference :  tls_client_hello_build
              reference :  tls_client_up
              reference :  tls_prepare_change_chipher_spec
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/nanostack/sal-stack-nanostack/source/Security/PANA/pana_eap_header.o.
              reference :  common_read_16_bit
              reference :  common_read_32_bit
              reference :  common_write_16_bit
              reference :  common_write_32_bit
              definition:  eap_header_build
              definition:  eap_header_parse
              definition:  eap_header_size
              definition:  eap_tls_header_build
              definition:  eap_tls_header_parse
              definition:  eap_tls_header_size
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/nanostack/sal-stack-nanostack/source/Security/PANA/pana_header.o.
              reference :  common_read_16_bit
              reference :  common_read_32_bit
              reference :  common_write_16_bit
              reference :  common_write_32_bit
              definition:  pana_header_parse
              definition:  pana_header_write
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/nanostack/sal-stack-nanostack/source/Security/PANA/pana_relay_table.o.
              reference :  memcmp
              reference :  ns_dyn_mem_alloc
              reference :  ns_dyn_mem_free
              definition:  pana_relay_detect
              definition:  pana_relay_table_init
              definition:  pana_relay_table_update
              definition:  pana_relay_ttl_update
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/nanostack/sal-stack-nanostack/source/Security/PANA/pana_server.o.
              reference :  __aeabi_memclr4
              reference :  __aeabi_memcpy
              reference :  amr_tls_session_allocate
              reference :  arm_tls_session_clear
              reference :  buffer_corrupt_check
              reference :  buffer_free
              reference :  buffer_get
              reference :  build_pana_base
              reference :  common_read_16_bit
              reference :  common_read_32_bit
              reference :  common_write_16_bit
              reference :  common_write_32_bit
              reference :  eap_fragmentation_init
              reference :  eap_header_build
              reference :  lowpan_neighbour_data_clean
              reference :  mac_helper_security_default_key_set
              reference :  mac_helper_security_key_swap_next_to_default
              reference :  mac_helper_security_next_key_set
              reference :  mbed_tracef
              reference :  memcmp
              reference :  mle_service_security_key_trig
              reference :  mle_service_security_next_key_id_get
              reference :  mle_service_security_set_security_key
              reference :  ns_dyn_mem_alloc
              reference :  ns_dyn_mem_free
              reference :  ns_dyn_mem_temporary_alloc
              reference :  pana_auth_check
              reference :  pana_auth_hash_calc
              reference :  pana_auth_message_handler
              reference :  pana_avp_32_bit_write
              reference :  pana_avp_base_write
              reference :  pana_avp_discover
              reference :  pana_avp_vendor_id_write_n_bytes
              reference :  pana_avp_write_n_bytes
              reference :  pana_ccm_data_crypt
              reference :  pana_down
              reference :  pana_eap_down
              reference :  pana_eap_identity_build
              reference :  pana_eap_tls_finnish_build
              reference :  pana_eap_tls_start_build
              reference :  pana_eap_tls_up
              reference :  pana_free_dynamic_ram
              reference :  pana_header_parse
              reference :  pana_heap_structure_allocate
              reference :  pana_key_get
              definition:  pana_key_update_delay_timer
              definition:  pana_network_key_get
              reference :  pana_parameters_get
              reference :  pana_relay_avp_build
              reference :  pana_relay_parse
              definition:  pana_server_interface_init
              definition:  pana_server_key_material_load
              definition:  pana_server_key_update
              definition:  pana_server_nvm_callback_set
              definition:  pana_server_nvm_client_session_load
              definition:  pana_server_process_ready_cb_set
              definition:  pana_server_restore_from_nvm
              definition:  pana_server_trig_new_key
              definition:  pana_session_nvm_udate
              reference :  pana_session_startms_parse
              reference :  pana_set_agend_address
              reference :  pana_socket_id_get
              reference :  pana_socket_init
              reference :  pana_start_message_build
              reference :  protocol_push
              reference :  protocol_stack_interface_info_get_by_id
              reference :  randLIB_get_32bit
              reference :  randLIB_get_8bit
              reference :  randLIB_get_n_bytes_random
              reference :  sec_auth_re_check
              reference :  sec_check_suite_ptrs
              reference :  sec_lib_security_session_allocate
              reference :  sec_lib_state_machine_lock
              reference :  sec_lib_state_machine_trig
              reference :  sec_pana_key_update_trig
              reference :  sec_suite_create
              reference :  sec_suite_list_clean
              reference :  sec_suite_remove
              reference :  sec_suite_selected_address
              reference :  sec_suite_selected_pana_session
              reference :  sec_suite_tls_free
              reference :  seclib_session_clean
              reference :  tls_alert_build
              reference :  tls_build_client_change_chipher_suite_finnish
              reference :  tls_heap_allocate
              reference :  tls_nonce_update
              reference :  tls_prepare_change_chipher_spec
              reference :  tls_server_hello_build
              reference :  tls_server_up
              reference :  tls_session_id_genrate
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/nanostack/sal-stack-nanostack/source/Security/TLS/tls_ccm_crypt.o.
              reference :  ccm_process_run
              reference :  ccm_sec_init
              reference :  common_write_16_bit
              definition:  tls_ccm_data_decrypt
              definition:  tls_ccm_data_encrypt
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/nanostack/sal-stack-nanostack/source/Security/TLS/tls_lib.o.
              reference :  __aeabi_memclr4
              reference :  __aeabi_memcpy
              definition:  amr_tls_session_allocate
              definition:  arm_tls_add_psk_key
              definition:  arm_tls_check_key
              definition:  arm_tls_remove_psk_key
              definition:  arm_tls_session_clear
              reference :  buffer_corrupt_check
              reference :  buffer_free
              reference :  buffer_headroom
              reference :  common_read_16_bit
              reference :  common_read_24_bit
              reference :  common_write_16_bit
              reference :  common_write_24_bit
              reference :  common_write_32_bit
              reference :  mbedtls_sha256_clone
              reference :  mbedtls_sha256_finish_ret
              reference :  mbedtls_sha256_free
              reference :  mbedtls_sha256_init
              reference :  mbedtls_sha256_starts_ret
              reference :  mbedtls_sha256_update_ret
              reference :  memcmp
              reference :  ns_dyn_mem_alloc
              reference :  ns_dyn_mem_free
              reference :  ns_dyn_mem_temporary_alloc
              reference :  ns_list_add_to_end_
              reference :  ns_list_get_next_
              reference :  ns_list_remove_
              reference :  randLIB_get_n_bytes_random
              reference :  sec_lib_state_machine_trig
              reference :  sec_prf_state_set
              reference :  sec_set_auth_timeout
              reference :  shalib_prf_calc
              reference :  shalib_prf_param_get
              definition:  tls_alert_build
              definition:  tls_build_change_chipher_suite_finnish_msg
              definition:  tls_build_client_change_chipher_suite_finnish
              definition:  tls_build_client_verify_payload
              definition:  tls_build_server_hello_msg
              reference :  tls_ccm_data_decrypt
              reference :  tls_ccm_data_encrypt
              definition:  tls_client_hello_build
              definition:  tls_client_up
              definition:  tls_finnish_copy
              definition:  tls_handshake_copy
              definition:  tls_hanshake_hash_cal
              definition:  tls_header
              definition:  tls_header_set
              definition:  tls_heap_allocate
              definition:  tls_heap_free
              definition:  tls_key_expansion_cal
              definition:  tls_master_key_cal
              definition:  tls_msg
              definition:  tls_msg_analyzy
              definition:  tls_msg_get
              definition:  tls_msg_ptr_get
              definition:  tls_nonce_update
              definition:  tls_prepare_change_chipher_spec
              definition:  tls_server_hello_build
              definition:  tls_server_up
              definition:  tls_session_id_genrate
              definition:  tls_verify_calc
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/nanostack/sal-stack-nanostack/source/Security/eapol/eapol_helper.o.
              reference :  __aeabi_memclr8
              reference :  __aeabi_memcpy
              reference :  common_read_16_bit
              reference :  common_read_64_bit
              reference :  common_write_16_bit
              reference :  common_write_64_bit
              reference :  eap_header_build
              reference :  eap_header_parse
              definition:  eapol_parse_pdu_header
              definition:  eapol_pdu_eap_frame_init
              definition:  eapol_pdu_key_frame_init
              definition:  eapol_pdu_key_mask_get
              definition:  eapol_write_key_packet_mic
              definition:  eapol_write_pdu_frame
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/nanostack/sal-stack-nanostack/source/Security/eapol/kde_helper.o.
              reference :  common_read_32_bit
              reference :  common_write_32_bit
              definition:  ieee_802_11_oui
              definition:  kde_gtk_read
              definition:  kde_gtk_write
              definition:  kde_gtkl_read
              definition:  kde_gtkl_write
              definition:  kde_lifetime_read
              definition:  kde_lifetime_write
              definition:  kde_padded_length_calc
              definition:  kde_padding_write
              definition:  kde_pmkid_read
              definition:  kde_pmkid_write
              definition:  kde_ptkid_read
              definition:  kde_ptkid_write
              definition:  wisun_oui
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/nanostack/sal-stack-nanostack/source/Security/kmp/kmp_addr.o.
              definition:  kmp_address_copy
              definition:  kmp_address_eui_64_get
              definition:  kmp_address_eui_64_set
              definition:  kmp_address_init
              definition:  kmp_address_ip_get
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/nanostack/sal-stack-nanostack/source/Security/kmp/kmp_api.o.
              reference :  __aeabi_memclr4
              reference :  kmp_address_init
              definition:  kmp_api_addr_set
              definition:  kmp_api_cb_register
              definition:  kmp_api_create
              definition:  kmp_api_create_request
              definition:  kmp_api_create_response
              definition:  kmp_api_data_get
              definition:  kmp_api_data_set
              definition:  kmp_api_delete
              definition:  kmp_api_instance_id_get
              definition:  kmp_api_receive_check
              definition:  kmp_api_receive_disable
              definition:  kmp_api_sec_keys_set
              definition:  kmp_api_service_get
              definition:  kmp_api_start
              definition:  kmp_api_type_from_id_get
              definition:  kmp_api_type_get
              definition:  kmp_service_cb_register
              definition:  kmp_service_create
              definition:  kmp_service_delete
              definition:  kmp_service_event_if_event
              definition:  kmp_service_event_if_register
              definition:  kmp_service_msg_if_receive
              definition:  kmp_service_msg_if_register
              definition:  kmp_service_sec_protocol_register
              definition:  kmp_service_sec_protocol_unregister
              definition:  kmp_service_shared_comp_if_register
              definition:  kmp_service_timer_if_register
              definition:  kmp_service_timer_if_timeout
              definition:  kmp_service_tx_status_indication
              reference :  ns_dyn_mem_alloc
              reference :  ns_dyn_mem_free
              reference :  ns_dyn_mem_temporary_alloc
              reference :  ns_list_add_to_start_
              reference :  ns_list_get_next_
              reference :  ns_list_init_
              reference :  ns_list_remove_
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/nanostack/sal-stack-nanostack/source/Security/kmp/kmp_eapol_pdu_if.o.
              reference :  kmp_address_eui_64_get
              reference :  kmp_address_init
              reference :  kmp_api_type_from_id_get
              definition:  kmp_eapol_pdu_if_receive
              definition:  kmp_eapol_pdu_if_register
              definition:  kmp_eapol_pdu_if_unregister
              reference :  kmp_service_msg_if_receive
              reference :  kmp_service_msg_if_register
              reference :  kmp_service_tx_status_indication
              reference :  ns_dyn_mem_alloc
              reference :  ns_dyn_mem_free
              reference :  ns_list_add_to_end_
              reference :  ns_list_get_next_
              reference :  ns_list_remove_
              reference :  ws_eapol_pdu_send_to_mpx
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/nanostack/sal-stack-nanostack/source/Security/kmp/kmp_socket_if.o.
              reference :  __aeabi_memclr4
              reference :  common_read_16_bit
              reference :  common_write_16_bit
              reference :  kmp_address_eui_64_get
              reference :  kmp_api_type_from_id_get
              reference :  kmp_service_msg_if_receive
              reference :  kmp_service_msg_if_register
              definition:  kmp_socket_if_register
              definition:  kmp_socket_if_unregister
              reference :  memcmp
              reference :  ns_dyn_mem_alloc
              reference :  ns_dyn_mem_free
              reference :  ns_dyn_mem_temporary_alloc
              reference :  ns_list_add_to_end_
              reference :  ns_list_get_next_
              reference :  ns_list_remove_
              reference :  socket_close
              reference :  socket_open
              reference :  socket_recvfrom
              reference :  socket_sendto
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/nanostack/sal-stack-nanostack/source/Security/protocols/eap_tls_sec_prot/auth_eap_tls_sec_prot.o.
              reference :  __aeabi_memclr8
              definition:  auth_eap_tls_sec_prot_register
              reference :  eap_msg_trace
              reference :  eap_tls_sec_prot_lib_message_allocate
              reference :  eap_tls_sec_prot_lib_message_build
              reference :  eap_tls_sec_prot_lib_message_free
              reference :  eap_tls_sec_prot_lib_message_handle
              reference :  eap_tls_sec_prot_lib_message_init
              reference :  eapol_parse_pdu_header
              reference :  kmp_service_sec_protocol_register
              reference :  mbed_trace_array
              reference :  mbed_tracef
              reference :  sec_prot_default_timeout_set
              reference :  sec_prot_init
              reference :  sec_prot_keys_pmk_mismatch_reset
              reference :  sec_prot_remote_eui_64_addr_get
              reference :  sec_prot_result_get
              reference :  sec_prot_result_set
              reference :  sec_prot_result_timeout_check
              reference :  sec_prot_state_get
              reference :  sec_prot_state_set
              reference :  sec_prot_timer_timeout_handle
              reference :  sec_prot_timer_trickle_start
              reference :  sec_prot_timer_trickle_stop
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/nanostack/sal-stack-nanostack/source/Security/protocols/eap_tls_sec_prot/eap_tls_sec_prot_lib.o.
              reference :  __aeabi_memcpy
              reference :  common_read_32_bit
              reference :  common_write_32_bit
              definition:  eap_msg_trace
              definition:  eap_tls_sec_prot_lib_message_allocate
              definition:  eap_tls_sec_prot_lib_message_build
              definition:  eap_tls_sec_prot_lib_message_free
              definition:  eap_tls_sec_prot_lib_message_handle
              definition:  eap_tls_sec_prot_lib_message_init
              definition:  eap_tls_sec_prot_lib_message_realloc
              reference :  eapol_pdu_eap_frame_init
              reference :  eapol_write_pdu_frame
              reference :  mbed_tracef
              reference :  ns_dyn_mem_free
              reference :  ns_dyn_mem_temporary_alloc
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/nanostack/sal-stack-nanostack/source/Security/protocols/eap_tls_sec_prot/radius_eap_tls_sec_prot.o.
              reference :  __aeabi_memclr8
              reference :  common_read_16_bit
              reference :  eap_msg_trace
              reference :  eap_tls_sec_prot_lib_message_build
              reference :  eapol_parse_pdu_header
              reference :  eapol_pdu_eap_frame_init
              reference :  eapol_write_pdu_frame
              reference :  kmp_service_sec_protocol_register
              reference :  mbed_trace_array
              reference :  mbed_tracef
              reference :  ns_dyn_mem_free
              definition:  radius_eap_tls_sec_prot_register
              reference :  sec_prot_default_timeout_set
              reference :  sec_prot_init
              reference :  sec_prot_remote_eui_64_addr_get
              reference :  sec_prot_result_get
              reference :  sec_prot_result_set
              reference :  sec_prot_result_timeout_check
              reference :  sec_prot_state_get
              reference :  sec_prot_state_set
              reference :  sec_prot_timer_timeout_handle
              reference :  sec_prot_timer_trickle_start
              reference :  sec_prot_timer_trickle_stop
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/nanostack/sal-stack-nanostack/source/Security/protocols/eap_tls_sec_prot/supp_eap_tls_sec_prot.o.
              reference :  __aeabi_memclr8
              reference :  eap_msg_trace
              reference :  eap_tls_sec_prot_lib_message_allocate
              reference :  eap_tls_sec_prot_lib_message_build
              reference :  eap_tls_sec_prot_lib_message_free
              reference :  eap_tls_sec_prot_lib_message_handle
              reference :  eap_tls_sec_prot_lib_message_init
              reference :  eapol_parse_pdu_header
              reference :  kmp_service_sec_protocol_register
              reference :  mbed_tracef
              reference :  sec_prot_init
              reference :  sec_prot_result_get
              reference :  sec_prot_result_ok_check
              reference :  sec_prot_result_set
              reference :  sec_prot_state_get
              reference :  sec_prot_state_set
              reference :  sec_prot_timer_timeout_handle
              reference :  sec_prot_timer_trickle_stop
              definition:  supp_eap_tls_sec_prot_register
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/nanostack/sal-stack-nanostack/source/Security/protocols/fwh_sec_prot/auth_fwh_sec_prot.o.
              reference :  __aeabi_memclr
              reference :  __aeabi_memclr8
              definition:  auth_fwh_sec_prot_register
              reference :  eapol_parse_pdu_header
              reference :  eapol_pdu_key_frame_init
              reference :  eapol_pdu_key_mask_get
              reference :  kde_gtk_write
              reference :  kde_gtkl_write
              reference :  kde_lifetime_write
              reference :  kde_padded_length_calc
              reference :  kde_padding_write
              reference :  kde_pmkid_write
              reference :  kmp_service_sec_protocol_register
              reference :  mbed_trace_array
              reference :  mbed_tracef
              reference :  ns_dyn_mem_free
              reference :  ns_dyn_mem_temporary_alloc
              reference :  sec_prot_default_timeout_set
              reference :  sec_prot_init
              reference :  sec_prot_keys_fresh_gtkl_get
              reference :  sec_prot_keys_get_gtk_to_insert
              reference :  sec_prot_keys_gtk_lifetime_get
              reference :  sec_prot_keys_gtkl_from_gtk_insert_index_set
              reference :  sec_prot_keys_pmk_get
              reference :  sec_prot_keys_pmk_replay_cnt_get
              reference :  sec_prot_keys_pmk_replay_cnt_increment
              reference :  sec_prot_keys_ptk_eui_64_write
              reference :  sec_prot_keys_ptk_installed_gtk_hash_clear_all
              reference :  sec_prot_keys_ptk_installed_gtk_hash_set
              reference :  sec_prot_keys_ptk_mismatch_reset
              reference :  sec_prot_keys_ptk_write
              reference :  sec_prot_lib_message_build
              reference :  sec_prot_lib_mic_validate
              reference :  sec_prot_lib_nonce_generate
              reference :  sec_prot_lib_nonce_init
              reference :  sec_prot_lib_pmkid_generate
              reference :  sec_prot_lib_ptk_calc
              reference :  sec_prot_remote_eui_64_addr_get
              reference :  sec_prot_result_get
              reference :  sec_prot_result_timeout_check
              reference :  sec_prot_state_get
              reference :  sec_prot_state_set
              reference :  sec_prot_timer_timeout_handle
              reference :  sec_prot_timer_trickle_start
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/nanostack/sal-stack-nanostack/source/Security/protocols/fwh_sec_prot/supp_fwh_sec_prot.o.
              reference :  __aeabi_memclr8
              reference :  __aeabi_memcpy
              reference :  eapol_parse_pdu_header
              reference :  eapol_pdu_key_frame_init
              reference :  eapol_pdu_key_mask_get
              reference :  kde_pmkid_read
              reference :  kmp_service_sec_protocol_register
              reference :  mbed_trace_array
              reference :  mbed_tracef
              reference :  memcmp
              reference :  ns_dyn_mem_free
              reference :  sec_prot_default_timeout_set
              reference :  sec_prot_init
              reference :  sec_prot_keys_pmk_get
              reference :  sec_prot_keys_pmk_replay_cnt_compare
              reference :  sec_prot_keys_pmk_replay_cnt_set
              reference :  sec_prot_keys_ptk_eui_64_write
              reference :  sec_prot_keys_ptk_write
              reference :  sec_prot_lib_gtk_read
              reference :  sec_prot_lib_message_build
              reference :  sec_prot_lib_message_handle
              reference :  sec_prot_lib_mic_validate
              reference :  sec_prot_lib_nonce_generate
              reference :  sec_prot_lib_nonce_init
              reference :  sec_prot_lib_pmkid_generate
              reference :  sec_prot_lib_ptk_calc
              reference :  sec_prot_result_get
              reference :  sec_prot_result_ok_check
              reference :  sec_prot_result_set
              reference :  sec_prot_result_timeout_check
              reference :  sec_prot_state_get
              reference :  sec_prot_state_set
              reference :  sec_prot_timer_timeout_handle
              definition:  supp_fwh_sec_prot_register
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/nanostack/sal-stack-nanostack/source/Security/protocols/gkh_sec_prot/auth_gkh_sec_prot.o.
              reference :  __aeabi_memclr8
              definition:  auth_gkh_sec_prot_register
              reference :  eapol_parse_pdu_header
              reference :  eapol_pdu_key_frame_init
              reference :  eapol_pdu_key_mask_get
              reference :  kde_gtk_write
              reference :  kde_gtkl_write
              reference :  kde_lifetime_write
              reference :  kde_padded_length_calc
              reference :  kde_padding_write
              reference :  kmp_service_sec_protocol_register
              reference :  mbed_trace_array
              reference :  mbed_tracef
              reference :  ns_dyn_mem_free
              reference :  ns_dyn_mem_temporary_alloc
              reference :  sec_prot_default_timeout_set
              reference :  sec_prot_init
              reference :  sec_prot_keys_fresh_gtkl_get
              reference :  sec_prot_keys_get_gtk_to_insert
              reference :  sec_prot_keys_gtk_lifetime_get
              reference :  sec_prot_keys_gtkl_from_gtk_insert_index_set
              reference :  sec_prot_keys_pmk_replay_cnt_get
              reference :  sec_prot_keys_pmk_replay_cnt_increment
              reference :  sec_prot_keys_ptk_installed_gtk_hash_set
              reference :  sec_prot_lib_message_build
              reference :  sec_prot_lib_mic_validate
              reference :  sec_prot_remote_eui_64_addr_get
              reference :  sec_prot_result_get
              reference :  sec_prot_result_timeout_check
              reference :  sec_prot_state_get
              reference :  sec_prot_state_set
              reference :  sec_prot_timer_timeout_handle
              reference :  sec_prot_timer_trickle_start
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/nanostack/sal-stack-nanostack/source/Security/protocols/gkh_sec_prot/supp_gkh_sec_prot.o.
              reference :  __aeabi_memclr8
              reference :  eapol_parse_pdu_header
              reference :  eapol_pdu_key_frame_init
              reference :  eapol_pdu_key_mask_get
              reference :  kmp_service_sec_protocol_register
              reference :  mbed_tracef
              reference :  ns_dyn_mem_free
              reference :  sec_prot_default_timeout_set
              reference :  sec_prot_init
              reference :  sec_prot_keys_pmk_replay_cnt_compare
              reference :  sec_prot_keys_pmk_replay_cnt_get
              reference :  sec_prot_keys_pmk_replay_cnt_set
              reference :  sec_prot_lib_gtk_read
              reference :  sec_prot_lib_message_build
              reference :  sec_prot_lib_message_handle
              reference :  sec_prot_lib_mic_validate
              reference :  sec_prot_result_get
              reference :  sec_prot_result_ok_check
              reference :  sec_prot_result_set
              reference :  sec_prot_state_get
              reference :  sec_prot_state_set
              reference :  sec_prot_timer_timeout_handle
              definition:  supp_gkh_sec_prot_register
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/nanostack/sal-stack-nanostack/source/Security/protocols/key_sec_prot/key_sec_prot.o.
              definition:  auth_key_sec_prot_register
              reference :  eapol_parse_pdu_header
              reference :  eapol_pdu_key_frame_init
              reference :  eapol_write_pdu_frame
              reference :  kde_gtkl_read
              reference :  kde_gtkl_write
              reference :  kde_pmkid_read
              reference :  kde_pmkid_write
              reference :  kde_ptkid_read
              reference :  kde_ptkid_write
              reference :  kmp_service_sec_protocol_register
              reference :  mbed_trace_array
              reference :  mbed_tracef
              reference :  memcmp
              reference :  ns_dyn_mem_free
              reference :  ns_dyn_mem_temporary_alloc
              reference :  sec_prot_init
              reference :  sec_prot_keys_fresh_gtkl_get
              reference :  sec_prot_keys_pmk_get
              reference :  sec_prot_keys_ptk_get
              reference :  sec_prot_lib_message_handle
              reference :  sec_prot_lib_pmkid_generate
              reference :  sec_prot_lib_ptkid_generate
              reference :  sec_prot_remote_eui_64_addr_get
              reference :  sec_prot_result_get
              reference :  sec_prot_result_ok_check
              reference :  sec_prot_result_set
              reference :  sec_prot_state_get
              reference :  sec_prot_state_set
              reference :  sec_prot_timer_timeout_handle
              definition:  supp_key_sec_prot_register
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/nanostack/sal-stack-nanostack/source/Security/protocols/radius_sec_prot/avp_helper.o.
              reference :  __aeabi_memcpy
              definition:  avp_called_station_id_write
              definition:  avp_calling_station_id_write
              definition:  avp_eap_message_read
              definition:  avp_eap_message_write
              definition:  avp_framed_mtu_write
              definition:  avp_message_authenticator_read
              definition:  avp_message_authenticator_write
              definition:  avp_nas_identifier_write
              definition:  avp_nas_ip_address_write
              definition:  avp_nas_ipv6_address_write
              definition:  avp_nas_port_type_write
              definition:  avp_nas_port_write
              definition:  avp_state_read
              definition:  avp_state_write
              definition:  avp_user_name_write
              definition:  avp_vsa_ms_mppe_recv_key_read
              reference :  common_read_32_bit
              reference :  common_write_32_bit
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/nanostack/sal-stack-nanostack/source/Security/protocols/radius_sec_prot/radius_client_sec_prot.o.
              reference :  __aeabi_memclr4
              reference :  __aeabi_memcpy
              reference :  avp_called_station_id_write
              reference :  avp_calling_station_id_write
              reference :  avp_eap_message_write
              reference :  avp_framed_mtu_write
              reference :  avp_message_authenticator_write
              reference :  avp_nas_identifier_write
              reference :  avp_nas_ipv6_address_write
              reference :  avp_nas_port_type_write
              reference :  avp_nas_port_write
              reference :  avp_state_write
              reference :  avp_user_name_write
              reference :  common_read_16_bit
              reference :  common_write_16_bit
              reference :  hmac_md_calc
              reference :  kmp_service_sec_protocol_register
              reference :  mbed_trace_array
              reference :  mbed_tracef
              reference :  mbedtls_sha256_finish_ret
              reference :  mbedtls_sha256_free
              reference :  mbedtls_sha256_init
              reference :  mbedtls_sha256_starts_ret
              reference :  mbedtls_sha256_update_ret
              reference :  ns_dyn_mem_alloc
              reference :  ns_dyn_mem_free
              reference :  ns_dyn_mem_temporary_alloc
              definition:  radius_client_sec_prot_register
              reference :  randLIB_get_n_bytes_random
              reference :  sec_prot_default_timeout_set
              reference :  sec_prot_init
              reference :  sec_prot_keys_pmk_mismatch_reset
              reference :  sec_prot_keys_pmk_write
              reference :  sec_prot_remote_eui_64_addr_get
              reference :  sec_prot_result_get
              reference :  sec_prot_result_ok_check
              reference :  sec_prot_result_set
              reference :  sec_prot_result_timeout_check
              reference :  sec_prot_state_get
              reference :  sec_prot_state_set
              reference :  sec_prot_timer_timeout_handle
              reference :  sec_prot_timer_trickle_start
              reference :  sec_prot_timer_trickle_stop
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/nanostack/sal-stack-nanostack/source/Security/protocols/sec_prot_certs.o.
              reference :  __aeabi_memclr4
              reference :  memcmp
              reference :  ns_dyn_mem_alloc
              reference :  ns_dyn_mem_free
              reference :  ns_list_add_to_end_
              reference :  ns_list_get_next_
              reference :  ns_list_init_
              reference :  ns_list_remove_
              definition:  sec_prot_certs_cert_chain_entry_len_get
              definition:  sec_prot_certs_cert_get
              definition:  sec_prot_certs_cert_set
              definition:  sec_prot_certs_chain_entry_create
              definition:  sec_prot_certs_chain_entry_delete
              definition:  sec_prot_certs_chain_entry_init
              definition:  sec_prot_certs_chain_list_add
              definition:  sec_prot_certs_chain_list_delete
              definition:  sec_prot_certs_chain_list_entry_delete
              definition:  sec_prot_certs_chain_list_entry_find
              definition:  sec_prot_certs_delete
              definition:  sec_prot_certs_ext_certificate_validation_get
              definition:  sec_prot_certs_ext_certificate_validation_set
              definition:  sec_prot_certs_init
              definition:  sec_prot_certs_own_cert_chain_len_get
              definition:  sec_prot_certs_priv_key_get
              definition:  sec_prot_certs_priv_key_set
              definition:  sec_prot_certs_revocat_list_entry_create
              definition:  sec_prot_certs_revocat_list_entry_delete
              definition:  sec_prot_certs_revocat_list_entry_init
              definition:  sec_prot_certs_revocat_list_get
              definition:  sec_prot_certs_revocat_list_set
              definition:  sec_prot_certs_revocat_lists_add
              definition:  sec_prot_certs_revocat_lists_delete
              definition:  sec_prot_certs_revocat_lists_entry_delete
              definition:  sec_prot_certs_revocat_lists_entry_find
              reference :  strstr
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/nanostack/sal-stack-nanostack/source/Security/protocols/sec_prot_keys.o.
              reference :  __aeabi_memclr8
              reference :  __aeabi_memcpy
              reference :  mbed_tracef
              reference :  memcmp
              reference :  ns_dyn_mem_alloc
              reference :  ns_dyn_mem_free
              definition:  sec_prot_keys_are_updated
              definition:  sec_prot_keys_create
              definition:  sec_prot_keys_delete
              definition:  sec_prot_keys_fresh_gtkl_get
              definition:  sec_prot_keys_get_gtk_to_insert
              definition:  sec_prot_keys_gtk_clear
              definition:  sec_prot_keys_gtk_count
              definition:  sec_prot_keys_gtk_expirytime_set
              definition:  sec_prot_keys_gtk_exptime_from_lifetime_get
              definition:  sec_prot_keys_gtk_get
              definition:  sec_prot_keys_gtk_hash_empty
              definition:  sec_prot_keys_gtk_hash_generate
              definition:  sec_prot_keys_gtk_insert_index_clear
              definition:  sec_prot_keys_gtk_insert_index_from_gtkl_get
              definition:  sec_prot_keys_gtk_insert_index_get
              definition:  sec_prot_keys_gtk_insert_index_set
              definition:  sec_prot_keys_gtk_install_index_get
              definition:  sec_prot_keys_gtk_install_order_first_index_get
              definition:  sec_prot_keys_gtk_install_order_get
              definition:  sec_prot_keys_gtk_install_order_last_get
              definition:  sec_prot_keys_gtk_install_order_last_index_get
              definition:  sec_prot_keys_gtk_install_order_last_lifetime_get
              definition:  sec_prot_keys_gtk_install_order_second_index_get
              definition:  sec_prot_keys_gtk_install_order_set
              definition:  sec_prot_keys_gtk_install_order_update
              definition:  sec_prot_keys_gtk_is_set
              definition:  sec_prot_keys_gtk_lifetime_decrement
              definition:  sec_prot_keys_gtk_lifetime_get
              definition:  sec_prot_keys_gtk_set
              definition:  sec_prot_keys_gtk_status_active_get
              definition:  sec_prot_keys_gtk_status_active_set
              definition:  sec_prot_keys_gtk_status_active_to_fresh_set
              definition:  sec_prot_keys_gtk_status_all_fresh_set
              definition:  sec_prot_keys_gtk_status_fresh_set
              definition:  sec_prot_keys_gtk_status_get
              definition:  sec_prot_keys_gtk_status_is_live
              definition:  sec_prot_keys_gtk_status_new_set
              definition:  sec_prot_keys_gtk_status_set
              definition:  sec_prot_keys_gtk_valid_check
              definition:  sec_prot_keys_gtkl_from_gtk_insert_index_set
              definition:  sec_prot_keys_gtkl_gtk_is_live
              definition:  sec_prot_keys_gtkl_gtk_live_set
              definition:  sec_prot_keys_gtkl_set
              definition:  sec_prot_keys_gtks_are_updated
              definition:  sec_prot_keys_gtks_create
              definition:  sec_prot_keys_gtks_delete
              definition:  sec_prot_keys_gtks_hash_generate
              definition:  sec_prot_keys_gtks_hash_update
              definition:  sec_prot_keys_gtks_init
              definition:  sec_prot_keys_gtks_updated_reset
              definition:  sec_prot_keys_gtks_updated_set
              definition:  sec_prot_keys_init
              definition:  sec_prot_keys_pmk_delete
              definition:  sec_prot_keys_pmk_get
              definition:  sec_prot_keys_pmk_lifetime_decrement
              definition:  sec_prot_keys_pmk_lifetime_get
              definition:  sec_prot_keys_pmk_mismatch_is_set
              definition:  sec_prot_keys_pmk_mismatch_reset
              definition:  sec_prot_keys_pmk_mismatch_set
              definition:  sec_prot_keys_pmk_replay_cnt_compare
              definition:  sec_prot_keys_pmk_replay_cnt_get
              definition:  sec_prot_keys_pmk_replay_cnt_increment
              definition:  sec_prot_keys_pmk_replay_cnt_set
              definition:  sec_prot_keys_pmk_write
              definition:  sec_prot_keys_ptk_delete
              definition:  sec_prot_keys_ptk_eui_64_delete
              definition:  sec_prot_keys_ptk_eui_64_get
              definition:  sec_prot_keys_ptk_eui_64_write
              definition:  sec_prot_keys_ptk_get
              definition:  sec_prot_keys_ptk_installed_gtk_hash_clear_all
              definition:  sec_prot_keys_ptk_installed_gtk_hash_mismatch_check
              definition:  sec_prot_keys_ptk_installed_gtk_hash_set
              definition:  sec_prot_keys_ptk_lifetime_decrement
              definition:  sec_prot_keys_ptk_lifetime_get
              definition:  sec_prot_keys_ptk_mismatch_is_set
              definition:  sec_prot_keys_ptk_mismatch_reset
              definition:  sec_prot_keys_ptk_mismatch_set
              definition:  sec_prot_keys_ptk_write
              definition:  sec_prot_keys_updated_reset
              reference :  sec_prot_lib_gtkhash_generate
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/nanostack/sal-stack-nanostack/source/Security/protocols/sec_prot_lib.o.
              reference :  __aeabi_memcpy
              reference :  eapol_write_key_packet_mic
              reference :  eapol_write_pdu_frame
              reference :  hmac_md_calc
              reference :  ieee_802_11_prf_finish
              reference :  ieee_802_11_prf_get_a_string
              reference :  ieee_802_11_prf_get_b_string
              reference :  ieee_802_11_prf_setup
              reference :  ieee_802_11_prf_starts
              reference :  ieee_802_11_prf_update
              reference :  kde_gtk_read
              reference :  kde_gtkl_read
              reference :  kde_lifetime_read
              reference :  mbed_trace_array
              reference :  mbed_tracef
              reference :  mbedtls_sha256_finish_ret
              reference :  mbedtls_sha256_free
              reference :  mbedtls_sha256_init
              reference :  mbedtls_sha256_starts_ret
              reference :  mbedtls_sha256_update_ret
              reference :  memcmp
              reference :  nist_aes_key_wrap
              reference :  ns_dyn_mem_free
              reference :  ns_dyn_mem_temporary_alloc
              reference :  randLIB_get_n_bytes_random
              definition:  sec_prot_default_timeout_set
              definition:  sec_prot_init
              reference :  sec_prot_keys_gtk_lifetime_get
              reference :  sec_prot_keys_gtk_set
              reference :  sec_prot_keys_gtkl_gtk_is_live
              reference :  sec_prot_keys_gtkl_set
              reference :  sec_prot_keys_pmk_get
              reference :  sec_prot_keys_ptk_eui_64_get
              reference :  sec_prot_keys_ptk_get
              definition:  sec_prot_lib_gtk_read
              definition:  sec_prot_lib_gtkhash_generate
              definition:  sec_prot_lib_message_build
              definition:  sec_prot_lib_message_handle
              definition:  sec_prot_lib_mic_validate
              definition:  sec_prot_lib_nonce_generate
              definition:  sec_prot_lib_nonce_init
              definition:  sec_prot_lib_pmkid_calc
              definition:  sec_prot_lib_pmkid_generate
              definition:  sec_prot_lib_ptk_calc
              definition:  sec_prot_lib_ptkid_calc
              definition:  sec_prot_lib_ptkid_generate
              definition:  sec_prot_remote_eui_64_addr_get
              definition:  sec_prot_result_get
              definition:  sec_prot_result_ok_check
              definition:  sec_prot_result_set
              definition:  sec_prot_result_timeout_check
              definition:  sec_prot_state_get
              definition:  sec_prot_state_set
              definition:  sec_prot_timer_timeout_handle
              definition:  sec_prot_timer_trickle_start
              definition:  sec_prot_timer_trickle_stop
              reference :  trickle_running
              reference :  trickle_start
              reference :  trickle_stop
              reference :  trickle_timer
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/nanostack/sal-stack-nanostack/source/Security/protocols/tls_sec_prot/tls_sec_prot.o.
              reference :  __aeabi_memcpy
              definition:  client_tls_sec_prot_register
              reference :  eap_tls_sec_prot_lib_message_allocate
              reference :  eap_tls_sec_prot_lib_message_free
              reference :  eap_tls_sec_prot_lib_message_init
              reference :  eap_tls_sec_prot_lib_message_realloc
              reference :  kmp_service_sec_protocol_register
              reference :  mbed_trace_array
              reference :  mbed_tracef
              reference :  sec_prot_certs_own_cert_chain_len_get
              reference :  sec_prot_default_timeout_set
              reference :  sec_prot_init
              reference :  sec_prot_keys_pmk_write
              reference :  sec_prot_remote_eui_64_addr_get
              reference :  sec_prot_result_get
              reference :  sec_prot_result_ok_check
              reference :  sec_prot_result_set
              reference :  sec_prot_state_get
              reference :  sec_prot_state_set
              reference :  sec_prot_timer_timeout_handle
              definition:  server_tls_sec_prot_register
              reference :  tls_sec_prot_lib_connect
              reference :  tls_sec_prot_lib_free
              reference :  tls_sec_prot_lib_init
              reference :  tls_sec_prot_lib_process
              reference :  tls_sec_prot_lib_set_cb_register
              reference :  tls_sec_prot_lib_size
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/nanostack/sal-stack-nanostack/source/Security/protocols/tls_sec_prot/tls_sec_prot_lib.o.
              reference :  __aeabi_memclr
              reference :  __aeabi_memcpy
              reference :  __aeabi_memmove
              reference :  mbed_trace_array
              reference :  mbed_tracef
              reference :  mbedtls_ctr_drbg_free
              reference :  mbedtls_ctr_drbg_init
              reference :  mbedtls_ctr_drbg_random
              reference :  mbedtls_ctr_drbg_seed
              reference :  mbedtls_entropy_add_source
              reference :  mbedtls_entropy_free
              reference :  mbedtls_entropy_func
              reference :  mbedtls_entropy_init
              reference :  mbedtls_oid_get_numeric_string
              reference :  mbedtls_pk_free
              reference :  mbedtls_pk_init
              reference :  mbedtls_pk_parse_key
              reference :  mbedtls_ssl_conf_authmode
              reference :  mbedtls_ssl_conf_ca_chain
              reference :  mbedtls_ssl_conf_ciphersuites
              reference :  mbedtls_ssl_conf_export_keys_ext_cb
              reference :  mbedtls_ssl_conf_max_version
              reference :  mbedtls_ssl_conf_min_version
              reference :  mbedtls_ssl_conf_own_cert
              reference :  mbedtls_ssl_conf_rng
              reference :  mbedtls_ssl_config_defaults
              reference :  mbedtls_ssl_config_free
              reference :  mbedtls_ssl_config_init
              reference :  mbedtls_ssl_free
              reference :  mbedtls_ssl_handshake_step
              reference :  mbedtls_ssl_init
              reference :  mbedtls_ssl_set_bio
              reference :  mbedtls_ssl_set_timer_cb
              reference :  mbedtls_ssl_set_verify
              reference :  mbedtls_ssl_setup
              reference :  mbedtls_ssl_tls_prf
              reference :  mbedtls_x509_crl_free
              reference :  mbedtls_x509_crl_init
              reference :  mbedtls_x509_crl_parse
              reference :  mbedtls_x509_crt_check_extended_key_usage
              reference :  mbedtls_x509_crt_free
              reference :  mbedtls_x509_crt_init
              reference :  mbedtls_x509_crt_parse
              reference :  mbedtls_x509_parse_subject_alt_name
              reference :  memcmp
              reference :  ns_dyn_mem_free
              reference :  ns_dyn_mem_temporary_alloc
              reference :  ns_list_get_next_
              reference :  randLIB_get_8bit
              reference :  sec_prot_certs_cert_get
              reference :  sec_prot_certs_ext_certificate_validation_get
              reference :  sec_prot_certs_priv_key_get
              reference :  sec_prot_certs_revocat_list_get
              definition:  tls_sec_prot_lib_connect
              definition:  tls_sec_prot_lib_free
              definition:  tls_sec_prot_lib_init
              definition:  tls_sec_prot_lib_process
              definition:  tls_sec_prot_lib_set_cb_register
              definition:  tls_sec_prot_lib_size
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/nanostack/sal-stack-nanostack/source/Service_Libs/CCM_lib/ccm_security.o.
              reference :  __aeabi_memclr
              reference :  __aeabi_memclr4
              reference :  __aeabi_memcpy
              reference :  arm_aes_encrypt
              reference :  arm_aes_finish
              reference :  arm_aes_start
              definition:  ccm_free
              definition:  ccm_process_run
              definition:  ccm_sec_init
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/nanostack/sal-stack-nanostack/source/Service_Libs/CCM_lib/mbedOS/aes_mbedtls_adapter.o.
              definition:  arm_aes_encrypt
              definition:  arm_aes_finish
              definition:  arm_aes_start
              reference :  mbedtls_aes_crypt_ecb
              reference :  mbedtls_aes_free
              reference :  mbedtls_aes_init
              reference :  mbedtls_aes_setkey_enc
              reference :  platform_enter_critical
              reference :  platform_exit_critical
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/nanostack/sal-stack-nanostack/source/Service_Libs/Neighbor_cache/neighbor_cache.o.
              definition:  neighbor_cache_flush
              definition:  neighbor_cache_init
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/nanostack/sal-stack-nanostack/source/Service_Libs/SHA256_Lib/ns_sha256.o.
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/nanostack/sal-stack-nanostack/source/Service_Libs/SHA256_Lib/shalib.o.
              definition:  SHALIB_finish_HMAC
              definition:  SHALIB_init_HMAC
              definition:  SHALIB_push_data_HMAC
              reference :  __aeabi_memclr
              reference :  __aeabi_memcpy
              reference :  mbedtls_sha256_finish_ret
              reference :  mbedtls_sha256_free
              reference :  mbedtls_sha256_init
              reference :  mbedtls_sha256_starts_ret
              reference :  mbedtls_sha256_update_ret
              definition:  shalib_prf_calc
              definition:  shalib_prf_param_get
              reference :  strlen
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/nanostack/sal-stack-nanostack/source/Service_Libs/Trickle/trickle.o.
              reference :  randLIB_get_random_in_range
              definition:  trickle_begin_interval
              definition:  trickle_consistent_heard
              definition:  trickle_inconsistent_heard
              definition:  trickle_running
              definition:  trickle_start
              definition:  trickle_stop
              definition:  trickle_timer
              definition:  trickle_timer_max
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/nanostack/sal-stack-nanostack/source/Service_Libs/blacklist/blacklist.o.
              reference :  ADDR_LINK_LOCAL_PREFIX
              reference :  ADDR_SHORT_ADR_SUFFIC
              definition:  blacklist_clear
              definition:  blacklist_free
              definition:  blacklist_init
              definition:  blacklist_params_set
              definition:  blacklist_reject
              definition:  blacklist_ttl_update
              definition:  blacklist_update
              reference :  mbed_trace_array
              reference :  mbed_tracef
              reference :  memcmp
              reference :  ns_dyn_mem_alloc
              reference :  ns_dyn_mem_free
              reference :  ns_list_add_to_start_
              reference :  ns_list_count_
              reference :  ns_list_get_next_
              reference :  ns_list_init_
              reference :  ns_list_remove_
              reference :  randLIB_randomise_base
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/nanostack/sal-stack-nanostack/source/Service_Libs/etx/etx.o.
              reference :  __aeabi_memclr
              reference :  __aeabi_memclr4
              definition:  etx_accum_failures_callback_register
              definition:  etx_cache_timer
              definition:  etx_cached_etx_parameter_set
              definition:  etx_local_etx_read
              definition:  etx_local_incoming_idr_read
              definition:  etx_lqi_dbm_update
              definition:  etx_max_set
              definition:  etx_max_update_set
              definition:  etx_neighbor_remove
              definition:  etx_read
              definition:  etx_remote_incoming_idr_update
              definition:  etx_storage_entry_get
              definition:  etx_storage_list_allocate
              definition:  etx_transm_attempts_update
              definition:  etx_value_change_callback_register
              reference :  isqrt32
              reference :  mac_neighbor_table_address_discover
              reference :  ns_dyn_mem_alloc
              reference :  ns_dyn_mem_free
              reference :  ns_list_get_next_
              reference :  protocol_stack_interface_info_get
              reference :  protocol_stack_interface_info_get_by_id
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/nanostack/sal-stack-nanostack/source/Service_Libs/fhss/channel_functions.o.
              reference :  __aeabi_memset
              reference :  common_read_32_bit
              definition:  dh1cf_get_bc_channel_index
              definition:  dh1cf_get_uc_channel_index
              definition:  tr51_calc_nearest_prime_number
              definition:  tr51_get_bc_channel_index
              definition:  tr51_get_uc_channel_index
              definition:  tr51_init_channel_table
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/nanostack/sal-stack-nanostack/source/Service_Libs/fhss/channel_list.o.
              definition:  CHANNEL_LIST_SIZE_IN_BITS
              definition:  channel_list_count_channels
              definition:  channel_list_get_channel
              definition:  channel_list_set_channel
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/nanostack/sal-stack-nanostack/source/Service_Libs/fhss/fhss.o.
              reference :  __aeabi_memclr4
              reference :  __aeabi_memcpy
              reference :  channel_list_count_channels
              reference :  common_read_16_bit
              reference :  common_read_32_bit
              reference :  common_write_16_bit
              reference :  common_write_32_bit
              reference :  eventOS_callback_timer_register
              reference :  eventOS_callback_timer_start
              reference :  eventOS_event_handler_create
              reference :  fhss_allocate_instance
              definition:  fhss_calculate_uc_index
              reference :  fhss_change_to_next_channel
              reference :  fhss_change_to_parent_channel
              reference :  fhss_change_to_rx_channel
              reference :  fhss_change_to_tx_channel
              reference :  fhss_clear_active_event
              reference :  fhss_compare_with_synch_parent_address
              definition:  fhss_enable
              reference :  fhss_failed_handle_add
              reference :  fhss_failed_handle_find
              reference :  fhss_failed_handle_remove
              reference :  fhss_failed_list_free
              reference :  fhss_free_instance
              reference :  fhss_get_object_with_api
              reference :  fhss_get_object_with_timer_id
              reference :  fhss_get_offset
              reference :  fhss_get_parent_address
              definition:  fhss_get_remaining_time_to_next_superframe
              reference :  fhss_get_tx_time
              reference :  fhss_init_callbacks_cb
              reference :  fhss_is_current_channel_broadcast
              definition:  fhss_is_synch_root
              reference :  fhss_read_timestamp_cb
              definition:  fhss_set_callbacks
              definition:  fhss_set_synch_configuration
              reference :  fhss_start_timer
              reference :  fhss_stats_update
              reference :  fhss_timeout_start
              reference :  fhss_timeout_stop
              reference :  fhss_trig_event
              reference :  fhss_update_synch_parent_address
              reference :  mbed_tracef
              reference :  ns_dyn_mem_alloc
              reference :  ns_dyn_mem_free
              reference :  ns_dyn_mem_temporary_alloc
              reference :  ns_list_init_
              reference :  platform_enter_critical
              reference :  platform_exit_critical
              reference :  randLIB_get_16bit
              reference :  randLIB_get_random_in_range
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/nanostack/sal-stack-nanostack/source/Service_Libs/fhss/fhss_channel.o.
              reference :  channel_list_get_channel
              definition:  fhss_add_channel_list_counter
              definition:  fhss_calc_channel_shuffle
              reference :  fhss_calculate_uc_index
              definition:  fhss_change_to_next_channel
              definition:  fhss_change_to_parent_channel
              definition:  fhss_change_to_rx_channel
              definition:  fhss_change_to_tx_channel
              definition:  fhss_get_offset
              reference :  fhss_get_parent_address
              definition:  fhss_is_current_channel_broadcast
              reference :  randLIB_get_random_in_range
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/nanostack/sal-stack-nanostack/source/Service_Libs/fhss/fhss_common.o.
              reference :  __aeabi_memclr4
              reference :  eventOS_event_send
              definition:  fhss_allocate_instance
              definition:  fhss_clear_active_event
              definition:  fhss_compare_with_synch_parent_address
              definition:  fhss_disable
              definition:  fhss_failed_handle_add
              definition:  fhss_failed_handle_find
              definition:  fhss_failed_handle_remove
              definition:  fhss_failed_list_free
              definition:  fhss_free_instance
              definition:  fhss_get_object_with_api
              definition:  fhss_get_object_with_timer_id
              definition:  fhss_get_parent_address
              definition:  fhss_get_tx_time
              definition:  fhss_init_callbacks_cb
              reference :  fhss_is_synch_root
              definition:  fhss_read_timestamp_cb
              definition:  fhss_start_timer
              definition:  fhss_stop_timer
              definition:  fhss_timeout_start
              definition:  fhss_timeout_stop
              definition:  fhss_trig_event
              definition:  fhss_update_synch_parent_address
              reference :  mbed_tracef
              reference :  memcmp
              reference :  ns_dyn_mem_alloc
              reference :  ns_dyn_mem_free
              reference :  ns_list_add_to_end_
              reference :  ns_list_get_next_
              reference :  ns_list_remove_
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/nanostack/sal-stack-nanostack/source/Service_Libs/fhss/fhss_configuration_interface.o.
              reference :  fhss_disable
              reference :  fhss_enable
              reference :  fhss_get_object_with_api
              reference :  fhss_set_callbacks
              reference :  fhss_set_synch_configuration
              reference :  fhss_statistics_start
              reference :  fhss_ws_configuration_set
              reference :  fhss_ws_enable
              reference :  fhss_ws_remove_parent
              reference :  fhss_ws_set_callbacks
              reference :  fhss_ws_set_hop_count
              reference :  fhss_ws_set_parent
              reference :  mbed_tracef
              reference :  ns_dyn_mem_alloc
              reference :  ns_dyn_mem_free
              definition:  ns_fhss_configuration_set
              definition:  ns_fhss_create
              definition:  ns_fhss_delete
              definition:  ns_fhss_set_neighbor_info_fp
              definition:  ns_fhss_statistics_start
              definition:  ns_fhss_ws_configuration_get
              definition:  ns_fhss_ws_configuration_set
              definition:  ns_fhss_ws_create
              definition:  ns_fhss_ws_remove_parent
              definition:  ns_fhss_ws_set_hop_count
              definition:  ns_fhss_ws_set_parent
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/nanostack/sal-stack-nanostack/source/Service_Libs/fhss/fhss_statistics.o.
              definition:  fhss_statistics_start
              definition:  fhss_stats_update
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/nanostack/sal-stack-nanostack/source/Service_Libs/fhss/fhss_test_api.o.
              reference :  fhss_get_object_with_api
              definition:  fhss_set_number_of_channel_retries
              definition:  fhss_set_optimal_packet_length
              reference :  fhss_set_txrx_slot_length
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/nanostack/sal-stack-nanostack/source/Service_Libs/fhss/fhss_ws.o.
              reference :  __aeabi_l2f
              reference :  __aeabi_ldivmod
              reference :  __aeabi_memclr4
              reference :  __aeabi_memcpy4
              reference :  __aeabi_ul2f
              reference :  channel_list_count_channels
              reference :  common_read_16_bit_inverse
              reference :  common_write_16_bit_inverse
              reference :  common_write_24_bit_inverse
              reference :  dh1cf_get_bc_channel_index
              reference :  dh1cf_get_uc_channel_index
              reference :  eventOS_callback_timer_register
              reference :  eventOS_callback_timer_start
              reference :  eventOS_callback_timer_stop
              reference :  fhss_allocate_instance
              reference :  fhss_failed_handle_add
              reference :  fhss_failed_handle_find
              reference :  fhss_failed_handle_remove
              reference :  fhss_free_instance
              reference :  fhss_get_object_with_api
              reference :  fhss_get_object_with_timer_id
              reference :  fhss_init_callbacks_cb
              definition:  fhss_set_txrx_slot_length
              reference :  fhss_start_timer
              reference :  fhss_stats_update
              reference :  fhss_stop_timer
              definition:  fhss_ws_configuration_set
              definition:  fhss_ws_enable
              definition:  fhss_ws_remove_parent
              definition:  fhss_ws_set_callbacks
              definition:  fhss_ws_set_hop_count
              definition:  fhss_ws_set_parent
              definition:  fhss_ws_start_timer
              reference :  mbed_tracef
              reference :  ns_dyn_mem_alloc
              reference :  ns_dyn_mem_free
              reference :  ns_list_init_
              reference :  platform_enter_critical
              reference :  platform_exit_critical
              reference :  randLIB_get_random_in_range
              reference :  tr51_calc_nearest_prime_number
              reference :  tr51_get_bc_channel_index
              reference :  tr51_get_uc_channel_index
              reference :  tr51_init_channel_table
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/nanostack/sal-stack-nanostack/source/Service_Libs/fhss/fhss_ws_empty_functions.o.
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/nanostack/sal-stack-nanostack/source/Service_Libs/fnv_hash/fnv_hash.o.
              definition:  fnv_hash_1a_32_reverse_block
              definition:  fnv_hash_1a_32_reverse_block_update
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/nanostack/sal-stack-nanostack/source/Service_Libs/hmac/hmac_md.o.
              reference :  __aeabi_memcpy
              definition:  hmac_md_calc
              reference :  mbedtls_md_free
              reference :  mbedtls_md_hmac_finish
              reference :  mbedtls_md_hmac_starts
              reference :  mbedtls_md_hmac_update
              reference :  mbedtls_md_info_from_type
              reference :  mbedtls_md_init
              reference :  mbedtls_md_setup
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/nanostack/sal-stack-nanostack/source/Service_Libs/ieee_802_11/ieee_802_11.o.
              reference :  hmac_md_calc
              definition:  ieee_802_11_prf_finish
              definition:  ieee_802_11_prf_get_a_string
              definition:  ieee_802_11_prf_get_b_string
              definition:  ieee_802_11_prf_setup
              definition:  ieee_802_11_prf_starts
              definition:  ieee_802_11_prf_update
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/nanostack/sal-stack-nanostack/source/Service_Libs/load_balance/load_balance.o.
              reference :  __aeabi_memcpy
              definition:  load_balance_create
              definition:  load_balance_delete
              definition:  load_balance_network_load_monitor_disable
              definition:  load_balance_network_load_monitor_enable
              definition:  load_balance_network_switch_cb_set
              definition:  load_balance_network_threshold_set
              definition:  load_balance_set_max_probability
              reference :  mbed_tracef
              reference :  ns_dyn_mem_alloc
              reference :  ns_dyn_mem_free
              reference :  randLIB_get_random_in_range
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/nanostack/sal-stack-nanostack/source/Service_Libs/mac_neighbor_table/mac_neighbor_table.o.
              reference :  ADDR_LINK_LOCAL_PREFIX
              reference :  ADDR_SHORT_ADR_SUFFIC
              reference :  common_read_16_bit
              definition:  mac_neighbor_entry_get_by_ll64
              definition:  mac_neighbor_entry_get_by_mac64
              definition:  mac_neighbor_entry_get_priority
              definition:  mac_neighbor_table_address_discover
              definition:  mac_neighbor_table_attribute_discover
              definition:  mac_neighbor_table_create
              definition:  mac_neighbor_table_delete
              definition:  mac_neighbor_table_entry_allocate
              definition:  mac_neighbor_table_neighbor_connected
              definition:  mac_neighbor_table_neighbor_list_clean
              definition:  mac_neighbor_table_neighbor_refresh
              definition:  mac_neighbor_table_neighbor_remove
              definition:  mac_neighbor_table_neighbor_timeout_update
              definition:  mac_neighbor_table_trusted_neighbor
              reference :  memcmp
              reference :  ns_dyn_mem_alloc
              reference :  ns_dyn_mem_free
              reference :  ns_list_add_to_end_
              reference :  ns_list_get_next_
              reference :  ns_list_init_
              reference :  ns_list_remove_
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/nanostack/sal-stack-nanostack/source/Service_Libs/mdns/fnet/fnet_stack/services/mdns/fnet_mdns.o.
              reference :  __2snprintf
              reference :  __aeabi_memclr4
              reference :  __aeabi_memcpy
              reference :  _printf_d
              reference :  _printf_int_dec
              reference :  _printf_percent
              definition:  fnet_mdns_add_rr_txt
              definition:  fnet_mdns_announce
              definition:  fnet_mdns_init
              definition:  fnet_mdns_is_enabled
              definition:  fnet_mdns_release
              definition:  fnet_mdns_service_register
              definition:  fnet_mdns_service_unregister
              reference :  fnet_memcmp
              reference :  fnet_memset
              reference :  fnet_memset_zero
              reference :  fnet_netif_get_ip6_addr
              reference :  fnet_netif_get_scope_id
              reference :  fnet_poll_service_register
              reference :  fnet_poll_service_unregister
              reference :  fnet_socket
              reference :  fnet_socket_bind
              reference :  fnet_socket_close
              reference :  fnet_socket_recvfrom
              reference :  fnet_socket_sendto
              reference :  fnet_socket_setopt
              reference :  fnet_strcmp
              reference :  fnet_strcpy
              reference :  fnet_strlen
              reference :  fnet_timer_get_ms
              reference :  fnet_tolower
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/nanostack/sal-stack-nanostack/source/Service_Libs/mdns/fnet/fnet_stack/services/poll/fnet_poll.o.
              reference :  fnet_memset_zero
              definition:  fnet_poll_service
              definition:  fnet_poll_service_register
              definition:  fnet_poll_service_release
              definition:  fnet_poll_service_unregister
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/nanostack/sal-stack-nanostack/source/Service_Libs/mdns/fnet/fnet_stack/stack/fnet_stdlib.o.
              reference :  __aeabi_memclr
              reference :  __aeabi_memcpy
              reference :  __aeabi_memset
              definition:  fnet_memcmp
              definition:  fnet_memcpy_func
              definition:  fnet_memset
              definition:  fnet_memset_zero
              definition:  fnet_rand
              definition:  fnet_srand
              definition:  fnet_strcasecmp
              definition:  fnet_strcat
              definition:  fnet_strchr
              definition:  fnet_strcmp
              definition:  fnet_strcmp_splitter
              definition:  fnet_strcpy
              definition:  fnet_strlen
              definition:  fnet_strncat
              definition:  fnet_strncmp
              definition:  fnet_strncpy
              definition:  fnet_strrchr
              definition:  fnet_strstr
              definition:  fnet_strtok_r
              definition:  fnet_strtoul
              definition:  fnet_tolower
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/nanostack/sal-stack-nanostack/source/Service_Libs/mdns/ns_fnet_events.o.
              reference :  eventOS_cancel
              reference :  eventOS_event_handler_create
              reference :  eventOS_event_timer_request_every
              reference :  fnet_poll_service
              definition:  ns_fnet_events_fast_poll
              definition:  ns_fnet_events_ptr
              definition:  ns_fnet_events_start
              definition:  ns_fnet_events_stop
              definition:  ns_fnet_time_in_ms_get
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/nanostack/sal-stack-nanostack/source/Service_Libs/mdns/ns_fnet_port.o.
              reference :  ADDR_LINK_LOCAL_MDNS
              reference :  addr_ipv6_equal
              reference :  arm_net_address_get
              reference :  arm_net_address_list_get_next
              definition:  fnet_netif_get_ip4_addr
              definition:  fnet_netif_get_ip6_addr
              definition:  fnet_netif_get_scope_id
              definition:  fnet_netif_is_my_ip6_addr
              definition:  fnet_socket
              definition:  fnet_socket_bind
              definition:  fnet_socket_close
              definition:  fnet_socket_recvfrom
              definition:  fnet_socket_sendto
              definition:  fnet_socket_setopt
              definition:  fnet_timer_get_ms
              reference :  ns_fnet_events_fast_poll
              reference :  ns_fnet_time_in_ms_get
              reference :  socket_bind
              reference :  socket_close
              reference :  socket_open
              reference :  socket_read
              reference :  socket_sendto
              reference :  socket_setsockopt
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/nanostack/sal-stack-nanostack/source/Service_Libs/mdns/ns_mdns_api.o.
              reference :  fnet_mdns_announce
              reference :  fnet_mdns_init
              reference :  fnet_mdns_release
              reference :  fnet_mdns_service_register
              reference :  fnet_mdns_service_unregister
              reference :  ns_dyn_mem_alloc
              reference :  ns_dyn_mem_free
              reference :  ns_fnet_events_start
              reference :  ns_fnet_events_stop
              reference :  ns_list_add_to_end_
              reference :  ns_list_get_next_
              reference :  ns_list_init_
              reference :  ns_list_remove_
              definition:  ns_mdns_announcement_send
              definition:  ns_mdns_server_start
              definition:  ns_mdns_server_stop
              definition:  ns_mdns_service_register
              definition:  ns_mdns_service_unregister
              reference :  strcpy
              reference :  strlen
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/nanostack/sal-stack-nanostack/source/Service_Libs/mle_service/mle_service.o.
              reference :  ADDR_LINK_LOCAL_PREFIX
              reference :  __aeabi_memcpy
              reference :  __aeabi_memmove
              reference :  addr_ipv6_scope
              reference :  addr_is_ipv6_link_local
              reference :  buffer_corrupt_check
              reference :  buffer_free
              reference :  buffer_get
              reference :  buffer_headroom
              reference :  ccm_free
              reference :  ccm_process_run
              reference :  ccm_sec_init
              reference :  common_read_32_bit
              reference :  common_read_32_bit_inverse
              reference :  common_write_32_bit
              reference :  common_write_32_bit_inverse
              reference :  eventOS_cancel
              reference :  eventOS_event_handler_create
              reference :  eventOS_event_timer_request_every
              reference :  mac_helper_link_frame_counter_read
              reference :  mac_neighbor_entry_get_by_ll64
              reference :  mbed_trace_ipv6
              reference :  mbed_tracef
              reference :  mle_class_set_new_key_pending
              reference :  mle_message_malformed_check
              definition:  mle_service
              reference :  mle_service_buffer_clean_buffers_by_interface_id
              reference :  mle_service_buffer_count_by_interface_id
              reference :  mle_service_buffer_find
              reference :  mle_service_buffer_find_for_response
              reference :  mle_service_buffer_free
              reference :  mle_service_buffer_get
              reference :  mle_service_buffer_get_data_pointer
              reference :  mle_service_buffer_get_msg_destination_address_pointer
              reference :  mle_service_buffer_set_msg_rf_channel
              reference :  mle_service_buffer_set_msg_security_mode
              reference :  mle_service_buffer_set_msg_type
              reference :  mle_service_buffer_set_response
              reference :  mle_service_buffer_set_timeout_cb
              reference :  mle_service_buffer_tail_get
              reference :  mle_service_buffer_timer_tick
              reference :  mle_service_buffer_tokens_delay_count
              reference :  mle_service_buffer_update_length
              reference :  mle_service_buffer_update_length_by_ptr
              definition:  mle_service_check_msg_sent
              reference :  mle_service_counter_info_get
              definition:  mle_service_get_data_pointer
              definition:  mle_service_get_msg_destination_address_pointer
              definition:  mle_service_get_payload_length
              definition:  mle_service_get_payload_start_point
              reference :  mle_service_interface_delete
              reference :  mle_service_interface_find
              reference :  mle_service_interface_get
              reference :  mle_service_interface_list_empty
              definition:  mle_service_interface_receiver_bypass_handler_update
              definition:  mle_service_interface_receiver_handler_update
              definition:  mle_service_interface_register
              definition:  mle_service_interface_registeration_validate
              reference :  mle_service_interface_timer_tick
              definition:  mle_service_interface_token_bucket_settings_set
              definition:  mle_service_interface_tx_queue_clean
              definition:  mle_service_interface_tx_queue_size
              definition:  mle_service_interface_unregister
              definition:  mle_service_message_tail_get
              definition:  mle_service_msg_allocate
              definition:  mle_service_msg_free
              definition:  mle_service_msg_update_security_params
              definition:  mle_service_receive_filter_cb_set
              definition:  mle_service_reject_message_build
              definition:  mle_service_reset_frame_counters
              definition:  mle_service_security_default_key_get
              definition:  mle_service_security_default_key_id_get
              reference :  mle_service_security_get_default_key
              reference :  mle_service_security_get_default_key_id
              definition:  mle_service_security_get_frame_counter
              reference :  mle_service_security_get_framecounter
              reference :  mle_service_security_get_key
              reference :  mle_service_security_get_next_key
              reference :  mle_service_security_get_next_key_id
              definition:  mle_service_security_init
              reference :  mle_service_security_instance_allocate
              reference :  mle_service_security_instance_delete
              reference :  mle_service_security_key_set
              definition:  mle_service_security_key_trig
              reference :  mle_service_security_key_update_trig
              definition:  mle_service_security_level_get
              definition:  mle_service_security_next_key_get
              definition:  mle_service_security_next_key_id_get
              reference :  mle_service_security_parameters_init
              reference :  mle_service_security_params_get
              definition:  mle_service_security_set_frame_counter
              definition:  mle_service_security_set_security_key
              definition:  mle_service_send_message
              definition:  mle_service_set_accept_invalid_frame_counter
              definition:  mle_service_set_fragmented_msg_ll_security
              definition:  mle_service_set_frame_counter_check
              definition:  mle_service_set_msg_destination_address
              definition:  mle_service_set_msg_link_layer_security_mode
              definition:  mle_service_set_msg_panid
              definition:  mle_service_set_msg_response_true
              definition:  mle_service_set_msg_rf_channel
              definition:  mle_service_set_msg_timeout_parameters
              definition:  mle_service_set_msg_timeout_parameters_fast
              definition:  mle_service_set_msg_token_bucket_priority
              definition:  mle_service_set_packet_callback
              definition:  mle_service_timer_tick
              definition:  mle_service_transaction_buffer_get_for_response
              definition:  mle_service_update_length
              definition:  mle_service_update_length_by_ptr
              reference :  mle_tlv_option_discover
              reference :  ns_dyn_mem_alloc
              reference :  ns_dyn_mem_free
              reference :  randLIB_get_16bit
              reference :  randLIB_get_n_bytes_random
              reference :  randLIB_get_random_in_range
              reference :  randLIB_randomise_base
              reference :  socket_buffer_sendmsg
              reference :  socket_close
              reference :  socket_create
              reference :  socket_setsockopt
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/nanostack/sal-stack-nanostack/source/Service_Libs/mle_service/mle_service_buffer.o.
              reference :  __aeabi_memcpy
              reference :  memcmp
              definition:  mle_service_buffer_clean_buffers_by_interface_id
              definition:  mle_service_buffer_count_by_interface_id
              definition:  mle_service_buffer_find
              definition:  mle_service_buffer_find_for_response
              definition:  mle_service_buffer_free
              definition:  mle_service_buffer_get
              definition:  mle_service_buffer_get_data_pointer
              definition:  mle_service_buffer_get_msg_destination_address_pointer
              definition:  mle_service_buffer_set_msg_destination_address
              definition:  mle_service_buffer_set_msg_rf_channel
              definition:  mle_service_buffer_set_msg_security_mode
              definition:  mle_service_buffer_set_msg_type
              definition:  mle_service_buffer_set_response
              definition:  mle_service_buffer_set_timeout_cb
              definition:  mle_service_buffer_tail_get
              definition:  mle_service_buffer_timer_tick
              definition:  mle_service_buffer_tokens_delay_count
              definition:  mle_service_buffer_update_length
              definition:  mle_service_buffer_update_length_by_ptr
              definition:  mle_service_check_msg_response
              reference :  ns_dyn_mem_alloc
              reference :  ns_dyn_mem_free
              reference :  ns_dyn_mem_temporary_alloc
              reference :  ns_list_add_to_start_
              reference :  ns_list_get_last_
              reference :  ns_list_get_next_
              reference :  ns_list_get_previous_
              reference :  ns_list_remove_
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/nanostack/sal-stack-nanostack/source/Service_Libs/mle_service/mle_service_frame_counter_table.o.
              definition:  mle_service_counter_info_get
              definition:  mle_service_frame_counter_entry_add
              definition:  mle_service_frame_counter_entry_delete
              definition:  mle_service_frame_counter_entry_new_key_pending_set
              definition:  mle_service_frame_counter_table_allocate
              definition:  mle_service_frame_counter_table_free
              definition:  mle_service_neighbor_frame_counter_get
              reference :  ns_dyn_mem_alloc
              reference :  ns_dyn_mem_free
              reference :  ns_list_add_to_start_
              reference :  ns_list_get_next_
              reference :  ns_list_remove_
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/nanostack/sal-stack-nanostack/source/Service_Libs/mle_service/mle_service_interface.o.
              definition:  mle_service_interface_delete
              definition:  mle_service_interface_find
              definition:  mle_service_interface_get
              definition:  mle_service_interface_list_empty
              definition:  mle_service_interface_timer_tick
              reference :  ns_dyn_mem_alloc
              reference :  ns_dyn_mem_free
              reference :  ns_list_add_to_start_
              reference :  ns_list_get_next_
              reference :  ns_list_remove_
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/nanostack/sal-stack-nanostack/source/Service_Libs/mle_service/mle_service_security.o.
              reference :  common_read_32_bit
              reference :  common_write_32_bit
              reference :  memcmp
              reference :  mle_service_reset_frame_counters
              definition:  mle_service_security_get_default_key
              definition:  mle_service_security_get_default_key_id
              definition:  mle_service_security_get_framecounter
              definition:  mle_service_security_get_key
              definition:  mle_service_security_get_next_key
              definition:  mle_service_security_get_next_key_id
              definition:  mle_service_security_header_buf_init
              definition:  mle_service_security_instance_allocate
              definition:  mle_service_security_instance_delete
              definition:  mle_service_security_key_get
              definition:  mle_service_security_key_set
              definition:  mle_service_security_key_update_trig
              definition:  mle_service_security_parameters_init
              definition:  mle_service_security_params_get
              reference :  ns_dyn_mem_alloc
              reference :  ns_dyn_mem_free
              reference :  ns_list_add_to_start_
              reference :  ns_list_get_next_
              reference :  ns_list_remove_
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/nanostack/sal-stack-nanostack/source/Service_Libs/nd_proxy/nd_proxy.o.
              reference :  mbed_tracef
              definition:  nd_proxy_downstream_interface_register
              definition:  nd_proxy_downstream_interface_unregister
              definition:  nd_proxy_enabled_for_downstream
              definition:  nd_proxy_enabled_for_upstream
              definition:  nd_proxy_target_address_validation
              definition:  nd_proxy_upstream_interface_register
              definition:  nd_proxy_upstream_interface_unregister
              definition:  nd_proxy_upstream_route_onlink
              reference :  ns_dyn_mem_alloc
              reference :  ns_dyn_mem_free
              reference :  ns_list_add_to_start_
              reference :  ns_list_get_next_
              reference :  ns_list_init_
              reference :  ns_list_remove_
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/nanostack/sal-stack-nanostack/source/Service_Libs/nist_aes_kw/nist_aes_kw.o.
              definition:  nist_aes_key_wrap
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/nanostack/sal-stack-nanostack/source/Service_Libs/pan_blacklist/pan_blacklist.o.
              reference :  memcmp
              reference :  ns_dyn_mem_alloc
              reference :  ns_dyn_mem_free
              reference :  ns_list_add_to_end_
              reference :  ns_list_get_next_
              reference :  ns_list_init_
              reference :  ns_list_remove_
              definition:  pan_blacklist_cache_init
              definition:  pan_blacklist_filter
              definition:  pan_blacklist_pan_set
              definition:  pan_blacklist_time_update
              definition:  pan_coordinator_blacklist_cache_init
              definition:  pan_coordinator_blacklist_free
              definition:  pan_coordinator_blacklist_time_update
              definition:  pan_cordinator_blacklist_filter
              definition:  pan_cordinator_blacklist_pan_set
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/nanostack/sal-stack-nanostack/source/Service_Libs/utils/isqrt.o.
              definition:  isqrt32
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/nanostack/sal-stack-nanostack/source/Service_Libs/utils/ns_conf.o.
              definition:  ns_conf_gc_threshold_set
              definition:  ns_conf_packet_ingress_rate_limit_by_mem
              reference :  ns_monitor_heap_gc_threshold_set
              reference :  ns_monitor_packet_ingress_rate_limit_by_memory
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/nanostack/sal-stack-nanostack/source/Service_Libs/utils/ns_crc.o.
              definition:  crc16_ansi
              definition:  crc16_calc
              definition:  crc16_ccitt
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/nanostack/sal-stack-nanostack/source/Service_Libs/utils/ns_file_system.o.
              reference :  fclose
              reference :  fopen
              reference :  fread
              reference :  fseek
              reference :  ftell
              reference :  fwrite
              reference :  ns_dyn_mem_alloc
              reference :  ns_dyn_mem_free
              definition:  ns_fclose
              definition:  ns_file_system_callbacks_set
              definition:  ns_file_system_get_root_path
              definition:  ns_file_system_set_root_path
              definition:  ns_fopen
              definition:  ns_fread
              definition:  ns_fremove
              definition:  ns_fsize
              definition:  ns_fwrite
              reference :  remove
              reference :  rewind
              reference :  strcpy
              reference :  strlen
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/nanostack/sal-stack-nanostack/source/Service_Libs/whiteboard/whiteboard.o.
              reference :  memcmp
              reference :  ns_dyn_mem_alloc
              reference :  ns_dyn_mem_free
              reference :  ns_list_add_to_start_
              reference :  ns_list_get_next_
              reference :  ns_list_remove_
              definition:  whiteboard_get
              definition:  whiteboard_init
              definition:  whiteboard_init_by_prefix
              definition:  whiteboard_interface_address_cmp
              definition:  whiteboard_interface_register
              definition:  whiteboard_interface_unregister_all_address
              definition:  whiteboard_rm_entry
              definition:  whiteboard_set_device_hard_limit
              definition:  whiteboard_size_get
              definition:  whiteboard_table_check_address
              definition:  whiteboard_table_update
              definition:  whiteboard_ttl_update
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/nanostack/sal-stack-nanostack/source/ipv6_stack/ipv6_routing_table.o.
              reference :  ADDR_UNSPECIFIED
              reference :  __2sprintf
              reference :  __aeabi_memclr
              reference :  __aeabi_memclr4
              reference :  __aeabi_memcpy
              reference :  _printf_flags
              reference :  _printf_longlong_hex
              reference :  _printf_percent
              reference :  _printf_pre_padding
              reference :  _printf_return_value
              reference :  _printf_widthprec
              reference :  _printf_x
              reference :  addr_ipv6_equal
              reference :  addr_ipv6_scope
              reference :  addr_is_ipv6_link_local
              reference :  addr_len_from_type
              reference :  bitcopy
              reference :  bitsequal
              reference :  etx_read
              reference :  ip6tos
              definition:  ipv6_destination_cache_configure
              definition:  ipv6_destination_cache_forced_gc
              definition:  ipv6_destination_cache_print
              definition:  ipv6_destination_cache_timer
              definition:  ipv6_destination_lookup_or_create
              definition:  ipv6_destination_redirect
              reference :  ipv6_interface_resolution_failed
              reference :  ipv6_interface_resolve_send_ns
              reference :  ipv6_map_ip_to_ll_and_call_ll_addr_handler
              definition:  ipv6_neighbour_addr_is_probably_reachable
              reference :  ipv6_neighbour_cache_by_interface_id
              definition:  ipv6_neighbour_cache_configure
              definition:  ipv6_neighbour_cache_fast_timer
              definition:  ipv6_neighbour_cache_flush
              definition:  ipv6_neighbour_cache_init
              definition:  ipv6_neighbour_cache_print
              definition:  ipv6_neighbour_cache_slow_timer
              definition:  ipv6_neighbour_delete_registered_by_eui64
              definition:  ipv6_neighbour_entry_remove
              definition:  ipv6_neighbour_entry_update_unsolicited
              definition:  ipv6_neighbour_has_registered_by_eui64
              definition:  ipv6_neighbour_invalidate_ll_addr
              definition:  ipv6_neighbour_is_probably_reachable
              definition:  ipv6_neighbour_ll_addr_match
              definition:  ipv6_neighbour_lookup
              definition:  ipv6_neighbour_lookup_by_interface_id
              definition:  ipv6_neighbour_lookup_or_create
              definition:  ipv6_neighbour_lookup_or_create_by_interface_id
              definition:  ipv6_neighbour_reachability_confirmation
              definition:  ipv6_neighbour_reachability_problem
              definition:  ipv6_neighbour_set_current_max_cache
              definition:  ipv6_neighbour_set_state
              definition:  ipv6_neighbour_update_from_na
              definition:  ipv6_neighbour_update_unsolicited
              definition:  ipv6_neighbour_used
              definition:  ipv6_route_add
              definition:  ipv6_route_add_metric
              definition:  ipv6_route_add_with_info
              definition:  ipv6_route_choose_next_hop
              definition:  ipv6_route_delete
              definition:  ipv6_route_delete_with_info
              definition:  ipv6_route_lookup_with_info
              definition:  ipv6_route_pref_to_metric
              definition:  ipv6_route_table_modify_router_metric
              definition:  ipv6_route_table_print
              definition:  ipv6_route_table_remove_info
              definition:  ipv6_route_table_remove_interface
              definition:  ipv6_route_table_set_max_entries
              definition:  ipv6_route_table_set_next_hop_fn
              definition:  ipv6_route_table_set_predicate_fn
              definition:  ipv6_route_table_source_invalidated_reset
              definition:  ipv6_route_table_source_was_invalidated
              definition:  ipv6_route_table_ttl_update
              definition:  ipv6_router_gone
              reference :  ipv6_send_queued
              reference :  mbed_trace_ipv6
              reference :  mbed_tracef
              reference :  mbed_vtracef
              reference :  memcmp
              reference :  ns_dyn_mem_alloc
              reference :  ns_dyn_mem_free
              reference :  ns_list_add_to_end_
              reference :  ns_list_add_to_start_
              reference :  ns_list_count_
              reference :  ns_list_get_last_
              reference :  ns_list_get_next_
              reference :  ns_list_get_previous_
              reference :  ns_list_init_
              reference :  ns_list_remove_
              reference :  protocol_core_buffers_in_event_queue
              reference :  randLIB_get_32bit
              reference :  randLIB_randomise_base
              definition:  trace_debug_print
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/nanostack/sal-stack-nanostack/source/ipv6_stack/protocol_ipv6.o.
              reference :  ADDR_LINK_LOCAL_ALL_NODES
              reference :  ADDR_LINK_LOCAL_PREFIX
              reference :  ADDR_UNSPECIFIED
              reference :  __aeabi_memclr
              reference :  __aeabi_memcpy
              reference :  addr_add
              reference :  addr_interface_all_address_ready
              reference :  addr_interface_get_ll_address
              reference :  addr_interface_gp_prefix_compare
              reference :  addr_interface_set_ll64
              reference :  addr_ipv6_scope
              reference :  arm_net_protocol_packet_handler
              reference :  bitsequal
              reference :  buffer_corrupt_check
              reference :  buffer_data_add
              reference :  buffer_free
              reference :  buffer_get
              reference :  buffer_get_minimal
              reference :  common_write_16_bit
              reference :  common_write_32_bit
              definition:  ethernet_down
              reference :  icmpv6_build_rs
              reference :  icmpv6_down
              reference :  icmpv6_prefix_add
              reference :  icmpv6_prefix_compare
              reference :  icmpv6_prefix_list_free
              reference :  icmpv6_recv_ra_prefixes
              reference :  icmpv6_recv_ra_routes
              reference :  icmpv6_restart_router_advertisements
              reference :  icmpv6_slaac_address_add
              reference :  icmpv6_up
              reference :  icmpv6_write_mtu_option
              reference :  icmpv6_write_prefix_option
              definition:  ipv6_core_slow_timer_event_handle
              definition:  ipv6_core_timer_event_handle
              reference :  ipv6_down
              reference :  ipv6_forwarding_down
              reference :  ipv6_forwarding_up
              definition:  ipv6_generate_static_gp_setup
              definition:  ipv6_interface_accept_ra
              definition:  ipv6_interface_configure_ipv6_bootstrap_set
              definition:  ipv6_interface_down
              definition:  ipv6_interface_phy_sap_register
              reference :  ipv6_interface_resolve_new
              definition:  ipv6_interface_route_validate
              definition:  ipv6_interface_slaac_handler
              definition:  ipv6_interface_up
              definition:  ipv6_nd_ra_advert
              definition:  ipv6_prefix_on_link_list_add_by_interface_address_list
              definition:  ipv6_prefix_on_link_remove
              definition:  ipv6_prefix_on_link_update
              definition:  ipv6_prefix_online_list_free
              definition:  ipv6_prefix_register
              definition:  ipv6_prefix_router_flag_activate
              definition:  ipv6_rote_advert_list_free
              reference :  ipv6_route_add
              reference :  ipv6_route_choose_next_hop
              reference :  ipv6_route_table_remove_interface
              definition:  ipv6_stack_route_advert_default_route
              definition:  ipv6_stack_route_advert_dns_search_list_add
              definition:  ipv6_stack_route_advert_dns_server_add
              definition:  ipv6_stack_route_advert_dns_server_delete
              definition:  ipv6_stack_route_advert_remove
              definition:  ipv6_stack_route_advert_update
              reference :  mbed_tracef
              reference :  memcmp
              reference :  nd_proxy_upstream_interface_register
              reference :  nd_proxy_upstream_interface_unregister
              reference :  neighbor_cache_flush
              reference :  ns_dyn_mem_alloc
              reference :  ns_dyn_mem_free
              reference :  ns_list_add_to_end_
              reference :  ns_list_count_
              reference :  ns_list_get_next_
              reference :  ns_list_remove_
              reference :  nwk_bootsrap_state_update
              reference :  nwk_interface_get_ipv6_ptr
              reference :  protocol_core_interface_info_reset
              reference :  protocol_push
              reference :  protocol_stack_interface_info_get
              reference :  protocol_stack_interface_info_get_by_id
              reference :  socket_tx_buffer_event_and_free
              reference :  socket_up
              reference :  tcp_up
              definition:  tunnel_in_use
              reference :  udp_down
              reference :  udp_up
              reference :  whiteboard_interface_register
              reference :  whiteboard_interface_unregister_all_address
              reference :  whiteboard_ttl_update
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/nanostack/sal-stack-nanostack/source/libDHCPv6/dhcp_service_api.o.
              definition:  DHCPv6_socket_service_tasklet
              reference :  __aeabi_memclr4
              reference :  addr_interface_select_source
              reference :  common_read_24_bit
              reference :  common_write_16_bit
              reference :  common_write_24_bit
              definition:  dhcp_service
              definition:  dhcp_service_allocate
              definition:  dhcp_service_client_find
              definition:  dhcp_service_delete
              definition:  dhcp_service_init
              definition:  dhcp_service_link_local_rx_cb_set
              definition:  dhcp_service_relay_global_addres_get
              definition:  dhcp_service_relay_instance_enable
              definition:  dhcp_service_req_remove
              definition:  dhcp_service_req_remove_all
              definition:  dhcp_service_send_message
              definition:  dhcp_service_send_req
              definition:  dhcp_service_send_resp
              definition:  dhcp_service_set_retry_timers
              definition:  dhcp_service_timer_tick
              definition:  dhcp_service_update_server_address
              definition:  dhcp_tr_create
              definition:  dhcp_tr_delete
              definition:  dhcp_tr_find
              definition:  dhcp_tr_set_retry_timers
              reference :  eventOS_event_handler_create
              reference :  eventOS_event_timer_request
              reference :  libdhcpv6_dhcp_option_header_write
              reference :  libdhcpv6_dhcp_relay_msg_write
              reference :  libdhcpv6_message_malformed_check
              reference :  libdhcpv6_message_option_discover
              reference :  libdhcpv6_relay_msg_read
              reference :  mbed_trace_ipv6
              reference :  mbed_tracef
              reference :  ns_dyn_mem_alloc
              reference :  ns_dyn_mem_free
              reference :  ns_dyn_mem_temporary_alloc
              reference :  ns_list_add_to_start_
              reference :  ns_list_get_next_
              reference :  ns_list_init_
              reference :  ns_list_remove_
              reference :  protocol_core_monotonic_time
              reference :  protocol_stack_interface_info_get_by_id
              reference :  randLIB_get_32bit
              reference :  randLIB_randomise_base
              definition:  recv_dhcp_client_msg
              definition:  recv_dhcp_relay_msg
              definition:  recv_dhcp_server_msg
              reference :  socket_close
              reference :  socket_open
              reference :  socket_read
              reference :  socket_recvmsg
              reference :  socket_sendmsg
              reference :  socket_sendto
              reference :  socket_setsockopt
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/nanostack/sal-stack-nanostack/source/libDHCPv6/libDHCPv6.o.
              reference :  __aeabi_memcpy
              reference :  common_read_16_bit
              reference :  common_read_32_bit
              reference :  common_write_16_bit
              reference :  common_write_24_bit
              reference :  common_write_32_bit
              definition:  libdhcpv6_address_reply_message_len
              definition:  libdhcpv6_address_request_message_len
              definition:  libdhcpv6_advertisment_message_option_validate
              definition:  libdhcpv6_client_last_transaction_time_option_write
              definition:  libdhcpv6_compare_DUID
              definition:  libdhcpv6_dhcp_option_header_write
              definition:  libdhcpv6_dhcp_relay_msg_write
              definition:  libdhcpv6_duid_length_validate
              definition:  libdhcpv6_duid_linktype_size
              definition:  libdhcpv6_duid_option_size
              definition:  libdhcpv6_duid_option_write
              definition:  libdhcpv6_elapsed_time_option_write
              definition:  libdhcpv6_generic_nontemporal_address_message_write
              definition:  libdhcpv6_get_IA_address
              definition:  libdhcpv6_get_duid_by_selected_type_id_opt
              definition:  libdhcpv6_get_link_address_from_duid
              definition:  libdhcpv6_header_write
              definition:  libdhcpv6_ia_address_option_write
              definition:  libdhcpv6_identity_association_option_write
              definition:  libdhcpv6_identity_association_option_write_with_status
              definition:  libdhcpv6_message_malformed_check
              definition:  libdhcpv6_message_option_discover
              definition:  libdhcpv6_nonTemporal_entry_get_by_iaid
              definition:  libdhcpv6_nonTemporal_entry_get_by_instance
              definition:  libdhcpv6_nonTemporal_entry_get_by_prefix
              definition:  libdhcpv6_nonTemporal_entry_get_by_transactionId
              definition:  libdhcpv6_nonTemporal_entry_get_unique_instance_id
              definition:  libdhcpv6_nonTemporal_validate_class_pointer
              definition:  libdhcpv6_non_temporal_address_size
              definition:  libdhcpv6_prefix_delegation_info_option_write
              definition:  libdhcpv6_rapid_commit_option_at_packet
              definition:  libdhcpv6_rapid_commit_option_write
              definition:  libdhcpv6_relay_msg_read
              definition:  libdhcpv6_renew_message_options_validate
              definition:  libdhcpv6_renew_time_define
              definition:  libdhcpv6_reply_message_option_validate
              definition:  libdhcpv6_solication_message_length
              definition:  libdhcpv6_solication_message_options_validate
              definition:  libdhcpv6_status_code_write
              definition:  libdhcpv6_time_elapsed_option_at_packet
              definition:  libdhcpv6_txid_get
              definition:  libdhcpv6_vendor_option_size
              definition:  libdhcvp6_nontemporalAddress_server_data_allocate
              definition:  libdhcvp6_nontemporalAddress_server_data_free
              definition:  libdhcvp6_request_option_size
              definition:  libdhcvp6_request_option_write
              reference :  mbed_tracef
              reference :  memcmp
              reference :  ns_dyn_mem_alloc
              reference :  ns_dyn_mem_free
              reference :  ns_list_add_to_end_
              reference :  ns_list_get_next_
              reference :  ns_list_remove_
              reference :  randLIB_get_32bit
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/nanostack/sal-stack-nanostack/source/libDHCPv6/libDHCPv6_server.o.
              reference :  __aeabi_memcpy
              reference :  common_write_16_bit
              reference :  common_write_32_bit
              definition:  libdhcpv6_address_allocated_list_scan
              definition:  libdhcpv6_address_get_from_allocated_list
              definition:  libdhcpv6_address_rm_from_allocated_list
              definition:  libdhcpv6_allocated_address_write
              definition:  libdhcpv6_dns_server_allocate
              definition:  libdhcpv6_dns_server_discover
              definition:  libdhcpv6_dns_server_message_sizes
              definition:  libdhcpv6_dns_server_message_writes
              reference :  libdhcpv6_duid_linktype_size
              definition:  libdhcpv6_gua_server_allocate
              definition:  libdhcpv6_gua_server_free_by_prefix_and_interfaceid
              definition:  libdhcpv6_gua_server_list_empty
              definition:  libdhcpv6_gua_servers_time_update
              definition:  libdhcpv6_server_data_get_by_prefix_and_interfaceid
              definition:  libdhcpv6_server_data_get_by_prefix_and_socketinstance
              definition:  libdhcpv6_server_duid_set
              definition:  libdhcpv6_vendor_data_allocate
              definition:  libdhcpv6_vendor_data_discover
              definition:  libdhcpv6_vendor_data_message_sizes
              definition:  libdhcpv6_vendor_data_message_writes
              reference :  memcmp
              reference :  ns_dyn_mem_alloc
              reference :  ns_dyn_mem_free
              reference :  ns_list_add_before_
              reference :  ns_list_add_to_end_
              reference :  ns_list_add_to_start_
              reference :  ns_list_count_
              reference :  ns_list_get_next_
              reference :  ns_list_init_
              reference :  ns_list_remove_
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/nanostack/sal-stack-nanostack/source/libDHCPv6/libDHCPv6_vendordata.o.
              reference :  __aeabi_memcpy
              reference :  common_read_16_bit
              reference :  common_write_16_bit
              definition:  net_dns_option_vendor_option_data_dns_query_length
              definition:  net_dns_option_vendor_option_data_dns_query_read
              definition:  net_dns_option_vendor_option_data_dns_query_write
              definition:  net_dns_option_vendor_option_data_get_next
              reference :  strlen
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/nanostack/sal-stack-nanostack/source/libNET/src/multicast_api.o.
              reference :  ADDR_ALL_MPL_FORWARDERS
              reference :  __aeabi_memcpy
              reference :  addr_add_group
              reference :  addr_multicast_fwd_add
              reference :  addr_multicast_fwd_adjust_upstream_full
              reference :  addr_multicast_fwd_remove
              reference :  addr_multicast_fwd_set_forwarding
              reference :  addr_remove_group
              reference :  mpl_domain_change_timing
              reference :  mpl_domain_create
              reference :  mpl_domain_delete
              reference :  mpl_domain_lookup
              definition:  multicast_add_address
              definition:  multicast_free_address
              definition:  multicast_fwd_add
              definition:  multicast_fwd_full_for_scope
              definition:  multicast_fwd_remove
              definition:  multicast_fwd_set_forwarding
              definition:  multicast_fwd_set_proxy_upstream
              definition:  multicast_mpl_domain_subscribe
              definition:  multicast_mpl_domain_subscribe_with_parameters
              definition:  multicast_mpl_domain_unsubscribe
              definition:  multicast_mpl_set_default_parameters
              definition:  multicast_mpl_set_default_seed_id
              definition:  multicast_set_parameters
              reference :  protocol_core_multicast_upstream
              reference :  protocol_stack_interface_info_get
              reference :  protocol_stack_interface_info_get_by_id
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/nanostack/sal-stack-nanostack/source/libNET/src/net_6lowpan_parameter_api.o.
              reference :  nd_base_tick
              reference :  nd_params
              definition:  net_6lowpan_nd_parameter_read
              definition:  net_6lowpan_nd_parameter_set
              definition:  net_6lowpan_nd_timer_base_tick_set
              reference :  protocol_stack_interface_info_get
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/nanostack/sal-stack-nanostack/source/libNET/src/net_dns.o.
              reference :  __aeabi_memclr4
              reference :  __aeabi_memcpy
              reference :  mbed_trace_array
              reference :  mbed_trace_ipv6
              reference :  mbed_tracef
              reference :  memcmp
              definition:  net_dns_query_result_get
              definition:  net_dns_query_result_set
              definition:  net_dns_server_address_set
              definition:  net_dns_server_get
              definition:  net_dns_server_search_list_set
              definition:  net_dns_timer_seconds
              reference :  ns_dyn_mem_alloc
              reference :  ns_dyn_mem_free
              reference :  ns_list_add_to_start_
              reference :  ns_list_get_next_
              reference :  ns_list_remove_
              reference :  strcasecmp
              reference :  strcpy
              reference :  strlen
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/nanostack/sal-stack-nanostack/source/libNET/src/net_ipv6.o.
              reference :  addr_opaque_iid_key_set
              definition:  arm_nwk_ipv6_auto_flow_label
              definition:  arm_nwk_ipv6_default_route_enable
              definition:  arm_nwk_ipv6_destination_cache_configure
              definition:  arm_nwk_ipv6_dns_search_list_add
              definition:  arm_nwk_ipv6_dns_server_add
              definition:  arm_nwk_ipv6_frag_mru
              definition:  arm_nwk_ipv6_max_cache_entries
              definition:  arm_nwk_ipv6_neighbour_cache_configure
              definition:  arm_nwk_ipv6_opaque_iid_enable
              definition:  arm_nwk_ipv6_opaque_iid_key
              reference :  ipv6_destination_cache_configure
              reference :  ipv6_flow_auto_label
              reference :  ipv6_frag_set_mru
              reference :  ipv6_neighbour_cache_configure
              reference :  ipv6_neighbour_set_current_max_cache
              reference :  ipv6_stack_route_advert_default_route
              reference :  ipv6_stack_route_advert_dns_search_list_add
              reference :  ipv6_stack_route_advert_dns_server_add
              reference :  ipv6_stack_route_advert_dns_server_delete
              reference :  protocol_stack_interface_info_get_by_id
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/nanostack/sal-stack-nanostack/source/libNET/src/net_load_balance.o.
              reference :  ADDR_LINK_LOCAL_ALL_NODES
              reference :  arm_nwk_6lowpan_rpl_dodag_poison
              reference :  load_balance_create
              reference :  load_balance_delete
              reference :  load_balance_network_load_monitor_disable
              reference :  load_balance_network_load_monitor_enable
              reference :  load_balance_network_switch_cb_set
              reference :  load_balance_network_threshold_set
              reference :  load_balance_set_max_probability
              reference :  mle_service_interface_receiver_handler_update
              reference :  mle_service_reject_message_build
              reference :  nd_get_object_by_nwk_id
              definition:  net_load_balance_create
              definition:  net_load_balance_delete
              definition:  net_load_balance_internal_state_activate
              definition:  net_load_balance_load_level_update_disable
              definition:  net_load_balance_load_level_update_enable
              definition:  net_load_balance_network_switch_cb_set
              definition:  net_load_balance_set_max_probability
              definition:  net_load_balance_threshold_set
              reference :  pana_reset_client_session
              reference :  protocol_6lowpan_bootsrap_link_set
              reference :  protocol_6lowpan_bootsrap_start
              reference :  protocol_6lowpan_rpl_domain
              reference :  protocol_6lowpan_rpl_global_priority_get
              reference :  protocol_6lowpan_rpl_root_dodag
              reference :  protocol_stack_interface_info_get_by_id
              reference :  rpl_control_get_dodag_config
              reference :  rpl_control_get_instance_dao_target_count
              reference :  rpl_control_lookup_instance
              reference :  rpl_control_set_dodag_pref
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/nanostack/sal-stack-nanostack/source/libNET/src/net_mle.o.
              definition:  arm_nwk_6lowpan_mle_host_lifetime_set
              definition:  arm_nwk_6lowpan_mle_neighbor_limits_set
              definition:  arm_nwk_6lowpan_mle_router_lifetime_set
              definition:  arm_nwk_6lowpan_mle_token_bucket_settings_set
              reference :  mle_service_interface_token_bucket_settings_set
              reference :  protocol_6lowpan_mle_data_get
              reference :  protocol_stack_interface_info_get_by_id
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/nanostack/sal-stack-nanostack/source/libNET/src/net_rpl.o.
              definition:  arm_nwk_6lowpan_rpl_dodag_dao_trig
              definition:  arm_nwk_6lowpan_rpl_dodag_init
              definition:  arm_nwk_6lowpan_rpl_dodag_poison
              definition:  arm_nwk_6lowpan_rpl_dodag_pref_set
              definition:  arm_nwk_6lowpan_rpl_dodag_prefix_update
              definition:  arm_nwk_6lowpan_rpl_dodag_remove
              definition:  arm_nwk_6lowpan_rpl_dodag_route_update
              definition:  arm_nwk_6lowpan_rpl_dodag_start
              definition:  arm_nwk_6lowpan_rpl_dodag_version_increment
              definition:  arm_nwk_6lowpan_rpl_memory_limit_set
              reference :  protocol_6lowpan_rpl_domain
              reference :  protocol_6lowpan_rpl_root_dodag
              reference :  protocol_stack_interface_info_get_by_id
              reference :  rpl_control_create_dodag_root
              reference :  rpl_control_delete_dodag_root
              reference :  rpl_control_enumerate_instances
              reference :  rpl_control_force_leaf
              reference :  rpl_control_increment_dodag_version
              reference :  rpl_control_increment_dtsn
              reference :  rpl_control_lookup_instance
              reference :  rpl_control_poison
              reference :  rpl_control_read_dodag_info
              reference :  rpl_control_set_dodag_pref
              reference :  rpl_control_set_memory_limits
              reference :  rpl_control_update_dodag_prefix
              reference :  rpl_control_update_dodag_route
              reference :  rpl_data_init_root
              definition:  rpl_instance_list_read
              definition:  rpl_read_dodag_info
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/nanostack/sal-stack-nanostack/source/libNET/src/net_short_address_extension.o.
              reference :  mac_helper_mac16_address_get
              reference :  mac_helper_mac16_address_set
              definition:  net_ext_DAD_event_generate
              definition:  net_ext_get_short_address
              definition:  net_ext_reset_short_address_from_app
              definition:  net_ext_set_short_address_from_app
              reference :  protocol_6lowpan_allocate_mac16
              reference :  protocol_stack_interface_info_get
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/nanostack/sal-stack-nanostack/source/libNET/src/net_test.o.
              definition:  arm_nwk_test_mle_receive_filter_set
              definition:  arm_nwk_test_tcp_drop_reset
              definition:  arm_nwk_test_tcp_drop_rx
              definition:  arm_nwk_test_tcp_drop_tx
              reference :  mle_service_receive_filter_cb_set
              reference :  tcp_test_drop_reset
              reference :  tcp_test_drop_rx
              reference :  tcp_test_drop_tx
              definition:  validate_tcp_state_name
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/nanostack/sal-stack-nanostack/source/libNET/src/ns_net.o.
              reference :  __aeabi_memcpy
              reference :  addr_add
              reference :  addr_delete
              reference :  addr_interface_get_ll_address
              reference :  addr_is_ipv6_link_local
              reference :  addr_notification_register
              reference :  addr_select_with_prefix
              definition:  arm_6lowpan_bootsrap_set_for_selected_interface
              reference :  arm_6lowpan_bootstarp_bootstrap_set
              reference :  arm_6lowpan_mle_service_ready_for_security_init
              definition:  arm_ncache_flush
              definition:  arm_net_address_add_to_interface
              definition:  arm_net_address_delete_from_interface
              definition:  arm_net_address_get
              definition:  arm_net_address_list_get
              definition:  arm_net_address_list_get_next
              definition:  arm_net_dns_query_result_get
              definition:  arm_net_dns_query_result_set
              definition:  arm_net_dns_server_get
              definition:  arm_net_energy_scan
              definition:  arm_net_get_current_channel
              definition:  arm_net_get_nwk_pan_id_filter
              definition:  arm_net_get_scanned_nwk_list
              definition:  arm_net_host_enter_sleep_state_set
              definition:  arm_net_interface_address_list_size
              definition:  arm_net_interface_get_metric
              definition:  arm_net_interface_set_metric
              definition:  arm_net_nwk_scan
              definition:  arm_net_route_add
              definition:  arm_net_route_delete
              definition:  arm_network_certificate_chain_set
              definition:  arm_network_certificate_revocation_list_add
              definition:  arm_network_certificate_revocation_list_remove
              definition:  arm_network_key_get
              definition:  arm_network_own_certificate_add
              definition:  arm_network_own_certificates_remove
              definition:  arm_network_trusted_certificate_add
              definition:  arm_network_trusted_certificate_remove
              definition:  arm_network_trusted_certificates_remove
              definition:  arm_nwk_6lowpan_beacon_compare_rx_callback_set
              definition:  arm_nwk_6lowpan_beacon_join_priority_tx_callback_set
              definition:  arm_nwk_6lowpan_gp_address_mode
              definition:  arm_nwk_6lowpan_link_nwk_id_filter_for_nwk_scan
              definition:  arm_nwk_6lowpan_link_panid_filter_for_nwk_scan
              definition:  arm_nwk_6lowpan_link_protocol_id_filter_for_nwk_scan
              definition:  arm_nwk_6lowpan_link_scan_parameter_set
              definition:  arm_nwk_get_cca_threshold_table
              definition:  arm_nwk_host_mode_get
              definition:  arm_nwk_host_mode_set
              definition:  arm_nwk_interface_accept_ipv6_ra
              definition:  arm_nwk_interface_configure_6lowpan_bootstrap_set
              definition:  arm_nwk_interface_configure_ipv6_bootstrap_set
              definition:  arm_nwk_interface_down
              definition:  arm_nwk_interface_ethernet_init
              definition:  arm_nwk_interface_lowpan_init
              definition:  arm_nwk_interface_network_driver_set
              definition:  arm_nwk_interface_ppp_init
              definition:  arm_nwk_interface_up
              definition:  arm_nwk_link_layer_security_mode
              definition:  arm_nwk_mac_address_read
              definition:  arm_nwk_nd_address_read
              definition:  arm_nwk_param_read
              definition:  arm_nwk_set_cca_threshold
              definition:  arm_nwk_set_channel_list
              definition:  arm_nwk_set_tx_output_power
              definition:  arm_nwk_sleepy_device_parent_buffer_size_set
              definition:  arm_pana_activate_new_key
              definition:  arm_pana_client_key_pull
              definition:  arm_pana_client_library_init
              definition:  arm_pana_server_key_update
              definition:  arm_pana_server_library_init
              definition:  arm_print_neigh_cache
              definition:  arm_print_neigh_cache2
              definition:  arm_print_protocols
              definition:  arm_print_protocols2
              definition:  arm_print_routing_table
              definition:  arm_print_routing_table2
              reference :  eventOS_scheduler_get_active_tasklet
              reference :  ipv6_destination_cache_print
              reference :  ipv6_interface_accept_ra
              reference :  ipv6_interface_configure_ipv6_bootstrap_set
              reference :  ipv6_interface_down
              reference :  ipv6_interface_up
              reference :  ipv6_route_add
              reference :  ipv6_route_add_metric
              reference :  ipv6_route_delete
              reference :  ipv6_route_table_print
              reference :  lowpan_adaptation_indirect_queue_params_set
              reference :  mac_beacon_link_beacon_compare_rx_callback_set
              reference :  mac_beacon_link_beacon_join_priority_tx_callback_set
              reference :  mac_data_poll_host_mode_get
              reference :  mac_data_poll_host_mode_set
              reference :  mac_helper_beacon_payload_reallocate
              reference :  mac_helper_beacon_payload_register
              reference :  mac_helper_coordinator_address_get
              reference :  mac_helper_link_frame_counter_set
              reference :  mac_helper_mac16_address_set
              reference :  mac_helper_mac_channel_set
              reference :  mac_helper_nwk_id_filter_set
              reference :  mac_helper_panid_get
              reference :  mac_helper_panid_set
              reference :  mbed_tracef
              reference :  mbed_vtracef
              reference :  net_dns_query_result_get
              reference :  net_dns_query_result_set
              reference :  net_dns_server_get
              definition:  net_get_version_information
              definition:  net_init_core
              definition:  net_nvm_data_clean
              definition:  net_pana_parameter_read
              definition:  net_pana_parameter_set
              reference :  network_library_init
              reference :  ns_list_get_next_
              reference :  nwk_bootsrap_ready
              reference :  nwk_interface_flush_neigh_cache
              reference :  nwk_interface_print_neigh_cache
              reference :  pana_client_interface_init
              reference :  pana_client_key_pull
              reference :  pana_client_parameter_allocate
              reference :  pana_get_params
              reference :  pana_interface_certificate_chain_set
              reference :  pana_network_key_get
              reference :  pana_reset_client_session
              reference :  pana_server_interface_init
              reference :  pana_server_key_update
              reference :  pana_server_trig_new_key
              reference :  pana_set_params
              reference :  protocol_6lowpan_allocate_mac16
              reference :  protocol_6lowpan_configure_core
              reference :  protocol_6lowpan_nd_border_router_address_get
              reference :  protocol_core_init
              reference :  protocol_stack_interface_generate_ethernet
              reference :  protocol_stack_interface_generate_lowpan
              reference :  protocol_stack_interface_generate_ppp
              reference :  protocol_stack_interface_info_get_by_id
              reference :  protocol_stats_init
              reference :  rpl_control_print
              reference :  rpl_data_init
              reference :  rpl_mrhof_init
              reference :  rpl_of0_init
              reference :  socket_list_print
              reference :  thread_management_device_type_set
              reference :  thread_node_bootstrap_init
              reference :  ws_bootstrap_init
              reference :  ws_pae_controller_certificate_chain_set
              reference :  ws_pae_controller_certificate_revocation_list_add
              reference :  ws_pae_controller_certificate_revocation_list_remove
              reference :  ws_pae_controller_own_certificate_add
              reference :  ws_pae_controller_own_certificates_remove
              reference :  ws_pae_controller_trusted_certificate_add
              reference :  ws_pae_controller_trusted_certificate_remove
              reference :  ws_pae_controller_trusted_certificates_remove
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/nanostack/sal-stack-nanostack/source/libNET/src/socket_api.o.
              definition:  NS_CMSG_NXTHDR
              reference :  __aeabi_memcpy
              reference :  addr_interface_select_source
              reference :  addr_ipv6_equal
              reference :  buffer_corrupt_check
              reference :  buffer_free
              reference :  buffer_get
              reference :  ipv6_flow_auto_label
              reference :  ipv6_flow_random
              reference :  ipv6_route_choose_next_hop
              reference :  mbed_tracef
              definition:  ns_in6addr_any
              reference :  ns_list_get_next_
              reference :  protocol_6lowpan_latency_estimate_get
              reference :  protocol_6lowpan_stagger_estimate_get
              reference :  protocol_interface_address_compare
              reference :  protocol_stack_interface_info_get_by_id
              reference :  sockbuf_drop_first
              reference :  sockbuf_flush
              reference :  sockbuf_reserve
              definition:  socket_accept
              definition:  socket_bind
              definition:  socket_bind2addrsel
              reference :  socket_buffer_sendmsg
              definition:  socket_close
              definition:  socket_connect
              reference :  socket_create
              reference :  socket_data_queued_event_push
              reference :  socket_generate_random_port
              definition:  socket_getpeername
              definition:  socket_getsockname
              definition:  socket_getsockopt
              reference :  socket_id_assign_and_attach
              reference :  socket_id_detach
              reference :  socket_inet_pcb_join_group
              reference :  socket_inet_pcb_leave_group
              reference :  socket_interface_determine
              reference :  socket_leave_pending_state
              definition:  socket_listen
              reference :  socket_message_validate_iov
              definition:  socket_open
              reference :  socket_pointer_get
              reference :  socket_port_validate
              definition:  socket_read
              definition:  socket_recv
              definition:  socket_recvfrom
              definition:  socket_recvmsg
              definition:  socket_send
              definition:  socket_sendmsg
              definition:  socket_sendto
              definition:  socket_setsockopt
              definition:  socket_shutdown
              reference :  tcp_session_close
              reference :  tcp_session_data_received
              reference :  tcp_session_open
              reference :  tcp_session_ptr_allocate
              reference :  tcp_session_ptr_free
              reference :  tcp_session_shutdown_read
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/nanostack/source/Nanostack.o.
              definition:  map_mesh_error(mesh_error_t)
              reference :  NetworkStack::getsockopt(void*, int, int, void*, unsigned*)
              reference :  NetworkStack::setsockopt(void*, int, int, const void*, unsigned)
              reference :  NetworkStack::getaddrinfo(const char*, SocketAddress*, SocketAddress**, const char*)
              reference :  NetworkStack::getstackopt(int, int, void*, unsigned*)
              reference :  NetworkStack::setstackopt(int, int, const void*, unsigned)
              reference :  NetworkStack::gethostbyname(const char*, SocketAddress*, nsapi_version, const char*)
              reference :  NetworkStack::add_dns_server(const SocketAddress&, const char*)
              reference :  NetworkStack::get_dns_server(int, SocketAddress*, const char*)
              reference :  NetworkStack::get_ip_address(SocketAddress*)
              reference :  NetworkStack::get_ip_address_if(SocketAddress*, const char*)
              reference :  NetworkStack::getaddrinfo_async(const char*, SocketAddress*, mbed::Callback<void(int, SocketAddress*)>, const char*)
              reference :  NetworkStack::gethostbyname_async(const char*, mbed::Callback<void(int, SocketAddress*)>, nsapi_version, const char*)
              reference :  NetworkStack::get_call_in_callback()
              reference :  NetworkStack::gethostbyname_async_cancel(int)
              reference :  NetworkStack::get_ipv6_link_local_address(SocketAddress*)
              reference :  NetworkStack::call_in(int, mbed::Callback<void()>)
              reference :  SocketAddress::set_ip_bytes(const void*, nsapi_version)
              definition:  NanostackSocket::event_data(socket_callback_t*)
              definition:  NanostackSocket::is_connected()
              definition:  NanostackSocket::is_listening()
              definition:  NanostackSocket::signal_event()
              definition:  NanostackSocket::event_tx_done(socket_callback_t*)
              definition:  NanostackSocket::event_tx_fail(socket_callback_t*)
              definition:  NanostackSocket::is_connecting()
              definition:  NanostackSocket::set_connected()
              definition:  NanostackSocket::set_listening()
              definition:  NanostackSocket::set_connecting(ns_address*)
              definition:  NanostackSocket::socket_callback(void*)
              definition:  NanostackSocket::event_connect_done(socket_callback_t*)
              definition:  NanostackSocket::event_connect_fail(socket_callback_t*)
              definition:  NanostackSocket::event_connect_closed(socket_callback_t*)
              definition:  NanostackSocket::event_connection_reset(socket_callback_t*)
              definition:  NanostackSocket::event_incoming_connection(socket_callback_t*)
              definition:  NanostackSocket::open()
              definition:  NanostackSocket::close()
              definition:  NanostackSocket::accept(NanostackSocket*, ns_address*)
              definition:  NanostackSocket::attach(signed char)
              weak defn :  NanostackSocket::closed()
              definition:  NanostackSocket::NanostackSocket(signed char)
              definition:  NanostackSocket::NanostackSocket__sub_object(signed char)
              definition:  NanostackSocket::~NanostackSocket()
              definition:  NanostackSocket::~NanostackSocket__sub_object()
              definition:  NanostackSocket::operator delete (void*)
              definition:  NanostackSocket::operator new(unsigned)
              reference :  NetStackMemoryManager::copy_to_buf(void*, const void*, unsigned)
              weak defn :  NanostackMemoryManager::NanostackMemoryManager__sub_object()
              weak defn :  T1 mbed::detail::invoke_r<int, int(Nanostack::*const &)(int, mbed::Callback<void()>), <Nanostack*const &, int, mbed::Callback<void()>>, (int)0>(T2&&, T3&&...)
              weak defn :  T1 mbed::detail::invoke_r<int, mbed::Callback<int(int, mbed::Callback<void()>)>::Callback<Nanostack*, int(Nanostack::*)(int, mbed::Callback<void()>), (int)0>(T1, T2)::[lambda(int, mbed::Callback<void()>) (instance 1)]&, <int, mbed::Callback<void()>>, (int)0>(T2&&, T3&&...)
              weak defn :  int mbed::Callback<int(int, mbed::Callback<void()>)>::target_call<mbed::Callback<int(int, mbed::Callback<void()>)>::Callback<Nanostack*, int(Nanostack::*)(int, mbed::Callback<void()>), (int)0>(T1, T2)::[lambda(int, mbed::Callback<void()>) (instance 1)]>(const mbed::detail::CallbackBase*, int, mbed::Callback<void()>)
              weak defn :  void mbed::Callback<int(int, mbed::Callback<void()>)>::generate<mbed::Callback<int(int, mbed::Callback<void()>)>::Callback<Nanostack*, int(Nanostack::*)(int, mbed::Callback<void()>), (int)0>(T1, T2)::[lambda(int, mbed::Callback<void()>) (instance 1)], void>(T1&&)
              weak defn :  mbed::Callback<int(int, mbed::Callback<void()>)>::Callback__sub_object<Nanostack*, int(Nanostack::*)(int, mbed::Callback<void()>), (int)0>(T1, T2)
              weak defn :  std::__1::enable_if<((std::is_function<T2>::value&&(!std::is_base_of<T1, std::__1::decay<T3>::type>::value))&&(!is_reference_wrapper<std::__1::decay<T3>::type>::value)), decltype((((*std::forward<T3>(param#2)).*param#1)(std::forward<T4>(param#3)...)))>::type mstd::impl::INVOKE<Nanostack, int(int, mbed::Callback<void()>), Nanostack*const &, <int, mbed::Callback<void()>>>(T2T1::*, T3&&, T4&&...)
              weak defn :  std::__1::enable_if<((!std::is_member_pointer<std::__1::decay<T1>::type>::value)||(std::is_member_object_pointer<std::__1::decay<T1>::type>::value&&(sizeof...(param#2)!=(int)1))), decltype((std::forward<T1>(param#1)(std::forward<T2>(param#2)...)))>::type mstd::impl::INVOKE<mbed::Callback<int(int, mbed::Callback<void()>)>::Callback<Nanostack*, int(Nanostack::*)(int, mbed::Callback<void()>), (int)0>(T1, T2)::[lambda(int, mbed::Callback<void()>) (instance 1)]&, <int, mbed::Callback<void()>>>(T1&&, T2&&...)
              weak defn :  mstd::invoke_result<T1, <T2...>>::type mstd::invoke<int(Nanostack::*const &)(int, mbed::Callback<void()>), <Nanostack*const &, int, mbed::Callback<void()>>>(T1&&, T2&&...)
              weak defn :  mstd::invoke_result<T1, <T2...>>::type mstd::invoke<mbed::Callback<int(int, mbed::Callback<void()>)>::Callback<Nanostack*, int(Nanostack::*)(int, mbed::Callback<void()>), (int)0>(T1, T2)::[lambda(int, mbed::Callback<void()>) (instance 1)]&, <int, mbed::Callback<void()>>>(T1&&, T2&&...)
              definition:  Nanostack::getsockopt(void*, int, int, void*, unsigned*)
              definition:  Nanostack::setsockopt(void*, int, int, const void*, unsigned)
              definition:  Nanostack::socket_bind(void*, const SocketAddress&)
              definition:  Nanostack::socket_open(void**, nsapi_protocol)
              definition:  Nanostack::socket_recv(void*, void*, unsigned)
              definition:  Nanostack::socket_send(void*, const void*, unsigned)
              definition:  Nanostack::get_instance()
              definition:  Nanostack::socket_close(void*)
              definition:  Nanostack::socket_accept(void*, void**, SocketAddress*)
              definition:  Nanostack::socket_attach(void*, void(*)(void*), void*)
              definition:  Nanostack::socket_listen(void*, int)
              definition:  Nanostack::socket_sendto(void*, const SocketAddress&, const void*, unsigned)
              definition:  Nanostack::get_ip_address(SocketAddress*)
              definition:  Nanostack::socket_connect(void*, const SocketAddress&)
              definition:  Nanostack::socket_recvfrom(void*, SocketAddress*, void*, unsigned)
              weak defn :  Nanostack::nanostack_callback::nanostack_callback__sub_object()
              definition:  Nanostack::get_call_in_callback()
              definition:  Nanostack::call_event_tasklet_main(arm_event_s*)
              definition:  Nanostack::call_in(int, mbed::Callback<void()>)
              definition:  Nanostack::do_sendto(void*, const ns_address*, const void*, unsigned)
              definition:  Nanostack::Nanostack()
              definition:  Nanostack::Nanostack__sub_object()
              reference :  NetStackMemoryManager::copy_from_buf(void*, unsigned, const void*) const
              reference :  vtable for NetworkStack
              reference :  vtable for NetStackMemoryManager
              reference :  vtable for NanostackMemoryManager
              reference :  vtable for Nanostack
              weak defn :  mbed::Callback<int(int, mbed::Callback<void()>)>::Callback<Nanostack*, int(Nanostack::*)(int, mbed::Callback<void()>), (int)0>(T1, T2)::[lambda(int, mbed::Callback<void()>) (instance 1)]::operator ()(int, mbed::Callback<void()>) const
              reference :  operator delete (void*)
              reference :  operator new(unsigned)
              reference :  __aeabi_memcpy
              reference :  __cxa_guard_acquire
              reference :  __cxa_guard_release
              reference :  __cxa_pure_virtual
              reference :  arm_net_address_get
              reference :  arm_net_address_list_get_next
              reference :  eventOS_event_handler_create
              reference :  eventOS_event_send
              reference :  eventOS_event_timer_request_in
              reference :  eventOS_scheduler_mutex_release
              reference :  eventOS_scheduler_mutex_wait
              reference :  ip6tos
              reference :  mbed_assert_internal
              reference :  memcmp
              reference :  mesh_system_init
              reference :  ns_dyn_mem_alloc
              reference :  ns_dyn_mem_free
              reference :  ns_in6addr_any
              reference :  socket_accept
              reference :  socket_bind
              reference :  socket_close
              reference :  socket_connect
              reference :  socket_getsockopt
              reference :  socket_listen
              reference :  socket_open
              reference :  socket_recvfrom
              reference :  socket_sendmsg
              reference :  socket_setsockopt
              reference :  OnboardNetworkStack::OnboardNetworkStack__sub_object()
              reference :  EMACMemoryManager::EMACMemoryManager__sub_object()
              reference :  mbed::Callback<void()>::operator ()() const
              reference :  mbed::Callback<void()>::Callback__sub_object()
              reference :  NanostackLockGuard::NanostackLockGuard__sub_object()
              reference :  NanostackLockGuard::~NanostackLockGuard__sub_object()
              reference :  SocketAddress::get_ip_version() const
              reference :  SocketAddress::get_port() const
              reference :  SocketAddress::get_ip_bytes() const
              reference :  SocketAddress::set_port(unsigned short)
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/netsocket/source/CellularNonIPSocket.o.
              definition:  mbed::CellularNonIPSocket::getsockopt(int, int, void*, unsigned*)
              definition:  mbed::CellularNonIPSocket::setsockopt(int, int, const void*, unsigned)
              definition:  mbed::CellularNonIPSocket::getpeername(SocketAddress*)
              definition:  mbed::CellularNonIPSocket::set_timeout(int)
              definition:  mbed::CellularNonIPSocket::set_blocking(bool)
              definition:  mbed::CellularNonIPSocket::bind(const SocketAddress&)
              definition:  mbed::CellularNonIPSocket::open(mbed::CellularContext*)
              definition:  mbed::CellularNonIPSocket::open(mbed::ControlPlane_netif*)
              definition:  mbed::CellularNonIPSocket::recv(void*, unsigned)
              definition:  mbed::CellularNonIPSocket::send(const void*, unsigned)
              definition:  mbed::CellularNonIPSocket::close()
              definition:  mbed::CellularNonIPSocket::event()
              definition:  mbed::CellularNonIPSocket::sigio(mbed::Callback<void()>)
              definition:  mbed::CellularNonIPSocket::accept(int*)
              definition:  mbed::CellularNonIPSocket::listen(int)
              definition:  mbed::CellularNonIPSocket::sendto(const SocketAddress&, const void*, unsigned)
              definition:  mbed::CellularNonIPSocket::connect(const SocketAddress&)
              definition:  mbed::CellularNonIPSocket::recvfrom(SocketAddress*, void*, unsigned)
              definition:  mbed::CellularNonIPSocket::_cp_netif
              definition:  mbed::CellularNonIPSocket::CellularNonIPSocket()
              definition:  mbed::CellularNonIPSocket::CellularNonIPSocket__sub_object()
              definition:  mbed::CellularNonIPSocket::~CellularNonIPSocket__deallocating()
              definition:  mbed::CellularNonIPSocket::~CellularNonIPSocket()
              definition:  mbed::CellularNonIPSocket::~CellularNonIPSocket__sub_object()
              weak defn :  T1 mbed::detail::invoke_r<void, void(mbed::CellularNonIPSocket::*const &)(), <mbed::CellularNonIPSocket*const &>, (int)0>(T2&&, T3&&...)
              weak defn :  T1 mbed::detail::invoke_r<void, mbed::Callback<void()>::Callback<mbed::CellularNonIPSocket*, void(mbed::CellularNonIPSocket::*)(), (int)0>(T1, T2)::[lambda() (instance 1)]&, <>, (int)0>(T2&&, T3&&...)
              weak defn :  void mbed::Callback<void()>::target_call<mbed::Callback<void()>::Callback<mbed::CellularNonIPSocket*, void(mbed::CellularNonIPSocket::*)(), (int)0>(T1, T2)::[lambda() (instance 1)]>(const mbed::detail::CallbackBase*)
              weak defn :  mbed::Callback<void()>::thunk(void*)
              weak defn :  void mbed::Callback<void()>::generate<mbed::Callback<void()>::Callback<mbed::CellularNonIPSocket*, void(mbed::CellularNonIPSocket::*)(), (int)0>(T1, T2)::[lambda() (instance 1)], void>(T1&&)
              weak defn :  mbed::Callback<void()>::Callback__sub_object<mbed::CellularNonIPSocket*, void(mbed::CellularNonIPSocket::*)(), (int)0>(T1, T2)
              weak defn :  mbed::Callback<T3(T4...)> mbed::callback<mbed::CellularNonIPSocket, mbed::CellularNonIPSocket, void, <>>(T2*, T3(T1::*)(T4...))
              weak defn :  std::__1::enable_if<((std::is_function<T2>::value&&(!std::is_base_of<T1, std::__1::decay<T3>::type>::value))&&(!is_reference_wrapper<std::__1::decay<T3>::type>::value)), decltype((((*std::forward<T3>(param#2)).*param#1)(std::forward<T4>(param#3)...)))>::type mstd::impl::INVOKE<mbed::CellularNonIPSocket, void(), mbed::CellularNonIPSocket*const &, <>>(T2T1::*, T3&&, T4&&...)
              weak defn :  std::__1::enable_if<((!std::is_member_pointer<std::__1::decay<T1>::type>::value)||(std::is_member_object_pointer<std::__1::decay<T1>::type>::value&&(sizeof...(param#2)!=(int)1))), decltype((std::forward<T1>(param#1)(std::forward<T2>(param#2)...)))>::type mstd::impl::INVOKE<mbed::Callback<void()>::Callback<mbed::CellularNonIPSocket*, void(mbed::CellularNonIPSocket::*)(), (int)0>(T1, T2)::[lambda() (instance 1)]&, <>>(T1&&, T2&&...)
              weak defn :  mstd::invoke_result<T1, <T2...>>::type mstd::invoke<void(mbed::CellularNonIPSocket::*const &)(), <mbed::CellularNonIPSocket*const &>>(T1&&, T2&&...)
              weak defn :  mstd::invoke_result<T1, <T2...>>::type mstd::invoke<mbed::Callback<void()>::Callback<mbed::CellularNonIPSocket*, void(mbed::CellularNonIPSocket::*)(), (int)0>(T1, T2)::[lambda() (instance 1)]&, <>>(T1&&, T2&&...)
              reference :  rtos::EventFlags::set(unsigned)
              reference :  rtos::EventFlags::wait_any(unsigned, unsigned, bool)
              reference :  rtos::EventFlags::EventFlags()
              reference :  rtos::EventFlags::~EventFlags()
              reference :  rtos::Mutex::lock()
              reference :  rtos::Mutex::unlock()
              reference :  rtos::Mutex::Mutex()
              reference :  rtos::Mutex::~Mutex()
              weak defn :  Socket::Socket__sub_object()
              weak defn :  Socket::~Socket__deallocating()
              weak defn :  Socket::~Socket__sub_object()
              weak defn :  vtable for Socket
              definition:  vtable for mbed::CellularNonIPSocket
              weak defn :  mbed::Callback<void()>::Callback<mbed::CellularNonIPSocket*, void(mbed::CellularNonIPSocket::*)(), (int)0>(T1, T2)::[lambda() (instance 1)]::operator ()() const
              reference :  operator delete (void*)
              reference :  __cxa_pure_virtual
              reference :  mbed_assert_internal
              reference :  mbed::Callback<void()>::Callback__sub_object()
              reference :  mbed::Callback<void()>::operator bool() const
              reference :  core_util_atomic_flag_test_and_set
              reference :  mbed::Callback<void()>::operator ()() const
              reference :  mbed::Callback<void()>::call() const
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/netsocket/source/DTLSSocket.o.
              definition:  DTLSSocket::~DTLSSocket__deallocating()
              definition:  DTLSSocket::~DTLSSocket()
              definition:  DTLSSocket::~DTLSSocket__sub_object()
              reference :  InternetSocket::~InternetSocket__sub_object()
              reference :  TLSSocketWrapper::getsockopt(int, int, void*, unsigned*)
              reference :  TLSSocketWrapper::setsockopt(int, int, const void*, unsigned)
              reference :  TLSSocketWrapper::getpeername(SocketAddress*)
              reference :  TLSSocketWrapper::set_timeout(int)
              reference :  TLSSocketWrapper::set_blocking(bool)
              reference :  TLSSocketWrapper::bind(const SocketAddress&)
              reference :  TLSSocketWrapper::recv(void*, unsigned)
              reference :  TLSSocketWrapper::send(const void*, unsigned)
              reference :  TLSSocketWrapper::close()
              reference :  TLSSocketWrapper::sigio(mbed::Callback<void()>)
              reference :  TLSSocketWrapper::accept(int*)
              reference :  TLSSocketWrapper::listen(int)
              reference :  TLSSocketWrapper::sendto(const SocketAddress&, const void*, unsigned)
              reference :  TLSSocketWrapper::connect(const SocketAddress&)
              reference :  TLSSocketWrapper::recvfrom(SocketAddress*, void*, unsigned)
              reference :  TLSSocketWrapper::~TLSSocketWrapper__sub_object()
              definition:  vtable for DTLSSocket
              reference :  operator delete (void*)
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/netsocket/source/DTLSSocketWrapper.o.
              reference :  TLSSocketWrapper::getsockopt(int, int, void*, unsigned*)
              reference :  TLSSocketWrapper::setsockopt(int, int, const void*, unsigned)
              reference :  TLSSocketWrapper::getpeername(SocketAddress*)
              reference :  TLSSocketWrapper::set_timeout(int)
              reference :  TLSSocketWrapper::set_blocking(bool)
              reference :  TLSSocketWrapper::get_ssl_config()
              reference :  TLSSocketWrapper::get_ssl_context()
              reference :  TLSSocketWrapper::bind(const SocketAddress&)
              reference :  TLSSocketWrapper::recv(void*, unsigned)
              reference :  TLSSocketWrapper::send(const void*, unsigned)
              reference :  TLSSocketWrapper::close()
              reference :  TLSSocketWrapper::event()
              reference :  TLSSocketWrapper::sigio(mbed::Callback<void()>)
              reference :  TLSSocketWrapper::accept(int*)
              reference :  TLSSocketWrapper::listen(int)
              reference :  TLSSocketWrapper::sendto(const SocketAddress&, const void*, unsigned)
              reference :  TLSSocketWrapper::connect(const SocketAddress&)
              reference :  TLSSocketWrapper::recvfrom(SocketAddress*, void*, unsigned)
              reference :  TLSSocketWrapper::TLSSocketWrapper__sub_object(Socket*, const char*, TLSSocketWrapper::control_transport)
              reference :  TLSSocketWrapper::~TLSSocketWrapper__sub_object()
              definition:  DTLSSocketWrapper::timer_event()
              definition:  DTLSSocketWrapper::timing_get_delay(void*)
              definition:  DTLSSocketWrapper::timing_set_delay(void*, unsigned, unsigned)
              definition:  DTLSSocketWrapper::DTLSSocketWrapper(Socket*, const char*, TLSSocketWrapper::control_transport)
              definition:  DTLSSocketWrapper::DTLSSocketWrapper__sub_object(Socket*, const char*, TLSSocketWrapper::control_transport)
              weak defn :  DTLSSocketWrapper::~DTLSSocketWrapper__deallocating()
              reference :  mbed::mbed_event_queue()
              weak defn :  T1 mbed::detail::invoke_r<void, void(DTLSSocketWrapper::*const &)(), <DTLSSocketWrapper*const &>, (int)0>(T2&&, T3&&...)
              weak defn :  T1 mbed::detail::invoke_r<void, mbed::Callback<void()>::Callback<DTLSSocketWrapper*, void(DTLSSocketWrapper::*)(), (int)0>(T1, T2)::[lambda() (instance 1)]&, <>, (int)0>(T2&&, T3&&...)
              weak defn :  void mbed::Callback<void()>::target_call<mbed::Callback<void()>::Callback<DTLSSocketWrapper*, void(DTLSSocketWrapper::*)(), (int)0>(T1, T2)::[lambda() (instance 1)]>(const mbed::detail::CallbackBase*)
              weak defn :  void mbed::Callback<void()>::generate<mbed::Callback<void()>::Callback<DTLSSocketWrapper*, void(DTLSSocketWrapper::*)(), (int)0>(T1, T2)::[lambda() (instance 1)], void>(T1&&)
              weak defn :  mbed::Callback<void()>::Callback__sub_object<DTLSSocketWrapper*, void(DTLSSocketWrapper::*)(), (int)0>(T1, T2)
              weak defn :  mbed::Callback<T3(T4...)> mbed::callback<DTLSSocketWrapper, DTLSSocketWrapper, void, <>>(T2*, T3(T1::*)(T4...))
              weak defn :  std::__1::enable_if<((std::is_function<T2>::value&&(!std::is_base_of<T1, std::__1::decay<T3>::type>::value))&&(!is_reference_wrapper<std::__1::decay<T3>::type>::value)), decltype((((*std::forward<T3>(param#2)).*param#1)(std::forward<T4>(param#3)...)))>::type mstd::impl::INVOKE<DTLSSocketWrapper, void(), DTLSSocketWrapper*const &, <>>(T2T1::*, T3&&, T4&&...)
              weak defn :  std::__1::enable_if<((!std::is_member_pointer<std::__1::decay<T1>::type>::value)||(std::is_member_object_pointer<std::__1::decay<T1>::type>::value&&(sizeof...(param#2)!=(int)1))), decltype((std::forward<T1>(param#1)(std::forward<T2>(param#2)...)))>::type mstd::impl::INVOKE<mbed::Callback<void()>::Callback<DTLSSocketWrapper*, void(DTLSSocketWrapper::*)(), (int)0>(T1, T2)::[lambda() (instance 1)]&, <>>(T1&&, T2&&...)
              weak defn :  mstd::invoke_result<T1, <T2...>>::type mstd::invoke<void(DTLSSocketWrapper::*const &)(), <DTLSSocketWrapper*const &>>(T1&&, T2&&...)
              weak defn :  mstd::invoke_result<T1, <T2...>>::type mstd::invoke<mbed::Callback<void()>::Callback<DTLSSocketWrapper*, void(DTLSSocketWrapper::*)(), (int)0>(T1, T2)::[lambda() (instance 1)]&, <>>(T1&&, T2&&...)
              reference :  rtos::Kernel::impl::get_tick_count()
              reference :  events::EventQueue::cancel(int)
              weak defn :  int events::EventQueue::call_in<DTLSSocketWrapper, void, <>>(std::__1::chrono::duration<int, std::__1::ratio<(long long)1, (long long)1000>>, T1*, T2(T1::*)(T3...), T3...)
              weak defn :  vtable for DTLSSocketWrapper
              weak defn :  mbed::Callback<void()>::Callback<DTLSSocketWrapper*, void(DTLSSocketWrapper::*)(), (int)0>(T1, T2)::[lambda() (instance 1)]::operator ()() const
              reference :  operator delete (void*)
              reference :  equeue_alloc
              reference :  equeue_event_delay
              reference :  equeue_event_dtor
              reference :  equeue_post
              reference :  mbed_assert_internal
              reference :  mbedtls_ssl_conf_transport
              reference :  mbedtls_ssl_set_timer_cb
              reference :  rtos::Kernel::Clock::now()
              reference :  int events::EventQueue::call_in<mbed::Callback<void()>>(std::__1::chrono::duration<int, std::__1::ratio<(long long)1, (long long)1000>>, T1)
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/netsocket/source/EMACInterface.o.
              definition:  EMACInterface::disconnect()
              definition:  EMACInterface::get_gateway(SocketAddress*)
              definition:  EMACInterface::get_netmask(SocketAddress*)
              definition:  EMACInterface::set_network(const SocketAddress&, const SocketAddress&, const SocketAddress&)
              definition:  EMACInterface::set_blocking(bool)
              weak defn :  EMACInterface::emacInterface()
              definition:  EMACInterface::get_ip_address(SocketAddress*)
              definition:  EMACInterface::set_as_default()
              definition:  EMACInterface::get_mac_address()
              definition:  EMACInterface::get_interface_name(char*)
              definition:  EMACInterface::get_ipv6_link_local_address(SocketAddress*)
              definition:  EMACInterface::attach(mbed::Callback<void(nsapi_event, int)>)
              definition:  EMACInterface::connect()
              definition:  EMACInterface::set_dhcp(bool)
              definition:  EMACInterface::get_stack()
              definition:  EMACInterface::EMACInterface(EMAC&, OnboardNetworkStack&)
              definition:  EMACInterface::EMACInterface__sub_object(EMAC&, OnboardNetworkStack&)
              weak defn :  EMACInterface::~EMACInterface__deallocating()
              weak defn :  EMACInterface::~EMACInterface()
              weak defn :  EMACInterface::~EMACInterface__sub_object()
              reference :  NetworkInterface::getaddrinfo(const char*, SocketAddress*, SocketAddress**, const char*)
              reference :  NetworkInterface::gethostbyname(const char*, SocketAddress*, nsapi_version, const char*)
              reference :  NetworkInterface::add_dns_server(const SocketAddress&, const char*)
              reference :  NetworkInterface::get_dns_server(int, SocketAddress*, const char*)
              reference :  NetworkInterface::getaddrinfo_async(const char*, SocketAddress*, mbed::Callback<void(int, SocketAddress*)>, const char*)
              reference :  NetworkInterface::gethostbyname_async(const char*, mbed::Callback<void(int, SocketAddress*)>, nsapi_version, const char*)
              reference :  NetworkInterface::set_default_parameters()
              reference :  NetworkInterface::gethostbyname_async_cancel(int)
              reference :  NetworkInterface::~NetworkInterface__sub_object()
              definition:  EMACInterface::get_connection_status() const
              reference :  SocketAddress::get_ip_address() const
              definition:  VTT for EMACInterface
              definition:  vtable for EMACInterface
              reference :  vtable for NetworkInterface
              definition:  thunk{v:0,-120} to EMACInterface::get_stack()
              definition:  thunk{v:0,-40} to EMACInterface::set_as_default()
              definition:  thunk{v:0,-44} to EMACInterface::get_mac_address()
              definition:  thunk{v:0,-48} to EMACInterface::get_ip_address(SocketAddress*)
              definition:  thunk{v:0,-52} to EMACInterface::get_ipv6_link_local_address(SocketAddress*)
              definition:  thunk{v:0,-56} to EMACInterface::get_netmask(SocketAddress*)
              definition:  thunk{v:0,-60} to EMACInterface::get_gateway(SocketAddress*)
              definition:  thunk{v:0,-64} to EMACInterface::get_interface_name(char*)
              definition:  thunk{v:0,-68} to EMACInterface::set_network(const SocketAddress&, const SocketAddress&, const SocketAddress&)
              definition:  thunk{v:0,-72} to EMACInterface::set_dhcp(bool)
              definition:  thunk{v:0,-76} to EMACInterface::connect()
              definition:  thunk{v:0,-80} to EMACInterface::disconnect()
              definition:  thunk{v:0,-88} to EMACInterface::attach(mbed::Callback<void(nsapi_event, int)>)
              definition:  thunk{v:0,-92} to EMACInterface::get_connection_status() const
              definition:  thunk{v:0,-96} to EMACInterface::set_blocking(bool)
              reference :  operator delete (void*)
              reference :  __aeabi_memclr
              reference :  __cxa_pure_virtual
              reference :  strncpy
              reference :  mbed::Callback<void(nsapi_event, int)>::Callback__sub_object()
              reference :  NetworkInterface::NetworkInterface__sub_object()
              reference :  NetworkInterface::ethInterface()
              reference :  NetworkInterface::wifiInterface()
              reference :  NetworkInterface::meshInterface()
              reference :  NetworkInterface::cellularInterface()
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/netsocket/source/EthernetInterface.o.
              weak defn :  EthInterface::get_target_default_instance()
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/netsocket/source/ICMPSocket.o.
              definition:  ICMPSocket::get_proto()
              definition:  ICMPSocket::ICMPSocket()
              definition:  ICMPSocket::ICMPSocket__sub_object()
              weak defn :  ICMPSocket::~ICMPSocket__deallocating()
              weak defn :  SocketStats::stats_update_proto(const Socket*, nsapi_protocol)
              reference :  InternetSocket::getsockopt(int, int, void*, unsigned*)
              reference :  InternetSocket::setsockopt(int, int, const void*, unsigned)
              reference :  InternetSocket::getpeername(SocketAddress*)
              reference :  InternetSocket::set_timeout(int)
              reference :  InternetSocket::set_blocking(bool)
              reference :  InternetSocket::bind(const SocketAddress&)
              reference :  InternetSocket::close()
              reference :  InternetSocket::sigio(mbed::Callback<void()>)
              reference :  InternetSocket::InternetSocket__sub_object()
              reference :  InternetSocket::~InternetSocket__sub_object()
              reference :  InternetDatagramSocket::recv(void*, unsigned)
              reference :  InternetDatagramSocket::send(const void*, unsigned)
              reference :  InternetDatagramSocket::accept(int*)
              reference :  InternetDatagramSocket::listen(int)
              reference :  InternetDatagramSocket::sendto(const SocketAddress&, const void*, unsigned)
              reference :  InternetDatagramSocket::connect(const SocketAddress&)
              reference :  InternetDatagramSocket::recvfrom(SocketAddress*, void*, unsigned)
              weak defn :  InternetDatagramSocket::InternetDatagramSocket__sub_object()
              definition:  vtable for ICMPSocket
              reference :  vtable for InternetDatagramSocket
              reference :  operator delete (void*)
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/netsocket/source/InternetDatagramSocket.o.
              weak defn :  SocketStats::stats_update_peer(const Socket*, const SocketAddress&)
              weak defn :  SocketStats::stats_update_recv_bytes(const Socket*, unsigned)
              weak defn :  SocketStats::stats_update_sent_bytes(const Socket*, unsigned)
              weak defn :  SocketStats::stats_update_socket_state(const Socket*, socket_state)
              reference :  SocketAddress::operator =(const SocketAddress&)
              reference :  InternetSocket::getsockopt(int, int, void*, unsigned*)
              reference :  InternetSocket::setsockopt(int, int, const void*, unsigned)
              reference :  InternetSocket::getpeername(SocketAddress*)
              reference :  InternetSocket::set_timeout(int)
              reference :  InternetSocket::set_blocking(bool)
              reference :  InternetSocket::bind(const SocketAddress&)
              reference :  InternetSocket::close()
              reference :  InternetSocket::sigio(mbed::Callback<void()>)
              reference :  InternetSocket::~InternetSocket__sub_object()
              definition:  InternetDatagramSocket::recv(void*, unsigned)
              definition:  InternetDatagramSocket::send(const void*, unsigned)
              definition:  InternetDatagramSocket::accept(int*)
              definition:  InternetDatagramSocket::listen(int)
              definition:  InternetDatagramSocket::sendto(const SocketAddress&, const void*, unsigned)
              definition:  InternetDatagramSocket::connect(const SocketAddress&)
              definition:  InternetDatagramSocket::recvfrom(SocketAddress*, void*, unsigned)
              weak defn :  InternetDatagramSocket::~InternetDatagramSocket__deallocating()
              reference :  rtos::EventFlags::set(unsigned)
              reference :  rtos::EventFlags::wait_any(unsigned, unsigned, bool)
              reference :  rtos::Mutex::lock()
              reference :  rtos::Mutex::unlock()
              reference :  SocketAddress::operator bool() const
              definition:  vtable for InternetDatagramSocket
              reference :  operator delete[] (void*)
              reference :  operator !=(const SocketAddress&, const SocketAddress&)
              reference :  __cxa_pure_virtual
              reference :  SocketAddress::SocketAddress__sub_object()
              reference :  SocketAddress::~SocketAddress__sub_object()
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/netsocket/source/InternetSocket.o.
              weak defn :  SocketStats::stats_new_socket_entry(Socket*)
              reference :  SocketAddress::SocketAddress(const char*, unsigned short)
              reference :  SocketAddress::operator =(const SocketAddress&)
              definition:  InternetSocket::getsockopt(int, int, void*, unsigned*)
              definition:  InternetSocket::setsockopt(int, int, const void*, unsigned)
              definition:  InternetSocket::getpeername(SocketAddress*)
              definition:  InternetSocket::set_timeout(int)
              definition:  InternetSocket::set_blocking(bool)
              definition:  InternetSocket::join_multicast_group(const SocketAddress&)
              definition:  InternetSocket::leave_multicast_group(const SocketAddress&)
              definition:  InternetSocket::modify_multicast_group(const SocketAddress&, nsapi_socket_option)
              definition:  InternetSocket::get_rtt_estimate_to_address(const SocketAddress&, unsigned*)
              definition:  InternetSocket::get_stagger_estimate_to_address(const SocketAddress&, unsigned short, unsigned short*, unsigned short*, unsigned short*)
              definition:  InternetSocket::bind(const SocketAddress&)
              definition:  InternetSocket::bind(unsigned short)
              definition:  InternetSocket::open(NetworkStack*)
              definition:  InternetSocket::close()
              definition:  InternetSocket::event()
              definition:  InternetSocket::sigio(mbed::Callback<void()>)
              definition:  InternetSocket::InternetSocket__sub_object()
              definition:  InternetSocket::~InternetSocket__deallocating()
              definition:  InternetSocket::~InternetSocket()
              definition:  InternetSocket::~InternetSocket__sub_object()
              weak defn :  T1 mbed::detail::invoke_r<void, void(InternetSocket::*const &)(), <InternetSocket*const &>, (int)0>(T2&&, T3&&...)
              weak defn :  T1 mbed::detail::invoke_r<void, mbed::Callback<void()>::Callback<InternetSocket*, void(InternetSocket::*)(), (int)0>(T1, T2)::[lambda() (instance 1)]&, <>, (int)0>(T2&&, T3&&...)
              weak defn :  void mbed::Callback<void()>::target_call<mbed::Callback<void()>::Callback<InternetSocket*, void(InternetSocket::*)(), (int)0>(T1, T2)::[lambda() (instance 1)]>(const mbed::detail::CallbackBase*)
              weak defn :  void mbed::Callback<void()>::generate<mbed::Callback<void()>::Callback<InternetSocket*, void(InternetSocket::*)(), (int)0>(T1, T2)::[lambda() (instance 1)], void>(T1&&)
              weak defn :  mbed::Callback<void()>::Callback__sub_object<InternetSocket*, void(InternetSocket::*)(), (int)0>(T1, T2)
              weak defn :  mbed::Callback<T3(T4...)> mbed::callback<InternetSocket, InternetSocket, void, <>>(T2*, T3(T1::*)(T4...))
              weak defn :  std::__1::enable_if<((std::is_function<T2>::value&&(!std::is_base_of<T1, std::__1::decay<T3>::type>::value))&&(!is_reference_wrapper<std::__1::decay<T3>::type>::value)), decltype((((*std::forward<T3>(param#2)).*param#1)(std::forward<T4>(param#3)...)))>::type mstd::impl::INVOKE<InternetSocket, void(), InternetSocket*const &, <>>(T2T1::*, T3&&, T4&&...)
              weak defn :  std::__1::enable_if<((!std::is_member_pointer<std::__1::decay<T1>::type>::value)||(std::is_member_object_pointer<std::__1::decay<T1>::type>::value&&(sizeof...(param#2)!=(int)1))), decltype((std::forward<T1>(param#1)(std::forward<T2>(param#2)...)))>::type mstd::impl::INVOKE<mbed::Callback<void()>::Callback<InternetSocket*, void(InternetSocket::*)(), (int)0>(T1, T2)::[lambda() (instance 1)]&, <>>(T1&&, T2&&...)
              weak defn :  mstd::invoke_result<T1, <T2...>>::type mstd::invoke<void(InternetSocket::*const &)(), <InternetSocket*const &>>(T1&&, T2&&...)
              weak defn :  mstd::invoke_result<T1, <T2...>>::type mstd::invoke<mbed::Callback<void()>::Callback<InternetSocket*, void(InternetSocket::*)(), (int)0>(T1, T2)::[lambda() (instance 1)]&, <>>(T1&&, T2&&...)
              reference :  rtos::EventFlags::set(unsigned)
              reference :  rtos::EventFlags::wait_any(unsigned, unsigned, bool)
              reference :  rtos::EventFlags::EventFlags()
              reference :  rtos::EventFlags::~EventFlags()
              reference :  rtos::Mutex::lock()
              reference :  rtos::Mutex::unlock()
              reference :  rtos::Mutex::Mutex()
              reference :  rtos::Mutex::~Mutex()
              reference :  SocketAddress::operator bool() const
              definition:  vtable for InternetSocket
              weak defn :  mbed::Callback<void()>::Callback<InternetSocket*, void(InternetSocket::*)(), (int)0>(T1, T2)::[lambda() (instance 1)]::operator ()() const
              reference :  operator delete[] (void*)
              reference :  __aeabi_memcpy
              reference :  __cxa_pure_virtual
              reference :  core_util_critical_section_enter
              reference :  core_util_critical_section_exit
              reference :  mbed_assert_internal
              reference :  strncpy
              reference :  Socket::Socket__sub_object()
              reference :  mbed::Callback<void()>::Callback__sub_object()
              reference :  SocketAddress::SocketAddress__sub_object()
              reference :  SocketAddress::~SocketAddress__sub_object()
              reference :  Socket::~Socket__sub_object()
              reference :  SocketStats::stats_update_socket_state(const Socket*, socket_state)
              reference :  mbed::Callback<void()>::thunk(void*)
              reference :  mbed::Callback<void()>::operator bool() const
              reference :  core_util_atomic_flag_test_and_set
              reference :  mbed::Callback<void()>::operator ()() const
              reference :  SocketAddress::get_addr() const
              reference :  SocketAddress::get_ip_bytes() const
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/netsocket/source/L3IPInterface.o.
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/netsocket/source/NetStackMemoryManager.o.
              definition:  NetStackMemoryManager::copy_to_buf(void*, const void*, unsigned)
              definition:  NetStackMemoryManager::copy_from_buf(void*, unsigned, const void*) const
              definition:  vtable for NetStackMemoryManager
              reference :  __aeabi_memcpy
              reference :  __cxa_pure_virtual
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/netsocket/source/NetworkInterface.o.
              definition:  NetworkInterface::get_gateway(SocketAddress*)
              definition:  NetworkInterface::get_netmask(SocketAddress*)
              definition:  NetworkInterface::getaddrinfo(const char*, SocketAddress*, SocketAddress**, const char*)
              definition:  NetworkInterface::set_network(const SocketAddress&, const SocketAddress&, const SocketAddress&)
              definition:  NetworkInterface::set_blocking(bool)
              definition:  NetworkInterface::gethostbyname(const char*, SocketAddress*, nsapi_version, const char*)
              definition:  NetworkInterface::add_dns_server(const SocketAddress&, const char*)
              definition:  NetworkInterface::get_dns_server(int, SocketAddress*, const char*)
              definition:  NetworkInterface::get_ip_address(SocketAddress*)
              definition:  NetworkInterface::set_as_default()
              definition:  NetworkInterface::get_mac_address()
              definition:  NetworkInterface::getaddrinfo_async(const char*, SocketAddress*, mbed::Callback<void(int, SocketAddress*)>, const char*)
              definition:  NetworkInterface::add_event_listener(mbed::Callback<void(nsapi_event, int)>)
              definition:  NetworkInterface::get_interface_name(char*)
              definition:  NetworkInterface::gethostbyname_async(const char*, mbed::Callback<void(int, SocketAddress*)>, nsapi_version, const char*)
              definition:  NetworkInterface::remove_event_listener(mbed::Callback<void(nsapi_event, int)>)
              reference :  NetworkInterface::set_default_parameters()
              definition:  NetworkInterface::gethostbyname_async_cancel(int)
              definition:  NetworkInterface::get_ipv6_link_local_address(SocketAddress*)
              definition:  NetworkInterface::attach(mbed::Callback<void(nsapi_event, int)>)
              definition:  NetworkInterface::set_dhcp(bool)
              definition:  NetworkInterface::~NetworkInterface__deallocating()
              definition:  NetworkInterface::~NetworkInterface()
              definition:  NetworkInterface::~NetworkInterface__sub_object()
              weak defn :  iface_eventlist_entry::iface_eventlist_entry__sub_object()
              weak defn :  T1 mbed::detail::invoke_r<void, void(*const &)(NetworkInterface*, nsapi_event, int), <NetworkInterface*const &, nsapi_event, int>, (int)0>(T2&&, T3&&...)
              weak defn :  T1 mbed::detail::invoke_r<void, mbed::Callback<void(nsapi_event, int)>::Callback<void(*)(NetworkInterface*, nsapi_event, int), NetworkInterface*, (int)0>(T1, T2)::[lambda(nsapi_event, int) (instance 1)]&, <nsapi_event, int>, (int)0>(T2&&, T3&&...)
              weak defn :  void mbed::Callback<void(nsapi_event, int)>::target_call<mbed::Callback<void(nsapi_event, int)>::Callback<void(*)(NetworkInterface*, nsapi_event, int), NetworkInterface*, (int)0>(T1, T2)::[lambda(nsapi_event, int) (instance 1)]>(const mbed::detail::CallbackBase*, nsapi_event, int)
              weak defn :  void mbed::Callback<void(nsapi_event, int)>::generate<mbed::Callback<void(nsapi_event, int)>::Callback<void(*)(NetworkInterface*, nsapi_event, int), NetworkInterface*, (int)0>(T1, T2)::[lambda(nsapi_event, int) (instance 1)], void>(T1&&)
              weak defn :  mbed::Callback<void(nsapi_event, int)>::Callback__sub_object<void(*)(NetworkInterface*, nsapi_event, int), NetworkInterface*, (int)0>(T1, T2)
              weak defn :  mbed::Callback<T3(T4...)> mbed::callback<NetworkInterface, NetworkInterface, void, <nsapi_event, int>>(T3(*)(T1*, T4...), T2*)
              weak defn :  mbed::operator ==(const mbed::Callback<void(nsapi_event, int)>&, const mbed::Callback<void(nsapi_event, int)>&)
              weak defn :  std::__1::enable_if<((!std::is_member_pointer<std::__1::decay<T1>::type>::value)||(std::is_member_object_pointer<std::__1::decay<T1>::type>::value&&(sizeof...(param#2)!=(int)1))), decltype((std::forward<T1>(param#1)(std::forward<T2>(param#2)...)))>::type mstd::impl::INVOKE<void(*const &)(NetworkInterface*, nsapi_event, int), <NetworkInterface*const &, nsapi_event, int>>(T1&&, T2&&...)
              weak defn :  std::__1::enable_if<((!std::is_member_pointer<std::__1::decay<T1>::type>::value)||(std::is_member_object_pointer<std::__1::decay<T1>::type>::value&&(sizeof...(param#2)!=(int)1))), decltype((std::forward<T1>(param#1)(std::forward<T2>(param#2)...)))>::type mstd::impl::INVOKE<mbed::Callback<void(nsapi_event, int)>::Callback<void(*)(NetworkInterface*, nsapi_event, int), NetworkInterface*, (int)0>(T1, T2)::[lambda(nsapi_event, int) (instance 1)]&, <nsapi_event, int>>(T1&&, T2&&...)
              weak defn :  mstd::invoke_result<T1, <T2...>>::type mstd::invoke<void(*const &)(NetworkInterface*, nsapi_event, int), <NetworkInterface*const &, nsapi_event, int>>(T1&&, T2&&...)
              weak defn :  mstd::invoke_result<T1, <T2...>>::type mstd::invoke<mbed::Callback<void(nsapi_event, int)>::Callback<void(*)(NetworkInterface*, nsapi_event, int), NetworkInterface*, (int)0>(T1, T2)::[lambda(nsapi_event, int) (instance 1)]&, <nsapi_event, int>>(T1&&, T2&&...)
              definition:  NetworkInterface::get_connection_status() const
              definition:  vtable for NetworkInterface
              weak defn :  mbed::Callback<void(nsapi_event, int)>::Callback<void(*)(NetworkInterface*, nsapi_event, int), NetworkInterface*, (int)0>(T1, T2)::[lambda(nsapi_event, int) (instance 1)]::operator ()(nsapi_event, int) const
              reference :  operator delete (void*)
              reference :  operator new(unsigned)
              reference :  __cxa_pure_virtual
              reference :  mbed_assert_internal
              reference :  memcmp
              reference :  ns_list_add_to_end_
              reference :  ns_list_get_next_
              reference :  ns_list_remove_
              reference :  mbed::Callback<void(nsapi_event, int)>::Callback__sub_object()
              reference :  mbed::Callback<void(nsapi_event, int)>::operator ()(nsapi_event, int) const
              reference :  mbed::detail::CallbackBase::control() const
              reference :  mbed::Callback<void(nsapi_event, int)>::operator bool() const
              reference :  NetworkInterface::ethInterface()
              reference :  NetworkInterface::wifiInterface()
              reference :  NetworkInterface::meshInterface()
              reference :  NetworkInterface::emacInterface()
              reference :  NetworkInterface::cellularInterface()
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/netsocket/source/NetworkInterfaceDefaults.o.
              weak defn :  EthInterface::get_default_instance()
              reference :  EthInterface::get_target_default_instance()
              weak defn :  MeshInterface::get_default_instance()
              reference :  MeshInterface::get_target_default_instance()
              weak defn :  WiFiInterface::get_default_instance()
              definition:  WiFiInterface::set_default_parameters()
              weak defn :  WiFiInterface::get_target_default_instance()
              reference :  NetworkInterface::get_gateway(SocketAddress*)
              reference :  NetworkInterface::get_netmask(SocketAddress*)
              reference :  NetworkInterface::getaddrinfo(const char*, SocketAddress*, SocketAddress**, const char*)
              reference :  NetworkInterface::set_network(const SocketAddress&, const SocketAddress&, const SocketAddress&)
              reference :  NetworkInterface::set_blocking(bool)
              reference :  NetworkInterface::gethostbyname(const char*, SocketAddress*, nsapi_version, const char*)
              reference :  NetworkInterface::add_dns_server(const SocketAddress&, const char*)
              reference :  NetworkInterface::get_dns_server(int, SocketAddress*, const char*)
              reference :  NetworkInterface::get_ip_address(SocketAddress*)
              reference :  NetworkInterface::set_as_default()
              reference :  NetworkInterface::get_mac_address()
              reference :  NetworkInterface::getaddrinfo_async(const char*, SocketAddress*, mbed::Callback<void(int, SocketAddress*)>, const char*)
              reference :  NetworkInterface::get_interface_name(char*)
              reference :  NetworkInterface::gethostbyname_async(const char*, mbed::Callback<void(int, SocketAddress*)>, nsapi_version, const char*)
              weak defn :  NetworkInterface::get_default_instance()
              definition:  NetworkInterface::set_default_parameters()
              reference :  NetworkInterface::gethostbyname_async_cancel(int)
              reference :  NetworkInterface::get_ipv6_link_local_address(SocketAddress*)
              weak defn :  NetworkInterface::get_target_default_instance()
              reference :  NetworkInterface::attach(mbed::Callback<void(nsapi_event, int)>)
              reference :  NetworkInterface::set_dhcp(bool)
              reference :  NetworkInterface::~NetworkInterface__sub_object()
              weak defn :  CellularInterface::get_default_instance()
              definition:  CellularInterface::set_default_parameters()
              reference :  CellularInterface::get_target_default_instance()
              weak defn :  CellularInterface::~CellularInterface__deallocating()
              reference :  NetworkInterface::get_connection_status() const
              definition:  VTT for WiFiInterface
              definition:  vtable for WiFiInterface
              definition:  vtable for CellularInterface
              definition:  thunk{v:0,-124} to WiFiInterface::set_default_parameters()
              reference :  __cxa_pure_virtual
              reference :  WiFiInterface::~WiFiInterface()
              reference :  WiFiInterface::~WiFiInterface__deallocating()
              reference :  NetworkInterface::ethInterface()
              reference :  WiFiInterface::wifiInterface()
              reference :  NetworkInterface::meshInterface()
              reference :  NetworkInterface::emacInterface()
              reference :  NetworkInterface::cellularInterface()
              reference :  NetworkInterface::wifiInterface()
              reference :  CellularInterface::cellularInterface()
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/netsocket/source/NetworkStack.o.
              reference :  nsapi_dns_query(NetworkStack*, const char*, SocketAddress*, const char*, nsapi_version)
              definition:  nsapi_create_stack(nsapi_stack*)
              reference :  nsapi_dns_query_async(NetworkStack*, const char*, mbed::Callback<void(int, SocketAddress*)>, mbed::Callback<int(int, mbed::Callback<void()>)>, const char*, nsapi_version)
              reference :  nsapi_dns_query_multiple(NetworkStack*, const char*, SocketAddress*, unsigned, const char*, nsapi_version)
              reference :  nsapi_dns_query_async_cancel(int)
              reference :  nsapi_dns_query_multiple_async(NetworkStack*, const char*, mbed::Callback<void(int, SocketAddress*)>, unsigned, mbed::Callback<int(int, mbed::Callback<void()>)>, const char*, nsapi_version)
              definition:  NetworkStack::getsockopt(void*, int, int, void*, unsigned*)
              definition:  NetworkStack::setsockopt(void*, int, int, const void*, unsigned)
              definition:  NetworkStack::getaddrinfo(const char*, SocketAddress*, SocketAddress**, const char*)
              definition:  NetworkStack::getstackopt(int, int, void*, unsigned*)
              definition:  NetworkStack::setstackopt(int, int, const void*, unsigned)
              definition:  NetworkStack::gethostbyname(const char*, SocketAddress*, nsapi_version, const char*)
              definition:  NetworkStack::add_dns_server(const SocketAddress&, const char*)
              definition:  NetworkStack::get_dns_server(int, SocketAddress*, const char*)
              definition:  NetworkStack::get_ip_address(SocketAddress*)
              definition:  NetworkStack::get_ip_address_if(SocketAddress*, const char*)
              definition:  NetworkStack::getaddrinfo_async(const char*, SocketAddress*, mbed::Callback<void(int, SocketAddress*)>, const char*)
              definition:  NetworkStack::gethostbyname_async(const char*, mbed::Callback<void(int, SocketAddress*)>, nsapi_version, const char*)
              definition:  NetworkStack::get_call_in_callback()
              definition:  NetworkStack::gethostbyname_async_cancel(int)
              definition:  NetworkStack::get_ipv6_link_local_address(SocketAddress*)
              definition:  NetworkStack::call_in(int, mbed::Callback<void()>)
              weak defn :  NetworkStack::~NetworkStack__deallocating()
              reference :  SocketAddress::set_ip_address(const char*)
              reference :  SocketAddress::set_addr(const nsapi_addr&)
              reference :  SocketAddress::SocketAddress(const nsapi_addr&, unsigned short)
              reference :  SocketAddress::operator =(const SocketAddress&)
              weak defn :  NetworkStackWrapper::_stack_api()
              weak defn :  NetworkStackWrapper::getsockopt(void*, int, int, void*, unsigned*)
              weak defn :  NetworkStackWrapper::setsockopt(void*, int, int, const void*, unsigned)
              weak defn :  NetworkStackWrapper::getstackopt(int, int, void*, unsigned*)
              weak defn :  NetworkStackWrapper::setstackopt(int, int, const void*, unsigned)
              weak defn :  NetworkStackWrapper::socket_bind(void*, const SocketAddress&)
              weak defn :  NetworkStackWrapper::socket_open(void**, nsapi_protocol)
              weak defn :  NetworkStackWrapper::socket_recv(void*, void*, unsigned)
              weak defn :  NetworkStackWrapper::socket_send(void*, const void*, unsigned)
              weak defn :  NetworkStackWrapper::socket_close(void*)
              weak defn :  NetworkStackWrapper::gethostbyname(const char*, SocketAddress*, nsapi_version, const char*)
              weak defn :  NetworkStackWrapper::socket_accept(void*, void**, SocketAddress*)
              weak defn :  NetworkStackWrapper::socket_attach(void*, void(*)(void*), void*)
              weak defn :  NetworkStackWrapper::socket_listen(void*, int)
              weak defn :  NetworkStackWrapper::socket_sendto(void*, const SocketAddress&, const void*, unsigned)
              weak defn :  NetworkStackWrapper::add_dns_server(const SocketAddress&, const char*)
              weak defn :  NetworkStackWrapper::get_ip_address(SocketAddress*)
              weak defn :  NetworkStackWrapper::socket_connect(void*, const SocketAddress&)
              weak defn :  NetworkStackWrapper::socket_recvfrom(void*, SocketAddress*, void*, unsigned)
              weak defn :  NetworkStackWrapper::_stack()
              weak defn :  NetworkStackWrapper::NetworkStackWrapper__sub_object()
              weak defn :  NetworkStackWrapper::~NetworkStackWrapper__deallocating()
              reference :  mbed::mbed_event_queue()
              weak defn :  T1 mbed::detail::invoke_r<int, int(NetworkStack::*const &)(int, mbed::Callback<void()>), <NetworkStack*const &, int, mbed::Callback<void()>>, (int)0>(T2&&, T3&&...)
              weak defn :  T1 mbed::detail::invoke_r<int, mbed::Callback<int(int, mbed::Callback<void()>)>::Callback<NetworkStack*, int(NetworkStack::*)(int, mbed::Callback<void()>), (int)0>(T1, T2)::[lambda(int, mbed::Callback<void()>) (instance 1)]&, <int, mbed::Callback<void()>>, (int)0>(T2&&, T3&&...)
              weak defn :  int mbed::Callback<int(int, mbed::Callback<void()>)>::target_call<mbed::Callback<int(int, mbed::Callback<void()>)>::Callback<NetworkStack*, int(NetworkStack::*)(int, mbed::Callback<void()>), (int)0>(T1, T2)::[lambda(int, mbed::Callback<void()>) (instance 1)]>(const mbed::detail::CallbackBase*, int, mbed::Callback<void()>)
              weak defn :  void mbed::Callback<int(int, mbed::Callback<void()>)>::generate<mbed::Callback<int(int, mbed::Callback<void()>)>::Callback<NetworkStack*, int(NetworkStack::*)(int, mbed::Callback<void()>), (int)0>(T1, T2)::[lambda(int, mbed::Callback<void()>) (instance 1)], void>(T1&&)
              weak defn :  mbed::Callback<int(int, mbed::Callback<void()>)>::Callback__sub_object<NetworkStack*, int(NetworkStack::*)(int, mbed::Callback<void()>), (int)0>(T1, T2)
              weak defn :  std::__1::enable_if<((std::is_function<T2>::value&&(!std::is_base_of<T1, std::__1::decay<T3>::type>::value))&&(!is_reference_wrapper<std::__1::decay<T3>::type>::value)), decltype((((*std::forward<T3>(param#2)).*param#1)(std::forward<T4>(param#3)...)))>::type mstd::impl::INVOKE<NetworkStack, int(int, mbed::Callback<void()>), NetworkStack*const &, <int, mbed::Callback<void()>>>(T2T1::*, T3&&, T4&&...)
              weak defn :  std::__1::enable_if<((!std::is_member_pointer<std::__1::decay<T1>::type>::value)||(std::is_member_object_pointer<std::__1::decay<T1>::type>::value&&(sizeof...(param#2)!=(int)1))), decltype((std::forward<T1>(param#1)(std::forward<T2>(param#2)...)))>::type mstd::impl::INVOKE<mbed::Callback<int(int, mbed::Callback<void()>)>::Callback<NetworkStack*, int(NetworkStack::*)(int, mbed::Callback<void()>), (int)0>(T1, T2)::[lambda(int, mbed::Callback<void()>) (instance 1)]&, <int, mbed::Callback<void()>>>(T1&&, T2&&...)
              weak defn :  mstd::invoke_result<T1, <T2...>>::type mstd::invoke<int(NetworkStack::*const &)(int, mbed::Callback<void()>), <NetworkStack*const &, int, mbed::Callback<void()>>>(T1&&, T2&&...)
              weak defn :  mstd::invoke_result<T1, <T2...>>::type mstd::invoke<mbed::Callback<int(int, mbed::Callback<void()>)>::Callback<NetworkStack*, int(NetworkStack::*)(int, mbed::Callback<void()>), (int)0>(T1, T2)::[lambda(int, mbed::Callback<void()>) (instance 1)]&, <int, mbed::Callback<void()>>>(T1&&, T2&&...)
              reference :  SocketAddress::operator bool() const
              weak defn :  mbed::Callback<void(int, SocketAddress*)>::call(int, SocketAddress*) const
              weak defn :  mbed::Callback<void(int, SocketAddress*)>::operator ()(int, SocketAddress*) const
              weak defn :  mbed::Callback<void(int, SocketAddress*)>::operator bool() const
              reference :  std::nothrow
              definition:  vtable for NetworkStack
              weak defn :  vtable for NetworkStackWrapper
              weak defn :  mbed::Callback<int(int, mbed::Callback<void()>)>::Callback<NetworkStack*, int(NetworkStack::*)(int, mbed::Callback<void()>), (int)0>(T1, T2)::[lambda(int, mbed::Callback<void()>) (instance 1)]::operator ()(int, mbed::Callback<void()>) const
              reference :  operator delete[] (void*)
              reference :  operator delete (void*)
              reference :  operator new[] (unsigned, const std::nothrow_t&)
              reference :  __aeabi_memcpy
              reference :  __cxa_guard_acquire
              reference :  __cxa_guard_release
              reference :  __cxa_pure_virtual
              reference :  equeue_alloc
              reference :  equeue_event_delay
              reference :  equeue_event_dtor
              reference :  equeue_post
              reference :  mbed_assert_internal
              reference :  mbed_error
              reference :  nsapi_dns_add_server
              reference :  SocketAddress::get_ip_version() const
              reference :  SocketAddress::SocketAddress__sub_object()
              reference :  SocketAddress::~SocketAddress__sub_object()
              reference :  SocketAddress::get_addr() const
              reference :  int events::EventQueue::call_in<mbed::Callback<void()>>(std::__1::chrono::duration<int, std::__1::ratio<(long long)1, (long long)1000>>, T1)
              reference :  int events::EventQueue::call<mbed::Callback<void()>>(T1)
              reference :  NetworkStack::NetworkStack__sub_object()
              reference :  NetworkStack::~NetworkStack__sub_object()
              reference :  SocketAddress::get_port() const
              reference :  SocketAddress::set_port(unsigned short)
              reference :  mbed::detail::CallbackBase::call_fn() const
              reference :  mbed::detail::CallbackBase::control() const
              reference :  NetworkStack::onboardNetworkStack()
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/netsocket/source/PPPInterface.o.
              definition:  PPPInterface::disconnect()
              definition:  PPPInterface::set_stream(mbed::FileHandle*)
              definition:  PPPInterface::get_gateway(SocketAddress*)
              definition:  PPPInterface::get_netmask(SocketAddress*)
              definition:  PPPInterface::set_network(const SocketAddress&, const SocketAddress&, const SocketAddress&)
              definition:  PPPInterface::set_blocking(bool)
              definition:  PPPInterface::set_ip_stack(nsapi_ip_stack)
              definition:  PPPInterface::get_ip_address(SocketAddress*)
              definition:  PPPInterface::set_as_default()
              definition:  PPPInterface::set_credentials(const char*, const char*)
              definition:  PPPInterface::get_interface_name(char*)
              definition:  PPPInterface::attach(mbed::Callback<void(nsapi_event, int)>)
              definition:  PPPInterface::connect()
              definition:  PPPInterface::get_stack()
              definition:  PPPInterface::PPPInterface(PPP&, OnboardNetworkStack&)
              definition:  PPPInterface::PPPInterface__sub_object(PPP&, OnboardNetworkStack&)
              definition:  PPPInterface::~PPPInterface__deallocating()
              definition:  PPPInterface::~PPPInterface()
              definition:  PPPInterface::~PPPInterface__sub_object()
              reference :  SocketAddress::set_ip_address(const char*)
              reference :  NetworkInterface::getaddrinfo(const char*, SocketAddress*, SocketAddress**, const char*)
              reference :  NetworkInterface::gethostbyname(const char*, SocketAddress*, nsapi_version, const char*)
              reference :  NetworkInterface::add_dns_server(const SocketAddress&, const char*)
              reference :  NetworkInterface::get_dns_server(int, SocketAddress*, const char*)
              reference :  NetworkInterface::get_mac_address()
              reference :  NetworkInterface::getaddrinfo_async(const char*, SocketAddress*, mbed::Callback<void(int, SocketAddress*)>, const char*)
              reference :  NetworkInterface::gethostbyname_async(const char*, mbed::Callback<void(int, SocketAddress*)>, nsapi_version, const char*)
              reference :  NetworkInterface::set_default_parameters()
              reference :  NetworkInterface::gethostbyname_async_cancel(int)
              reference :  NetworkInterface::get_ipv6_link_local_address(SocketAddress*)
              reference :  NetworkInterface::set_dhcp(bool)
              reference :  NetworkInterface::~NetworkInterface__sub_object()
              definition:  PPPInterface::get_connection_status() const
              reference :  SocketAddress::get_ip_address() const
              definition:  VTT for PPPInterface
              definition:  vtable for PPPInterface
              reference :  vtable for NetworkInterface
              definition:  thunk{v:0,-120} to PPPInterface::get_stack()
              definition:  thunk{v:0,-36} to PPPInterface::~PPPInterface__deallocating()
              definition:  thunk{v:0,-36} to PPPInterface::~PPPInterface()
              definition:  thunk{v:0,-40} to PPPInterface::set_as_default()
              definition:  thunk{v:0,-48} to PPPInterface::get_ip_address(SocketAddress*)
              definition:  thunk{v:0,-56} to PPPInterface::get_netmask(SocketAddress*)
              definition:  thunk{v:0,-60} to PPPInterface::get_gateway(SocketAddress*)
              definition:  thunk{v:0,-64} to PPPInterface::get_interface_name(char*)
              definition:  thunk{v:0,-68} to PPPInterface::set_network(const SocketAddress&, const SocketAddress&, const SocketAddress&)
              definition:  thunk{v:0,-76} to PPPInterface::connect()
              definition:  thunk{v:0,-80} to PPPInterface::disconnect()
              definition:  thunk{v:0,-88} to PPPInterface::attach(mbed::Callback<void(nsapi_event, int)>)
              definition:  thunk{v:0,-92} to PPPInterface::get_connection_status() const
              definition:  thunk{v:0,-96} to PPPInterface::set_blocking(bool)
              reference :  operator delete (void*)
              reference :  __aeabi_memclr
              reference :  __cxa_pure_virtual
              reference :  strncpy
              reference :  mbed::Callback<void(nsapi_event, int)>::Callback__sub_object()
              reference :  NetworkInterface::NetworkInterface__sub_object()
              reference :  NetworkInterface::ethInterface()
              reference :  NetworkInterface::wifiInterface()
              reference :  NetworkInterface::meshInterface()
              reference :  NetworkInterface::emacInterface()
              reference :  NetworkInterface::cellularInterface()
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/netsocket/source/SocketAddress.o.
              definition:  SocketAddress::set_ip_bytes(const void*, nsapi_version)
              definition:  SocketAddress::set_ip_address(const char*)
              definition:  SocketAddress::set_addr(const nsapi_addr&)
              definition:  SocketAddress::SocketAddress(const char*, unsigned short)
              definition:  SocketAddress::SocketAddress(const void*, nsapi_version, unsigned short)
              definition:  SocketAddress::SocketAddress(const nsapi_addr&, unsigned short)
              definition:  SocketAddress::SocketAddress(const SocketAddress&)
              definition:  SocketAddress::SocketAddress__sub_object(const char*, unsigned short)
              definition:  SocketAddress::SocketAddress__sub_object(const void*, nsapi_version, unsigned short)
              definition:  SocketAddress::SocketAddress__sub_object(const nsapi_addr&, unsigned short)
              definition:  SocketAddress::SocketAddress__sub_object(const SocketAddress&)
              definition:  SocketAddress::operator =(const SocketAddress&)
              definition:  SocketAddress::get_ip_address() const
              definition:  SocketAddress::operator bool() const
              reference :  operator delete[] (void*)
              definition:  operator ==(const SocketAddress&, const SocketAddress&)
              reference :  operator new[] (unsigned)
              definition:  operator !=(const SocketAddress&, const SocketAddress&)
              reference :  __aeabi_memcpy
              reference :  ip4tos
              reference :  ip6tos
              reference :  memcmp
              reference :  stoip4
              reference :  stoip6
              reference :  strlen
              reference :  SocketAddress::set_port(unsigned short)
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/netsocket/source/SocketStats.o.
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/netsocket/source/TCPSocket.o.
              reference :  SocketAddress::SocketAddress(const SocketAddress&)
              reference :  SocketAddress::operator =(const SocketAddress&)
              reference :  InternetSocket::getsockopt(int, int, void*, unsigned*)
              reference :  InternetSocket::setsockopt(int, int, const void*, unsigned)
              reference :  InternetSocket::getpeername(SocketAddress*)
              reference :  InternetSocket::set_timeout(int)
              reference :  InternetSocket::set_blocking(bool)
              reference :  InternetSocket::bind(const SocketAddress&)
              reference :  InternetSocket::close()
              reference :  InternetSocket::event()
              reference :  InternetSocket::sigio(mbed::Callback<void()>)
              reference :  InternetSocket::InternetSocket__sub_object()
              reference :  InternetSocket::~InternetSocket__sub_object()
              weak defn :  T1 mbed::detail::invoke_r<void, void(InternetSocket::*const &)(), <TCPSocket*const &>, (int)0>(T2&&, T3&&...)
              weak defn :  T1 mbed::detail::invoke_r<void, mbed::Callback<void()>::Callback<TCPSocket*, void(InternetSocket::*)(), (int)0>(T1, T2)::[lambda() (instance 1)]&, <>, (int)0>(T2&&, T3&&...)
              weak defn :  void mbed::Callback<void()>::target_call<mbed::Callback<void()>::Callback<TCPSocket*, void(InternetSocket::*)(), (int)0>(T1, T2)::[lambda() (instance 1)]>(const mbed::detail::CallbackBase*)
              weak defn :  void mbed::Callback<void()>::generate<mbed::Callback<void()>::Callback<TCPSocket*, void(InternetSocket::*)(), (int)0>(T1, T2)::[lambda() (instance 1)], void>(T1&&)
              weak defn :  mbed::Callback<void()>::Callback__sub_object<TCPSocket*, void(InternetSocket::*)(), (int)0>(T1, T2)
              weak defn :  std::__1::enable_if<((std::is_function<T2>::value&&(!std::is_base_of<T1, std::__1::decay<T3>::type>::value))&&(!is_reference_wrapper<std::__1::decay<T3>::type>::value)), decltype((((*std::forward<T3>(param#2)).*param#1)(std::forward<T4>(param#3)...)))>::type mstd::impl::INVOKE<InternetSocket, void(), TCPSocket*const &, <>>(T2T1::*, T3&&, T4&&...)
              weak defn :  std::__1::enable_if<((!std::is_member_pointer<std::__1::decay<T1>::type>::value)||(std::is_member_object_pointer<std::__1::decay<T1>::type>::value&&(sizeof...(param#2)!=(int)1))), decltype((std::forward<T1>(param#1)(std::forward<T2>(param#2)...)))>::type mstd::impl::INVOKE<mbed::Callback<void()>::Callback<TCPSocket*, void(InternetSocket::*)(), (int)0>(T1, T2)::[lambda() (instance 1)]&, <>>(T1&&, T2&&...)
              weak defn :  mstd::invoke_result<T1, <T2...>>::type mstd::invoke<void(InternetSocket::*const &)(), <TCPSocket*const &>>(T1&&, T2&&...)
              weak defn :  mstd::invoke_result<T1, <T2...>>::type mstd::invoke<mbed::Callback<void()>::Callback<TCPSocket*, void(InternetSocket::*)(), (int)0>(T1, T2)::[lambda() (instance 1)]&, <>>(T1&&, T2&&...)
              reference :  rtos::EventFlags::set(unsigned)
              reference :  rtos::EventFlags::wait_any(unsigned, unsigned, bool)
              reference :  rtos::Mutex::lock()
              reference :  rtos::Mutex::unlock()
              definition:  TCPSocket::recv(void*, unsigned)
              definition:  TCPSocket::send(const void*, unsigned)
              definition:  TCPSocket::accept(int*)
              definition:  TCPSocket::listen(int)
              definition:  TCPSocket::sendto(const SocketAddress&, const void*, unsigned)
              definition:  TCPSocket::connect(const SocketAddress&)
              definition:  TCPSocket::recvfrom(SocketAddress*, void*, unsigned)
              definition:  TCPSocket::get_proto()
              definition:  TCPSocket::TCPSocket(TCPSocket*, void*, SocketAddress)
              definition:  TCPSocket::TCPSocket()
              definition:  TCPSocket::TCPSocket__sub_object(TCPSocket*, void*, SocketAddress)
              definition:  TCPSocket::TCPSocket__sub_object()
              weak defn :  TCPSocket::~TCPSocket__deallocating()
              definition:  vtable for TCPSocket
              weak defn :  mbed::Callback<void()>::Callback<TCPSocket*, void(InternetSocket::*)(), (int)0>(T1, T2)::[lambda() (instance 1)]::operator ()() const
              reference :  operator delete[] (void*)
              reference :  operator delete (void*)
              reference :  operator new(unsigned)
              reference :  mbed_assert_internal
              reference :  SocketStats::stats_update_proto(const Socket*, nsapi_protocol)
              reference :  mbed::Callback<void()>::thunk(void*)
              reference :  SocketStats::stats_update_socket_state(const Socket*, socket_state)
              reference :  SocketStats::stats_update_peer(const Socket*, const SocketAddress&)
              reference :  SocketStats::stats_update_sent_bytes(const Socket*, unsigned)
              reference :  SocketStats::stats_update_recv_bytes(const Socket*, unsigned)
              reference :  SocketAddress::~SocketAddress__sub_object()
              reference :  SocketAddress::SocketAddress__sub_object()
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/netsocket/source/TLSSocket.o.
              reference :  InternetSocket::~InternetSocket__sub_object()
              reference :  TLSSocketWrapper::getsockopt(int, int, void*, unsigned*)
              reference :  TLSSocketWrapper::setsockopt(int, int, const void*, unsigned)
              reference :  TLSSocketWrapper::getpeername(SocketAddress*)
              reference :  TLSSocketWrapper::set_timeout(int)
              reference :  TLSSocketWrapper::set_blocking(bool)
              reference :  TLSSocketWrapper::bind(const SocketAddress&)
              reference :  TLSSocketWrapper::recv(void*, unsigned)
              reference :  TLSSocketWrapper::send(const void*, unsigned)
              reference :  TLSSocketWrapper::close()
              reference :  TLSSocketWrapper::sigio(mbed::Callback<void()>)
              reference :  TLSSocketWrapper::accept(int*)
              reference :  TLSSocketWrapper::listen(int)
              reference :  TLSSocketWrapper::sendto(const SocketAddress&, const void*, unsigned)
              reference :  TLSSocketWrapper::connect(const SocketAddress&)
              reference :  TLSSocketWrapper::recvfrom(SocketAddress*, void*, unsigned)
              reference :  TLSSocketWrapper::~TLSSocketWrapper__sub_object()
              definition:  TLSSocket::~TLSSocket__deallocating()
              definition:  TLSSocket::~TLSSocket()
              definition:  TLSSocket::~TLSSocket__sub_object()
              definition:  vtable for TLSSocket
              reference :  operator delete (void*)
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/netsocket/source/TLSSocketWrapper.o.
              definition:  TLSSocketWrapper::getsockopt(int, int, void*, unsigned*)
              definition:  TLSSocketWrapper::setsockopt(int, int, const void*, unsigned)
              definition:  TLSSocketWrapper::getpeername(SocketAddress*)
              definition:  TLSSocketWrapper::set_timeout(int)
              definition:  TLSSocketWrapper::get_ca_chain()
              definition:  TLSSocketWrapper::get_own_cert()
              definition:  TLSSocketWrapper::set_blocking(bool)
              definition:  TLSSocketWrapper::set_ca_chain(mbedtls_x509_crt*)
              definition:  TLSSocketWrapper::set_hostname(const char*)
              definition:  TLSSocketWrapper::set_own_cert(mbedtls_x509_crt*)
              definition:  TLSSocketWrapper::get_ssl_config()
              definition:  TLSSocketWrapper::set_ssl_config(mbedtls_ssl_config*)
              definition:  TLSSocketWrapper::get_ssl_context()
              definition:  TLSSocketWrapper::start_handshake(bool)
              definition:  TLSSocketWrapper::set_root_ca_cert(const char*)
              definition:  TLSSocketWrapper::set_root_ca_cert(const void*, unsigned)
              definition:  TLSSocketWrapper::continue_handshake()
              definition:  TLSSocketWrapper::print_mbedtls_error(const char*, int)
              definition:  TLSSocketWrapper::set_client_cert_key(const char*, const char*)
              definition:  TLSSocketWrapper::set_client_cert_key(const void*, unsigned, const void*, unsigned)
              definition:  TLSSocketWrapper::bind(const SocketAddress&)
              definition:  TLSSocketWrapper::recv(void*, unsigned)
              definition:  TLSSocketWrapper::send(const void*, unsigned)
              definition:  TLSSocketWrapper::close()
              definition:  TLSSocketWrapper::event()
              definition:  TLSSocketWrapper::sigio(mbed::Callback<void()>)
              definition:  TLSSocketWrapper::accept(int*)
              definition:  TLSSocketWrapper::listen(int)
              definition:  TLSSocketWrapper::sendto(const SocketAddress&, const void*, unsigned)
              definition:  TLSSocketWrapper::connect(const SocketAddress&)
              definition:  TLSSocketWrapper::recvfrom(SocketAddress*, void*, unsigned)
              definition:  TLSSocketWrapper::ssl_recv(void*, unsigned char*, unsigned)
              definition:  TLSSocketWrapper::ssl_send(void*, const unsigned char*, unsigned)
              definition:  TLSSocketWrapper::TLSSocketWrapper(Socket*, const char*, TLSSocketWrapper::control_transport)
              definition:  TLSSocketWrapper::TLSSocketWrapper__sub_object(Socket*, const char*, TLSSocketWrapper::control_transport)
              definition:  TLSSocketWrapper::~TLSSocketWrapper__deallocating()
              definition:  TLSSocketWrapper::~TLSSocketWrapper()
              definition:  TLSSocketWrapper::~TLSSocketWrapper__sub_object()
              weak defn :  T1 mbed::detail::invoke_r<void, void(TLSSocketWrapper::*const &)(), <TLSSocketWrapper*const &>, (int)0>(T2&&, T3&&...)
              weak defn :  T1 mbed::detail::invoke_r<void, mbed::Callback<void()>::Callback<TLSSocketWrapper*, void(TLSSocketWrapper::*)(), (int)0>(T1, T2)::[lambda() (instance 1)]&, <>, (int)0>(T2&&, T3&&...)
              weak defn :  void mbed::Callback<void()>::target_call<mbed::Callback<void()>::Callback<TLSSocketWrapper*, void(TLSSocketWrapper::*)(), (int)0>(T1, T2)::[lambda() (instance 1)]>(const mbed::detail::CallbackBase*)
              weak defn :  void mbed::Callback<void()>::generate<mbed::Callback<void()>::Callback<TLSSocketWrapper*, void(TLSSocketWrapper::*)(), (int)0>(T1, T2)::[lambda() (instance 1)], void>(T1&&)
              weak defn :  mbed::Callback<void()>::Callback__sub_object<TLSSocketWrapper*, void(TLSSocketWrapper::*)(), (int)0>(T1, T2)
              weak defn :  mbed::Callback<T3(T4...)> mbed::callback<TLSSocketWrapper, TLSSocketWrapper, void, <>>(T2*, T3(T1::*)(T4...))
              weak defn :  std::__1::enable_if<((std::is_function<T2>::value&&(!std::is_base_of<T1, std::__1::decay<T3>::type>::value))&&(!is_reference_wrapper<std::__1::decay<T3>::type>::value)), decltype((((*std::forward<T3>(param#2)).*param#1)(std::forward<T4>(param#3)...)))>::type mstd::impl::INVOKE<TLSSocketWrapper, void(), TLSSocketWrapper*const &, <>>(T2T1::*, T3&&, T4&&...)
              weak defn :  std::__1::enable_if<((!std::is_member_pointer<std::__1::decay<T1>::type>::value)||(std::is_member_object_pointer<std::__1::decay<T1>::type>::value&&(sizeof...(param#2)!=(int)1))), decltype((std::forward<T1>(param#1)(std::forward<T2>(param#2)...)))>::type mstd::impl::INVOKE<mbed::Callback<void()>::Callback<TLSSocketWrapper*, void(TLSSocketWrapper::*)(), (int)0>(T1, T2)::[lambda() (instance 1)]&, <>>(T1&&, T2&&...)
              weak defn :  mstd::invoke_result<T1, <T2...>>::type mstd::invoke<void(TLSSocketWrapper::*const &)(), <TLSSocketWrapper*const &>>(T1&&, T2&&...)
              weak defn :  mstd::invoke_result<T1, <T2...>>::type mstd::invoke<mbed::Callback<void()>::Callback<TLSSocketWrapper*, void(TLSSocketWrapper::*)(), (int)0>(T1, T2)::[lambda() (instance 1)]&, <>>(T1&&, T2&&...)
              reference :  rtos::EventFlags::set(unsigned)
              reference :  rtos::EventFlags::wait_any(unsigned, unsigned, bool)
              reference :  rtos::EventFlags::EventFlags()
              reference :  rtos::EventFlags::~EventFlags()
              definition:  TLSSocketWrapper::is_handshake_started() const
              reference :  std::nothrow
              definition:  vtable for TLSSocketWrapper
              weak defn :  mbed::Callback<void()>::Callback<TLSSocketWrapper*, void(TLSSocketWrapper::*)(), (int)0>(T1, T2)::[lambda() (instance 1)]::operator ()() const
              reference :  operator delete (void*)
              reference :  operator new(unsigned)
              reference :  operator new(unsigned, const std::nothrow_t&)
              reference :  __cxa_pure_virtual
              reference :  mbed_assert_internal
              reference :  mbed_error
              reference :  mbedtls_ctr_drbg_free
              reference :  mbedtls_ctr_drbg_init
              reference :  mbedtls_ctr_drbg_random
              reference :  mbedtls_ctr_drbg_seed
              reference :  mbedtls_entropy_free
              reference :  mbedtls_entropy_func
              reference :  mbedtls_entropy_init
              reference :  mbedtls_pk_free
              reference :  mbedtls_pk_init
              reference :  mbedtls_pk_parse_key
              reference :  mbedtls_platform_setup
              reference :  mbedtls_platform_teardown
              reference :  mbedtls_ssl_close_notify
              reference :  mbedtls_ssl_conf_authmode
              reference :  mbedtls_ssl_conf_ca_chain
              reference :  mbedtls_ssl_conf_own_cert
              reference :  mbedtls_ssl_conf_rng
              reference :  mbedtls_ssl_config_defaults
              reference :  mbedtls_ssl_config_free
              reference :  mbedtls_ssl_config_init
              reference :  mbedtls_ssl_free
              reference :  mbedtls_ssl_handshake
              reference :  mbedtls_ssl_init
              reference :  mbedtls_ssl_read
              reference :  mbedtls_ssl_set_bio
              reference :  mbedtls_ssl_set_hostname
              reference :  mbedtls_ssl_setup
              reference :  mbedtls_ssl_write
              reference :  mbedtls_x509_crt_free
              reference :  mbedtls_x509_crt_init
              reference :  mbedtls_x509_crt_parse
              reference :  strlen
              reference :  Socket::Socket__sub_object()
              reference :  mbed::Callback<void()>::Callback__sub_object()
              reference :  Socket::~Socket__sub_object()
              reference :  mbed::Callback<void()>::operator bool() const
              reference :  mbed::Callback<void()>::operator ()() const
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/netsocket/source/UDPSocket.o.
              reference :  InternetSocket::getsockopt(int, int, void*, unsigned*)
              reference :  InternetSocket::setsockopt(int, int, const void*, unsigned)
              reference :  InternetSocket::getpeername(SocketAddress*)
              reference :  InternetSocket::set_timeout(int)
              reference :  InternetSocket::set_blocking(bool)
              reference :  InternetSocket::bind(const SocketAddress&)
              reference :  InternetSocket::close()
              reference :  InternetSocket::sigio(mbed::Callback<void()>)
              reference :  InternetSocket::InternetSocket__sub_object()
              reference :  InternetSocket::~InternetSocket__sub_object()
              reference :  InternetDatagramSocket::recv(void*, unsigned)
              reference :  InternetDatagramSocket::send(const void*, unsigned)
              reference :  InternetDatagramSocket::accept(int*)
              reference :  InternetDatagramSocket::listen(int)
              reference :  InternetDatagramSocket::sendto(const SocketAddress&, const void*, unsigned)
              reference :  InternetDatagramSocket::connect(const SocketAddress&)
              reference :  InternetDatagramSocket::recvfrom(SocketAddress*, void*, unsigned)
              definition:  UDPSocket::get_proto()
              definition:  UDPSocket::UDPSocket()
              definition:  UDPSocket::UDPSocket__sub_object()
              weak defn :  UDPSocket::~UDPSocket__deallocating()
              reference :  vtable for InternetDatagramSocket
              definition:  vtable for UDPSocket
              reference :  operator delete (void*)
              reference :  InternetDatagramSocket::InternetDatagramSocket__sub_object()
              reference :  SocketStats::stats_update_proto(const Socket*, nsapi_protocol)
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/netsocket/source/WiFiAccessPoint.o.
              definition:  WiFiAccessPoint::WiFiAccessPoint(nsapi_wifi_ap)
              definition:  WiFiAccessPoint::WiFiAccessPoint()
              definition:  WiFiAccessPoint::WiFiAccessPoint__sub_object(nsapi_wifi_ap)
              definition:  WiFiAccessPoint::WiFiAccessPoint__sub_object()
              definition:  WiFiAccessPoint::get_channel() const
              definition:  WiFiAccessPoint::get_security() const
              definition:  WiFiAccessPoint::get_rssi() const
              definition:  WiFiAccessPoint::get_ssid() const
              definition:  WiFiAccessPoint::get_bssid() const
              reference :  __aeabi_memclr
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/netsocket/source/nsapi_dns.o.
              definition:  nsapi_dns_query(NetworkStack*, const char*, SocketAddress*, nsapi_version)
              definition:  nsapi_dns_query(NetworkStack*, const char*, SocketAddress*, const char*, nsapi_version)
              definition:  nsapi_dns_reset()
              definition:  nsapi_dns_call_in(mbed::Callback<int(int, mbed::Callback<void()>)>, int, mbed::Callback<void()>)
              reference :  nsapi_create_stack(nsapi_stack*)
              weak defn :  T1* core_util_atomic_load<mbed::Callback<int(int, mbed::Callback<void()>)>>(T1*const *)
              definition:  nsapi_dns_call_in_set(mbed::Callback<int(int, mbed::Callback<void()>)>)
              definition:  nsapi_dns_query_async(NetworkStack*, const char*, mbed::Callback<void(int, SocketAddress*)>, mbed::Callback<int(int, mbed::Callback<void()>)>, nsapi_version)
              definition:  nsapi_dns_query_async(NetworkStack*, const char*, mbed::Callback<void(int, SocketAddress*)>, mbed::Callback<int(int, mbed::Callback<void()>)>, const char*, nsapi_version)
              weak defn :  void core_util_atomic_store<mbed::Callback<int(int, mbed::Callback<void()>)>>(T1**, T1*)
              definition:  nsapi_dns_query_multiple(NetworkStack*, const char*, SocketAddress*, unsigned, const char*, nsapi_version)
              definition:  nsapi_dns_query_async_cancel(int)
              definition:  nsapi_dns_query_multiple_async(NetworkStack*, const char*, mbed::Callback<void(int, SocketAddress*)>, unsigned, mbed::Callback<int(int, mbed::Callback<void()>)>, const char*, nsapi_version)
              reference :  SocketAddress::set_addr(const nsapi_addr&)
              reference :  SocketAddress::SocketAddress(const nsapi_addr&, unsigned short)
              reference :  InternetSocket::setsockopt(int, int, const void*, unsigned)
              reference :  InternetSocket::set_timeout(int)
              reference :  InternetSocket::open(NetworkStack*)
              reference :  InternetSocket::close()
              reference :  InternetSocket::~InternetSocket__sub_object()
              weak defn :  SOCKET_CB_DATA::SOCKET_CB_DATA__sub_object()
              reference :  InternetDatagramSocket::sendto(const SocketAddress&, const void*, unsigned)
              reference :  InternetDatagramSocket::recvfrom(SocketAddress*, void*, unsigned)
              weak defn :  T1 mbed::detail::invoke_r<void, void(*const &)(NetworkStack*), <NetworkStack*const &>, (int)0>(T2&&, T3&&...)
              weak defn :  T1 mbed::detail::invoke_r<void, void(*const &)(void*), <SOCKET_CB_DATA*const &>, (int)0>(T2&&, T3&&...)
              weak defn :  T1 mbed::detail::invoke_r<void, void(*const &)(void*), <void*const &>, (int)0>(T2&&, T3&&...)
              weak defn :  T1 mbed::detail::invoke_r<void, mbed::Callback<void()>::Callback<void(*)(NetworkStack*), NetworkStack*, (int)0>(T1, T2)::[lambda() (instance 1)]&, <>, (int)0>(T2&&, T3&&...)
              weak defn :  T1 mbed::detail::invoke_r<void, mbed::Callback<void()>::Callback<void(*)(void*), SOCKET_CB_DATA*, (int)0>(T1, T2)::[lambda() (instance 1)]&, <>, (int)0>(T2&&, T3&&...)
              weak defn :  T1 mbed::detail::invoke_r<void, mbed::Callback<void()>::Callback<void(*)(void*), void*, (int)0>(T1, T2)::[lambda() (instance 1)]&, <>, (int)0>(T2&&, T3&&...)
              weak defn :  mbed::Callback<int(int, mbed::Callback<void()>)>::Callback__sub_object()
              weak defn :  mbed::Callback<void(int, SocketAddress*)>::Callback__sub_object()
              weak defn :  mbed::Callback<void(int, SocketAddress*)>::operator =(std::nullptr_t)
              weak defn :  void mbed::Callback<void()>::target_call<mbed::Callback<void()>::Callback<void(*)(NetworkStack*), NetworkStack*, (int)0>(T1, T2)::[lambda() (instance 1)]>(const mbed::detail::CallbackBase*)
              weak defn :  void mbed::Callback<void()>::target_call<mbed::Callback<void()>::Callback<void(*)(void*), SOCKET_CB_DATA*, (int)0>(T1, T2)::[lambda() (instance 1)]>(const mbed::detail::CallbackBase*)
              weak defn :  void mbed::Callback<void()>::target_call<mbed::Callback<void()>::Callback<void(*)(void*), void*, (int)0>(T1, T2)::[lambda() (instance 1)]>(const mbed::detail::CallbackBase*)
              weak defn :  void mbed::Callback<void()>::generate<mbed::Callback<void()>::Callback<void(*)(NetworkStack*), NetworkStack*, (int)0>(T1, T2)::[lambda() (instance 1)], void>(T1&&)
              weak defn :  void mbed::Callback<void()>::generate<mbed::Callback<void()>::Callback<void(*)(void*), SOCKET_CB_DATA*, (int)0>(T1, T2)::[lambda() (instance 1)], void>(T1&&)
              weak defn :  void mbed::Callback<void()>::generate<mbed::Callback<void()>::Callback<void(*)(void*), void*, (int)0>(T1, T2)::[lambda() (instance 1)], void>(T1&&)
              weak defn :  mbed::Callback<void()>::Callback__sub_object<void(*)(NetworkStack*), NetworkStack*, (int)0>(T1, T2)
              weak defn :  mbed::Callback<void()>::Callback__sub_object<void(*)(void*), SOCKET_CB_DATA*, (int)0>(T1, T2)
              weak defn :  mbed::Callback<void()>::Callback__sub_object<void(*)(void*), void*, (int)0>(T1, T2)
              weak defn :  mbed::Callback<T3(T4...)> mbed::callback<NetworkStack, NetworkStack, void, <>>(T3(*)(T1*, T4...), T2*)
              weak defn :  mbed::Callback<T3(T4...)> mbed::callback<void, SOCKET_CB_DATA, void, <>>(T3(*)(T1*, T4...), T2*)
              weak defn :  mbed::Callback<T3(T4...)> mbed::callback<void, void, void, <>>(T3(*)(T1*, T4...), T2*)
              weak defn :  std::__1::enable_if<((!std::is_member_pointer<std::__1::decay<T1>::type>::value)||(std::is_member_object_pointer<std::__1::decay<T1>::type>::value&&(sizeof...(param#2)!=(int)1))), decltype((std::forward<T1>(param#1)(std::forward<T2>(param#2)...)))>::type mstd::impl::INVOKE<void(*const &)(NetworkStack*), <NetworkStack*const &>>(T1&&, T2&&...)
              weak defn :  std::__1::enable_if<((!std::is_member_pointer<std::__1::decay<T1>::type>::value)||(std::is_member_object_pointer<std::__1::decay<T1>::type>::value&&(sizeof...(param#2)!=(int)1))), decltype((std::forward<T1>(param#1)(std::forward<T2>(param#2)...)))>::type mstd::impl::INVOKE<void(*const &)(void*), <SOCKET_CB_DATA*const &>>(T1&&, T2&&...)
              weak defn :  std::__1::enable_if<((!std::is_member_pointer<std::__1::decay<T1>::type>::value)||(std::is_member_object_pointer<std::__1::decay<T1>::type>::value&&(sizeof...(param#2)!=(int)1))), decltype((std::forward<T1>(param#1)(std::forward<T2>(param#2)...)))>::type mstd::impl::INVOKE<void(*const &)(void*), <void*const &>>(T1&&, T2&&...)
              weak defn :  std::__1::enable_if<((!std::is_member_pointer<std::__1::decay<T1>::type>::value)||(std::is_member_object_pointer<std::__1::decay<T1>::type>::value&&(sizeof...(param#2)!=(int)1))), decltype((std::forward<T1>(param#1)(std::forward<T2>(param#2)...)))>::type mstd::impl::INVOKE<mbed::Callback<void()>::Callback<void(*)(NetworkStack*), NetworkStack*, (int)0>(T1, T2)::[lambda() (instance 1)]&, <>>(T1&&, T2&&...)
              weak defn :  std::__1::enable_if<((!std::is_member_pointer<std::__1::decay<T1>::type>::value)||(std::is_member_object_pointer<std::__1::decay<T1>::type>::value&&(sizeof...(param#2)!=(int)1))), decltype((std::forward<T1>(param#1)(std::forward<T2>(param#2)...)))>::type mstd::impl::INVOKE<mbed::Callback<void()>::Callback<void(*)(void*), SOCKET_CB_DATA*, (int)0>(T1, T2)::[lambda() (instance 1)]&, <>>(T1&&, T2&&...)
              weak defn :  std::__1::enable_if<((!std::is_member_pointer<std::__1::decay<T1>::type>::value)||(std::is_member_object_pointer<std::__1::decay<T1>::type>::value&&(sizeof...(param#2)!=(int)1))), decltype((std::forward<T1>(param#1)(std::forward<T2>(param#2)...)))>::type mstd::impl::INVOKE<mbed::Callback<void()>::Callback<void(*)(void*), void*, (int)0>(T1, T2)::[lambda() (instance 1)]&, <>>(T1&&, T2&&...)
              weak defn :  mstd::invoke_result<T1, <T2...>>::type mstd::invoke<void(*const &)(NetworkStack*), <NetworkStack*const &>>(T1&&, T2&&...)
              weak defn :  mstd::invoke_result<T1, <T2...>>::type mstd::invoke<void(*const &)(void*), <SOCKET_CB_DATA*const &>>(T1&&, T2&&...)
              weak defn :  mstd::invoke_result<T1, <T2...>>::type mstd::invoke<void(*const &)(void*), <void*const &>>(T1&&, T2&&...)
              weak defn :  mstd::invoke_result<T1, <T2...>>::type mstd::invoke<mbed::Callback<void()>::Callback<void(*)(NetworkStack*), NetworkStack*, (int)0>(T1, T2)::[lambda() (instance 1)]&, <>>(T1&&, T2&&...)
              weak defn :  mstd::invoke_result<T1, <T2...>>::type mstd::invoke<mbed::Callback<void()>::Callback<void(*)(void*), SOCKET_CB_DATA*, (int)0>(T1, T2)::[lambda() (instance 1)]&, <>>(T1&&, T2&&...)
              weak defn :  mstd::invoke_result<T1, <T2...>>::type mstd::invoke<mbed::Callback<void()>::Callback<void(*)(void*), void*, (int)0>(T1, T2)::[lambda() (instance 1)]&, <>>(T1&&, T2&&...)
              reference :  rtos::Mutex::lock()
              reference :  rtos::Mutex::unlock()
              reference :  rtos::Mutex::Mutex()
              reference :  rtos::Kernel::impl::get_tick_count()
              weak defn :  DNS_CACHE::DNS_CACHE__sub_object()
              weak defn :  DNS_QUERY::DNS_QUERY__sub_object()
              reference :  UDPSocket::UDPSocket()
              weak defn :  SingletonPtr<mbed::Callback<int(int, mbed::Callback<void()>)>>::get() const
              weak defn :  SingletonPtr<mbed::Callback<int(int, mbed::Callback<void()>)>>::operator ->() const
              weak defn :  SingletonPtr<rtos::Mutex>::get() const
              weak defn :  mbed::Callback<int(int, mbed::Callback<void()>)>::call(int, mbed::Callback<void()>) const
              weak defn :  mbed::Callback<int(int, mbed::Callback<void()>)>::operator ()(int, mbed::Callback<void()>) const
              weak defn :  mbed::Callback<int(int, mbed::Callback<void()>)>::operator bool() const
              reference :  std::nothrow
              weak defn :  mbed::Callback<void()>::Callback<void(*)(NetworkStack*), NetworkStack*, (int)0>(T1, T2)::[lambda() (instance 1)]::operator ()() const
              weak defn :  mbed::Callback<void()>::Callback<void(*)(void*), SOCKET_CB_DATA*, (int)0>(T1, T2)::[lambda() (instance 1)]::operator ()() const
              weak defn :  mbed::Callback<void()>::Callback<void(*)(void*), void*, (int)0>(T1, T2)::[lambda() (instance 1)]::operator ()() const
              reference :  operator delete[] (void*)
              reference :  operator delete (void*)
              reference :  operator new[] (unsigned, const std::nothrow_t&)
              reference :  operator new(unsigned)
              reference :  operator new(unsigned, const std::nothrow_t&)
              reference :  __aeabi_memcpy
              reference :  __aeabi_memmove
              reference :  free
              reference :  malloc
              reference :  mbed_assert_internal
              reference :  memcmp
              definition:  nsapi_dns_add_server
              definition:  nsapi_dns_query
              definition:  nsapi_dns_query_multiple
              reference :  osMutexAcquire
              reference :  osMutexRelease
              reference :  singleton_mutex_id
              reference :  strcmp
              reference :  strcpy
              reference :  strcspn
              reference :  strlen
              reference :  SocketAddress::~SocketAddress__sub_object()
              reference :  SocketAddress::SocketAddress__sub_object()
              reference :  SocketAddress::get_ip_version() const
              reference :  SingletonPtr<rtos::Mutex>::operator ->() const
              reference :  mbed::Callback<void(int, SocketAddress*)>::operator ()(int, SocketAddress*) const
              reference :  mbed::Callback<T1(T2...)> mbed::callback<void, <>>(T1(*)(T2...))
              reference :  mbed::detail::CallbackBase::control() const
              reference :  mbed::detail::CallbackBase::call_fn() const
              reference :  rtos::Kernel::Clock::now()
              reference :  mbed::detail::CallbackBase::destroy()
              reference :  mbed::detail::CallbackBase::clear()
              reference :  SocketAddress::set_port(unsigned short)
              reference :  mbed::detail::CallbackBase::CallbackBase__sub_object(std::nullptr_t)
              reference :  mbed::Callback<void(int, SocketAddress*)>::operator bool() const
              reference :  T1* core_util_atomic_load<rtos::Mutex>(T1*const *)
              reference :  void core_util_atomic_store<rtos::Mutex>(T1**, T1*)
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/netsocket/source/nsapi_ppp.o.
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/nfc/libraries/acore/source/ac_buffer.o.
              reference :  __2printf
              reference :  _printf_flags
              reference :  _printf_longlong_hex
              reference :  _printf_percent
              reference :  _printf_pre_padding
              reference :  _printf_widthprec
              reference :  _printf_x
              definition:  ac_buffer_append
              definition:  ac_buffer_dump
              definition:  ac_buffer_dup
              definition:  ac_buffer_init
              reference :  ac_buffer_read_n_skip
              definition:  ac_buffer_split
              reference :  puts
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/nfc/libraries/acore/source/ac_buffer_builder.o.
              reference :  __aeabi_memcpy
              reference :  __aeabi_memmove
              definition:  ac_buffer_builder_compact
              definition:  ac_buffer_builder_copy_n_bytes
              definition:  ac_buffer_builder_from_buffer
              definition:  ac_buffer_builder_init
              definition:  ac_buffer_builder_reset
              definition:  ac_buffer_builder_set_full
              definition:  ac_buffer_builder_write_be
              definition:  ac_buffer_builder_write_be_at
              definition:  ac_buffer_builder_write_le
              definition:  ac_buffer_builder_write_le_at
              definition:  ac_buffer_builder_write_n_skip
              reference :  ac_buffer_init
              reference :  ac_buffer_read_n_skip
              reference :  ac_buffer_reader_current_buffer_length
              reference :  ac_buffer_reader_current_buffer_pointer
              reference :  ac_buffer_reader_readable
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/nfc/libraries/acore/source/ac_buffer_reader.o.
              reference :  __aeabi_memcpy
              reference :  ac_buffer_dup
              reference :  ac_buffer_init
              definition:  ac_buffer_read_be
              definition:  ac_buffer_read_le
              definition:  ac_buffer_read_n_skip
              definition:  ac_buffer_reader_cmp
              definition:  ac_buffer_reader_cmp_bytes
              definition:  ac_buffer_reader_current_buffer_length
              definition:  ac_buffer_reader_current_buffer_pointer
              definition:  ac_buffer_reader_readable
              reference :  memcmp
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/nfc/libraries/acore/source/ac_stream.o.
              definition:  ac_istream_init
              definition:  ac_istream_pull
              definition:  ac_ostream_init
              definition:  ac_ostream_push
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/nfc/libraries/stack/ndef/ndef.o.
              reference :  ac_buffer_builder_init
              definition:  ndef_msg_init
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/nfc/libraries/stack/platform/nfc_scheduler.o.
              definition:  nfc_scheduler_dequeue_task
              definition:  nfc_scheduler_init
              definition:  nfc_scheduler_iteration
              definition:  nfc_scheduler_queue_task
              reference :  nfc_scheduler_timer_get
              reference :  nfc_scheduler_timer_reset
              reference :  nfc_scheduler_timer_start
              definition:  task_init
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/nfc/libraries/stack/platform/nfc_transport.o.
              definition:  nfc_transport_init
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/nfc/libraries/stack/tech/iso7816/iso7816.o.
              reference :  ac_buffer_append
              reference :  ac_buffer_builder_copy_n_bytes
              reference :  ac_buffer_builder_init
              reference :  ac_buffer_builder_reset
              reference :  ac_buffer_builder_write_be
              reference :  ac_buffer_init
              reference :  ac_buffer_read_be
              reference :  ac_buffer_reader_cmp_bytes
              reference :  ac_buffer_reader_readable
              reference :  ac_buffer_split
              reference :  ac_istream_init
              reference :  ac_ostream_init
              definition:  nfc_tech_iso7816_add_app
              definition:  nfc_tech_iso7816_connect
              definition:  nfc_tech_iso7816_disconnect
              definition:  nfc_tech_iso7816_init
              definition:  nfc_tech_iso7816_reply
              reference :  nfc_tech_isodep_target_connect
              reference :  nfc_tech_isodep_target_disconnect
              reference :  nfc_tech_isodep_target_init
              reference :  nfc_tech_isodep_target_receive
              reference :  nfc_tech_isodep_target_transmit
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/nfc/libraries/stack/tech/iso7816/iso7816_app.o.
              definition:  nfc_tech_iso7816_app_init
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/nfc/libraries/stack/tech/isodep/isodep_target.o.
              reference :  ac_buffer_builder_init
              reference :  ac_buffer_builder_reset
              reference :  ac_buffer_builder_write_be
              reference :  ac_buffer_dup
              reference :  ac_buffer_read_be
              reference :  ac_buffer_read_n_skip
              reference :  ac_buffer_reader_readable
              reference :  ac_istream_pull
              reference :  ac_ostream_push
              definition:  nfc_tech_isodep_target_connect
              definition:  nfc_tech_isodep_target_disconnect
              definition:  nfc_tech_isodep_target_init
              definition:  nfc_tech_isodep_target_receive
              definition:  nfc_tech_isodep_target_transmit
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/nfc/libraries/stack/tech/type4/type4_target.o.
              reference :  ac_buffer_builder_copy_n_bytes
              reference :  ac_buffer_builder_from_buffer
              reference :  ac_buffer_builder_init
              reference :  ac_buffer_builder_reset
              reference :  ac_buffer_builder_set_full
              reference :  ac_buffer_builder_write_be
              reference :  ac_buffer_dup
              reference :  ac_buffer_read_be
              reference :  ac_buffer_read_n_skip
              reference :  ac_buffer_reader_readable
              reference :  ac_buffer_split
              reference :  nfc_tech_iso7816_add_app
              reference :  nfc_tech_iso7816_app_init
              reference :  nfc_tech_iso7816_reply
              definition:  nfc_tech_type4_target_init
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/nfc/libraries/stack/transceiver/transceiver.o.
              reference :  nfc_scheduler_init
              definition:  transceiver_init
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/nfc/source/NFCController.o.
              reference :  mbed::TickerBase::attach(mbed::Callback<void()>, std::__1::chrono::duration<long long, std::__1::ratio<(long long)1, (long long)1000000>>)
              reference :  mbed::TickerBase::detach()
              definition:  mbed::nfc::NFCController::initialize()
              definition:  mbed::nfc::NFCController::on_timeout()
              definition:  mbed::nfc::NFCController::set_delegate(mbed::nfc::NFCController::Delegate*)
              definition:  mbed::nfc::NFCController::on_hw_interrupt()
              definition:  mbed::nfc::NFCController::start_discovery()
              definition:  mbed::nfc::NFCController::cancel_discovery()
              definition:  mbed::nfc::NFCController::polling_callback(int)
              definition:  mbed::nfc::NFCController::scheduler_process(bool)
              definition:  mbed::nfc::NFCController::s_polling_callback(__transceiver*, int, void*)
              definition:  mbed::nfc::NFCController::configure_rf_protocols(mbed::nfc::nfc_rf_protocols_bitmask_t)
              definition:  mbed::nfc::NFCController::NFCController(mbed::nfc::NFCControllerDriver*, events::EventQueue*, const mbed::Span<unsigned char, (int)-1>&)
              definition:  mbed::nfc::NFCController::NFCController__sub_object(mbed::nfc::NFCControllerDriver*, events::EventQueue*, const mbed::Span<unsigned char, (int)-1>&)
              reference :  mbed::nfc::NFCControllerDriver::set_delegate(mbed::nfc::NFCControllerDriver::Delegate*)
              weak defn :  mbed::nfc::NFCControllerDriver::Delegate::on_hw_interrupt()
              weak defn :  mbed::nfc::NFCControllerDriver::Delegate::Delegate__sub_object()
              reference :  mbed::nfc::Type4RemoteInitiator::Type4RemoteInitiator(mbed::nfc::NFCController*, const mbed::Span<unsigned char, (int)-1>&)
              reference :  mbed::Timer::Timer()
              weak defn :  T1 mbed::detail::invoke_r<void, void(mbed::nfc::NFCController::*const &)(bool), <mbed::nfc::NFCController*const &, bool>, (int)0>(T2&&, T3&&...)
              weak defn :  T1 mbed::detail::invoke_r<void, void(mbed::nfc::NFCController::*const &)(), <mbed::nfc::NFCController*const &>, (int)0>(T2&&, T3&&...)
              weak defn :  T1 mbed::detail::invoke_r<void, mbed::Callback<void(bool)>::Callback<mbed::nfc::NFCController*, void(mbed::nfc::NFCController::*)(bool), (int)0>(T1, T2)::[lambda(bool) (instance 1)]&, <bool>, (int)0>(T2&&, T3&&...)
              weak defn :  T1 mbed::detail::invoke_r<void, mbed::Callback<void()>::Callback<mbed::nfc::NFCController*, void(mbed::nfc::NFCController::*)(), (int)0>(T1, T2)::[lambda() (instance 1)]&, <>, (int)0>(T2&&, T3&&...)
              reference :  mbed::Timeout::Timeout()
              weak defn :  void mbed::Callback<void(bool)>::target_call<mbed::Callback<void(bool)>::Callback<mbed::nfc::NFCController*, void(mbed::nfc::NFCController::*)(bool), (int)0>(T1, T2)::[lambda(bool) (instance 1)]>(const mbed::detail::CallbackBase*, bool)
              weak defn :  void mbed::Callback<void(bool)>::generate<mbed::Callback<void(bool)>::Callback<mbed::nfc::NFCController*, void(mbed::nfc::NFCController::*)(bool), (int)0>(T1, T2)::[lambda(bool) (instance 1)], void>(T1&&)
              weak defn :  mbed::Callback<void(bool)>::Callback__sub_object<mbed::nfc::NFCController*, void(mbed::nfc::NFCController::*)(bool), (int)0>(T1, T2)
              weak defn :  void mbed::Callback<void()>::target_call<mbed::Callback<void()>::Callback<mbed::nfc::NFCController*, void(mbed::nfc::NFCController::*)(), (int)0>(T1, T2)::[lambda() (instance 1)]>(const mbed::detail::CallbackBase*)
              weak defn :  void mbed::Callback<void()>::generate<mbed::Callback<void()>::Callback<mbed::nfc::NFCController*, void(mbed::nfc::NFCController::*)(), (int)0>(T1, T2)::[lambda() (instance 1)], void>(T1&&)
              weak defn :  mbed::Callback<void()>::Callback__sub_object<mbed::nfc::NFCController*, void(mbed::nfc::NFCController::*)(), (int)0>(T1, T2)
              weak defn :  mbed::Callback<T3(T4...)> mbed::callback<mbed::nfc::NFCController, mbed::nfc::NFCController, void, <>>(T2*, T3(T1::*)(T4...))
              weak defn :  mbed::Callback<T3(T4...)> mbed::callback<mbed::nfc::NFCController, mbed::nfc::NFCController, void, <bool>>(T2*, T3(T1::*)(T4...))
              weak defn :  mbed::SharedPtr<mbed::nfc::NFCRemoteInitiator>::decrement_counter()
              weak defn :  mbed::SharedPtr<mbed::nfc::NFCRemoteInitiator>::SharedPtr__sub_object(mbed::nfc::NFCRemoteInitiator*)
              weak defn :  mbed::SharedPtr<mbed::nfc::NFCRemoteInitiator>::~SharedPtr__sub_object()
              reference :  mbed::TimerBase::stop()
              reference :  mbed::TimerBase::reset()
              reference :  mbed::TimerBase::start()
              weak defn :  std::__1::enable_if<((std::is_function<T2>::value&&(!std::is_base_of<T1, std::__1::decay<T3>::type>::value))&&(!is_reference_wrapper<std::__1::decay<T3>::type>::value)), decltype((((*std::forward<T3>(param#2)).*param#1)(std::forward<T4>(param#3)...)))>::type mstd::impl::INVOKE<mbed::nfc::NFCController, void(bool), mbed::nfc::NFCController*const &, <bool>>(T2T1::*, T3&&, T4&&...)
              weak defn :  std::__1::enable_if<((std::is_function<T2>::value&&(!std::is_base_of<T1, std::__1::decay<T3>::type>::value))&&(!is_reference_wrapper<std::__1::decay<T3>::type>::value)), decltype((((*std::forward<T3>(param#2)).*param#1)(std::forward<T4>(param#3)...)))>::type mstd::impl::INVOKE<mbed::nfc::NFCController, void(), mbed::nfc::NFCController*const &, <>>(T2T1::*, T3&&, T4&&...)
              weak defn :  std::__1::enable_if<((!std::is_member_pointer<std::__1::decay<T1>::type>::value)||(std::is_member_object_pointer<std::__1::decay<T1>::type>::value&&(sizeof...(param#2)!=(int)1))), decltype((std::forward<T1>(param#1)(std::forward<T2>(param#2)...)))>::type mstd::impl::INVOKE<mbed::Callback<void(bool)>::Callback<mbed::nfc::NFCController*, void(mbed::nfc::NFCController::*)(bool), (int)0>(T1, T2)::[lambda(bool) (instance 1)]&, <bool>>(T1&&, T2&&...)
              weak defn :  std::__1::enable_if<((!std::is_member_pointer<std::__1::decay<T1>::type>::value)||(std::is_member_object_pointer<std::__1::decay<T1>::type>::value&&(sizeof...(param#2)!=(int)1))), decltype((std::forward<T1>(param#1)(std::forward<T2>(param#2)...)))>::type mstd::impl::INVOKE<mbed::Callback<void()>::Callback<mbed::nfc::NFCController*, void(mbed::nfc::NFCController::*)(), (int)0>(T1, T2)::[lambda() (instance 1)]&, <>>(T1&&, T2&&...)
              weak defn :  mstd::invoke_result<T1, <T2...>>::type mstd::invoke<void(mbed::nfc::NFCController::*const &)(bool), <mbed::nfc::NFCController*const &, bool>>(T1&&, T2&&...)
              weak defn :  mstd::invoke_result<T1, <T2...>>::type mstd::invoke<void(mbed::nfc::NFCController::*const &)(), <mbed::nfc::NFCController*const &>>(T1&&, T2&&...)
              weak defn :  mstd::invoke_result<T1, <T2...>>::type mstd::invoke<mbed::Callback<void(bool)>::Callback<mbed::nfc::NFCController*, void(mbed::nfc::NFCController::*)(bool), (int)0>(T1, T2)::[lambda(bool) (instance 1)]&, <bool>>(T1&&, T2&&...)
              weak defn :  mstd::invoke_result<T1, <T2...>>::type mstd::invoke<mbed::Callback<void()>::Callback<mbed::nfc::NFCController*, void(mbed::nfc::NFCController::*)(), (int)0>(T1, T2)::[lambda() (instance 1)]&, <>>(T1&&, T2&&...)
              weak defn :  int events::EventQueue::call<mbed::nfc::NFCController, void, <bool>>(T1*, T2(T1::*)(T3...), T3...)
              definition:  mbed::nfc::NFCController::transceiver() const
              definition:  mbed::nfc::NFCController::get_supported_rf_protocols() const
              reference :  mbed::TimerBase::elapsed_time() const
              reference :  std::nothrow
              definition:  vtable for mbed::nfc::NFCController
              weak defn :  vtable for mbed::nfc::NFCControllerDriver::Delegate
              weak defn :  mbed::Callback<void(bool)>::Callback<mbed::nfc::NFCController*, void(mbed::nfc::NFCController::*)(bool), (int)0>(T1, T2)::[lambda(bool) (instance 1)]::operator ()(bool) const
              weak defn :  mbed::Callback<void()>::Callback<mbed::nfc::NFCController*, void(mbed::nfc::NFCController::*)(), (int)0>(T1, T2)::[lambda() (instance 1)]::operator ()() const
              reference :  operator delete (void*)
              reference :  operator new(unsigned)
              reference :  operator new(unsigned, const std::nothrow_t&)
              reference :  __aeabi_ldivmod
              weak defn :  core_util_atomic_decr_u32
              reference :  equeue_alloc
              reference :  equeue_event_dtor
              reference :  equeue_post
              reference :  mbed_assert_internal
              reference :  nfc_scheduler_iteration
              definition:  nfc_scheduler_timer_get
              definition:  nfc_scheduler_timer_init
              definition:  nfc_scheduler_timer_reset
              definition:  nfc_scheduler_timer_start
              definition:  nfc_scheduler_timer_stop
              reference :  int events::EventQueue::call<mbed::Callback<void(bool)>, <bool>>(T1, T2...)
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/nfc/source/NFCControllerDriver.o.
              definition:  mbed::nfc::NFCControllerDriver::hw_interrupt()
              definition:  mbed::nfc::NFCControllerDriver::set_delegate(mbed::nfc::NFCControllerDriver::Delegate*)
              definition:  mbed::nfc::NFCControllerDriver::NFCControllerDriver__sub_object()
              definition:  mbed::nfc::NFCControllerDriver::~NFCControllerDriver__deallocating()
              definition:  mbed::nfc::NFCControllerDriver::~NFCControllerDriver()
              definition:  mbed::nfc::NFCControllerDriver::~NFCControllerDriver__sub_object()
              definition:  vtable for mbed::nfc::NFCControllerDriver
              reference :  __cxa_pure_virtual
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/nfc/source/NFCEEPROM.o.
              reference :  mbed::nfc::NFCNDEFCapable::ndef_message()
              reference :  mbed::nfc::NFCEEPROMDriver::set_delegate(mbed::nfc::NFCEEPROMDriver::Delegate*)
              reference :  mbed::nfc::NFCEEPROMDriver::set_event_queue(events::EventQueue*)
              weak defn :  mbed::nfc::NFCEEPROMDriver::Delegate::Delegate__sub_object()
              weak defn :  mbed::nfc::NFCEEPROMDriver::Delegate::~Delegate__sub_object()
              definition:  mbed::nfc::NFCEEPROM::initialize()
              definition:  mbed::nfc::NFCEEPROM::handle_error(int)
              definition:  mbed::nfc::NFCEEPROM::on_size_read(bool, unsigned)
              definition:  mbed::nfc::NFCEEPROM::set_delegate(mbed::nfc::NFCEEPROM::Delegate*)
              definition:  mbed::nfc::NFCEEPROM::continue_read()
              definition:  mbed::nfc::NFCEEPROM::on_bytes_read(unsigned)
              definition:  mbed::nfc::NFCEEPROM::continue_erase()
              definition:  mbed::nfc::NFCEEPROM::continue_write()
              definition:  mbed::nfc::NFCEEPROM::on_bytes_erased(unsigned)
              definition:  mbed::nfc::NFCEEPROM::on_size_written(bool)
              definition:  mbed::nfc::NFCEEPROM::on_bytes_written(unsigned)
              definition:  mbed::nfc::NFCEEPROM::on_session_ended(bool)
              definition:  mbed::nfc::NFCEEPROM::read_ndef_message()
              definition:  mbed::nfc::NFCEEPROM::erase_ndef_message()
              definition:  mbed::nfc::NFCEEPROM::on_session_started(bool)
              definition:  mbed::nfc::NFCEEPROM::write_ndef_message()
              definition:  mbed::nfc::NFCEEPROM::ndef_capable_delegate()
              definition:  mbed::nfc::NFCEEPROM::NFCEEPROM(mbed::nfc::NFCEEPROMDriver*, events::EventQueue*, const mbed::Span<unsigned char, (int)-1>&)
              definition:  mbed::nfc::NFCEEPROM::NFCEEPROM__sub_object(mbed::nfc::NFCEEPROMDriver*, events::EventQueue*, const mbed::Span<unsigned char, (int)-1>&)
              weak defn :  mbed::nfc::NFCEEPROM::~NFCEEPROM__deallocating()
              weak defn :  mbed::nfc::NFCEEPROM::~NFCEEPROM__sub_object()
              reference :  mbed::nfc::NFCTarget::NFCTarget__sub_object(const mbed::Span<unsigned char, (int)-1>&)
              reference :  mbed::nfc::NFCTarget::~NFCTarget__sub_object()
              weak defn :  T1 mbed::detail::invoke_r<void, void(mbed::nfc::NFCEEPROM::*const &)(), <mbed::nfc::NFCEEPROM*const &>, (int)0>(T2&&, T3&&...)
              weak defn :  T1 mbed::detail::invoke_r<void, mbed::Callback<void()>::Callback<mbed::nfc::NFCEEPROM*, void(mbed::nfc::NFCEEPROM::*)(), (int)0>(T1, T2)::[lambda() (instance 1)]&, <>, (int)0>(T2&&, T3&&...)
              weak defn :  void mbed::Callback<void()>::target_call<mbed::Callback<void()>::Callback<mbed::nfc::NFCEEPROM*, void(mbed::nfc::NFCEEPROM::*)(), (int)0>(T1, T2)::[lambda() (instance 1)]>(const mbed::detail::CallbackBase*)
              weak defn :  void mbed::Callback<void()>::generate<mbed::Callback<void()>::Callback<mbed::nfc::NFCEEPROM*, void(mbed::nfc::NFCEEPROM::*)(), (int)0>(T1, T2)::[lambda() (instance 1)], void>(T1&&)
              weak defn :  mbed::Callback<void()>::Callback__sub_object<mbed::nfc::NFCEEPROM*, void(mbed::nfc::NFCEEPROM::*)(), (int)0>(T1, T2)
              weak defn :  mbed::Callback<T3(T4...)> mbed::callback<mbed::nfc::NFCEEPROM, mbed::nfc::NFCEEPROM, void, <>>(T2*, T3(T1::*)(T4...))
              weak defn :  std::__1::enable_if<((std::is_function<T2>::value&&(!std::is_base_of<T1, std::__1::decay<T3>::type>::value))&&(!is_reference_wrapper<std::__1::decay<T3>::type>::value)), decltype((((*std::forward<T3>(param#2)).*param#1)(std::forward<T4>(param#3)...)))>::type mstd::impl::INVOKE<mbed::nfc::NFCEEPROM, void(), mbed::nfc::NFCEEPROM*const &, <>>(T2T1::*, T3&&, T4&&...)
              weak defn :  std::__1::enable_if<((!std::is_member_pointer<std::__1::decay<T1>::type>::value)||(std::is_member_object_pointer<std::__1::decay<T1>::type>::value&&(sizeof...(param#2)!=(int)1))), decltype((std::forward<T1>(param#1)(std::forward<T2>(param#2)...)))>::type mstd::impl::INVOKE<mbed::Callback<void()>::Callback<mbed::nfc::NFCEEPROM*, void(mbed::nfc::NFCEEPROM::*)(), (int)0>(T1, T2)::[lambda() (instance 1)]&, <>>(T1&&, T2&&...)
              weak defn :  mstd::invoke_result<T1, <T2...>>::type mstd::invoke<void(mbed::nfc::NFCEEPROM::*const &)(), <mbed::nfc::NFCEEPROM*const &>>(T1&&, T2&&...)
              weak defn :  mstd::invoke_result<T1, <T2...>>::type mstd::invoke<mbed::Callback<void()>::Callback<mbed::nfc::NFCEEPROM*, void(mbed::nfc::NFCEEPROM::*)(), (int)0>(T1, T2)::[lambda() (instance 1)]&, <>>(T1&&, T2&&...)
              weak defn :  int events::EventQueue::call<mbed::nfc::NFCEEPROM, void, <>>(T1*, T2(T1::*)(T3...), T3...)
              weak defn :  mbed::nfc::NFCNDEFCapable::is_ndef_supported() const
              weak defn :  vtable for mbed::nfc::NFCEEPROMDriver::Delegate
              definition:  vtable for mbed::nfc::NFCEEPROM
              definition:  thunk{-36} to mbed::nfc::NFCEEPROM::on_size_read(bool, unsigned)
              definition:  thunk{-36} to mbed::nfc::NFCEEPROM::on_bytes_read(unsigned)
              definition:  thunk{-36} to mbed::nfc::NFCEEPROM::on_bytes_erased(unsigned)
              definition:  thunk{-36} to mbed::nfc::NFCEEPROM::on_size_written(bool)
              definition:  thunk{-36} to mbed::nfc::NFCEEPROM::on_bytes_written(unsigned)
              definition:  thunk{-36} to mbed::nfc::NFCEEPROM::on_session_ended(bool)
              definition:  thunk{-36} to mbed::nfc::NFCEEPROM::on_session_started(bool)
              weak defn :  mbed::Callback<void()>::Callback<mbed::nfc::NFCEEPROM*, void(mbed::nfc::NFCEEPROM::*)(), (int)0>(T1, T2)::[lambda() (instance 1)]::operator ()() const
              reference :  operator delete (void*)
              reference :  __cxa_pure_virtual
              reference :  ac_buffer_builder_reset
              reference :  ac_buffer_builder_write_n_skip
              reference :  ac_buffer_dup
              reference :  ac_buffer_read_n_skip
              reference :  ac_buffer_reader_current_buffer_length
              reference :  ac_buffer_reader_current_buffer_pointer
              reference :  ac_buffer_reader_readable
              reference :  equeue_alloc
              reference :  equeue_event_dtor
              reference :  equeue_post
              reference :  mbed_assert_internal
              reference :  int events::EventQueue::call<mbed::Callback<void()>>(T1)
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/nfc/source/NFCEEPROMDriver.o.
              definition:  mbed::nfc::NFCEEPROMDriver::event_queue()
              definition:  mbed::nfc::NFCEEPROMDriver::set_delegate(mbed::nfc::NFCEEPROMDriver::Delegate*)
              definition:  mbed::nfc::NFCEEPROMDriver::set_event_queue(events::EventQueue*)
              definition:  mbed::nfc::NFCEEPROMDriver::delegate()
              definition:  mbed::nfc::NFCEEPROMDriver::NFCEEPROMDriver__sub_object()
              definition:  mbed::nfc::NFCEEPROMDriver::~NFCEEPROMDriver__deallocating()
              definition:  mbed::nfc::NFCEEPROMDriver::~NFCEEPROMDriver()
              definition:  mbed::nfc::NFCEEPROMDriver::~NFCEEPROMDriver__sub_object()
              definition:  vtable for mbed::nfc::NFCEEPROMDriver
              reference :  __cxa_pure_virtual
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/nfc/source/NFCNDEFCapable.o.
              weak defn :  mbed::Span<const T1, (int)-1> mbed::make_const_Span<const unsigned char>(T1*, unsigned)
              definition:  mbed::nfc::NFCNDEFCapable::ndef_decode(__ac_buffer*)
              definition:  mbed::nfc::NFCNDEFCapable::ndef_encode(__ac_buffer_builder*)
              definition:  mbed::nfc::NFCNDEFCapable::ndef_message()
              definition:  mbed::nfc::NFCNDEFCapable::s_ndef_decode(__ndef_msg*, __ac_buffer*, void*)
              definition:  mbed::nfc::NFCNDEFCapable::s_ndef_encode(__ndef_msg*, __ac_buffer_builder*, void*)
              definition:  mbed::nfc::NFCNDEFCapable::build_ndef_message(__ac_buffer_builder&)
              definition:  mbed::nfc::NFCNDEFCapable::parse_ndef_message(const __ac_buffer&)
              definition:  mbed::nfc::NFCNDEFCapable::ndef_capable_delegate()
              definition:  mbed::nfc::NFCNDEFCapable::NFCNDEFCapable(const mbed::Span<unsigned char, (int)-1>&)
              definition:  mbed::nfc::NFCNDEFCapable::NFCNDEFCapable__sub_object(const mbed::Span<unsigned char, (int)-1>&)
              weak defn :  mbed::Span<const unsigned char, (int)-1>::Span__sub_object(const unsigned char*, int)
              weak defn :  mbed::Span<unsigned char, (int)-1>::Span__sub_object(unsigned char*, int)
              weak defn :  mbed::Span<T1, (int)-1> mbed::make_Span<unsigned char>(T1*, int)
              weak defn :  mbed::Span<unsigned char, (int)-1>::data() const
              weak defn :  mbed::Span<unsigned char, (int)-1>::size() const
              definition:  vtable for mbed::nfc::NFCNDEFCapable
              reference :  ac_buffer_builder_write_n_skip
              reference :  ac_buffer_dup
              reference :  ac_buffer_reader_current_buffer_length
              reference :  ac_buffer_reader_current_buffer_pointer
              reference :  mbed_assert_internal
              reference :  ndef_msg_init
              reference :  mbed::nfc::NFCNDEFCapable::is_ndef_supported() const
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/nfc/source/NFCRemoteEndpoint.o.
              definition:  mbed::nfc::NFCRemoteEndpoint::rf_protocols()
              definition:  mbed::nfc::NFCRemoteEndpoint::nfc_controller()
              definition:  mbed::nfc::NFCRemoteEndpoint::NFCRemoteEndpoint__sub_object(mbed::nfc::NFCController*)
              definition:  mbed::nfc::NFCRemoteEndpoint::~NFCRemoteEndpoint__deallocating()
              definition:  mbed::nfc::NFCRemoteEndpoint::~NFCRemoteEndpoint()
              definition:  mbed::nfc::NFCRemoteEndpoint::~NFCRemoteEndpoint__sub_object()
              reference :  mbed::nfc::NFCController::transceiver() const
              definition:  mbed::nfc::NFCRemoteEndpoint::nfc_controller() const
              definition:  vtable for mbed::nfc::NFCRemoteEndpoint
              reference :  __cxa_pure_virtual
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/nfc/source/NFCRemoteInitiator.o.
              reference :  mbed::nfc::NFCNDEFCapable::NFCNDEFCapable__sub_object(const mbed::Span<unsigned char, (int)-1>&)
              reference :  mbed::nfc::NFCRemoteEndpoint::NFCRemoteEndpoint__sub_object(mbed::nfc::NFCController*)
              reference :  mbed::nfc::NFCRemoteEndpoint::~NFCRemoteEndpoint__sub_object()
              definition:  mbed::nfc::NFCRemoteInitiator::disconnected()
              definition:  mbed::nfc::NFCRemoteInitiator::set_delegate(mbed::nfc::NFCRemoteInitiator::Delegate*)
              definition:  mbed::nfc::NFCRemoteInitiator::ndef_capable_delegate()
              definition:  mbed::nfc::NFCRemoteInitiator::connected()
              definition:  mbed::nfc::NFCRemoteInitiator::NFCRemoteInitiator__sub_object(mbed::nfc::NFCController*, const mbed::Span<unsigned char, (int)-1>&)
              definition:  mbed::nfc::NFCRemoteInitiator::~NFCRemoteInitiator__deallocating()
              definition:  mbed::nfc::NFCRemoteInitiator::~NFCRemoteInitiator()
              definition:  mbed::nfc::NFCRemoteInitiator::~NFCRemoteInitiator__sub_object()
              definition:  vtable for mbed::nfc::NFCRemoteInitiator
              definition:  thunk{-8} to mbed::nfc::NFCRemoteInitiator::ndef_capable_delegate()
              reference :  __cxa_pure_virtual
              reference :  mbed::nfc::NFCNDEFCapable::is_ndef_supported() const
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/nfc/source/NFCTarget.o.
              reference :  mbed::nfc::NFCNDEFCapable::ndef_capable_delegate()
              reference :  mbed::nfc::NFCNDEFCapable::NFCNDEFCapable__sub_object(const mbed::Span<unsigned char, (int)-1>&)
              definition:  mbed::nfc::NFCTarget::NFCTarget__sub_object(const mbed::Span<unsigned char, (int)-1>&)
              definition:  mbed::nfc::NFCTarget::~NFCTarget__deallocating()
              definition:  mbed::nfc::NFCTarget::~NFCTarget()
              definition:  mbed::nfc::NFCTarget::~NFCTarget__sub_object()
              definition:  vtable for mbed::nfc::NFCTarget
              reference :  __cxa_pure_virtual
              reference :  mbed::nfc::NFCNDEFCapable::is_ndef_supported() const
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/nfc/source/Type4RemoteInitiator.o.
              reference :  mbed::nfc::NFCNDEFCapable::ndef_message()
              reference :  mbed::nfc::NFCRemoteEndpoint::nfc_controller()
              reference :  mbed::nfc::NFCRemoteInitiator::disconnected()
              reference :  mbed::nfc::NFCRemoteInitiator::ndef_capable_delegate()
              reference :  mbed::nfc::NFCRemoteInitiator::connected()
              reference :  mbed::nfc::NFCRemoteInitiator::NFCRemoteInitiator__sub_object(mbed::nfc::NFCController*, const mbed::Span<unsigned char, (int)-1>&)
              reference :  mbed::nfc::NFCRemoteInitiator::~NFCRemoteInitiator__sub_object()
              definition:  mbed::nfc::Type4RemoteInitiator::disconnect()
              definition:  mbed::nfc::Type4RemoteInitiator::rf_protocols()
              definition:  mbed::nfc::Type4RemoteInitiator::disconnected_callback()
              definition:  mbed::nfc::Type4RemoteInitiator::add_iso7816_application(nfc_tech_iso7816_app*)
              definition:  mbed::nfc::Type4RemoteInitiator::s_disconnected_callback(nfc_tech_iso7816*, void*)
              definition:  mbed::nfc::Type4RemoteInitiator::connect()
              definition:  mbed::nfc::Type4RemoteInitiator::Type4RemoteInitiator(mbed::nfc::NFCController*, const mbed::Span<unsigned char, (int)-1>&)
              definition:  mbed::nfc::Type4RemoteInitiator::Type4RemoteInitiator__sub_object(mbed::nfc::NFCController*, const mbed::Span<unsigned char, (int)-1>&)
              definition:  mbed::nfc::Type4RemoteInitiator::~Type4RemoteInitiator__deallocating()
              definition:  mbed::nfc::Type4RemoteInitiator::~Type4RemoteInitiator()
              definition:  mbed::nfc::Type4RemoteInitiator::~Type4RemoteInitiator__sub_object()
              reference :  mbed::nfc::NFCController::transceiver() const
              reference :  mbed::nfc::NFCRemoteEndpoint::nfc_controller() const
              definition:  mbed::nfc::Type4RemoteInitiator::is_connected() const
              definition:  mbed::nfc::Type4RemoteInitiator::nfc_tag_type() const
              definition:  mbed::nfc::Type4RemoteInitiator::is_disconnected() const
              definition:  mbed::nfc::Type4RemoteInitiator::is_ndef_supported() const
              definition:  mbed::nfc::Type4RemoteInitiator::is_iso7816_supported() const
              definition:  vtable for mbed::nfc::Type4RemoteInitiator
              reference :  thunk{-8} to mbed::nfc::NFCRemoteInitiator::ndef_capable_delegate()
              definition:  thunk{-8} to mbed::nfc::Type4RemoteInitiator::is_ndef_supported() const
              reference :  operator delete (void*)
              reference :  nfc_tech_iso7816_add_app
              reference :  nfc_tech_iso7816_connect
              reference :  nfc_tech_iso7816_disconnect
              reference :  nfc_tech_iso7816_init
              reference :  nfc_tech_type4_target_init
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/nfc/source/ndef/MessageBuilder.o.
              definition:  mbed::nfc::ndef::MessageBuilder::append_type(const mbed::nfc::ndef::Record&)
              definition:  mbed::nfc::ndef::MessageBuilder::append_header(const mbed::nfc::ndef::Record&, const mbed::nfc::ndef::MessageBuilder::PayloadBuilder*)
              definition:  mbed::nfc::ndef::MessageBuilder::append_record(const mbed::nfc::ndef::RecordType&, const mbed::nfc::ndef::MessageBuilder::PayloadBuilder&, bool)
              definition:  mbed::nfc::ndef::MessageBuilder::append_record(const mbed::nfc::ndef::RecordType&, const mbed::Span<const unsigned char, (int)-1>&, bool)
              definition:  mbed::nfc::ndef::MessageBuilder::append_record(const mbed::nfc::ndef::Record&, const mbed::nfc::ndef::MessageBuilder::PayloadBuilder*)
              definition:  mbed::nfc::ndef::MessageBuilder::append_payload(const mbed::nfc::ndef::Record&, const mbed::nfc::ndef::MessageBuilder::PayloadBuilder*)
              definition:  mbed::nfc::ndef::MessageBuilder::append_id_length(const mbed::nfc::ndef::Record&)
              definition:  mbed::nfc::ndef::MessageBuilder::get_payload_size(const mbed::nfc::ndef::Record&, const mbed::nfc::ndef::MessageBuilder::PayloadBuilder*)
              definition:  mbed::nfc::ndef::MessageBuilder::is_short_payload(const mbed::nfc::ndef::Record&, const mbed::nfc::ndef::MessageBuilder::PayloadBuilder*)
              definition:  mbed::nfc::ndef::MessageBuilder::append_type_length(const mbed::nfc::ndef::Record&)
              definition:  mbed::nfc::ndef::MessageBuilder::compute_record_size(const mbed::nfc::ndef::Record&, const mbed::nfc::ndef::MessageBuilder::PayloadBuilder*)
              definition:  mbed::nfc::ndef::MessageBuilder::append_payload_length(const mbed::nfc::ndef::Record&, const mbed::nfc::ndef::MessageBuilder::PayloadBuilder*)
              definition:  mbed::nfc::ndef::MessageBuilder::reset(const mbed::Span<unsigned char, (int)-1>&)
              definition:  mbed::nfc::ndef::MessageBuilder::reset()
              definition:  mbed::nfc::ndef::MessageBuilder::append_id(const mbed::nfc::ndef::Record&)
              definition:  mbed::nfc::ndef::MessageBuilder::MessageBuilder(const mbed::Span<unsigned char, (int)-1>&)
              definition:  mbed::nfc::ndef::MessageBuilder::MessageBuilder__sub_object(const mbed::Span<unsigned char, (int)-1>&)
              weak defn :  mbed::nfc::ndef::Record::Record__sub_object(mbed::nfc::ndef::RecordType, const mbed::Span<const unsigned char, (int)-1>&, const mbed::Span<const unsigned char, (int)-1>&, bool, bool)
              weak defn :  mbed::Span<const unsigned char, (int)-1>::Span__sub_object()
              weak defn :  mbed::Span<const unsigned char, (int)-1>::Span__sub_object<unsigned char, (int)-1>(const mbed::Span<T1, T2>&)
              definition:  mbed::nfc::ndef::MessageBuilder::get_message() const
              definition:  mbed::nfc::ndef::MessageBuilder::is_message_complete() const
              weak defn :  mbed::Span<const unsigned char, (int)-1>::data() const
              weak defn :  mbed::Span<const unsigned char, (int)-1>::size() const
              weak defn :  mbed::Span<const unsigned char, (int)-1>::empty() const
              weak defn :  mbed::Span<unsigned char, (int)-1>::first(int) const
              weak defn :  mbed::Span<unsigned char, (int)-1>::subspan(int, int) const
              weak defn :  mbed::Span<unsigned char, (int)-1>::operator [](int) const
              reference :  __aeabi_memcpy
              reference :  mbed_assert_internal
              reference :  mbed::Span<unsigned char, (int)-1>::size() const
              reference :  mbed::Span<unsigned char, (int)-1>::data() const
              reference :  mbed::Span<unsigned char, (int)-1>::Span__sub_object(unsigned char*, int)
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/nfc/source/ndef/MessageParser.o.
              weak defn :  mbed::nfc::ndef::RecordType::RecordType__sub_object()
              definition:  mbed::nfc::ndef::MessageParser::parse_record(mbed::nfc::ndef::MessageParser::parsing_state_t&)
              definition:  mbed::nfc::ndef::MessageParser::set_delegate(mbed::nfc::ndef::MessageParser::Delegate*)
              weak defn :  mbed::nfc::ndef::MessageParser::parsing_state_t::parsing_state_t__sub_object(const mbed::Span<const unsigned char, (int)-1>&)
              definition:  mbed::nfc::ndef::MessageParser::extract_id_length(mbed::nfc::ndef::MessageParser::parsing_state_t&, unsigned char)
              definition:  mbed::nfc::ndef::MessageParser::extract_type_length(mbed::nfc::ndef::MessageParser::parsing_state_t&)
              definition:  mbed::nfc::ndef::MessageParser::compute_lengths_size(unsigned char)
              definition:  mbed::nfc::ndef::MessageParser::report_parsing_error(mbed::nfc::ndef::MessageParser::error_t, mbed::nfc::ndef::MessageParser::parsing_state_t&)
              definition:  mbed::nfc::ndef::MessageParser::report_record_parsed(const mbed::nfc::ndef::Record&)
              definition:  mbed::nfc::ndef::MessageParser::extract_payload_length(mbed::nfc::ndef::MessageParser::parsing_state_t&, unsigned char)
              definition:  mbed::nfc::ndef::MessageParser::report_parsing_started()
              definition:  mbed::nfc::ndef::MessageParser::report_parsing_terminated()
              definition:  mbed::nfc::ndef::MessageParser::parse(const mbed::Span<const unsigned char, (int)-1>&)
              definition:  mbed::nfc::ndef::MessageParser::MessageParser()
              definition:  mbed::nfc::ndef::MessageParser::MessageParser__sub_object()
              weak defn :  mbed::nfc::ndef::Record::Record__sub_object()
              weak defn :  mbed::Span<const unsigned char, (int)-1>::last(int) const
              weak defn :  mbed::Span<const unsigned char, (int)-1>::first(int) const
              weak defn :  mbed::Span<const unsigned char, (int)-1>::operator [](int) const
              reference :  mbed_assert_internal
              reference :  mbed::Span<const unsigned char, (int)-1>::size() const
              reference :  mbed::Span<const unsigned char, (int)-1>::Span__sub_object()
              reference :  mbed::Span<const unsigned char, (int)-1>::Span__sub_object(const unsigned char*, int)
              reference :  mbed::Span<const unsigned char, (int)-1>::data() const
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/nfc/source/ndef/RecordParser.o.
              definition:  mbed::nfc::ndef::RecordParserChain::set_next_parser(mbed::nfc::ndef::RecordParser*)
              definition:  mbed::nfc::ndef::RecordParserChain::parse(const mbed::nfc::ndef::Record&)
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/nfc/source/ndef/common/Mime.o.
              weak defn :  mbed::Span<const T1, (int)-1> mbed::make_const_Span<unsigned char>(T1*, unsigned)
              weak defn :  mbed::nfc::ndef::RecordType::RecordType__sub_object(mbed::nfc::ndef::RecordType::tnf_t, const mbed::Span<const unsigned char, (int)-1>&)
              reference :  mbed::nfc::ndef::MessageBuilder::append_record(const mbed::nfc::ndef::RecordType&, const mbed::Span<const unsigned char, (int)-1>&, bool)
              reference :  mbed::nfc::ndef::MessageBuilder::compute_record_size(const mbed::nfc::ndef::Record&, const mbed::nfc::ndef::MessageBuilder::PayloadBuilder*)
              definition:  mbed::nfc::ndef::common::MimeParser::do_parse(const mbed::nfc::ndef::Record&, mbed::nfc::ndef::common::Mime&)
              definition:  mbed::nfc::ndef::common::Mime::set_mime(const mbed::Span<const unsigned char, (int)-1>&, const mbed::Span<const unsigned char, (int)-1>&)
              definition:  mbed::nfc::ndef::common::Mime::move_data(unsigned char*, unsigned, unsigned)
              definition:  mbed::nfc::ndef::common::Mime::Mime(const mbed::Span<const unsigned char, (int)-1>&, const mbed::Span<const unsigned char, (int)-1>&)
              definition:  mbed::nfc::ndef::common::Mime::Mime(const mbed::nfc::ndef::common::Mime&)
              definition:  mbed::nfc::ndef::common::Mime::Mime()
              definition:  mbed::nfc::ndef::common::Mime::Mime__sub_object(const mbed::Span<const unsigned char, (int)-1>&, const mbed::Span<const unsigned char, (int)-1>&)
              definition:  mbed::nfc::ndef::common::Mime::Mime__sub_object(const mbed::nfc::ndef::common::Mime&)
              definition:  mbed::nfc::ndef::common::Mime::Mime__sub_object()
              definition:  mbed::nfc::ndef::common::Mime::~Mime()
              definition:  mbed::nfc::ndef::common::Mime::~Mime__sub_object()
              definition:  mbed::nfc::ndef::common::Mime::operator =(const mbed::nfc::ndef::common::Mime&)
              definition:  mbed::nfc::ndef::common::Mime::get_mime_type() const
              definition:  mbed::nfc::ndef::common::Mime::get_record_size() const
              definition:  mbed::nfc::ndef::common::Mime::append_as_record(mbed::nfc::ndef::MessageBuilder&, bool) const
              definition:  mbed::nfc::ndef::common::Mime::get_mime_content() const
              definition:  mbed::nfc::ndef::common::Mime::mime_size() const
              reference :  operator delete[] (void*)
              reference :  operator new[] (unsigned)
              reference :  __aeabi_memcpy
              reference :  mbed_assert_internal
              reference :  mbed::Span<const unsigned char, (int)-1>::size() const
              reference :  mbed::Span<const unsigned char, (int)-1>::data() const
              reference :  mbed::Span<const unsigned char, (int)-1>::Span__sub_object(const unsigned char*, int)
              reference :  mbed::Span<const unsigned char, (int)-1>::Span__sub_object()
              reference :  mbed::nfc::ndef::Record::Record__sub_object(mbed::nfc::ndef::RecordType, const mbed::Span<const unsigned char, (int)-1>&, const mbed::Span<const unsigned char, (int)-1>&, bool, bool)
              reference :  mbed::Span<const unsigned char, (int)-1>::empty() const
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/nfc/source/ndef/common/SimpleMessageParser.o.
              weak defn :  mbed::nfc::ndef::RecordParser::RecordParser__sub_object()
              reference :  mbed::nfc::ndef::MessageParser::set_delegate(mbed::nfc::ndef::MessageParser::Delegate*)
              reference :  mbed::nfc::ndef::MessageParser::parse(const mbed::Span<const unsigned char, (int)-1>&)
              weak defn :  mbed::nfc::ndef::MessageParser::Delegate::on_parsing_error(mbed::nfc::ndef::MessageParser::error_t)
              weak defn :  mbed::nfc::ndef::MessageParser::Delegate::on_record_parsed(const mbed::nfc::ndef::Record&)
              weak defn :  mbed::nfc::ndef::MessageParser::Delegate::on_parsing_started()
              weak defn :  mbed::nfc::ndef::MessageParser::Delegate::on_parsing_terminated()
              weak defn :  mbed::nfc::ndef::MessageParser::Delegate::Delegate__sub_object()
              reference :  mbed::nfc::ndef::MessageParser::MessageParser()
              reference :  mbed::nfc::ndef::RecordParserChain::set_next_parser(mbed::nfc::ndef::RecordParser*)
              reference :  mbed::nfc::ndef::RecordParserChain::parse(const mbed::nfc::ndef::Record&)
              weak defn :  mbed::nfc::ndef::RecordParserChain::RecordParserChain__sub_object()
              weak defn :  mbed::nfc::ndef::GenericRecordParser<mbed::nfc::ndef::common::MimeParser, mbed::nfc::ndef::common::Mime>::set_delegate(mbed::nfc::ndef::GenericRecordParser<mbed::nfc::ndef::common::MimeParser, mbed::nfc::ndef::common::Mime>::Delegate*)
              weak defn :  mbed::nfc::ndef::GenericRecordParser<mbed::nfc::ndef::common::MimeParser, mbed::nfc::ndef::common::Mime>::parse(const mbed::nfc::ndef::Record&)
              weak defn :  mbed::nfc::ndef::GenericRecordParser<mbed::nfc::ndef::common::MimeParser, mbed::nfc::ndef::common::Mime>::Delegate::Delegate__sub_object()
              weak defn :  mbed::nfc::ndef::GenericRecordParser<mbed::nfc::ndef::common::MimeParser, mbed::nfc::ndef::common::Mime>::GenericRecordParser__sub_object()
              weak defn :  mbed::nfc::ndef::GenericRecordParser<mbed::nfc::ndef::common::TextParser, mbed::nfc::ndef::common::Text>::set_delegate(mbed::nfc::ndef::GenericRecordParser<mbed::nfc::ndef::common::TextParser, mbed::nfc::ndef::common::Text>::Delegate*)
              weak defn :  mbed::nfc::ndef::GenericRecordParser<mbed::nfc::ndef::common::TextParser, mbed::nfc::ndef::common::Text>::parse(const mbed::nfc::ndef::Record&)
              weak defn :  mbed::nfc::ndef::GenericRecordParser<mbed::nfc::ndef::common::TextParser, mbed::nfc::ndef::common::Text>::Delegate::Delegate__sub_object()
              weak defn :  mbed::nfc::ndef::GenericRecordParser<mbed::nfc::ndef::common::TextParser, mbed::nfc::ndef::common::Text>::GenericRecordParser__sub_object()
              weak defn :  mbed::nfc::ndef::GenericRecordParser<mbed::nfc::ndef::common::URIParser, mbed::nfc::ndef::common::URI>::set_delegate(mbed::nfc::ndef::GenericRecordParser<mbed::nfc::ndef::common::URIParser, mbed::nfc::ndef::common::URI>::Delegate*)
              weak defn :  mbed::nfc::ndef::GenericRecordParser<mbed::nfc::ndef::common::URIParser, mbed::nfc::ndef::common::URI>::parse(const mbed::nfc::ndef::Record&)
              weak defn :  mbed::nfc::ndef::GenericRecordParser<mbed::nfc::ndef::common::URIParser, mbed::nfc::ndef::common::URI>::Delegate::Delegate__sub_object()
              weak defn :  mbed::nfc::ndef::GenericRecordParser<mbed::nfc::ndef::common::URIParser, mbed::nfc::ndef::common::URI>::GenericRecordParser__sub_object()
              reference :  mbed::nfc::ndef::common::MimeParser::do_parse(const mbed::nfc::ndef::Record&, mbed::nfc::ndef::common::Mime&)
              weak defn :  mbed::nfc::ndef::common::MimeParser::MimeParser__sub_object()
              weak defn :  mbed::nfc::ndef::common::TextParser::TextParser__sub_object()
              definition:  mbed::nfc::ndef::common::SimpleMessageParser::set_delegate(mbed::nfc::ndef::common::SimpleMessageParser::Delegate*)
              definition:  mbed::nfc::ndef::common::SimpleMessageParser::on_parsing_error(mbed::nfc::ndef::MessageParser::error_t)
              definition:  mbed::nfc::ndef::common::SimpleMessageParser::on_record_parsed(const mbed::nfc::ndef::Record&)
              definition:  mbed::nfc::ndef::common::SimpleMessageParser::on_record_parsed(const mbed::nfc::ndef::common::URI&, const mbed::Span<const unsigned char, (int)-1>&)
              definition:  mbed::nfc::ndef::common::SimpleMessageParser::on_record_parsed(const mbed::nfc::ndef::common::Mime&, const mbed::Span<const unsigned char, (int)-1>&)
              definition:  mbed::nfc::ndef::common::SimpleMessageParser::on_record_parsed(const mbed::nfc::ndef::common::Text&, const mbed::Span<const unsigned char, (int)-1>&)
              definition:  mbed::nfc::ndef::common::SimpleMessageParser::add_record_parser(mbed::nfc::ndef::RecordParser*)
              definition:  mbed::nfc::ndef::common::SimpleMessageParser::on_parsing_started()
              definition:  mbed::nfc::ndef::common::SimpleMessageParser::on_parsing_terminated()
              definition:  mbed::nfc::ndef::common::SimpleMessageParser::parse(const mbed::Span<const unsigned char, (int)-1>&)
              definition:  mbed::nfc::ndef::common::SimpleMessageParser::SimpleMessageParser()
              definition:  mbed::nfc::ndef::common::SimpleMessageParser::SimpleMessageParser__sub_object()
              reference :  mbed::nfc::ndef::common::URI::URI()
              reference :  mbed::nfc::ndef::common::URI::~URI()
              reference :  mbed::nfc::ndef::common::Mime::Mime()
              reference :  mbed::nfc::ndef::common::Mime::~Mime()
              reference :  mbed::nfc::ndef::common::Text::Text()
              reference :  mbed::nfc::ndef::common::Text::~Text()
              reference :  mbed::nfc::ndef::common::URIParser::do_parse(const mbed::nfc::ndef::Record&, mbed::nfc::ndef::common::URI&)
              weak defn :  mbed::nfc::ndef::common::URIParser::URIParser__sub_object()
              weak defn :  vtable for mbed::nfc::ndef::RecordParser
              weak defn :  vtable for mbed::nfc::ndef::MessageParser::Delegate
              weak defn :  vtable for mbed::nfc::ndef::GenericRecordParser<mbed::nfc::ndef::common::MimeParser, mbed::nfc::ndef::common::Mime>::Delegate
              weak defn :  vtable for mbed::nfc::ndef::GenericRecordParser<mbed::nfc::ndef::common::MimeParser, mbed::nfc::ndef::common::Mime>
              weak defn :  vtable for mbed::nfc::ndef::GenericRecordParser<mbed::nfc::ndef::common::TextParser, mbed::nfc::ndef::common::Text>::Delegate
              weak defn :  vtable for mbed::nfc::ndef::GenericRecordParser<mbed::nfc::ndef::common::TextParser, mbed::nfc::ndef::common::Text>
              weak defn :  vtable for mbed::nfc::ndef::GenericRecordParser<mbed::nfc::ndef::common::URIParser, mbed::nfc::ndef::common::URI>::Delegate
              weak defn :  vtable for mbed::nfc::ndef::GenericRecordParser<mbed::nfc::ndef::common::URIParser, mbed::nfc::ndef::common::URI>
              weak defn :  vtable for mbed::nfc::ndef::common::MimeParser
              reference :  vtable for mbed::nfc::ndef::common::TextParser
              definition:  vtable for mbed::nfc::ndef::common::SimpleMessageParser
              weak defn :  vtable for mbed::nfc::ndef::common::URIParser
              definition:  thunk{-12} to mbed::nfc::ndef::common::SimpleMessageParser::on_record_parsed(const mbed::nfc::ndef::common::Mime&, const mbed::Span<const unsigned char, (int)-1>&)
              definition:  thunk{-4} to mbed::nfc::ndef::common::SimpleMessageParser::on_record_parsed(const mbed::nfc::ndef::common::URI&, const mbed::Span<const unsigned char, (int)-1>&)
              definition:  thunk{-8} to mbed::nfc::ndef::common::SimpleMessageParser::on_record_parsed(const mbed::nfc::ndef::common::Text&, const mbed::Span<const unsigned char, (int)-1>&)
              reference :  __cxa_pure_virtual
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/nfc/source/ndef/common/Text.o.
              weak defn :  mbed::Span<const T1, T2> mbed::make_const_Span<unsigned char, (unsigned)1>(const T1(&)[T2])
              reference :  mbed::nfc::ndef::MessageBuilder::append_record(const mbed::nfc::ndef::RecordType&, const mbed::Span<const unsigned char, (int)-1>&, bool)
              reference :  mbed::nfc::ndef::MessageBuilder::compute_record_size(const mbed::nfc::ndef::Record&, const mbed::nfc::ndef::MessageBuilder::PayloadBuilder*)
              definition:  mbed::nfc::ndef::common::TextParser::do_parse(const mbed::nfc::ndef::Record&, mbed::nfc::ndef::common::Text&)
              definition:  mbed::nfc::ndef::common::Text::set_text(mbed::nfc::ndef::common::Text::encoding_t, const mbed::Span<const unsigned char, (int)-1>&, const mbed::Span<const unsigned char, (int)-1>&)
              definition:  mbed::nfc::ndef::common::Text::move_data(unsigned char*, unsigned)
              definition:  mbed::nfc::ndef::common::Text::Text(mbed::nfc::ndef::common::Text::encoding_t, const mbed::Span<const unsigned char, (int)-1>&, const mbed::Span<const unsigned char, (int)-1>&)
              definition:  mbed::nfc::ndef::common::Text::Text(const mbed::nfc::ndef::common::Text&)
              definition:  mbed::nfc::ndef::common::Text::Text()
              definition:  mbed::nfc::ndef::common::Text::Text__sub_object(mbed::nfc::ndef::common::Text::encoding_t, const mbed::Span<const unsigned char, (int)-1>&, const mbed::Span<const unsigned char, (int)-1>&)
              definition:  mbed::nfc::ndef::common::Text::Text__sub_object(const mbed::nfc::ndef::common::Text&)
              definition:  mbed::nfc::ndef::common::Text::Text__sub_object()
              definition:  mbed::nfc::ndef::common::Text::~Text()
              definition:  mbed::nfc::ndef::common::Text::~Text__sub_object()
              definition:  mbed::nfc::ndef::common::Text::operator =(const mbed::nfc::ndef::common::Text&)
              weak defn :  mbed::Span<const unsigned char, (int)1>::Span__sub_object(const unsigned char(&)[1])
              weak defn :  mbed::Span<const unsigned char, (int)-1>::Span__sub_object<(unsigned)1>(const unsigned char(&)[T1])
              weak defn :  bool mbed::operator ==<const unsigned char, const unsigned char, (int)-1, (int)1>(const mbed::Span<T1, T3>&, const mbed::Span<T2, T4>&)
              weak defn :  bool mbed::operator !=<const unsigned char, const unsigned char, (int)-1, (int)1>(const mbed::Span<T1, T3>&, const mbed::Span<T2, T4>&)
              definition:  mbed::nfc::ndef::common::Text::get_encoding() const
              definition:  mbed::nfc::ndef::common::Text::get_record_size() const
              definition:  mbed::nfc::ndef::common::Text::append_as_record(mbed::nfc::ndef::MessageBuilder&, bool) const
              definition:  mbed::nfc::ndef::common::Text::get_language_code() const
              definition:  mbed::nfc::ndef::common::Text::get_text() const
              weak defn :  mbed::Span<const unsigned char, (int)1>::data() const
              weak defn :  mbed::Span<const unsigned char, (int)1>::size() const
              definition:  vtable for mbed::nfc::ndef::common::TextParser
              reference :  operator delete[] (void*)
              reference :  operator new[] (unsigned)
              reference :  __aeabi_memcpy
              reference :  mbed_assert_internal
              reference :  mbed::Span<const unsigned char, (int)-1>::size() const
              reference :  mbed::Span<const unsigned char, (int)-1>::data() const
              reference :  mbed::Span<const T1, (int)-1> mbed::make_const_Span<unsigned char>(T1*, unsigned)
              reference :  mbed::Span<const unsigned char, (int)-1>::Span__sub_object()
              reference :  mbed::nfc::ndef::RecordType::RecordType__sub_object(mbed::nfc::ndef::RecordType::tnf_t, const mbed::Span<const unsigned char, (int)-1>&)
              reference :  mbed::Span<const unsigned char, (int)-1>::Span__sub_object(const unsigned char*, int)
              reference :  mbed::nfc::ndef::Record::Record__sub_object(mbed::nfc::ndef::RecordType, const mbed::Span<const unsigned char, (int)-1>&, const mbed::Span<const unsigned char, (int)-1>&, bool, bool)
              reference :  mbed::Span<const unsigned char, (int)-1>::empty() const
              reference :  mbed::nfc::ndef::GenericRecordParser<mbed::nfc::ndef::common::TextParser, mbed::nfc::ndef::common::Text>::parse(const mbed::nfc::ndef::Record&)
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/nfc/source/ndef/common/URI.o.
              reference :  mbed::nfc::ndef::MessageBuilder::append_record(const mbed::nfc::ndef::RecordType&, const mbed::Span<const unsigned char, (int)-1>&, bool)
              reference :  mbed::nfc::ndef::MessageBuilder::compute_record_size(const mbed::nfc::ndef::Record&, const mbed::nfc::ndef::MessageBuilder::PayloadBuilder*)
              definition:  mbed::nfc::ndef::common::URI::set_uri(mbed::nfc::ndef::common::URI::uri_identifier_code_t, const mbed::Span<const unsigned char, (int)-1>&)
              definition:  mbed::nfc::ndef::common::URI::move_data(unsigned char*, unsigned)
              definition:  mbed::nfc::ndef::common::URI::URI(mbed::nfc::ndef::common::URI::uri_identifier_code_t, const mbed::Span<const unsigned char, (int)-1>&)
              definition:  mbed::nfc::ndef::common::URI::URI(const mbed::nfc::ndef::common::URI&)
              definition:  mbed::nfc::ndef::common::URI::URI()
              definition:  mbed::nfc::ndef::common::URI::URI__sub_object(mbed::nfc::ndef::common::URI::uri_identifier_code_t, const mbed::Span<const unsigned char, (int)-1>&)
              definition:  mbed::nfc::ndef::common::URI::URI__sub_object(const mbed::nfc::ndef::common::URI&)
              definition:  mbed::nfc::ndef::common::URI::URI__sub_object()
              definition:  mbed::nfc::ndef::common::URI::~URI()
              definition:  mbed::nfc::ndef::common::URI::~URI__sub_object()
              definition:  mbed::nfc::ndef::common::URI::operator =(const mbed::nfc::ndef::common::URI&)
              definition:  mbed::nfc::ndef::common::URIParser::do_parse(const mbed::nfc::ndef::Record&, mbed::nfc::ndef::common::URI&)
              definition:  mbed::nfc::ndef::common::URI::get_uri_field() const
              definition:  mbed::nfc::ndef::common::URI::get_record_size() const
              definition:  mbed::nfc::ndef::common::URI::append_as_record(mbed::nfc::ndef::MessageBuilder&, bool) const
              definition:  mbed::nfc::ndef::common::URI::get_id() const
              reference :  operator delete[] (void*)
              reference :  operator new[] (unsigned)
              reference :  __aeabi_memcpy
              reference :  mbed_assert_internal
              reference :  mbed::Span<const unsigned char, (int)-1>::size() const
              reference :  mbed::Span<const unsigned char, (int)-1>::data() const
              reference :  mbed::Span<const unsigned char, (int)-1>::empty() const
              reference :  mbed::Span<const T1, (int)-1> mbed::make_const_Span<unsigned char>(T1*, unsigned)
              reference :  mbed::Span<const unsigned char, (int)-1>::Span__sub_object()
              reference :  mbed::Span<const unsigned char, (int)-1>::Span__sub_object<(unsigned)1>(const unsigned char(&)[T1])
              reference :  mbed::nfc::ndef::RecordType::RecordType__sub_object(mbed::nfc::ndef::RecordType::tnf_t, const mbed::Span<const unsigned char, (int)-1>&)
              reference :  mbed::Span<const unsigned char, (int)-1>::Span__sub_object(const unsigned char*, int)
              reference :  mbed::nfc::ndef::Record::Record__sub_object(mbed::nfc::ndef::RecordType, const mbed::Span<const unsigned char, (int)-1>&, const mbed::Span<const unsigned char, (int)-1>&, bool, bool)
              reference :  mbed::Span<const T1, T2> mbed::make_const_Span<unsigned char, (unsigned)1>(const T1(&)[T2])
              reference :  bool mbed::operator !=<const unsigned char, const unsigned char, (int)-1, (int)1>(const mbed::Span<T1, T3>&, const mbed::Span<T2, T4>&)
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/nfc/source/ndef/common/util.o.
              definition:  mbed::nfc::ndef::common::span_from_cstr(const char*)
              reference :  mbed_assert_internal
              reference :  strlen
              reference :  mbed::Span<const unsigned char, (int)-1>::Span__sub_object(const unsigned char*, int)
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/drivers/device_key/source/DeviceKey.o.
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/drivers/source/AnalogIn.o.
              definition:  mbed::AnalogIn::read_voltage()
              definition:  mbed::AnalogIn::set_reference_voltage(float)
              weak defn :  mbed::AnalogIn::lock()
              definition:  mbed::AnalogIn::read()
              definition:  mbed::AnalogIn::_mutex
              weak defn :  mbed::AnalogIn::unlock()
              definition:  mbed::AnalogIn::read_u16()
              definition:  mbed::AnalogIn::AnalogIn(PinName, float)
              definition:  mbed::AnalogIn::AnalogIn(const PinMap&, float)
              definition:  mbed::AnalogIn::AnalogIn__sub_object(PinName, float)
              definition:  mbed::AnalogIn::AnalogIn__sub_object(const PinMap&, float)
              weak defn :  mbed::AnalogIn::~AnalogIn__deallocating()
              weak defn :  mbed::AnalogIn::~AnalogIn__sub_object()
              reference :  rtos::Mutex::lock()
              reference :  rtos::Mutex::unlock()
              reference :  rtos::Mutex::Mutex()
              definition:  mbed::AnalogIn::get_reference_voltage() const
              weak defn :  vtable for mbed::AnalogIn
              reference :  operator delete (void*)
              reference :  analogin_free
              reference :  analogin_init
              reference :  analogin_init_direct
              reference :  analogin_read
              reference :  analogin_read_u16
              reference :  mbed_assert_internal
              reference :  osMutexAcquire
              reference :  osMutexRelease
              reference :  singleton_mutex_id
              reference :  SingletonPtr<rtos::Mutex>::operator ->() const
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/drivers/source/AnalogOut.o.
              definition:  mbed::AnalogOut::read()
              definition:  mbed::AnalogOut::write(float)
              definition:  mbed::AnalogOut::write_u16(unsigned short)
              reference :  analogout_read
              reference :  analogout_write
              reference :  analogout_write_u16
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/drivers/source/BufferedSerial.o.
              reference :  mbed::FileHandle::size()
              weak defn :  mbed::FileHandle::tell()
              weak defn :  mbed::FileHandle::rewind()
              weak defn :  mbed::FileHandle::truncate(long)
              weak defn :  mbed::FileHandle::FileHandle__sub_object()
              weak defn :  mbed::FileHandle::~FileHandle__sub_object()
              reference :  mbed::SerialBase::_base_getc()
              reference :  mbed::SerialBase::_base_putc(int)
              reference :  mbed::SerialBase::enable_input(bool)
              reference :  mbed::SerialBase::enable_output(bool)
              reference :  mbed::SerialBase::set_flow_control(mbed::SerialBase::Flow, PinName, PinName)
              reference :  mbed::SerialBase::baud(int)
              reference :  mbed::SerialBase::lock()
              reference :  mbed::SerialBase::attach(mbed::Callback<void()>, mbed::SerialBase::IrqType)
              reference :  mbed::SerialBase::format(int, mbed::SerialBase::Parity, int)
              reference :  mbed::SerialBase::unlock()
              reference :  mbed::SerialBase::readable()
              reference :  mbed::SerialBase::writeable()
              reference :  mbed::SerialBase::SerialBase__sub_object(PinName, PinName, int)
              reference :  mbed::SerialBase::SerialBase__sub_object(const serial_pinmap_t&, int)
              reference :  mbed::SerialBase::~SerialBase__sub_object()
              reference :  mbed::InterruptIn::fall(mbed::Callback<void()>)
              reference :  mbed::InterruptIn::read()
              reference :  mbed::InterruptIn::rise(mbed::Callback<void()>)
              reference :  mbed::InterruptIn::InterruptIn(PinName)
              definition:  mbed::BufferedSerial::api_unlock()
              definition:  mbed::BufferedSerial::set_format(int, mbed::SerialBase::Parity, int)
              definition:  mbed::BufferedSerial::enable_input(bool)
              weak defn :  mbed::BufferedSerial::set_blocking(bool)
              definition:  mbed::BufferedSerial::enable_output(bool)
              definition:  mbed::BufferedSerial::enable_rx_irq()
              definition:  mbed::BufferedSerial::enable_tx_irq()
              definition:  mbed::BufferedSerial::disable_rx_irq()
              definition:  mbed::BufferedSerial::disable_tx_irq()
              definition:  mbed::BufferedSerial::set_flow_control(mbed::SerialBase::Flow, PinName, PinName)
              definition:  mbed::BufferedSerial::write_unbuffered(const char*, unsigned)
              definition:  mbed::BufferedSerial::set_data_carrier_detect(PinName, bool)
              definition:  mbed::BufferedSerial::read(void*, unsigned)
              definition:  mbed::BufferedSerial::seek(long, int)
              definition:  mbed::BufferedSerial::sync()
              definition:  mbed::BufferedSerial::wake()
              definition:  mbed::BufferedSerial::close()
              definition:  mbed::BufferedSerial::sigio(mbed::Callback<void()>)
              definition:  mbed::BufferedSerial::write(const void*, unsigned)
              definition:  mbed::BufferedSerial::isatty()
              definition:  mbed::BufferedSerial::rx_irq()
              definition:  mbed::BufferedSerial::tx_irq()
              definition:  mbed::BufferedSerial::dcd_irq()
              definition:  mbed::BufferedSerial::api_lock()
              definition:  mbed::BufferedSerial::set_baud(int)
              definition:  mbed::BufferedSerial::BufferedSerial(PinName, PinName, int)
              definition:  mbed::BufferedSerial::BufferedSerial(const serial_pinmap_t&, int)
              definition:  mbed::BufferedSerial::BufferedSerial__sub_object(PinName, PinName, int)
              definition:  mbed::BufferedSerial::BufferedSerial__sub_object(const serial_pinmap_t&, int)
              definition:  mbed::BufferedSerial::~BufferedSerial__deallocating()
              definition:  mbed::BufferedSerial::~BufferedSerial()
              definition:  mbed::BufferedSerial::~BufferedSerial__sub_object()
              weak defn :  mbed::CircularBuffer<char, (unsigned)256, unsigned>::pop(char&)
              weak defn :  mbed::CircularBuffer<char, (unsigned)256, unsigned>::push(const char&)
              weak defn :  mbed::CircularBuffer<char, (unsigned)256, unsigned>::CircularBuffer__sub_object()
              weak defn :  mbed::CircularBuffer<char, (unsigned)256, unsigned>::~CircularBuffer__sub_object()
              weak defn :  T1 mbed::detail::invoke_r<void, void(mbed::BufferedSerial::*const &)(), <mbed::BufferedSerial*const &>, (int)0>(T2&&, T3&&...)
              weak defn :  T1 mbed::detail::invoke_r<void, mbed::Callback<void()>::Callback<mbed::BufferedSerial*, void(mbed::BufferedSerial::*)(), (int)0>(T1, T2)::[lambda() (instance 1)]&, <>, (int)0>(T2&&, T3&&...)
              weak defn :  void mbed::Callback<void()>::target_call<mbed::Callback<void()>::Callback<mbed::BufferedSerial*, void(mbed::BufferedSerial::*)(), (int)0>(T1, T2)::[lambda() (instance 1)]>(const mbed::detail::CallbackBase*)
              weak defn :  void mbed::Callback<void()>::generate<mbed::Callback<void()>::Callback<mbed::BufferedSerial*, void(mbed::BufferedSerial::*)(), (int)0>(T1, T2)::[lambda() (instance 1)], void>(T1&&)
              weak defn :  mbed::Callback<void()>::Callback__sub_object<mbed::BufferedSerial*, void(mbed::BufferedSerial::*)(), (int)0>(T1, T2)
              weak defn :  mbed::Callback<T3(T4...)> mbed::callback<mbed::BufferedSerial, mbed::BufferedSerial, void, <>>(T2*, T3(T1::*)(T4...))
              weak defn :  std::__1::enable_if<((std::is_function<T2>::value&&(!std::is_base_of<T1, std::__1::decay<T3>::type>::value))&&(!is_reference_wrapper<std::__1::decay<T3>::type>::value)), decltype((((*std::forward<T3>(param#2)).*param#1)(std::forward<T4>(param#3)...)))>::type mstd::impl::INVOKE<mbed::BufferedSerial, void(), mbed::BufferedSerial*const &, <>>(T2T1::*, T3&&, T4&&...)
              weak defn :  std::__1::enable_if<((!std::is_member_pointer<std::__1::decay<T1>::type>::value)||(std::is_member_object_pointer<std::__1::decay<T1>::type>::value&&(sizeof...(param#2)!=(int)1))), decltype((std::forward<T1>(param#1)(std::forward<T2>(param#2)...)))>::type mstd::impl::INVOKE<mbed::Callback<void()>::Callback<mbed::BufferedSerial*, void(mbed::BufferedSerial::*)(), (int)0>(T1, T2)::[lambda() (instance 1)]&, <>>(T1&&, T2&&...)
              weak defn :  mstd::invoke_result<T1, <T2...>>::type mstd::invoke<void(mbed::BufferedSerial::*const &)(), <mbed::BufferedSerial*const &>>(T1&&, T2&&...)
              weak defn :  mstd::invoke_result<T1, <T2...>>::type mstd::invoke<mbed::Callback<void()>::Callback<mbed::BufferedSerial*, void(mbed::BufferedSerial::*)(), (int)0>(T1, T2)::[lambda() (instance 1)]&, <>>(T1&&, T2&&...)
              reference :  rtos::Mutex::lock()
              reference :  rtos::Mutex::unlock()
              reference :  rtos::Mutex::Mutex()
              reference :  rtos::Mutex::~Mutex()
              weak defn :  mbed::BufferedSerial::is_blocking() const
              definition:  mbed::BufferedSerial::hup() const
              definition:  mbed::BufferedSerial::poll(short) const
              weak defn :  mbed::CircularBuffer<char, (unsigned)256, unsigned>::full() const
              weak defn :  mbed::CircularBuffer<char, (unsigned)256, unsigned>::empty() const
              reference :  vtable for mbed::FileHandle
              definition:  vtable for mbed::BufferedSerial
              definition:  thunk{-228} to mbed::BufferedSerial::enable_input(bool)
              weak defn :  thunk{-228} to mbed::BufferedSerial::set_blocking(bool)
              definition:  thunk{-228} to mbed::BufferedSerial::enable_output(bool)
              definition:  thunk{-228} to mbed::BufferedSerial::read(void*, unsigned)
              definition:  thunk{-228} to mbed::BufferedSerial::seek(long, int)
              definition:  thunk{-228} to mbed::BufferedSerial::sync()
              definition:  thunk{-228} to mbed::BufferedSerial::close()
              definition:  thunk{-228} to mbed::BufferedSerial::sigio(mbed::Callback<void()>)
              definition:  thunk{-228} to mbed::BufferedSerial::write(const void*, unsigned)
              definition:  thunk{-228} to mbed::BufferedSerial::isatty()
              definition:  thunk{-228} to mbed::BufferedSerial::~BufferedSerial__deallocating()
              definition:  thunk{-228} to mbed::BufferedSerial::~BufferedSerial()
              weak defn :  thunk{-228} to mbed::BufferedSerial::is_blocking() const
              definition:  thunk{-228} to mbed::BufferedSerial::poll(short) const
              weak defn :  mbed::Callback<void()>::Callback<mbed::BufferedSerial*, void(mbed::BufferedSerial::*)(), (int)0>(T1, T2)::[lambda() (instance 1)]::operator ()() const
              reference :  operator delete (void*)
              reference :  operator new(unsigned)
              reference :  core_util_critical_section_enter
              reference :  core_util_critical_section_exit
              reference :  core_util_in_critical_section
              reference :  mbed_assert_internal
              reference :  thread_sleep_for
              reference :  mbed::Callback<void()>::Callback__sub_object()
              reference :  mbed::Callback<void()>::operator bool() const
              reference :  mbed::Callback<void()>::operator ()() const
              reference :  mbed::Callback<void()>::Callback__sub_object(std::nullptr_t)
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/drivers/source/BusIn.o.
              definition:  mbed::BusIn::lock()
              definition:  mbed::BusIn::mode(PinMode)
              definition:  mbed::BusIn::read()
              definition:  mbed::BusIn::unlock()
              definition:  mbed::BusIn::BusIn(PinName, PinName, PinName, PinName, PinName, PinName, PinName, PinName, PinName, PinName, PinName, PinName, PinName, PinName, PinName, PinName)
              definition:  mbed::BusIn::BusIn(PinName*)
              definition:  mbed::BusIn::BusIn__sub_object(PinName, PinName, PinName, PinName, PinName, PinName, PinName, PinName, PinName, PinName, PinName, PinName, PinName, PinName, PinName, PinName)
              definition:  mbed::BusIn::BusIn__sub_object(PinName*)
              definition:  mbed::BusIn::~BusIn__deallocating()
              definition:  mbed::BusIn::~BusIn()
              definition:  mbed::BusIn::~BusIn__sub_object()
              definition:  mbed::BusIn::operator int()
              definition:  mbed::BusIn::operator [](int)
              reference :  mbed::DigitalIn::mode(PinMode)
              weak defn :  mbed::DigitalIn::read()
              reference :  rtos::Mutex::lock()
              reference :  rtos::Mutex::unlock()
              reference :  rtos::Mutex::Mutex()
              reference :  rtos::Mutex::~Mutex()
              definition:  vtable for mbed::BusIn
              reference :  operator delete (void*)
              reference :  operator new(unsigned)
              reference :  gpio_init_in
              reference :  mbed_assert_internal
              reference :  mbed::DigitalIn::DigitalIn__sub_object(PinName)
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/drivers/source/BusInOut.o.
              reference :  mbed::DigitalInOut::mode(PinMode)
              weak defn :  mbed::DigitalInOut::read()
              reference :  mbed::DigitalInOut::input()
              reference :  mbed::DigitalInOut::output()
              weak defn :  mbed::DigitalInOut::DigitalInOut__sub_object(PinName)
              definition:  mbed::BusInOut::lock()
              definition:  mbed::BusInOut::mode(PinMode)
              definition:  mbed::BusInOut::read()
              definition:  mbed::BusInOut::input()
              definition:  mbed::BusInOut::write(int)
              definition:  mbed::BusInOut::output()
              definition:  mbed::BusInOut::unlock()
              definition:  mbed::BusInOut::BusInOut(PinName, PinName, PinName, PinName, PinName, PinName, PinName, PinName, PinName, PinName, PinName, PinName, PinName, PinName, PinName, PinName)
              definition:  mbed::BusInOut::BusInOut(PinName*)
              definition:  mbed::BusInOut::BusInOut__sub_object(PinName, PinName, PinName, PinName, PinName, PinName, PinName, PinName, PinName, PinName, PinName, PinName, PinName, PinName, PinName, PinName)
              definition:  mbed::BusInOut::BusInOut__sub_object(PinName*)
              definition:  mbed::BusInOut::~BusInOut__deallocating()
              definition:  mbed::BusInOut::~BusInOut()
              definition:  mbed::BusInOut::~BusInOut__sub_object()
              definition:  mbed::BusInOut::operator =(mbed::BusInOut&)
              definition:  mbed::BusInOut::operator =(int)
              definition:  mbed::BusInOut::operator int()
              definition:  mbed::BusInOut::operator [](int)
              reference :  rtos::Mutex::lock()
              reference :  rtos::Mutex::unlock()
              reference :  rtos::Mutex::Mutex()
              reference :  rtos::Mutex::~Mutex()
              definition:  vtable for mbed::BusInOut
              reference :  operator delete (void*)
              reference :  operator new(unsigned)
              reference :  gpio_init_in
              reference :  mbed_assert_internal
              reference :  mbed::DigitalInOut::write(int)
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/drivers/source/BusOut.o.
              definition:  mbed::BusOut::lock()
              definition:  mbed::BusOut::read()
              definition:  mbed::BusOut::write(int)
              definition:  mbed::BusOut::unlock()
              definition:  mbed::BusOut::BusOut(PinName, PinName, PinName, PinName, PinName, PinName, PinName, PinName, PinName, PinName, PinName, PinName, PinName, PinName, PinName, PinName)
              definition:  mbed::BusOut::BusOut(PinName*)
              definition:  mbed::BusOut::BusOut__sub_object(PinName, PinName, PinName, PinName, PinName, PinName, PinName, PinName, PinName, PinName, PinName, PinName, PinName, PinName, PinName, PinName)
              definition:  mbed::BusOut::BusOut__sub_object(PinName*)
              definition:  mbed::BusOut::~BusOut__deallocating()
              definition:  mbed::BusOut::~BusOut()
              definition:  mbed::BusOut::~BusOut__sub_object()
              definition:  mbed::BusOut::operator =(mbed::BusOut&)
              definition:  mbed::BusOut::operator =(int)
              definition:  mbed::BusOut::operator int()
              definition:  mbed::BusOut::operator [](int)
              reference :  rtos::Mutex::lock()
              reference :  rtos::Mutex::unlock()
              reference :  rtos::Mutex::Mutex()
              reference :  rtos::Mutex::~Mutex()
              definition:  vtable for mbed::BusOut
              reference :  operator delete (void*)
              reference :  operator new(unsigned)
              reference :  gpio_init_out
              reference :  mbed_assert_internal
              reference :  mbed::DigitalOut::DigitalOut__sub_object(PinName)
              reference :  mbed::DigitalOut::write(int)
              reference :  mbed::DigitalOut::read()
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/drivers/source/CAN.o.
              definition:  mbed::CAN::_irq_handler(unsigned, CanIrqType)
              definition:  mbed::CAN::lock()
              definition:  mbed::CAN::mode(mbed::CAN::Mode)
              definition:  mbed::CAN::read(mbed::CANMessage&, int)
              definition:  mbed::CAN::reset()
              definition:  mbed::CAN::write(mbed::CANMessage)
              definition:  mbed::CAN::attach(mbed::Callback<void()>, mbed::CAN::IrqType)
              definition:  mbed::CAN::filter(unsigned, unsigned, CANFormat, int)
              definition:  mbed::CAN::unlock()
              definition:  mbed::CAN::monitor(bool)
              definition:  mbed::CAN::rderror()
              definition:  mbed::CAN::tderror()
              definition:  mbed::CAN::frequency(int)
              definition:  mbed::CAN::CAN(PinName, PinName)
              definition:  mbed::CAN::CAN(PinName, PinName, int)
              definition:  mbed::CAN::CAN(const can_pinmap_t&)
              definition:  mbed::CAN::CAN(const can_pinmap_t&, int)
              definition:  mbed::CAN::CAN__sub_object(PinName, PinName)
              definition:  mbed::CAN::CAN__sub_object(PinName, PinName, int)
              definition:  mbed::CAN::CAN__sub_object(const can_pinmap_t&)
              definition:  mbed::CAN::CAN__sub_object(const can_pinmap_t&, int)
              definition:  mbed::CAN::~CAN__deallocating()
              definition:  mbed::CAN::~CAN()
              definition:  mbed::CAN::~CAN__sub_object()
              reference :  rtos::Mutex::lock()
              reference :  rtos::Mutex::unlock()
              reference :  rtos::Mutex::Mutex()
              reference :  rtos::Mutex::~Mutex()
              definition:  vtable for mbed::CAN
              reference :  operator delete (void*)
              reference :  __aeabi_memclr4
              reference :  can_filter
              reference :  can_free
              reference :  can_frequency
              reference :  can_init
              reference :  can_init_direct
              reference :  can_init_freq
              reference :  can_init_freq_direct
              reference :  can_irq_free
              reference :  can_irq_init
              reference :  can_irq_set
              reference :  can_mode
              reference :  can_monitor
              reference :  can_rderror
              reference :  can_read
              reference :  can_reset
              reference :  can_tderror
              reference :  can_write
              reference :  mbed_assert_internal
              reference :  sleep_manager_lock_deep_sleep_internal
              reference :  sleep_manager_unlock_deep_sleep_internal
              reference :  mbed::Callback<void()>::Callback__sub_object()
              reference :  mbed::Callback<void()>::operator bool() const
              reference :  mbed::Callback<void()>::call() const
              reference :  mbed::Callback<void()>::Callback__sub_object(std::nullptr_t)
              reference :  mbed::Callback<void()>::operator =(std::nullptr_t)
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/drivers/source/DigitalIn.o.
              definition:  mbed::DigitalIn::mode(PinMode)
              reference :  core_util_critical_section_enter
              reference :  core_util_critical_section_exit
              reference :  gpio_mode
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/drivers/source/DigitalInOut.o.
              definition:  mbed::DigitalInOut::mode(PinMode)
              definition:  mbed::DigitalInOut::input()
              definition:  mbed::DigitalInOut::output()
              definition:  mbed::DigitalInOut::operator =(mbed::DigitalInOut&)
              reference :  core_util_critical_section_enter
              reference :  core_util_critical_section_exit
              reference :  gpio_dir
              reference :  gpio_mode
              reference :  mbed::DigitalInOut::read()
              reference :  mbed::DigitalInOut::write(int)
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/drivers/source/DigitalOut.o.
              definition:  mbed::DigitalOut::operator =(mbed::DigitalOut&)
              reference :  core_util_critical_section_enter
              reference :  core_util_critical_section_exit
              reference :  mbed::DigitalOut::read()
              reference :  mbed::DigitalOut::write(int)
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/drivers/source/FlashIAP.o.
              weak defn :  mbed::ScopedRomWriteLock::ScopedRomWriteLock__sub_object()
              weak defn :  mbed::ScopedRomWriteLock::~ScopedRomWriteLock__sub_object()
              weak defn :  mbed::ScopedRamExecutionLock::ScopedRamExecutionLock__sub_object()
              weak defn :  mbed::ScopedRamExecutionLock::~ScopedRamExecutionLock__sub_object()
              definition:  mbed::FlashIAP::is_aligned_to_sector(unsigned, unsigned)
              definition:  mbed::FlashIAP::init()
              definition:  mbed::FlashIAP::read(void*, unsigned, unsigned)
              definition:  mbed::FlashIAP::erase(unsigned, unsigned)
              definition:  mbed::FlashIAP::_mutex
              definition:  mbed::FlashIAP::deinit()
              definition:  mbed::FlashIAP::program(const void*, unsigned, unsigned)
              reference :  rtos::Mutex::lock()
              reference :  rtos::Mutex::unlock()
              reference :  rtos::Mutex::Mutex()
              definition:  mbed::FlashIAP::get_page_size() const
              definition:  mbed::FlashIAP::get_flash_size() const
              definition:  mbed::FlashIAP::get_erase_value() const
              definition:  mbed::FlashIAP::get_flash_start() const
              definition:  mbed::FlashIAP::get_sector_size(unsigned) const
              reference :  operator delete[] (void*)
              reference :  operator new[] (unsigned)
              reference :  __aeabi_memcpy
              reference :  __aeabi_memset
              reference :  flash_erase_sector
              reference :  flash_free
              reference :  flash_get_erase_value
              reference :  flash_get_page_size
              reference :  flash_get_sector_size
              reference :  flash_get_size
              reference :  flash_get_start_address
              reference :  flash_init
              reference :  flash_program_page
              reference :  flash_read
              reference :  mbed_assert_internal
              reference :  mbed_mpu_manager_lock_ram_execution
              reference :  mbed_mpu_manager_lock_rom_write
              reference :  mbed_mpu_manager_unlock_ram_execution
              reference :  mbed_mpu_manager_unlock_rom_write
              reference :  osMutexAcquire
              reference :  osMutexRelease
              reference :  singleton_mutex_id
              reference :  SingletonPtr<rtos::Mutex>::operator ->() const
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/drivers/source/I2C.o.
              reference :  CThunkBase::cthunk_free(void(*)())
              reference :  CThunkBase::cthunk_alloc(CThunkBase*)
              reference :  mbed::DigitalInOut::mode(PinMode)
              reference :  mbed::DigitalInOut::input()
              reference :  mbed::DigitalInOut::output()
              weak defn :  mbed::DigitalInOut::operator int()
              definition:  mbed::I2C::abort_transfer()
              definition:  mbed::I2C::lock_deep_sleep()
              definition:  mbed::I2C::unlock_deep_sleep()
              definition:  mbed::I2C::irq_handler_asynch()
              definition:  mbed::I2C::lock()
              definition:  mbed::I2C::read(int)
              definition:  mbed::I2C::read(int, char*, int, bool)
              definition:  mbed::I2C::stop()
              definition:  mbed::I2C::start()
              definition:  mbed::I2C::write(int)
              definition:  mbed::I2C::write(int, const char*, int, bool)
              definition:  mbed::I2C::_mutex
              definition:  mbed::I2C::_owner
              definition:  mbed::I2C::aquire()
              definition:  mbed::I2C::unlock()
              definition:  mbed::I2C::recover(PinName, PinName)
              definition:  mbed::I2C::transfer(int, const char*, int, char*, int, const mbed::Callback<void(int)>&, int, bool)
              definition:  mbed::I2C::frequency(int)
              definition:  mbed::I2C::I2C(PinName, PinName)
              definition:  mbed::I2C::I2C(const i2c_pinmap_t&)
              definition:  mbed::I2C::I2C__sub_object(PinName, PinName)
              definition:  mbed::I2C::I2C__sub_object(const i2c_pinmap_t&)
              weak defn :  mbed::I2C::~I2C__deallocating()
              weak defn :  mbed::Callback<void(int)>::Callback__sub_object()
              reference :  rtos::Mutex::lock()
              reference :  rtos::Mutex::unlock()
              reference :  rtos::Mutex::Mutex()
              weak defn :  CThunk<mbed::I2C>::trampoline(CThunkBase*)
              weak defn :  CThunk<mbed::I2C>::init(mbed::I2C*, void(mbed::I2C::*)(void*), void*)
              weak defn :  CThunk<mbed::I2C>::entry()
              weak defn :  CThunk<mbed::I2C>::callback(void(mbed::I2C::*)())
              weak defn :  CThunk<mbed::I2C>::CThunk__sub_object(mbed::I2C*)
              weak defn :  mbed::Callback<void(int)>::call(int) const
              weak defn :  mbed::Callback<void(int)>::operator bool() const
              definition:  vtable for mbed::I2C
              reference :  operator delete (void*)
              reference :  __aeabi_memclr4
              reference :  gpio_init_inout
              reference :  i2c_abort_asynch
              reference :  i2c_active
              reference :  i2c_byte_read
              reference :  i2c_byte_write
              reference :  i2c_frequency
              reference :  i2c_init
              reference :  i2c_init_direct
              reference :  i2c_irq_handler_asynch
              reference :  i2c_read
              reference :  i2c_start
              reference :  i2c_stop
              reference :  i2c_transfer_asynch
              reference :  i2c_write
              reference :  mbed_assert_internal
              reference :  osMutexAcquire
              reference :  osMutexRelease
              reference :  singleton_mutex_id
              reference :  sleep_manager_lock_deep_sleep_internal
              reference :  sleep_manager_unlock_deep_sleep_internal
              reference :  wait_us
              reference :  mbed::detail::CallbackBase::CallbackBase__sub_object(std::nullptr_t)
              reference :  mbed::DigitalInOut::DigitalInOut__sub_object(PinName, PinDirection, PinMode, int)
              reference :  mbed::DigitalInOut::operator =(int)
              reference :  SingletonPtr<rtos::Mutex>::operator ->() const
              reference :  mbed::DigitalInOut::read()
              reference :  mbed::detail::CallbackBase::control() const
              reference :  mbed::detail::CallbackBase::call_fn() const
              reference :  mbed::I2C::~I2C__sub_object()
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/drivers/source/I2CSlave.o.
              definition:  mbed::I2CSlave::read(char*, int)
              definition:  mbed::I2CSlave::read()
              definition:  mbed::I2CSlave::stop()
              definition:  mbed::I2CSlave::write(const char*, int)
              definition:  mbed::I2CSlave::write(int)
              definition:  mbed::I2CSlave::address(int)
              definition:  mbed::I2CSlave::receive()
              definition:  mbed::I2CSlave::frequency(int)
              definition:  mbed::I2CSlave::I2CSlave(PinName, PinName)
              definition:  mbed::I2CSlave::I2CSlave(const i2c_pinmap_t&)
              definition:  mbed::I2CSlave::I2CSlave__sub_object(PinName, PinName)
              definition:  mbed::I2CSlave::I2CSlave__sub_object(const i2c_pinmap_t&)
              reference :  __aeabi_memclr4
              reference :  i2c_byte_read
              reference :  i2c_byte_write
              reference :  i2c_frequency
              reference :  i2c_init
              reference :  i2c_init_direct
              reference :  i2c_slave_address
              reference :  i2c_slave_mode
              reference :  i2c_slave_read
              reference :  i2c_slave_receive
              reference :  i2c_slave_write
              reference :  i2c_stop
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/drivers/source/InterruptIn.o.
              definition:  mbed::InterruptIn::enable_irq()
              definition:  mbed::InterruptIn::disable_irq()
              definition:  mbed::InterruptIn::_irq_handler(unsigned, gpio_irq_event)
              definition:  mbed::InterruptIn::fall(mbed::Callback<void()>)
              definition:  mbed::InterruptIn::mode(PinMode)
              definition:  mbed::InterruptIn::read()
              definition:  mbed::InterruptIn::rise(mbed::Callback<void()>)
              definition:  mbed::InterruptIn::irq_init(PinName)
              definition:  mbed::InterruptIn::InterruptIn(PinName)
              definition:  mbed::InterruptIn::InterruptIn(PinName, PinMode)
              definition:  mbed::InterruptIn::InterruptIn__sub_object(PinName)
              definition:  mbed::InterruptIn::InterruptIn__sub_object(PinName, PinMode)
              definition:  mbed::InterruptIn::~InterruptIn__deallocating()
              definition:  mbed::InterruptIn::~InterruptIn()
              definition:  mbed::InterruptIn::~InterruptIn__sub_object()
              definition:  mbed::InterruptIn::operator int()
              definition:  vtable for mbed::InterruptIn
              reference :  operator delete (void*)
              reference :  __aeabi_memclr4
              reference :  core_util_critical_section_enter
              reference :  core_util_critical_section_exit
              reference :  gpio_init_in
              reference :  gpio_init_in_ex
              reference :  gpio_irq_disable
              reference :  gpio_irq_enable
              reference :  gpio_irq_free
              reference :  gpio_irq_init
              reference :  gpio_irq_set
              reference :  gpio_mode
              reference :  mbed_assert_internal
              reference :  mbed::Callback<void()>::Callback__sub_object()
              reference :  mbed::Callback<void()>::operator bool() const
              reference :  mbed::Callback<void()>::operator ()() const
              reference :  mbed::Callback<void()>::operator =(std::nullptr_t)
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/drivers/source/MbedCRC.o.
              definition:  mbed::mbed_crc_mutex
              definition:  mbed::impl::MbedCRC<(unsigned)32773, (unsigned char)16, (mbed::CrcMode)1>::_crc_table
              definition:  mbed::impl::MbedCRC<(unsigned)4129, (unsigned char)16, (mbed::CrcMode)1>::_crc_table
              definition:  mbed::impl::MbedCRC<(unsigned)79764919, (unsigned char)32, (mbed::CrcMode)1>::_crc_table
              weak defn :  mbed::impl::MbedCRC<(unsigned)79764919, (unsigned char)32, (mbed::CrcMode)2>::shift_left(unsigned)
              weak defn :  mbed::impl::MbedCRC<(unsigned)79764919, (unsigned char)32, (mbed::CrcMode)2>::reflect_crc(unsigned)
              weak defn :  mbed::impl::MbedCRC<(unsigned)79764919, (unsigned char)32, (mbed::CrcMode)2>::shift_right(unsigned)
              weak defn :  mbed::impl::MbedCRC<(unsigned)79764919, (unsigned char)32, (mbed::CrcMode)2>::get_crc_mask()
              weak defn :  mbed::impl::MbedCRC<(unsigned)79764919, (unsigned char)32, (mbed::CrcMode)2>::compute_partial(const void*, unsigned, unsigned*)
              weak defn :  mbed::impl::MbedCRC<(unsigned)79764919, (unsigned char)32, (mbed::CrcMode)2>::do_1_bit_normal(unsigned)
              weak defn :  mbed::impl::MbedCRC<(unsigned)79764919, (unsigned char)32, (mbed::CrcMode)2>::reflect_constant(unsigned)
              weak defn :  mbed::impl::MbedCRC<(unsigned)79764919, (unsigned char)32, (mbed::CrcMode)2>::do_1_bit_reflected(unsigned)
              weak defn :  mbed::impl::MbedCRC<(unsigned)79764919, (unsigned char)32, (mbed::CrcMode)2>::get_top_polynomial()
              weak defn :  mbed::impl::MbedCRC<(unsigned)79764919, (unsigned char)32, (mbed::CrcMode)2>::adjust_initial_value(unsigned, bool)
              weak defn :  mbed::impl::MbedCRC<(unsigned)79764919, (unsigned char)32, (mbed::CrcMode)2>::compute_partial_stop(unsigned*)
              weak defn :  mbed::impl::MbedCRC<(unsigned)79764919, (unsigned char)32, (mbed::CrcMode)2>::compute_partial_start(unsigned*)
              weak defn :  mbed::impl::MbedCRC<(unsigned)79764919, (unsigned char)32, (mbed::CrcMode)2>::get_reflected_polynomial()
              weak defn :  mbed::impl::MbedCRC<(unsigned)79764919, (unsigned char)32, (mbed::CrcMode)2>::compute(const void*, unsigned, unsigned*)
              weak defn :  mbed::impl::MbedCRC<(unsigned)79764919, (unsigned char)32, (mbed::CrcMode)2>::reflect(unsigned)
              weak defn :  mbed::impl::MbedCRC<(unsigned)79764919, (unsigned char)32, (mbed::CrcMode)2>::MbedCRC__sub_object(unsigned, unsigned, bool, bool)
              definition:  mbed::impl::MbedCRC<(unsigned)7, (unsigned char)8, (mbed::CrcMode)1>::_crc_table
              definition:  mbed::impl::MbedCRC<(unsigned)9, (unsigned char)7, (mbed::CrcMode)1>::_crc_table
              weak defn :  mbed::MbedCRC<(unsigned)79764919, (unsigned char)32, (mbed::CrcMode)2>::compute(const void*, unsigned, unsigned*)
              weak defn :  mbed::MbedCRC<(unsigned)79764919, (unsigned char)32, (mbed::CrcMode)2>::MbedCRC__sub_object(unsigned, unsigned, bool, bool)
              weak defn :  std::__1::enable_if<(T1==(mbed::CrcMode)2), int>::type mbed::impl::MbedCRC<(unsigned)79764919, (unsigned char)32, (mbed::CrcMode)2>::do_compute_partial<(mbed::CrcMode)2>(const unsigned char*, unsigned, unsigned*) const
              definition:  mbed_tiny_compute_crc32
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/drivers/source/PortIn.o.
              definition:  mbed::PortIn::mode(PinMode)
              definition:  mbed::PortIn::PortIn(PortName, int)
              definition:  mbed::PortIn::PortIn__sub_object(PortName, int)
              reference :  core_util_critical_section_enter
              reference :  core_util_critical_section_exit
              reference :  port_init
              reference :  port_mode
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/drivers/source/PortInOut.o.
              definition:  mbed::PortInOut::mode(PinMode)
              definition:  mbed::PortInOut::input()
              definition:  mbed::PortInOut::output()
              definition:  mbed::PortInOut::PortInOut(PortName, int)
              definition:  mbed::PortInOut::PortInOut__sub_object(PortName, int)
              reference :  core_util_critical_section_enter
              reference :  core_util_critical_section_exit
              reference :  port_dir
              reference :  port_init
              reference :  port_mode
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/drivers/source/PortOut.o.
              definition:  mbed::PortOut::PortOut(PortName, int)
              definition:  mbed::PortOut::PortOut__sub_object(PortName, int)
              reference :  core_util_critical_section_enter
              reference :  core_util_critical_section_exit
              reference :  port_init
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/drivers/source/PwmOut.o.
              definition:  mbed::PwmOut::pulsewidth(float)
              definition:  mbed::PwmOut::pulsewidth_ms(int)
              definition:  mbed::PwmOut::pulsewidth_us(int)
              definition:  mbed::PwmOut::read_period_us()
              definition:  mbed::PwmOut::lock_deep_sleep()
              definition:  mbed::PwmOut::unlock_deep_sleep()
              definition:  mbed::PwmOut::read_pulsewitdth_us()
              definition:  mbed::PwmOut::init()
              definition:  mbed::PwmOut::read()
              definition:  mbed::PwmOut::write(float)
              definition:  mbed::PwmOut::deinit()
              definition:  mbed::PwmOut::period(float)
              definition:  mbed::PwmOut::resume()
              definition:  mbed::PwmOut::suspend()
              definition:  mbed::PwmOut::period_ms(int)
              definition:  mbed::PwmOut::period_us(int)
              definition:  mbed::PwmOut::PwmOut(PinName)
              definition:  mbed::PwmOut::PwmOut(const PinMap&)
              definition:  mbed::PwmOut::PwmOut__sub_object(PinName)
              definition:  mbed::PwmOut::PwmOut__sub_object(const PinMap&)
              definition:  mbed::PwmOut::~PwmOut()
              definition:  mbed::PwmOut::~PwmOut__sub_object()
              reference :  core_util_critical_section_enter
              reference :  core_util_critical_section_exit
              reference :  pwmout_free
              reference :  pwmout_init
              reference :  pwmout_init_direct
              reference :  pwmout_period
              reference :  pwmout_period_ms
              reference :  pwmout_period_us
              reference :  pwmout_pulsewidth
              reference :  pwmout_pulsewidth_ms
              reference :  pwmout_pulsewidth_us
              reference :  pwmout_read
              reference :  pwmout_read_period_us
              reference :  pwmout_read_pulsewidth_us
              reference :  pwmout_write
              reference :  sleep_manager_lock_deep_sleep_internal
              reference :  sleep_manager_unlock_deep_sleep_internal
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/drivers/source/QSPI.o.
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/drivers/source/ResetReason.o.
              definition:  mbed::ResetReason::get()
              definition:  mbed::ResetReason::get_raw()
              reference :  __cxa_guard_acquire
              reference :  __cxa_guard_release
              reference :  hal_reset_reason_clear
              reference :  hal_reset_reason_get
              reference :  hal_reset_reason_get_raw
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/drivers/source/SFDP.o.
              definition:  mbed::sfdp_parse_headers(mbed::Callback<int(unsigned long long, void*, unsigned long long)>, mbed::sfdp_hdr_info&)
              definition:  mbed::sfdp_detect_page_size(unsigned char*, unsigned)
              definition:  mbed::sfdp_find_addr_region(unsigned long long, const mbed::sfdp_hdr_info&)
              definition:  mbed::sfdp_parse_sfdp_header(mbed::sfdp_hdr*)
              definition:  mbed::sfdp_detect_addressability(unsigned char*, mbed::sfdp_bptbl_info&)
              definition:  mbed::sfdp_detect_device_density(unsigned char*, mbed::sfdp_bptbl_info&)
              definition:  mbed::sfdp_parse_sector_map_table(mbed::Callback<int(unsigned long long, void*, unsigned long long)>, mbed::sfdp_hdr_info&)
              definition:  mbed::sfdp_parse_single_param_header(mbed::sfdp_prm_hdr*, mbed::sfdp_hdr_info&)
              definition:  mbed::sfdp_iterate_next_largest_erase_type(unsigned char&, int, int, int, const mbed::sfdp_smptbl_info&)
              definition:  mbed::sfdp_detect_erase_types_inst_and_size(unsigned char*, mbed::sfdp_hdr_info&)
              weak defn :  mbed::Callback<int(unsigned long long, void*, unsigned long long)>::call(unsigned long long, void*, unsigned long long) const
              weak defn :  mbed::Callback<int(unsigned long long, void*, unsigned long long)>::operator ()(unsigned long long, void*, unsigned long long) const
              weak defn :  mbed::Callback<int(unsigned long long, void*, unsigned long long)>::operator bool() const
              reference :  operator delete[] (void*)
              reference :  operator new[] (unsigned)
              reference :  __aeabi_memclr
              reference :  mbed_assert_internal
              reference :  mbed::detail::CallbackBase::call_fn() const
              reference :  mbed::detail::CallbackBase::control() const
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/drivers/source/SPI.o.
              weak defn :  T1* core_util_atomic_load<mbed::CircularBuffer<mbed::Transaction<mbed::SPI>, (unsigned)2, unsigned>>(T1*const *)
              weak defn :  void core_util_atomic_store<mbed::CircularBuffer<mbed::Transaction<mbed::SPI>, (unsigned)2, unsigned>>(T1**, T1*)
              reference :  CThunkBase::cthunk_free(void(*)())
              reference :  CThunkBase::cthunk_alloc(CThunkBase*)
              weak defn :  mbed::Transaction<mbed::SPI>::get_object()
              weak defn :  mbed::Transaction<mbed::SPI>::get_transaction()
              weak defn :  mbed::Transaction<mbed::SPI>::Transaction__sub_object(mbed::SPI*, const mbed::transaction_t&)
              weak defn :  mbed::Transaction<mbed::SPI>::Transaction__sub_object()
              weak defn :  mbed::Transaction<mbed::SPI>::~Transaction__sub_object()
              weak defn :  mbed::transaction_t::transaction_t__sub_object()
              weak defn :  mbed::CircularBuffer<mbed::Transaction<mbed::SPI>, (unsigned)2, unsigned>::pop(mbed::Transaction<mbed::SPI>&)
              weak defn :  mbed::CircularBuffer<mbed::Transaction<mbed::SPI>, (unsigned)2, unsigned>::push(const mbed::Transaction<mbed::SPI>&)
              weak defn :  mbed::CircularBuffer<mbed::Transaction<mbed::SPI>, (unsigned)2, unsigned>::reset()
              weak defn :  mbed::CircularBuffer<mbed::Transaction<mbed::SPI>, (unsigned)2, unsigned>::CircularBuffer__sub_object()
              definition:  mbed::SPI::_peripherals
              definition:  mbed::SPI::_do_construct()
              definition:  mbed::SPI::set_dma_usage(DMAUsage)
              definition:  mbed::SPI::abort_transfer()
              definition:  mbed::SPI::queue_transfer(const void*, int, void*, int, unsigned char, const mbed::Callback<void(int)>&, int)
              definition:  mbed::SPI::start_transfer(const void*, int, void*, int, unsigned char, const mbed::Callback<void(int)>&, int)
              definition:  mbed::SPI::_do_init_direct(mbed::SPI*)
              definition:  mbed::SPI::lock_deep_sleep()
              definition:  mbed::SPI::_peripherals_used
              definition:  mbed::SPI::start_transaction(mbed::transaction_t*)
              definition:  mbed::SPI::unlock_deep_sleep()
              definition:  mbed::SPI::irq_handler_asynch()
              definition:  mbed::SPI::abort_all_transfers()
              definition:  mbed::SPI::dequeue_transaction()
              definition:  mbed::SPI::clear_transfer_buffer()
              definition:  mbed::SPI::set_default_write_value(char)
              definition:  mbed::SPI::lock()
              definition:  mbed::SPI::write(const char*, int, char*, int)
              definition:  mbed::SPI::write(int)
              definition:  mbed::SPI::_alloc()
              definition:  mbed::SPI::format(int, int)
              definition:  mbed::SPI::select()
              definition:  mbed::SPI::unlock()
              definition:  mbed::SPI::_lookup(SPIName)
              definition:  mbed::SPI::_acquire()
              definition:  mbed::SPI::_do_init(mbed::SPI*)
              definition:  mbed::SPI::deselect()
              definition:  mbed::SPI::transfer(const void*, int, void*, int, unsigned char, const mbed::Callback<void(int)>&, int)
              definition:  mbed::SPI::_set_ssel(int)
              definition:  mbed::SPI::frequency(int)
              definition:  mbed::SPI::SPI(PinName, PinName, PinName, PinName)
              definition:  mbed::SPI::SPI(PinName, PinName, PinName, PinName, mbed::use_gpio_ssel_t)
              definition:  mbed::SPI::SPI(const spi_pinmap_t&)
              definition:  mbed::SPI::SPI(const spi_pinmap_t&, PinName)
              definition:  mbed::SPI::SPI__sub_object(PinName, PinName, PinName, PinName)
              definition:  mbed::SPI::SPI__sub_object(PinName, PinName, PinName, PinName, mbed::use_gpio_ssel_t)
              definition:  mbed::SPI::SPI__sub_object(const spi_pinmap_t&)
              definition:  mbed::SPI::SPI__sub_object(const spi_pinmap_t&, PinName)
              definition:  mbed::SPI::~SPI__deallocating()
              definition:  mbed::SPI::~SPI()
              definition:  mbed::SPI::~SPI__sub_object()
              reference :  rtos::Mutex::lock()
              reference :  rtos::Mutex::unlock()
              reference :  rtos::Mutex::Mutex()
              weak defn :  CThunk<mbed::SPI>::trampoline(CThunkBase*)
              weak defn :  CThunk<mbed::SPI>::init(mbed::SPI*, void(mbed::SPI::*)(void*), void*)
              weak defn :  CThunk<mbed::SPI>::entry()
              weak defn :  CThunk<mbed::SPI>::callback(void(mbed::SPI::*)())
              weak defn :  CThunk<mbed::SPI>::CThunk__sub_object(mbed::SPI*)
              weak defn :  CThunk<mbed::SPI>::~CThunk__sub_object()
              weak defn :  SingletonPtr<mbed::CircularBuffer<mbed::Transaction<mbed::SPI>, (unsigned)2, unsigned>>::get() const
              weak defn :  SingletonPtr<mbed::CircularBuffer<mbed::Transaction<mbed::SPI>, (unsigned)2, unsigned>>::operator ->() const
              weak defn :  mbed::CircularBuffer<mbed::Transaction<mbed::SPI>, (unsigned)2, unsigned>::full() const
              weak defn :  mbed::CircularBuffer<mbed::Transaction<mbed::SPI>, (unsigned)2, unsigned>::empty() const
              definition:  vtable for mbed::SPI
              reference :  operator delete (void*)
              reference :  __aeabi_memclr4
              reference :  core_util_critical_section_enter
              reference :  core_util_critical_section_exit
              reference :  gpio_init_out
              reference :  gpio_init_out_ex
              reference :  mbed_assert_internal
              reference :  osMutexAcquire
              reference :  osMutexRelease
              reference :  singleton_mutex_id
              reference :  sleep_manager_lock_deep_sleep_internal
              reference :  sleep_manager_unlock_deep_sleep_internal
              reference :  spi_abort_asynch
              reference :  spi_active
              reference :  spi_format
              reference :  spi_frequency
              reference :  spi_get_peripheral_name
              reference :  spi_init
              reference :  spi_init_direct
              reference :  spi_irq_handler_asynch
              reference :  spi_master_block_write
              reference :  spi_master_transfer
              reference :  spi_master_write
              reference :  mbed::Callback<void(int)>::Callback__sub_object()
              reference :  mbed::DigitalOut::DigitalOut__sub_object(PinName)
              reference :  mbed::DigitalOut::DigitalOut__sub_object(PinName, int)
              reference :  mbed::DigitalOut::is_connected()
              reference :  mbed::DigitalOut::operator =(int)
              reference :  SingletonPtr<rtos::Mutex>::operator ->() const
              reference :  mbed::Callback<void(int)>::operator bool() const
              reference :  mbed::Callback<void(int)>::call(int) const
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/drivers/source/SPISlave.o.
              definition:  mbed::SPISlave::read()
              definition:  mbed::SPISlave::reply(int)
              definition:  mbed::SPISlave::format(int, int)
              definition:  mbed::SPISlave::receive()
              definition:  mbed::SPISlave::frequency(int)
              definition:  mbed::SPISlave::SPISlave(PinName, PinName, PinName, PinName)
              definition:  mbed::SPISlave::SPISlave(const spi_pinmap_t&)
              definition:  mbed::SPISlave::SPISlave__sub_object(PinName, PinName, PinName, PinName)
              definition:  mbed::SPISlave::SPISlave__sub_object(const spi_pinmap_t&)
              reference :  __aeabi_memclr4
              reference :  spi_format
              reference :  spi_frequency
              reference :  spi_init
              reference :  spi_init_direct
              reference :  spi_slave_read
              reference :  spi_slave_receive
              reference :  spi_slave_write
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/drivers/source/SerialBase.o.
              reference :  CThunkBase::cthunk_free(void(*)())
              reference :  CThunkBase::cthunk_alloc(CThunkBase*)
              definition:  mbed::SerialBase::_base_getc()
              definition:  mbed::SerialBase::_base_putc(int)
              definition:  mbed::SerialBase::abort_read()
              definition:  mbed::SerialBase::send_break()
              definition:  mbed::SerialBase::start_read(void*, int, char, const mbed::Callback<void(int)>&, int, unsigned char)
              definition:  mbed::SerialBase::abort_write()
              definition:  mbed::SerialBase::clear_break()
              definition:  mbed::SerialBase::start_write(const void*, int, char, const mbed::Callback<void(int)>&, int)
              definition:  mbed::SerialBase::_init_direct()
              definition:  mbed::SerialBase::_irq_handler(unsigned, SerialIrq)
              definition:  mbed::SerialBase::enable_input(bool)
              definition:  mbed::SerialBase::enable_output(bool)
              definition:  mbed::SerialBase::set_dma_usage_rx(DMAUsage)
              definition:  mbed::SerialBase::set_dma_usage_tx(DMAUsage)
              definition:  mbed::SerialBase::set_flow_control(mbed::SerialBase::Flow, PinName, PinName)
              definition:  mbed::SerialBase::set_flow_control(mbed::SerialBase::Flow, const serial_fc_pinmap_t&)
              definition:  mbed::SerialBase::interrupt_handler_asynch()
              definition:  mbed::SerialBase::baud(int)
              definition:  mbed::SerialBase::lock()
              definition:  mbed::SerialBase::read(unsigned char*, int, const mbed::Callback<void(int)>&, int, unsigned char)
              definition:  mbed::SerialBase::read(unsigned short*, int, const mbed::Callback<void(int)>&, int, unsigned char)
              definition:  mbed::SerialBase::_init()
              definition:  mbed::SerialBase::write(const unsigned char*, int, const mbed::Callback<void(int)>&, int)
              definition:  mbed::SerialBase::write(const unsigned short*, int, const mbed::Callback<void(int)>&, int)
              definition:  mbed::SerialBase::attach(mbed::Callback<void()>, mbed::SerialBase::IrqType)
              definition:  mbed::SerialBase::format(int, mbed::SerialBase::Parity, int)
              definition:  mbed::SerialBase::unlock()
              definition:  mbed::SerialBase::_deinit()
              definition:  mbed::SerialBase::readable()
              definition:  mbed::SerialBase::set_break()
              definition:  mbed::SerialBase::writeable()
              definition:  mbed::SerialBase::SerialBase(PinName, PinName, int)
              definition:  mbed::SerialBase::SerialBase(const serial_pinmap_t&, int)
              definition:  mbed::SerialBase::SerialBase__sub_object(PinName, PinName, int)
              definition:  mbed::SerialBase::SerialBase__sub_object(const serial_pinmap_t&, int)
              definition:  mbed::SerialBase::~SerialBase__deallocating()
              definition:  mbed::SerialBase::~SerialBase()
              definition:  mbed::SerialBase::~SerialBase__sub_object()
              weak defn :  mbed::Callback<void(int)>::operator =(std::nullptr_t)
              weak defn :  CThunk<mbed::SerialBase>::trampoline(CThunkBase*)
              weak defn :  CThunk<mbed::SerialBase>::init(mbed::SerialBase*, void(mbed::SerialBase::*)(void*), void*)
              weak defn :  CThunk<mbed::SerialBase>::entry()
              weak defn :  CThunk<mbed::SerialBase>::callback(void(mbed::SerialBase::*)())
              weak defn :  CThunk<mbed::SerialBase>::CThunk__sub_object(mbed::SerialBase*)
              weak defn :  CThunk<mbed::SerialBase>::~CThunk__sub_object()
              weak defn :  mbed::Callback<void(int)>::call(int) const
              definition:  vtable for mbed::SerialBase
              reference :  operator delete (void*)
              reference :  __aeabi_memclr4
              reference :  core_util_critical_section_enter
              reference :  core_util_critical_section_exit
              reference :  mbed_assert_internal
              reference :  serial_baud
              reference :  serial_break_clear
              reference :  serial_break_set
              reference :  serial_format
              reference :  serial_free
              reference :  serial_getc
              reference :  serial_init
              reference :  serial_init_direct
              reference :  serial_irq_handler
              reference :  serial_irq_handler_asynch
              reference :  serial_irq_set
              reference :  serial_putc
              reference :  serial_readable
              reference :  serial_rx_abort_asynch
              reference :  serial_rx_active
              reference :  serial_rx_asynch
              reference :  serial_set_flow_control
              reference :  serial_set_flow_control_direct
              reference :  serial_tx_abort_asynch
              reference :  serial_tx_active
              reference :  serial_tx_asynch
              reference :  serial_writable
              reference :  sleep_manager_lock_deep_sleep_internal
              reference :  sleep_manager_unlock_deep_sleep_internal
              reference :  wait_us
              reference :  mbed::Callback<void(int)>::Callback__sub_object()
              reference :  mbed::Callback<void()>::Callback__sub_object()
              reference :  mbed::Callback<void()>::operator bool() const
              reference :  mbed::Callback<void()>::operator =(std::nullptr_t)
              reference :  mbed::Callback<void()>::operator ()() const
              reference :  mbed::Callback<void()>::call() const
              reference :  mbed::Callback<void()>::Callback__sub_object(std::nullptr_t)
              reference :  mbed::Callback<void(int)>::operator bool() const
              reference :  mbed::detail::CallbackBase::destroy()
              reference :  mbed::detail::CallbackBase::clear()
              reference :  mbed::detail::CallbackBase::call_fn() const
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/drivers/source/SerialWireOutput.o.
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/drivers/source/Ticker.o.
              definition:  mbed::TickerBase::setup_absolute(std::__1::chrono::time_point<mbed::TickerDataClock, std::__1::chrono::duration<long long, std::__1::ratio<(long long)1, (long long)1000000>>>)
              definition:  mbed::TickerBase::attach_absolute(mbed::Callback<void()>, std::__1::chrono::time_point<mbed::TickerDataClock, std::__1::chrono::duration<long long, std::__1::ratio<(long long)1, (long long)1000000>>>)
              definition:  mbed::TickerBase::setup(std::__1::chrono::duration<long long, std::__1::ratio<(long long)1, (long long)1000000>>)
              definition:  mbed::TickerBase::attach(mbed::Callback<void()>, std::__1::chrono::duration<long long, std::__1::ratio<(long long)1, (long long)1000000>>)
              definition:  mbed::TickerBase::detach()
              definition:  mbed::TickerBase::handler()
              definition:  mbed::TickerBase::attach_us(mbed::Callback<void()>, unsigned long long)
              definition:  mbed::TickerBase::TickerBase(const ticker_data_t*)
              definition:  mbed::TickerBase::TickerBase(const ticker_data_t*, bool)
              definition:  mbed::TickerBase::TickerBase__sub_object(const ticker_data_t*)
              definition:  mbed::TickerBase::TickerBase__sub_object(const ticker_data_t*, bool)
              reference :  mbed::TimerEvent::insert_absolute(std::__1::chrono::time_point<mbed::TickerDataClock, std::__1::chrono::duration<long long, std::__1::ratio<(long long)1, (long long)1000000>>>)
              reference :  mbed::TimerEvent::remove()
              reference :  mbed::TimerEvent::TimerEvent__sub_object(const ticker_data_t*)
              definition:  mbed::LowPowerTicker::LowPowerTicker()
              definition:  mbed::LowPowerTicker::LowPowerTicker__sub_object()
              reference :  mbed::CriticalSectionLock::CriticalSectionLock()
              reference :  mbed::CriticalSectionLock::~CriticalSectionLock()
              definition:  mbed::Ticker::Ticker()
              definition:  mbed::Ticker::Ticker__sub_object()
              definition:  vtable for mbed::TickerBase
              weak defn :  vtable for mbed::LowPowerTicker
              weak defn :  vtable for mbed::Ticker
              reference :  get_lp_ticker_data
              reference :  get_us_ticker_data
              reference :  mbed_assert_internal
              reference :  sleep_manager_lock_deep_sleep_internal
              reference :  sleep_manager_unlock_deep_sleep_internal
              reference :  ticker_read_us
              reference :  mbed::Callback<void()>::Callback__sub_object()
              reference :  mbed::Callback<void()>::operator bool() const
              reference :  mbed::Callback<void()>::operator =(std::nullptr_t)
              reference :  mbed::TickerDataClock::now() const
              reference :  mbed::get_time_point(const ticker_event_s&)
              reference :  mbed::Callback<void()>::operator ()() const
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/drivers/source/Timeout.o.
              reference :  mbed::TickerBase::TickerBase__sub_object(const ticker_data_t*, bool)
              definition:  mbed::TimeoutBase::handler()
              weak defn :  _ZN4mbed11TimeoutBaseCI2NS_10TickerBaseEEPK13ticker_data_tb
              definition:  mbed::HighResClock::is_steady
              definition:  mbed::LowPowerClock::is_steady
              definition:  mbed::RealTimeClock::is_steady
              definition:  mbed::LowPowerTimeout::LowPowerTimeout()
              definition:  mbed::LowPowerTimeout::LowPowerTimeout__sub_object()
              definition:  mbed::Timeout::Timeout()
              definition:  mbed::Timeout::Timeout__sub_object()
              definition:  vtable for mbed::TimeoutBase
              weak defn :  vtable for mbed::LowPowerTimeout
              weak defn :  vtable for mbed::Timeout
              reference :  get_lp_ticker_data
              reference :  get_us_ticker_data
              reference :  mbed_assert_internal
              reference :  sleep_manager_unlock_deep_sleep_internal
              reference :  mbed::Callback<void()>::operator bool() const
              reference :  mbed::Callback<void()>::operator =(std::nullptr_t)
              reference :  mbed::Callback<void()>::operator ()() const
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/drivers/source/Timer.o.
              definition:  mbed::LowPowerTimer::LowPowerTimer()
              definition:  mbed::LowPowerTimer::LowPowerTimer__sub_object()
              weak defn :  mbed::TickerDataClock::TickerDataClock__sub_object(const ticker_data_t*)
              reference :  mbed::CriticalSectionLock::CriticalSectionLock()
              reference :  mbed::CriticalSectionLock::~CriticalSectionLock()
              definition:  mbed::Timer::Timer()
              definition:  mbed::Timer::Timer__sub_object()
              definition:  mbed::TimerBase::stop()
              definition:  mbed::TimerBase::reset()
              definition:  mbed::TimerBase::start()
              definition:  mbed::TimerBase::TimerBase(mbed::TimerBase&&)
              definition:  mbed::TimerBase::TimerBase(const ticker_data_t*)
              definition:  mbed::TimerBase::TimerBase(const ticker_data_t*, bool)
              definition:  mbed::TimerBase::TimerBase(const mbed::TimerBase&)
              definition:  mbed::TimerBase::TimerBase__sub_object(mbed::TimerBase&&)
              definition:  mbed::TimerBase::TimerBase__sub_object(const ticker_data_t*)
              definition:  mbed::TimerBase::TimerBase__sub_object(const ticker_data_t*, bool)
              definition:  mbed::TimerBase::TimerBase__sub_object(const mbed::TimerBase&)
              weak defn :  mbed::TimerBase::TimerBase__sub_object(const mbed::TimerBase&, const mbed::CriticalSectionLock&)
              weak defn :  mbed::TimerBase::TimerBase__sub_object(const mbed::TimerBase&, bool)
              definition:  mbed::TimerBase::~TimerBase()
              definition:  mbed::TimerBase::~TimerBase__sub_object()
              definition:  mbed::TimerBase::elapsed_time() const
              definition:  mbed::TimerBase::read_high_resolution_us() const
              definition:  mbed::TimerBase::read() const
              definition:  mbed::TimerBase::read_ms() const
              definition:  mbed::TimerBase::read_us() const
              definition:  mbed::TimerBase::slicetime() const
              definition:  mbed::TimerBase::operator float() const
              reference :  __aeabi_l2f
              reference :  __aeabi_ldivmod
              reference :  get_lp_ticker_data
              reference :  get_us_ticker_data
              reference :  sleep_manager_lock_deep_sleep_internal
              reference :  sleep_manager_unlock_deep_sleep_internal
              reference :  ticker_read_us
              reference :  mbed::TickerDataClock::now() const
              reference :  _ZNSt3__18literals15chrono_literalsli1sEy
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/drivers/source/TimerEvent.o.
              definition:  mbed::TimerEvent::insert_absolute(std::__1::chrono::time_point<mbed::TickerDataClock, std::__1::chrono::duration<long long, std::__1::ratio<(long long)1, (long long)1000000>>>)
              definition:  mbed::TimerEvent::insert_absolute(unsigned long long)
              definition:  mbed::TimerEvent::irq(unsigned)
              definition:  mbed::TimerEvent::insert(std::__1::chrono::duration<long long, std::__1::ratio<(long long)1, (long long)1000000>>)
              definition:  mbed::TimerEvent::insert(unsigned)
              definition:  mbed::TimerEvent::remove()
              definition:  mbed::TimerEvent::TimerEvent__sub_object(const ticker_data_t*)
              definition:  mbed::TimerEvent::~TimerEvent()
              definition:  mbed::TimerEvent::~TimerEvent__sub_object()
              weak defn :  mbed::TickerDataClock::set_handler(void(*)(unsigned))
              weak defn :  mbed::TickerDataClock::insert_event(ticker_event_s*, std::__1::chrono::time_point<mbed::TickerDataClock, std::__1::chrono::duration<long long, std::__1::ratio<(long long)1, (long long)1000000>>>, unsigned)
              weak defn :  mbed::TickerDataClock::remove_event(ticker_event_s*)
              weak defn :  mbed::TickerDataClock::operator const ticker_data_t*() const
              weak defn :  vtable for mbed::TimerEvent
              reference :  __cxa_pure_virtual
              reference :  ticker_insert_event
              reference :  ticker_insert_event_us
              reference :  ticker_read_us
              reference :  ticker_remove_event
              reference :  ticker_set_handler
              reference :  mbed::TickerDataClock::TickerDataClock__sub_object(const ticker_data_t*)
              reference :  mbed::TickerDataClock::now() const
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/drivers/source/UnbufferedSerial.o.
              weak defn :  mbed::FileHandle::enable_input(bool)
              weak defn :  mbed::FileHandle::set_blocking(bool)
              weak defn :  mbed::FileHandle::enable_output(bool)
              weak defn :  mbed::FileHandle::sync()
              weak defn :  mbed::FileHandle::sigio(mbed::Callback<void()>)
              reference :  mbed::SerialBase::_base_getc()
              reference :  mbed::SerialBase::_base_putc(int)
              reference :  mbed::SerialBase::set_flow_control(mbed::SerialBase::Flow, PinName, PinName)
              reference :  mbed::SerialBase::lock()
              reference :  mbed::SerialBase::unlock()
              reference :  mbed::SerialBase::readable()
              reference :  mbed::SerialBase::writeable()
              reference :  mbed::SerialBase::SerialBase__sub_object(PinName, PinName, int)
              reference :  mbed::SerialBase::SerialBase__sub_object(const serial_pinmap_t&, int)
              reference :  mbed::SerialBase::~SerialBase__sub_object()
              definition:  mbed::UnbufferedSerial::set_flow_control(mbed::SerialBase::Flow, PinName, PinName)
              definition:  mbed::UnbufferedSerial::read(void*, unsigned)
              weak defn :  mbed::UnbufferedSerial::seek(long, int)
              weak defn :  mbed::UnbufferedSerial::size()
              weak defn :  mbed::UnbufferedSerial::close()
              definition:  mbed::UnbufferedSerial::write(const void*, unsigned)
              weak defn :  mbed::UnbufferedSerial::isatty()
              definition:  mbed::UnbufferedSerial::UnbufferedSerial(PinName, PinName, int)
              definition:  mbed::UnbufferedSerial::UnbufferedSerial(const serial_pinmap_t&, int)
              definition:  mbed::UnbufferedSerial::UnbufferedSerial__sub_object(PinName, PinName, int)
              definition:  mbed::UnbufferedSerial::UnbufferedSerial__sub_object(const serial_pinmap_t&, int)
              weak defn :  mbed::UnbufferedSerial::~UnbufferedSerial__deallocating()
              weak defn :  mbed::UnbufferedSerial::~UnbufferedSerial__sub_object()
              weak defn :  mbed::FileHandle::is_blocking() const
              definition:  mbed::UnbufferedSerial::poll(short) const
              reference :  vtable for mbed::FileHandle
              definition:  vtable for mbed::UnbufferedSerial
              definition:  thunk{-228} to mbed::UnbufferedSerial::read(void*, unsigned)
              weak defn :  thunk{-228} to mbed::UnbufferedSerial::seek(long, int)
              weak defn :  thunk{-228} to mbed::UnbufferedSerial::size()
              weak defn :  thunk{-228} to mbed::UnbufferedSerial::close()
              definition:  thunk{-228} to mbed::UnbufferedSerial::write(const void*, unsigned)
              weak defn :  thunk{-228} to mbed::UnbufferedSerial::isatty()
              weak defn :  thunk{-228} to mbed::UnbufferedSerial::~UnbufferedSerial__deallocating()
              weak defn :  thunk{-228} to mbed::UnbufferedSerial::~UnbufferedSerial()
              definition:  thunk{-228} to mbed::UnbufferedSerial::poll(short) const
              reference :  operator delete (void*)
              reference :  core_util_in_critical_section
              reference :  mbed::FileHandle::FileHandle__sub_object()
              reference :  mbed::FileHandle::~FileHandle__sub_object()
              reference :  mbed::FileHandle::tell()
              reference :  mbed::FileHandle::rewind()
              reference :  mbed::FileHandle::truncate(long)
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/drivers/source/Watchdog.o.
              definition:  mbed::Watchdog::kick()
              definition:  mbed::Watchdog::stop()
              definition:  mbed::Watchdog::start(unsigned)
              definition:  mbed::Watchdog::start()
              definition:  mbed::Watchdog::Watchdog()
              definition:  mbed::Watchdog::Watchdog__sub_object()
              definition:  mbed::Watchdog::~Watchdog()
              definition:  mbed::Watchdog::~Watchdog__sub_object()
              definition:  mbed::Watchdog::is_running() const
              definition:  mbed::Watchdog::get_timeout() const
              definition:  mbed::Watchdog::get_max_timeout() const
              reference :  core_util_critical_section_enter
              reference :  core_util_critical_section_exit
              reference :  hal_watchdog_get_platform_features
              reference :  hal_watchdog_get_reload_value
              reference :  hal_watchdog_init
              reference :  hal_watchdog_kick
              reference :  hal_watchdog_stop
              reference :  mbed_assert_internal
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/drivers/source/usb/AsyncOp.o.
              reference :  OperationListBase::remove(AsyncOp*)
              reference :  rtos::Mutex::lock()
              reference :  rtos::Mutex::unlock()
              reference :  rtos::Semaphore::try_acquire_for(std::__1::chrono::duration<unsigned, std::__1::ratio<(long long)1, (long long)1000>>)
              reference :  rtos::Semaphore::release()
              reference :  rtos::Semaphore::Semaphore(int)
              reference :  rtos::Semaphore::~Semaphore()
              definition:  AsyncOp::_host_lock(rtos::Mutex*)
              definition:  AsyncOp::_host_unlock(rtos::Mutex*)
              definition:  AsyncOp::wait(rtos::Mutex*, std::__1::chrono::duration<unsigned, std::__1::ratio<(long long)1, (long long)1000>>)
              definition:  AsyncOp::abort()
              definition:  AsyncOp::_abort(bool)
              definition:  AsyncOp::timeout()
              definition:  AsyncOp::complete()
              definition:  AsyncOp::AsyncOp__sub_object(mbed::Callback<void()>&)
              definition:  AsyncOp::AsyncOp__sub_object()
              definition:  AsyncOp::~AsyncOp__deallocating()
              definition:  AsyncOp::~AsyncOp()
              definition:  AsyncOp::~AsyncOp__sub_object()
              weak defn :  LinkEntry::LinkEntry__sub_object()
              definition:  vtable for AsyncOp
              reference :  __cxa_pure_virtual
              reference :  core_util_critical_section_enter
              reference :  core_util_critical_section_exit
              reference :  mbed_assert_internal
              reference :  mbed::Callback<void()>::Callback__sub_object()
              reference :  mbed::Callback<void()>::operator =(std::nullptr_t)
              reference :  mbed::Callback<void()>::operator bool() const
              reference :  mbed::Callback<void()>::operator ()() const
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/drivers/source/usb/ByteBuffer.o.
              definition:  ByteBuffer::pop()
              definition:  ByteBuffer::free()
              definition:  ByteBuffer::full()
              definition:  ByteBuffer::push(unsigned char)
              definition:  ByteBuffer::read(unsigned char*, unsigned)
              definition:  ByteBuffer::size()
              definition:  ByteBuffer::empty()
              definition:  ByteBuffer::write(unsigned char*, unsigned)
              definition:  ByteBuffer::resize(unsigned)
              definition:  ByteBuffer::ByteBuffer(unsigned)
              definition:  ByteBuffer::ByteBuffer__sub_object(unsigned)
              definition:  ByteBuffer::~ByteBuffer()
              definition:  ByteBuffer::~ByteBuffer__sub_object()
              reference :  operator delete[] (void*)
              reference :  operator new[] (unsigned)
              reference :  __aeabi_memclr
              reference :  __aeabi_memcpy
              reference :  mbed_assert_internal
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/drivers/source/usb/EndpointResolver.o.
              definition:  EndpointResolver::next_index(usb_ep_type_t, bool)
              definition:  EndpointResolver::endpoint_in(usb_ep_type_t, unsigned)
              definition:  EndpointResolver::endpoint_out(usb_ep_type_t, unsigned)
              definition:  EndpointResolver::endpoint_ctrl(unsigned)
              definition:  EndpointResolver::index_to_endpoint(int)
              definition:  EndpointResolver::next_free_endpoint(bool, usb_ep_type_t, unsigned)
              definition:  EndpointResolver::reset()
              definition:  EndpointResolver::valid()
              definition:  EndpointResolver::EndpointResolver(const usb_ep_table_t*)
              definition:  EndpointResolver::EndpointResolver__sub_object(const usb_ep_table_t*)
              definition:  EndpointResolver::~EndpointResolver()
              definition:  EndpointResolver::~EndpointResolver__sub_object()
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/drivers/source/usb/LinkedListBase.o.
              definition:  LinkedListBase::head()
              definition:  LinkedListBase::remove(LinkEntry*)
              definition:  LinkedListBase::dequeue()
              definition:  LinkedListBase::enqueue(LinkEntry*)
              definition:  LinkedListBase::LinkedListBase()
              definition:  LinkedListBase::LinkedListBase__sub_object()
              definition:  LinkedListBase::~LinkedListBase()
              definition:  LinkedListBase::~LinkedListBase__sub_object()
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/drivers/source/usb/OperationListBase.o.
              reference :  LinkedListBase::head()
              reference :  LinkedListBase::remove(LinkEntry*)
              reference :  LinkedListBase::dequeue()
              reference :  LinkedListBase::enqueue(LinkEntry*)
              reference :  LinkedListBase::LinkedListBase()
              reference :  LinkedListBase::~LinkedListBase()
              definition:  OperationListBase::remove_all()
              definition:  OperationListBase::dequeue_raw()
              definition:  OperationListBase::add(AsyncOp*)
              definition:  OperationListBase::empty()
              definition:  OperationListBase::remove(AsyncOp*)
              definition:  OperationListBase::process()
              definition:  OperationListBase::OperationListBase()
              definition:  OperationListBase::OperationListBase__sub_object()
              definition:  OperationListBase::~OperationListBase()
              definition:  OperationListBase::~OperationListBase__sub_object()
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/drivers/source/usb/PolledQueue.o.
              weak defn :  LinkedList<events::TaskBase>::head()
              weak defn :  LinkedList<events::TaskBase>::dequeue()
              weak defn :  LinkedList<events::TaskBase>::enqueue(events::TaskBase*)
              weak defn :  LinkedList<events::TaskBase>::LinkedList__sub_object()
              reference :  LinkedListBase::head()
              reference :  LinkedListBase::remove(LinkEntry*)
              reference :  LinkedListBase::dequeue()
              reference :  LinkedListBase::enqueue(LinkEntry*)
              reference :  LinkedListBase::LinkedListBase__sub_object()
              reference :  LinkedListBase::~LinkedListBase__sub_object()
              definition:  events::PolledQueue::post(events::TaskBase*)
              definition:  events::PolledQueue::attach(mbed::Callback<void()>)
              definition:  events::PolledQueue::cancel(events::TaskBase*)
              definition:  events::PolledQueue::dispatch()
              definition:  events::PolledQueue::PolledQueue(mbed::Callback<void()>)
              definition:  events::PolledQueue::PolledQueue__sub_object(mbed::Callback<void()>)
              definition:  events::PolledQueue::~PolledQueue__deallocating()
              definition:  events::PolledQueue::~PolledQueue()
              definition:  events::PolledQueue::~PolledQueue__sub_object()
              reference :  events::TaskBase::_start(void*, unsigned)
              reference :  events::TaskBase::_finish()
              weak defn :  events::TaskQueue::task_start(events::TaskBase*, unsigned char*, unsigned)
              weak defn :  events::TaskQueue::task_finish(events::TaskBase*)
              weak defn :  events::TaskQueue::task_size(events::TaskBase*)
              weak defn :  events::TaskQueue::TaskQueue__sub_object()
              weak defn :  events::TaskQueue::~TaskQueue__deallocating()
              weak defn :  events::TaskQueue::~TaskQueue__sub_object()
              definition:  vtable for events::PolledQueue
              weak defn :  vtable for events::TaskQueue
              reference :  operator delete (void*)
              reference :  __cxa_pure_virtual
              reference :  core_util_critical_section_enter
              reference :  core_util_critical_section_exit
              reference :  mbed_assert_internal
              reference :  mbed::Callback<void()>::operator bool() const
              reference :  mbed::Callback<void()>::operator ()() const
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/drivers/source/usb/TaskBase.o.
              reference :  rtos::Semaphore::acquire()
              reference :  rtos::Semaphore::release()
              reference :  rtos::Semaphore::Semaphore(int)
              reference :  rtos::Semaphore::~Semaphore()
              definition:  events::TaskBase::_wake_check()
              definition:  events::TaskBase::set(events::TaskQueue*)
              definition:  events::TaskBase::post()
              definition:  events::TaskBase::wait()
              definition:  events::TaskBase::ready()
              definition:  events::TaskBase::_start(void*, unsigned)
              definition:  events::TaskBase::cancel()
              definition:  events::TaskBase::finish()
              definition:  events::TaskBase::_finish()
              definition:  events::TaskBase::finished()
              definition:  events::TaskBase::TaskBase__sub_object(events::TaskQueue*)
              definition:  events::TaskBase::~TaskBase__deallocating()
              definition:  events::TaskBase::~TaskBase()
              definition:  events::TaskBase::~TaskBase__sub_object()
              definition:  vtable for events::TaskBase
              reference :  __cxa_pure_virtual
              reference :  core_util_critical_section_enter
              reference :  core_util_critical_section_exit
              reference :  mbed_assert_internal
              reference :  LinkEntry::LinkEntry__sub_object()
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/drivers/source/usb/USBAudio.o.
              reference :  get_usb_phy()
              reference :  ByteBuffer::free()
              reference :  ByteBuffer::full()
              reference :  ByteBuffer::read(unsigned char*, unsigned)
              reference :  ByteBuffer::size()
              reference :  ByteBuffer::write(unsigned char*, unsigned)
              reference :  ByteBuffer::resize(unsigned)
              reference :  ByteBuffer::ByteBuffer(unsigned)
              reference :  ByteBuffer::~ByteBuffer()
              weak defn :  OperationList<USBAudio::AsyncWrite>::add(USBAudio::AsyncWrite*)
              weak defn :  OperationList<USBAudio::AsyncWrite>::OperationList__sub_object()
              weak defn :  OperationList<USBAudio::AsyncRead>::add(USBAudio::AsyncRead*)
              weak defn :  OperationList<USBAudio::AsyncRead>::OperationList__sub_object()
              reference :  EndpointResolver::endpoint_in(usb_ep_type_t, unsigned)
              reference :  EndpointResolver::endpoint_out(usb_ep_type_t, unsigned)
              reference :  EndpointResolver::endpoint_ctrl(unsigned)
              reference :  EndpointResolver::valid()
              reference :  EndpointResolver::EndpointResolver(const usb_ep_table_t*)
              reference :  EndpointResolver::~EndpointResolver()
              reference :  OperationListBase::add(AsyncOp*)
              reference :  OperationListBase::process()
              reference :  OperationListBase::OperationListBase__sub_object()
              reference :  OperationListBase::~OperationListBase__sub_object()
              weak defn :  T1 mbed::detail::invoke_r<void, void(USBDevice::*const &)(), <USBDevice*const &>, (int)0>(T2&&, T3&&...)
              weak defn :  T1 mbed::detail::invoke_r<void, void(*&)(USBAudio::AudioEvent), <USBAudio::AudioEvent>, (int)0>(T2&&, T3&&...)
              weak defn :  T1 mbed::detail::invoke_r<void, mbed::Callback<void()>::Callback<USBDevice*, void(USBDevice::*)(), (int)0>(T1, T2)::[lambda() (instance 1)]&, <>, (int)0>(T2&&, T3&&...)
              weak defn :  void mbed::Callback<void(USBAudio::AudioEvent)>::target_call<void(*)(USBAudio::AudioEvent)>(const mbed::detail::CallbackBase*, USBAudio::AudioEvent)
              weak defn :  void mbed::Callback<void(USBAudio::AudioEvent)>::generate<void(*)(USBAudio::AudioEvent), void>(T1&&)
              weak defn :  mbed::Callback<void(USBAudio::AudioEvent)>::Callback__sub_object()
              weak defn :  mbed::Callback<void(USBAudio::AudioEvent)>::Callback__sub_object<void(*)(USBAudio::AudioEvent), (int)0>(T1)
              weak defn :  void mbed::Callback<void()>::target_call<mbed::Callback<void()>::Callback<USBDevice*, void(USBDevice::*)(), (int)0>(T1, T2)::[lambda() (instance 1)]>(const mbed::detail::CallbackBase*)
              weak defn :  void mbed::Callback<void()>::generate<mbed::Callback<void()>::Callback<USBDevice*, void(USBDevice::*)(), (int)0>(T1, T2)::[lambda() (instance 1)], void>(T1&&)
              weak defn :  mbed::Callback<void()>::Callback__sub_object<USBDevice*, void(USBDevice::*)(), (int)0>(T1, T2)
              weak defn :  mbed::Callback<void()>& mbed::Callback<void()>::operator =<void(&)(), void>(T1&&)
              weak defn :  mbed::Callback<T3(T4...)> mbed::callback<USBDevice, USBDevice, void, <>>(T2*, T3(T1::*)(T4...))
              weak defn :  mbed::Callback<T1(T2...)> mbed::callback<void, <USBAudio::AudioEvent>>(T1(*)(T2...))
              weak defn :  std::__1::enable_if<((std::is_function<T2>::value&&(!std::is_base_of<T1, std::__1::decay<T3>::type>::value))&&(!is_reference_wrapper<std::__1::decay<T3>::type>::value)), decltype((((*std::forward<T3>(param#2)).*param#1)(std::forward<T4>(param#3)...)))>::type mstd::impl::INVOKE<USBDevice, void(), USBDevice*const &, <>>(T2T1::*, T3&&, T4&&...)
              weak defn :  std::__1::enable_if<((!std::is_member_pointer<std::__1::decay<T1>::type>::value)||(std::is_member_object_pointer<std::__1::decay<T1>::type>::value&&(sizeof...(param#2)!=(int)1))), decltype((std::forward<T1>(param#1)(std::forward<T2>(param#2)...)))>::type mstd::impl::INVOKE<void(*&)(USBAudio::AudioEvent), <USBAudio::AudioEvent>>(T1&&, T2&&...)
              weak defn :  std::__1::enable_if<((!std::is_member_pointer<std::__1::decay<T1>::type>::value)||(std::is_member_object_pointer<std::__1::decay<T1>::type>::value&&(sizeof...(param#2)!=(int)1))), decltype((std::forward<T1>(param#1)(std::forward<T2>(param#2)...)))>::type mstd::impl::INVOKE<mbed::Callback<void()>::Callback<USBDevice*, void(USBDevice::*)(), (int)0>(T1, T2)::[lambda() (instance 1)]&, <>>(T1&&, T2&&...)
              weak defn :  mstd::invoke_result<T1, <T2...>>::type mstd::invoke<void(USBDevice::*const &)(), <USBDevice*const &>>(T1&&, T2&&...)
              weak defn :  mstd::invoke_result<T1, <T2...>>::type mstd::invoke<void(*&)(USBAudio::AudioEvent), <USBAudio::AudioEvent>>(T1&&, T2&&...)
              weak defn :  mstd::invoke_result<T1, <T2...>>::type mstd::invoke<mbed::Callback<void()>::Callback<USBDevice*, void(USBDevice::*)(), (int)0>(T1, T2)::[lambda() (instance 1)]&, <>>(T1&&, T2&&...)
              reference :  rtos::EventFlags::set(unsigned)
              reference :  rtos::EventFlags::clear(unsigned)
              reference :  rtos::EventFlags::wait_any(unsigned, unsigned, bool)
              reference :  rtos::EventFlags::EventFlags()
              reference :  rtos::EventFlags::~EventFlags()
              reference :  AsyncOp::wait(rtos::Mutex*, std::__1::chrono::duration<unsigned, std::__1::ratio<(long long)1, (long long)1000>>)
              reference :  AsyncOp::complete()
              reference :  AsyncOp::AsyncOp__sub_object()
              reference :  AsyncOp::~AsyncOp__sub_object()
              weak defn :  USBAudio::AsyncWrite::process()
              weak defn :  USBAudio::AsyncWrite::AsyncWrite__sub_object(USBAudio*, unsigned char*, unsigned)
              weak defn :  USBAudio::AsyncWrite::~AsyncWrite__deallocating()
              definition:  USBAudio::disconnect()
              definition:  USBAudio::get_volume()
              definition:  USBAudio::read_ready()
              definition:  USBAudio::write_ready()
              definition:  USBAudio::_receive_isr()
              definition:  USBAudio::_send_change(USBAudio::ChannelState)
              definition:  USBAudio::read_overflows(bool)
              definition:  USBAudio::_receive_change(USBAudio::ChannelState)
              definition:  USBAudio::_send_isr_start()
              definition:  USBAudio::read_wait_ready()
              definition:  USBAudio::callback_request(const USBDevice::setup_packet_t*)
              definition:  USBAudio::write_underflows(bool)
              definition:  USBAudio::write_wait_ready()
              definition:  USBAudio::configuration_desc(unsigned char)
              definition:  USBAudio::_send_isr_next_sync()
              definition:  USBAudio::string_iproduct_desc()
              definition:  USBAudio::callback_state_change(USBDevice::DeviceState)
              definition:  USBAudio::callback_set_interface(unsigned short, unsigned char)
              definition:  USBAudio::string_iinterface_desc()
              definition:  USBAudio::_build_configuration_desc()
              definition:  USBAudio::callback_request_xfer_done(const USBDevice::setup_packet_t*, bool)
              definition:  USBAudio::callback_set_configuration(unsigned char)
              definition:  USBAudio::read(unsigned char*, unsigned)
              definition:  USBAudio::_init(unsigned, unsigned char, unsigned, unsigned char, unsigned)
              definition:  USBAudio::write(unsigned char*, unsigned)
              definition:  USBAudio::attach(mbed::Callback<void()>&)
              definition:  USBAudio::connect()
              definition:  USBAudio::read_nb(unsigned char*, unsigned, unsigned*)
              definition:  USBAudio::write_nb(unsigned char*, unsigned, unsigned*)
              weak defn :  USBAudio::AsyncRead::process()
              weak defn :  USBAudio::AsyncRead::AsyncRead__sub_object(USBAudio*, unsigned char*, unsigned, unsigned*, bool)
              weak defn :  USBAudio::AsyncRead::~AsyncRead__deallocating()
              definition:  USBAudio::_send_isr()
              definition:  USBAudio::attach_rx(mbed::Callback<void(USBAudio::AudioEvent)>&)
              definition:  USBAudio::attach_tx(mbed::Callback<void(USBAudio::AudioEvent)>&)
              definition:  USBAudio::USBAudio(USBPhy*, unsigned, unsigned char, unsigned, unsigned char, unsigned, unsigned short, unsigned short, unsigned short)
              definition:  USBAudio::USBAudio(bool, unsigned, unsigned char, unsigned, unsigned char, unsigned, unsigned short, unsigned short, unsigned short)
              definition:  USBAudio::USBAudio__sub_object(USBPhy*, unsigned, unsigned char, unsigned, unsigned char, unsigned, unsigned short, unsigned short, unsigned short)
              definition:  USBAudio::USBAudio__sub_object(bool, unsigned, unsigned char, unsigned, unsigned char, unsigned, unsigned short, unsigned short, unsigned short)
              definition:  USBAudio::~USBAudio__deallocating()
              definition:  USBAudio::~USBAudio()
              definition:  USBAudio::~USBAudio__sub_object()
              reference :  USBDevice::disconnect()
              reference :  USBDevice::read_start(unsigned char, unsigned char*, unsigned)
              reference :  USBDevice::device_desc()
              reference :  USBDevice::read_finish(unsigned char)
              reference :  USBDevice::write_start(unsigned char, unsigned char*, unsigned)
              weak defn :  USBDevice::callback_sof(int)
              reference :  USBDevice::endpoint_add(unsigned char, unsigned, usb_ep_type_t, mbed::Callback<void()>)
              weak defn :  bool USBDevice::endpoint_add<USBDevice>(unsigned char, unsigned, usb_ep_type_t, void(T1::*)())
              reference :  USBDevice::write_finish(unsigned char)
              reference :  USBDevice::assert_locked()
              reference :  USBDevice::start_process()
              weak defn :  USBDevice::callback_power(bool)
              weak defn :  USBDevice::callback_reset()
              reference :  USBDevice::endpoint_table()
              reference :  USBDevice::complete_request(USBDevice::RequestResult, unsigned char*, unsigned)
              weak defn :  USBDevice::report_desc_dength()
              reference :  USBDevice::string_langid_desc()
              reference :  USBDevice::endpoint_remove_all()
              reference :  USBDevice::string_iserial_desc()
              reference :  USBDevice::complete_set_interface(bool)
              reference :  USBDevice::string_imanufacturer_desc()
              reference :  USBDevice::complete_request_xfer_done(bool)
              reference :  USBDevice::complete_set_configuration(bool)
              reference :  USBDevice::string_iconfiguration_desc()
              reference :  USBDevice::in(unsigned char)
              reference :  USBDevice::out(unsigned char)
              reference :  USBDevice::sof(int)
              reference :  USBDevice::init()
              reference :  USBDevice::lock()
              reference :  USBDevice::power(bool)
              reference :  USBDevice::reset()
              reference :  USBDevice::deinit()
              reference :  USBDevice::ep0_in()
              reference :  USBDevice::unlock()
              reference :  USBDevice::connect()
              reference :  USBDevice::ep0_out()
              reference :  USBDevice::suspend(bool)
              reference :  USBDevice::ep0_setup()
              reference :  USBDevice::USBDevice__sub_object(USBPhy*, unsigned short, unsigned short, unsigned short)
              reference :  USBDevice::~USBDevice__sub_object()
              weak defn :  mbed::Callback<void(USBAudio::AudioEvent)>::call(USBAudio::AudioEvent) const
              weak defn :  mbed::Callback<void(USBAudio::AudioEvent)>::operator bool() const
              definition:  vtable for USBAudio
              weak defn :  vtable for USBAudio::AsyncWrite
              weak defn :  vtable for USBAudio::AsyncRead
              weak defn :  mbed::Callback<void()>::Callback<USBDevice*, void(USBDevice::*)(), (int)0>(T1, T2)::[lambda() (instance 1)]::operator ()() const
              reference :  operator delete[] (void*)
              reference :  operator delete (void*)
              reference :  operator new[] (unsigned)
              reference :  __aeabi_memclr
              reference :  mbed_assert_internal
              reference :  mbed::Callback<void()>::Callback__sub_object()
              reference :  mbed::detail::CallbackBase::CallbackBase__sub_object(std::nullptr_t)
              reference :  mbed::Callback<T1(T2...)> mbed::callback<void, <>>(T1(*)(T2...))
              reference :  mbed::Callback<void()>::operator bool() const
              reference :  mbed::Callback<void()>::Callback__sub_object<void(*)(), (int)0>(T1)
              reference :  mbed::detail::CallbackBase::control() const
              reference :  mbed::Callback<void()>::call() const
              reference :  mbed::detail::CallbackBase::call_fn() const
              reference :  mbed::detail::CallbackBase::clear()
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/drivers/source/usb/USBCDC.o.
              reference :  get_usb_phy()
              weak defn :  OperationList<USBCDC::AsyncWrite>::add(USBCDC::AsyncWrite*)
              weak defn :  OperationList<USBCDC::AsyncWrite>::OperationList__sub_object()
              weak defn :  OperationList<USBCDC::AsyncRead>::add(USBCDC::AsyncRead*)
              weak defn :  OperationList<USBCDC::AsyncRead>::OperationList__sub_object()
              weak defn :  OperationList<USBCDC::AsyncWait>::add(USBCDC::AsyncWait*)
              weak defn :  OperationList<USBCDC::AsyncWait>::OperationList__sub_object()
              reference :  EndpointResolver::endpoint_in(usb_ep_type_t, unsigned)
              reference :  EndpointResolver::endpoint_out(usb_ep_type_t, unsigned)
              reference :  EndpointResolver::endpoint_ctrl(unsigned)
              reference :  EndpointResolver::valid()
              reference :  EndpointResolver::EndpointResolver(const usb_ep_table_t*)
              reference :  EndpointResolver::~EndpointResolver()
              reference :  OperationListBase::add(AsyncOp*)
              reference :  OperationListBase::empty()
              reference :  OperationListBase::process()
              reference :  OperationListBase::OperationListBase__sub_object()
              reference :  OperationListBase::~OperationListBase__sub_object()
              weak defn :  USBCDC::AsyncWrite::process()
              weak defn :  USBCDC::AsyncWrite::AsyncWrite__sub_object(USBCDC*, unsigned char*, unsigned)
              weak defn :  USBCDC::AsyncWrite::~AsyncWrite__deallocating()
              definition:  USBCDC::receive_nb(unsigned char*, unsigned, unsigned*)
              definition:  USBCDC::wait_ready()
              definition:  USBCDC::device_desc()
              definition:  USBCDC::_receive_isr()
              definition:  USBCDC::callback_reset()
              definition:  USBCDC::_send_isr_start()
              definition:  USBCDC::callback_request(const USBDevice::setup_packet_t*)
              definition:  USBCDC::_receive_isr_start()
              definition:  USBCDC::configuration_desc(unsigned char)
              weak defn :  USBCDC::line_coding_changed(int, int, int, int)
              definition:  USBCDC::string_iproduct_desc()
              definition:  USBCDC::callback_state_change(USBDevice::DeviceState)
              definition:  USBCDC::callback_set_interface(unsigned short, unsigned char)
              definition:  USBCDC::string_iinterface_desc()
              definition:  USBCDC::_change_terminal_connected(bool)
              definition:  USBCDC::callback_request_xfer_done(const USBDevice::setup_packet_t*, bool)
              definition:  USBCDC::callback_set_configuration(unsigned char)
              definition:  USBCDC::send(unsigned char*, unsigned)
              definition:  USBCDC::_init()
              definition:  USBCDC::ready()
              weak defn :  USBCDC::data_rx()
              weak defn :  USBCDC::data_tx()
              definition:  USBCDC::receive(unsigned char*, unsigned, unsigned*)
              definition:  USBCDC::send_nb(unsigned char*, unsigned, unsigned*, bool)
              weak defn :  USBCDC::AsyncRead::process()
              weak defn :  USBCDC::AsyncRead::AsyncRead__sub_object(USBCDC*, unsigned char*, unsigned, unsigned*, bool)
              weak defn :  USBCDC::AsyncRead::~AsyncRead__deallocating()
              weak defn :  USBCDC::AsyncWait::process()
              weak defn :  USBCDC::AsyncWait::AsyncWait__sub_object(USBCDC*)
              weak defn :  USBCDC::AsyncWait::~AsyncWait__deallocating()
              definition:  USBCDC::_send_isr()
              definition:  USBCDC::USBCDC(USBPhy*, unsigned short, unsigned short, unsigned short)
              definition:  USBCDC::USBCDC(bool, unsigned short, unsigned short, unsigned short)
              definition:  USBCDC::USBCDC__sub_object(USBPhy*, unsigned short, unsigned short, unsigned short)
              definition:  USBCDC::USBCDC__sub_object(bool, unsigned short, unsigned short, unsigned short)
              definition:  USBCDC::~USBCDC__deallocating()
              definition:  USBCDC::~USBCDC()
              definition:  USBCDC::~USBCDC__sub_object()
              reference :  AsyncOp::wait(rtos::Mutex*, std::__1::chrono::duration<unsigned, std::__1::ratio<(long long)1, (long long)1000>>)
              reference :  AsyncOp::complete()
              reference :  AsyncOp::AsyncOp__sub_object()
              reference :  AsyncOp::~AsyncOp__sub_object()
              reference :  USBDevice::read_start(unsigned char, unsigned char*, unsigned)
              reference :  USBDevice::read_finish(unsigned char)
              reference :  USBDevice::write_start(unsigned char, unsigned char*, unsigned)
              reference :  USBDevice::endpoint_add(unsigned char, unsigned, usb_ep_type_t, mbed::Callback<void()>)
              weak defn :  bool USBDevice::endpoint_add<USBCDC>(unsigned char, unsigned, usb_ep_type_t, void(T1::*)())
              reference :  USBDevice::write_finish(unsigned char)
              reference :  USBDevice::assert_locked()
              reference :  USBDevice::start_process()
              reference :  USBDevice::endpoint_abort(unsigned char)
              reference :  USBDevice::endpoint_table()
              reference :  USBDevice::complete_request(USBDevice::RequestResult, unsigned char*, unsigned)
              reference :  USBDevice::string_langid_desc()
              reference :  USBDevice::string_iserial_desc()
              reference :  USBDevice::complete_set_interface(bool)
              reference :  USBDevice::endpoint_max_packet_size(unsigned char)
              reference :  USBDevice::string_imanufacturer_desc()
              reference :  USBDevice::complete_request_xfer_done(bool)
              reference :  USBDevice::complete_set_configuration(bool)
              reference :  USBDevice::string_iconfiguration_desc()
              reference :  USBDevice::in(unsigned char)
              reference :  USBDevice::out(unsigned char)
              reference :  USBDevice::sof(int)
              reference :  USBDevice::init()
              reference :  USBDevice::lock()
              reference :  USBDevice::power(bool)
              reference :  USBDevice::reset()
              reference :  USBDevice::deinit()
              reference :  USBDevice::ep0_in()
              reference :  USBDevice::unlock()
              reference :  USBDevice::connect()
              reference :  USBDevice::ep0_out()
              reference :  USBDevice::suspend(bool)
              reference :  USBDevice::ep0_setup()
              reference :  USBDevice::USBDevice__sub_object(USBPhy*, unsigned short, unsigned short, unsigned short)
              reference :  USBDevice::~USBDevice__sub_object()
              definition:  vtable for USBCDC
              weak defn :  vtable for USBCDC::AsyncWrite
              weak defn :  vtable for USBCDC::AsyncRead
              weak defn :  vtable for USBCDC::AsyncWait
              reference :  operator delete (void*)
              reference :  __aeabi_memcpy
              reference :  mbed_assert_internal
              reference :  memcmp
              reference :  mbed::Callback<void()>::Callback__sub_object(std::nullptr_t)
              reference :  mbed::Callback<T3(T4...)> mbed::callback<USBDevice, USBDevice, void, <>>(T2*, T3(T1::*)(T4...))
              reference :  USBDevice::report_desc_dength()
              reference :  USBDevice::callback_power(bool)
              reference :  USBDevice::callback_sof(int)
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/drivers/source/usb/USBCDC_ECM.o.
              reference :  get_usb_phy()
              reference :  ByteBuffer::free()
              reference :  ByteBuffer::read(unsigned char*, unsigned)
              reference :  ByteBuffer::size()
              reference :  ByteBuffer::write(unsigned char*, unsigned)
              reference :  ByteBuffer::resize(unsigned)
              reference :  ByteBuffer::ByteBuffer(unsigned)
              reference :  ByteBuffer::~ByteBuffer()
              definition:  USBCDC_ECM::receive_nb(unsigned char*, unsigned, unsigned*)
              definition:  USBCDC_ECM::wait_ready()
              definition:  USBCDC_ECM::_write_bulk(unsigned char*, unsigned)
              definition:  USBCDC_ECM::device_desc()
              definition:  USBCDC_ECM::_int_callback()
              definition:  USBCDC_ECM::attach_filter(mbed::Callback<void()>)
              definition:  USBCDC_ECM::callback_reset()
              definition:  USBCDC_ECM::_notify_connect()
              definition:  USBCDC_ECM::callback_request(const USBDevice::setup_packet_t*)
              definition:  USBCDC_ECM::_bulk_in_callback()
              definition:  USBCDC_ECM::_bulk_out_callback()
              definition:  USBCDC_ECM::configuration_desc(unsigned char)
              definition:  USBCDC_ECM::read_packet_filter()
              definition:  USBCDC_ECM::string_iserial_desc()
              definition:  USBCDC_ECM::string_iproduct_desc()
              definition:  USBCDC_ECM::callback_state_change(USBDevice::DeviceState)
              definition:  USBCDC_ECM::callback_set_interface(unsigned short, unsigned char)
              definition:  USBCDC_ECM::_notify_network_connection(unsigned char)
              definition:  USBCDC_ECM::callback_request_xfer_done(const USBDevice::setup_packet_t*, bool)
              definition:  USBCDC_ECM::callback_set_configuration(unsigned char)
              definition:  USBCDC_ECM::string_iconfiguration_desc()
              definition:  USBCDC_ECM::_notify_connection_speed_change(unsigned, unsigned)
              definition:  USBCDC_ECM::send(unsigned char*, unsigned)
              definition:  USBCDC_ECM::_init()
              definition:  USBCDC_ECM::ready()
              definition:  USBCDC_ECM::attach_rx(mbed::Callback<void()>)
              definition:  USBCDC_ECM::USBCDC_ECM(USBPhy*, unsigned short, unsigned short, unsigned short)
              definition:  USBCDC_ECM::USBCDC_ECM(bool, unsigned short, unsigned short, unsigned short)
              definition:  USBCDC_ECM::USBCDC_ECM__sub_object(USBPhy*, unsigned short, unsigned short, unsigned short)
              definition:  USBCDC_ECM::USBCDC_ECM__sub_object(bool, unsigned short, unsigned short, unsigned short)
              definition:  USBCDC_ECM::~USBCDC_ECM__deallocating()
              definition:  USBCDC_ECM::~USBCDC_ECM()
              definition:  USBCDC_ECM::~USBCDC_ECM__sub_object()
              reference :  EndpointResolver::endpoint_in(usb_ep_type_t, unsigned)
              reference :  EndpointResolver::endpoint_out(usb_ep_type_t, unsigned)
              reference :  EndpointResolver::endpoint_ctrl(unsigned)
              reference :  EndpointResolver::valid()
              reference :  EndpointResolver::EndpointResolver(const usb_ep_table_t*)
              reference :  EndpointResolver::~EndpointResolver()
              weak defn :  T1 mbed::detail::invoke_r<void, void(USBCDC_ECM::*const &)(), <USBCDC_ECM*const &>, (int)0>(T2&&, T3&&...)
              weak defn :  T1 mbed::detail::invoke_r<void, mbed::Callback<void()>::Callback<USBCDC_ECM*, void(USBCDC_ECM::*)(), (int)0>(T1, T2)::[lambda() (instance 1)]&, <>, (int)0>(T2&&, T3&&...)
              weak defn :  void mbed::Callback<void()>::target_call<mbed::Callback<void()>::Callback<USBCDC_ECM*, void(USBCDC_ECM::*)(), (int)0>(T1, T2)::[lambda() (instance 1)]>(const mbed::detail::CallbackBase*)
              weak defn :  void mbed::Callback<void()>::generate<mbed::Callback<void()>::Callback<USBCDC_ECM*, void(USBCDC_ECM::*)(), (int)0>(T1, T2)::[lambda() (instance 1)], void>(T1&&)
              weak defn :  mbed::Callback<void()>::Callback__sub_object<USBCDC_ECM*, void(USBCDC_ECM::*)(), (int)0>(T1, T2)
              weak defn :  mbed::Callback<T3(T4...)> mbed::callback<USBCDC_ECM, USBCDC_ECM, void, <>>(T2*, T3(T1::*)(T4...))
              weak defn :  std::__1::enable_if<((std::is_function<T2>::value&&(!std::is_base_of<T1, std::__1::decay<T3>::type>::value))&&(!is_reference_wrapper<std::__1::decay<T3>::type>::value)), decltype((((*std::forward<T3>(param#2)).*param#1)(std::forward<T4>(param#3)...)))>::type mstd::impl::INVOKE<USBCDC_ECM, void(), USBCDC_ECM*const &, <>>(T2T1::*, T3&&, T4&&...)
              weak defn :  std::__1::enable_if<((!std::is_member_pointer<std::__1::decay<T1>::type>::value)||(std::is_member_object_pointer<std::__1::decay<T1>::type>::value&&(sizeof...(param#2)!=(int)1))), decltype((std::forward<T1>(param#1)(std::forward<T2>(param#2)...)))>::type mstd::impl::INVOKE<mbed::Callback<void()>::Callback<USBCDC_ECM*, void(USBCDC_ECM::*)(), (int)0>(T1, T2)::[lambda() (instance 1)]&, <>>(T1&&, T2&&...)
              weak defn :  mstd::invoke_result<T1, <T2...>>::type mstd::invoke<void(USBCDC_ECM::*const &)(), <USBCDC_ECM*const &>>(T1&&, T2&&...)
              weak defn :  mstd::invoke_result<T1, <T2...>>::type mstd::invoke<mbed::Callback<void()>::Callback<USBCDC_ECM*, void(USBCDC_ECM::*)(), (int)0>(T1, T2)::[lambda() (instance 1)]&, <>>(T1&&, T2&&...)
              reference :  rtos::EventFlags::set(unsigned)
              reference :  rtos::EventFlags::clear(unsigned)
              reference :  rtos::EventFlags::wait_any(unsigned, unsigned, bool)
              reference :  rtos::EventFlags::EventFlags()
              reference :  rtos::EventFlags::~EventFlags()
              reference :  rtos::Mutex::lock()
              reference :  rtos::Mutex::unlock()
              reference :  rtos::Mutex::Mutex()
              reference :  rtos::Mutex::~Mutex()
              reference :  rtos::Thread::constructor(osPriority_t, unsigned, unsigned char*, const char*)
              reference :  rtos::Thread::start(mbed::Callback<void()>)
              reference :  rtos::Thread::~Thread()
              reference :  rtos::Semaphore::Semaphore(int)
              weak defn :  int events::EventQueue::call<USBCDC_ECM, void, <>>(T1*, T2(T1::*)(T3...), T3...)
              reference :  events::EventQueue::dispatch(int)
              reference :  events::EventQueue::EventQueue(unsigned, unsigned char*)
              reference :  events::EventQueue::~EventQueue()
              reference :  USBDevice::read_start(unsigned char, unsigned char*, unsigned)
              reference :  USBDevice::read_finish(unsigned char)
              reference :  USBDevice::write_start(unsigned char, unsigned char*, unsigned)
              reference :  USBDevice::endpoint_add(unsigned char, unsigned, usb_ep_type_t, mbed::Callback<void()>)
              weak defn :  bool USBDevice::endpoint_add<USBCDC_ECM>(unsigned char, unsigned, usb_ep_type_t, void(T1::*)())
              reference :  USBDevice::write_finish(unsigned char)
              reference :  USBDevice::assert_locked()
              reference :  USBDevice::start_process()
              reference :  USBDevice::endpoint_table()
              reference :  USBDevice::complete_request(USBDevice::RequestResult, unsigned char*, unsigned)
              reference :  USBDevice::string_langid_desc()
              reference :  USBDevice::complete_set_interface(bool)
              reference :  USBDevice::string_iinterface_desc()
              reference :  USBDevice::endpoint_max_packet_size(unsigned char)
              reference :  USBDevice::string_imanufacturer_desc()
              reference :  USBDevice::complete_request_xfer_done(bool)
              reference :  USBDevice::complete_set_configuration(bool)
              reference :  USBDevice::in(unsigned char)
              reference :  USBDevice::out(unsigned char)
              reference :  USBDevice::sof(int)
              reference :  USBDevice::init()
              reference :  USBDevice::lock()
              reference :  USBDevice::power(bool)
              reference :  USBDevice::reset()
              reference :  USBDevice::deinit()
              reference :  USBDevice::ep0_in()
              reference :  USBDevice::unlock()
              reference :  USBDevice::connect()
              reference :  USBDevice::ep0_out()
              reference :  USBDevice::suspend(bool)
              reference :  USBDevice::ep0_setup()
              reference :  USBDevice::USBDevice__sub_object(USBPhy*, unsigned short, unsigned short, unsigned short)
              reference :  USBDevice::~USBDevice__sub_object()
              reference :  rtos::EventFlags::get() const
              definition:  vtable for USBCDC_ECM
              reference :  vtable for rtos::Thread
              weak defn :  mbed::Callback<void()>::Callback<USBCDC_ECM*, void(USBCDC_ECM::*)(), (int)0>(T1, T2)::[lambda() (instance 1)]::operator ()() const
              reference :  operator delete (void*)
              reference :  __aeabi_memcpy
              reference :  equeue_alloc
              reference :  equeue_event_dtor
              reference :  equeue_post
              reference :  mbed_assert_internal
              reference :  mbed_error_printf
              reference :  mbed_mac_address
              reference :  rtos::Thread::Thread__sub_object(osPriority_t, unsigned, unsigned char*, const char*)
              reference :  mbed::Callback<void()>::Callback__sub_object()
              reference :  events::EventQueue::dispatch_forever()
              reference :  mbed::Callback<T3(T4...)> mbed::callback<events::EventQueue, events::EventQueue, void, <>>(T2*, T3(T1::*)(T4...))
              reference :  mbed::Callback<void()>::operator bool() const
              reference :  mbed::Callback<void()>::operator ()() const
              reference :  mbed::Callback<T3(T4...)> mbed::callback<USBDevice, USBDevice, void, <>>(T2*, T3(T1::*)(T4...))
              reference :  int events::EventQueue::call<mbed::Callback<void()>>(T1)
              reference :  USBDevice::report_desc_dength()
              reference :  USBDevice::callback_power(bool)
              reference :  USBDevice::callback_sof(int)
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/drivers/source/usb/USBDevice.o.
              weak defn :  USBPhyEvents::USBPhyEvents__sub_object()
              weak defn :  USBPhyEvents::~USBPhyEvents__deallocating()
              weak defn :  USBPhyEvents::~USBPhyEvents__sub_object()
              definition:  USBDevice::_run_later(void(USBDevice::*)())
              definition:  USBDevice::configured()
              definition:  USBDevice::disconnect()
              definition:  USBDevice::read_start(unsigned char, unsigned char*, unsigned)
              definition:  USBDevice::sof_enable()
              definition:  USBDevice::_control_in()
              definition:  USBDevice::device_desc()
              definition:  USBDevice::read_finish(unsigned char)
              definition:  USBDevice::sof_disable()
              definition:  USBDevice::write_start(unsigned char, unsigned char*, unsigned)
              definition:  USBDevice::_control_out()
              definition:  USBDevice::endpoint_add(unsigned char, unsigned, usb_ep_type_t, mbed::Callback<void()>)
              definition:  USBDevice::write_finish(unsigned char)
              definition:  USBDevice::_change_state(USBDevice::DeviceState)
              definition:  USBDevice::assert_locked()
              definition:  USBDevice::start_process()
              definition:  USBDevice::_control_abort()
              definition:  USBDevice::_control_setup()
              definition:  USBDevice::_request_setup()
              definition:  USBDevice::endpoint_abort(unsigned char)
              definition:  USBDevice::endpoint_stall(unsigned char)
              definition:  USBDevice::endpoint_table()
              weak defn :  USBDevice::endpoint_info_t::endpoint_info_t__sub_object()
              definition:  USBDevice::endpoint_remove(unsigned char)
              definition:  USBDevice::find_descriptor(unsigned char, unsigned char)
              definition:  USBDevice::complete_request(USBDevice::RequestResult, unsigned char*, unsigned)
              definition:  USBDevice::endpoint_unstall(unsigned char)
              definition:  USBDevice::_complete_request()
              definition:  USBDevice::string_langid_desc()
              definition:  USBDevice::_request_get_status()
              definition:  USBDevice::endpoint_remove_all()
              definition:  USBDevice::string_iserial_desc()
              definition:  USBDevice::_control_abort_start()
              definition:  USBDevice::_decode_setup_packet(unsigned char*, USBDevice::setup_packet_t*)
              definition:  USBDevice::_request_set_address()
              definition:  USBDevice::_request_set_feature()
              definition:  USBDevice::string_iproduct_desc()
              definition:  USBDevice::_request_clear_feature()
              definition:  USBDevice::_request_get_interface()
              definition:  USBDevice::_request_set_interface()
              definition:  USBDevice::complete_set_interface(bool)
              definition:  USBDevice::string_iinterface_desc()
              definition:  USBDevice::_complete_set_interface()
              definition:  USBDevice::_control_setup_continue()
              definition:  USBDevice::_request_get_descriptor()
              definition:  USBDevice::endpoint_max_packet_size(unsigned char)
              definition:  USBDevice::string_imanufacturer_desc()
              definition:  USBDevice::_request_get_configuration()
              definition:  USBDevice::_request_set_configuration()
              definition:  USBDevice::complete_request_xfer_done(bool)
              definition:  USBDevice::complete_set_configuration(bool)
              definition:  USBDevice::string_iconfiguration_desc()
              definition:  USBDevice::_complete_request_xfer_done()
              definition:  USBDevice::_complete_set_configuration()
              definition:  USBDevice::in(unsigned char)
              definition:  USBDevice::out(unsigned char)
              definition:  USBDevice::sof(int)
              definition:  USBDevice::init()
              definition:  USBDevice::lock()
              definition:  USBDevice::power(bool)
              definition:  USBDevice::reset()
              definition:  USBDevice::deinit()
              definition:  USBDevice::ep0_in()
              definition:  USBDevice::unlock()
              definition:  USBDevice::connect()
              definition:  USBDevice::ep0_out()
              definition:  USBDevice::suspend(bool)
              definition:  USBDevice::ep0_setup()
              definition:  USBDevice::USBDevice__sub_object(USBPhy*, unsigned short, unsigned short, unsigned short)
              definition:  USBDevice::~USBDevice__deallocating()
              definition:  USBDevice::~USBDevice()
              definition:  USBDevice::~USBDevice__sub_object()
              weak defn :  vtable for USBPhyEvents
              definition:  vtable for USBDevice
              reference :  __aeabi_memclr4
              reference :  __cxa_pure_virtual
              reference :  core_util_critical_section_enter
              reference :  core_util_critical_section_exit
              reference :  mbed_assert_internal
              reference :  mbed_error
              reference :  mbed::Callback<void()>::operator bool() const
              reference :  mbed::Callback<void()>::operator ()() const
              reference :  mbed::Callback<void()>::operator =(std::nullptr_t)
              reference :  mbed::Callback<void()>::Callback__sub_object()
              reference :  USBDevice::report_desc_dength()
              reference :  USBDevice::callback_power(bool)
              reference :  USBDevice::callback_sof(int)
              reference :  USBDevice::callback_reset()
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/drivers/source/usb/USBHID.o.
              reference :  get_usb_phy()
              weak defn :  OperationList<USBHID::AsyncRead>::add(USBHID::AsyncRead*)
              weak defn :  OperationList<USBHID::AsyncRead>::OperationList__sub_object()
              weak defn :  OperationList<USBHID::AsyncSend>::add(USBHID::AsyncSend*)
              weak defn :  OperationList<USBHID::AsyncSend>::OperationList__sub_object()
              weak defn :  OperationList<USBHID::AsyncWait>::add(USBHID::AsyncWait*)
              weak defn :  OperationList<USBHID::AsyncWait>::OperationList__sub_object()
              reference :  EndpointResolver::endpoint_in(usb_ep_type_t, unsigned)
              reference :  EndpointResolver::endpoint_out(usb_ep_type_t, unsigned)
              reference :  EndpointResolver::endpoint_ctrl(unsigned)
              reference :  EndpointResolver::valid()
              reference :  EndpointResolver::EndpointResolver(const usb_ep_table_t*)
              reference :  EndpointResolver::~EndpointResolver()
              reference :  OperationListBase::add(AsyncOp*)
              reference :  OperationListBase::process()
              reference :  OperationListBase::OperationListBase__sub_object()
              reference :  OperationListBase::~OperationListBase__sub_object()
              definition:  USBHID::wait_ready()
              definition:  USBHID::report_desc()
              definition:  USBHID::callback_request(const USBDevice::setup_packet_t*)
              definition:  USBHID::configuration_desc(unsigned char)
              definition:  USBHID::report_desc_length()
              definition:  USBHID::string_iproduct_desc()
              weak defn :  USBHID::HID_callbackSetReport(HID_REPORT*)
              definition:  USBHID::callback_state_change(USBDevice::DeviceState)
              definition:  USBHID::callback_set_interface(unsigned short, unsigned char)
              definition:  USBHID::string_iinterface_desc()
              definition:  USBHID::callback_request_xfer_done(const USBDevice::setup_packet_t*, bool)
              definition:  USBHID::callback_set_configuration(unsigned char)
              definition:  USBHID::read(HID_REPORT*)
              definition:  USBHID::send(const HID_REPORT*)
              definition:  USBHID::_init(unsigned char, unsigned char)
              definition:  USBHID::ready()
              definition:  USBHID::read_nb(HID_REPORT*)
              definition:  USBHID::send_nb(const HID_REPORT*)
              weak defn :  USBHID::AsyncRead::process()
              weak defn :  USBHID::AsyncRead::AsyncRead__sub_object(USBHID*, HID_REPORT*)
              weak defn :  USBHID::AsyncRead::~AsyncRead__deallocating()
              weak defn :  USBHID::AsyncSend::process()
              weak defn :  USBHID::AsyncSend::AsyncSend__sub_object(USBHID*, const HID_REPORT*)
              weak defn :  USBHID::AsyncSend::~AsyncSend__deallocating()
              weak defn :  USBHID::AsyncWait::process()
              weak defn :  USBHID::AsyncWait::AsyncWait__sub_object(USBHID*)
              weak defn :  USBHID::AsyncWait::~AsyncWait__deallocating()
              definition:  USBHID::_read_isr()
              definition:  USBHID::_send_isr()
              weak defn :  USBHID::report_rx()
              weak defn :  USBHID::report_tx()
              definition:  USBHID::USBHID(USBPhy*, unsigned char, unsigned char, unsigned short, unsigned short, unsigned short)
              definition:  USBHID::USBHID(bool, unsigned char, unsigned char, unsigned short, unsigned short, unsigned short)
              definition:  USBHID::USBHID__sub_object(USBPhy*, unsigned char, unsigned char, unsigned short, unsigned short, unsigned short)
              definition:  USBHID::USBHID__sub_object(bool, unsigned char, unsigned char, unsigned short, unsigned short, unsigned short)
              definition:  USBHID::~USBHID__deallocating()
              definition:  USBHID::~USBHID()
              definition:  USBHID::~USBHID__sub_object()
              reference :  AsyncOp::wait(rtos::Mutex*, std::__1::chrono::duration<unsigned, std::__1::ratio<(long long)1, (long long)1000>>)
              reference :  AsyncOp::complete()
              reference :  AsyncOp::AsyncOp__sub_object()
              reference :  AsyncOp::~AsyncOp__sub_object()
              reference :  USBDevice::configured()
              reference :  USBDevice::read_start(unsigned char, unsigned char*, unsigned)
              reference :  USBDevice::device_desc()
              reference :  USBDevice::read_finish(unsigned char)
              reference :  USBDevice::write_start(unsigned char, unsigned char*, unsigned)
              reference :  USBDevice::endpoint_add(unsigned char, unsigned, usb_ep_type_t, mbed::Callback<void()>)
              weak defn :  bool USBDevice::endpoint_add<USBHID>(unsigned char, unsigned, usb_ep_type_t, void(T1::*)())
              reference :  USBDevice::write_finish(unsigned char)
              reference :  USBDevice::assert_locked()
              reference :  USBDevice::start_process()
              reference :  USBDevice::endpoint_abort(unsigned char)
              reference :  USBDevice::endpoint_table()
              reference :  USBDevice::find_descriptor(unsigned char, unsigned char)
              reference :  USBDevice::complete_request(USBDevice::RequestResult, unsigned char*, unsigned)
              reference :  USBDevice::string_langid_desc()
              reference :  USBDevice::string_iserial_desc()
              reference :  USBDevice::complete_set_interface(bool)
              reference :  USBDevice::string_imanufacturer_desc()
              reference :  USBDevice::complete_request_xfer_done(bool)
              reference :  USBDevice::complete_set_configuration(bool)
              reference :  USBDevice::string_iconfiguration_desc()
              reference :  USBDevice::in(unsigned char)
              reference :  USBDevice::out(unsigned char)
              reference :  USBDevice::sof(int)
              reference :  USBDevice::init()
              reference :  USBDevice::lock()
              reference :  USBDevice::power(bool)
              reference :  USBDevice::reset()
              reference :  USBDevice::deinit()
              reference :  USBDevice::ep0_in()
              reference :  USBDevice::unlock()
              reference :  USBDevice::connect()
              reference :  USBDevice::ep0_out()
              reference :  USBDevice::suspend(bool)
              reference :  USBDevice::ep0_setup()
              reference :  USBDevice::USBDevice__sub_object(USBPhy*, unsigned short, unsigned short, unsigned short)
              reference :  USBDevice::~USBDevice__sub_object()
              definition:  vtable for USBHID
              weak defn :  vtable for USBHID::AsyncRead
              weak defn :  vtable for USBHID::AsyncSend
              weak defn :  vtable for USBHID::AsyncWait
              reference :  operator delete (void*)
              reference :  __aeabi_memcpy4
              reference :  mbed_assert_internal
              reference :  mbed::Callback<T3(T4...)> mbed::callback<USBDevice, USBDevice, void, <>>(T2*, T3(T1::*)(T4...))
              reference :  USBDevice::report_desc_dength()
              reference :  USBDevice::callback_power(bool)
              reference :  USBDevice::callback_sof(int)
              reference :  USBDevice::callback_reset()
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/drivers/source/usb/USBKeyboard.o.
              reference :  get_usb_phy()
              definition:  USBKeyboard::lock_status()
              definition:  USBKeyboard::report_desc()
              definition:  USBKeyboard::media_control(MEDIA_KEY)
              definition:  USBKeyboard::configuration_desc(unsigned char)
              definition:  USBKeyboard::_getc()
              definition:  USBKeyboard::_putc(int)
              definition:  USBKeyboard::key_code(unsigned char, unsigned char)
              definition:  USBKeyboard::report_rx()
              definition:  USBKeyboard::USBKeyboard(USBPhy*, unsigned short, unsigned short, unsigned short)
              definition:  USBKeyboard::USBKeyboard(bool, unsigned short, unsigned short, unsigned short)
              definition:  USBKeyboard::USBKeyboard__sub_object(USBPhy*, unsigned short, unsigned short, unsigned short)
              definition:  USBKeyboard::USBKeyboard__sub_object(bool, unsigned short, unsigned short, unsigned short)
              definition:  USBKeyboard::~USBKeyboard__deallocating()
              definition:  USBKeyboard::~USBKeyboard()
              definition:  USBKeyboard::~USBKeyboard__sub_object()
              weak defn :  mbed::Stream::lock()
              reference :  mbed::Stream::read(void*, unsigned)
              reference :  mbed::Stream::seek(long, int)
              reference :  mbed::Stream::size()
              reference :  mbed::Stream::sync()
              reference :  mbed::Stream::tell()
              reference :  mbed::Stream::close()
              reference :  mbed::Stream::write(const void*, unsigned)
              reference :  mbed::Stream::isatty()
              reference :  mbed::Stream::rewind()
              weak defn :  mbed::Stream::unlock()
              reference :  mbed::Stream::Stream__sub_object(const char*)
              reference :  mbed::Stream::~Stream__sub_object()
              reference :  rtos::Mutex::lock()
              reference :  rtos::Mutex::unlock()
              reference :  rtos::Mutex::Mutex()
              reference :  rtos::Mutex::~Mutex()
              reference :  USBHID::wait_ready()
              reference :  USBHID::callback_request(const USBDevice::setup_packet_t*)
              reference :  USBHID::report_desc_length()
              reference :  USBHID::string_iproduct_desc()
              reference :  USBHID::callback_state_change(USBDevice::DeviceState)
              reference :  USBHID::callback_set_interface(unsigned short, unsigned char)
              reference :  USBHID::string_iinterface_desc()
              reference :  USBHID::callback_request_xfer_done(const USBDevice::setup_packet_t*, bool)
              reference :  USBHID::callback_set_configuration(unsigned char)
              reference :  USBHID::send(const HID_REPORT*)
              reference :  USBHID::read_nb(HID_REPORT*)
              reference :  USBHID::USBHID__sub_object(USBPhy*, unsigned char, unsigned char, unsigned short, unsigned short, unsigned short)
              reference :  USBHID::~USBHID__sub_object()
              reference :  USBDevice::device_desc()
              reference :  USBDevice::assert_locked()
              reference :  USBDevice::start_process()
              reference :  USBDevice::string_langid_desc()
              reference :  USBDevice::string_iserial_desc()
              reference :  USBDevice::string_imanufacturer_desc()
              reference :  USBDevice::string_iconfiguration_desc()
              reference :  USBDevice::in(unsigned char)
              reference :  USBDevice::out(unsigned char)
              reference :  USBDevice::sof(int)
              reference :  USBDevice::init()
              reference :  USBDevice::lock()
              reference :  USBDevice::power(bool)
              reference :  USBDevice::reset()
              reference :  USBDevice::deinit()
              reference :  USBDevice::ep0_in()
              reference :  USBDevice::unlock()
              reference :  USBDevice::connect()
              reference :  USBDevice::ep0_out()
              reference :  USBDevice::suspend(bool)
              reference :  USBDevice::ep0_setup()
              weak defn :  mbed::FileHandle::poll(short) const
              definition:  vtable for USBKeyboard
              definition:  thunk{-1068} to USBKeyboard::_getc()
              definition:  thunk{-1068} to USBKeyboard::_putc(int)
              definition:  thunk{-1068} to USBKeyboard::~USBKeyboard__deallocating()
              definition:  thunk{-1068} to USBKeyboard::~USBKeyboard()
              definition:  thunk{-1072} to USBKeyboard::~USBKeyboard__deallocating()
              definition:  thunk{-1072} to USBKeyboard::~USBKeyboard()
              reference :  operator delete (void*)
              reference :  USBDevice::report_desc_dength()
              reference :  USBDevice::callback_power(bool)
              reference :  USBDevice::callback_sof(int)
              reference :  USBDevice::callback_reset()
              reference :  USBHID::HID_callbackSetReport(HID_REPORT*)
              reference :  USBHID::report_tx()
              reference :  mbed::FileHandle::truncate(long)
              reference :  mbed::FileHandle::set_blocking(bool)
              reference :  mbed::FileHandle::is_blocking() const
              reference :  mbed::FileHandle::enable_input(bool)
              reference :  mbed::FileHandle::enable_output(bool)
              reference :  mbed::FileHandle::sigio(mbed::Callback<void()>)
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/drivers/source/usb/USBMIDI.o.
              reference :  get_usb_phy()
              weak defn :  MIDIMessage::from_raw(unsigned char*, int)
              reference :  EndpointResolver::endpoint_in(usb_ep_type_t, unsigned)
              reference :  EndpointResolver::endpoint_out(usb_ep_type_t, unsigned)
              reference :  EndpointResolver::endpoint_ctrl(unsigned)
              reference :  EndpointResolver::valid()
              reference :  EndpointResolver::EndpointResolver(const usb_ep_table_t*)
              reference :  EndpointResolver::~EndpointResolver()
              reference :  rtos::EventFlags::set(unsigned)
              reference :  rtos::EventFlags::clear(unsigned)
              reference :  rtos::EventFlags::wait_any(unsigned, unsigned, bool)
              reference :  rtos::EventFlags::EventFlags()
              reference :  rtos::EventFlags::~EventFlags()
              reference :  rtos::Mutex::lock()
              reference :  rtos::Mutex::unlock()
              reference :  rtos::Mutex::Mutex()
              reference :  rtos::Mutex::~Mutex()
              definition:  USBMIDI::wait_ready()
              definition:  USBMIDI::_in_callback()
              definition:  USBMIDI::_next_message()
              definition:  USBMIDI::_out_callback()
              definition:  USBMIDI::callback_request(const USBDevice::setup_packet_t*)
              definition:  USBMIDI::configuration_desc(unsigned char)
              definition:  USBMIDI::string_iproduct_desc()
              definition:  USBMIDI::callback_state_change(USBDevice::DeviceState)
              definition:  USBMIDI::callback_set_interface(unsigned short, unsigned char)
              definition:  USBMIDI::string_iinterface_desc()
              definition:  USBMIDI::callback_request_xfer_done(const USBDevice::setup_packet_t*, bool)
              definition:  USBMIDI::callback_set_configuration(unsigned char)
              definition:  USBMIDI::read(MIDIMessage*)
              definition:  USBMIDI::_init()
              definition:  USBMIDI::ready()
              definition:  USBMIDI::write(MIDIMessage)
              definition:  USBMIDI::attach(mbed::Callback<void()>)
              definition:  USBMIDI::readable()
              definition:  USBMIDI::USBMIDI(USBPhy*, unsigned short, unsigned short, unsigned short)
              definition:  USBMIDI::USBMIDI(bool, unsigned short, unsigned short, unsigned short)
              definition:  USBMIDI::USBMIDI__sub_object(USBPhy*, unsigned short, unsigned short, unsigned short)
              definition:  USBMIDI::USBMIDI__sub_object(bool, unsigned short, unsigned short, unsigned short)
              definition:  USBMIDI::~USBMIDI__deallocating()
              definition:  USBMIDI::~USBMIDI()
              definition:  USBMIDI::~USBMIDI__sub_object()
              reference :  USBDevice::read_start(unsigned char, unsigned char*, unsigned)
              reference :  USBDevice::device_desc()
              reference :  USBDevice::read_finish(unsigned char)
              reference :  USBDevice::write_start(unsigned char, unsigned char*, unsigned)
              reference :  USBDevice::endpoint_add(unsigned char, unsigned, usb_ep_type_t, mbed::Callback<void()>)
              weak defn :  bool USBDevice::endpoint_add<USBMIDI>(unsigned char, unsigned, usb_ep_type_t, void(T1::*)())
              reference :  USBDevice::write_finish(unsigned char)
              reference :  USBDevice::assert_locked()
              reference :  USBDevice::start_process()
              reference :  USBDevice::endpoint_table()
              reference :  USBDevice::complete_request(USBDevice::RequestResult, unsigned char*, unsigned)
              reference :  USBDevice::string_langid_desc()
              reference :  USBDevice::endpoint_remove_all()
              reference :  USBDevice::string_iserial_desc()
              reference :  USBDevice::complete_set_interface(bool)
              reference :  USBDevice::string_imanufacturer_desc()
              reference :  USBDevice::complete_request_xfer_done(bool)
              reference :  USBDevice::complete_set_configuration(bool)
              reference :  USBDevice::string_iconfiguration_desc()
              reference :  USBDevice::in(unsigned char)
              reference :  USBDevice::out(unsigned char)
              reference :  USBDevice::sof(int)
              reference :  USBDevice::init()
              reference :  USBDevice::lock()
              reference :  USBDevice::power(bool)
              reference :  USBDevice::reset()
              reference :  USBDevice::deinit()
              reference :  USBDevice::ep0_in()
              reference :  USBDevice::unlock()
              reference :  USBDevice::connect()
              reference :  USBDevice::ep0_out()
              reference :  USBDevice::suspend(bool)
              reference :  USBDevice::ep0_setup()
              reference :  USBDevice::USBDevice__sub_object(USBPhy*, unsigned short, unsigned short, unsigned short)
              reference :  USBDevice::~USBDevice__sub_object()
              reference :  rtos::EventFlags::get() const
              definition:  vtable for USBMIDI
              reference :  operator delete (void*)
              reference :  mbed_assert_internal
              reference :  mbed::Callback<void()>::Callback__sub_object()
              reference :  mbed::Callback<T3(T4...)> mbed::callback<USBDevice, USBDevice, void, <>>(T2*, T3(T1::*)(T4...))
              reference :  mbed::Callback<void()>::operator bool() const
              reference :  mbed::Callback<void()>::operator ()() const
              reference :  USBDevice::report_desc_dength()
              reference :  USBDevice::callback_power(bool)
              reference :  USBDevice::callback_sof(int)
              reference :  USBDevice::callback_reset()
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/drivers/source/usb/USBMSD.o.
              reference :  get_usb_phy()
              reference :  EndpointResolver::endpoint_in(usb_ep_type_t, unsigned)
              reference :  EndpointResolver::endpoint_out(usb_ep_type_t, unsigned)
              reference :  EndpointResolver::endpoint_ctrl(unsigned)
              reference :  EndpointResolver::valid()
              reference :  EndpointResolver::EndpointResolver(const usb_ep_table_t*)
              reference :  EndpointResolver::~EndpointResolver()
              weak defn :  T1 mbed::detail::invoke_r<void, void(USBMSD::*const &)(const USBDevice::setup_packet_t*), <USBMSD*const &, const USBDevice::setup_packet_t*>, (int)0>(T2&&, T3&&...)
              weak defn :  T1 mbed::detail::invoke_r<void, void(USBMSD::*const &)(), <USBMSD*const &>, (int)0>(T2&&, T3&&...)
              weak defn :  T1 mbed::detail::invoke_r<void, mbed::Callback<void(const USBDevice::setup_packet_t*)>::Callback<USBMSD*, void(USBMSD::*)(const USBDevice::setup_packet_t*), (int)0>(T1, T2)::[lambda(const USBDevice::setup_packet_t*) (instance 1)]&, <const USBDevice::setup_packet_t*>, (int)0>(T2&&, T3&&...)
              weak defn :  T1 mbed::detail::invoke_r<void, mbed::Callback<void()>::Callback<USBMSD*, void(USBMSD::*)(), (int)0>(T1, T2)::[lambda() (instance 1)]&, <>, (int)0>(T2&&, T3&&...)
              weak defn :  void mbed::Callback<void(const USBDevice::setup_packet_t*)>::target_call<mbed::Callback<void(const USBDevice::setup_packet_t*)>::Callback<USBMSD*, void(USBMSD::*)(const USBDevice::setup_packet_t*), (int)0>(T1, T2)::[lambda(const USBDevice::setup_packet_t*) (instance 1)]>(const mbed::detail::CallbackBase*, const USBDevice::setup_packet_t*)
              weak defn :  void mbed::Callback<void(const USBDevice::setup_packet_t*)>::generate<mbed::Callback<void(const USBDevice::setup_packet_t*)>::Callback<USBMSD*, void(USBMSD::*)(const USBDevice::setup_packet_t*), (int)0>(T1, T2)::[lambda(const USBDevice::setup_packet_t*) (instance 1)], void>(T1&&)
              weak defn :  mbed::Callback<void(const USBDevice::setup_packet_t*)>::Callback__sub_object()
              weak defn :  mbed::Callback<void(const USBDevice::setup_packet_t*)>::Callback__sub_object<USBMSD*, void(USBMSD::*)(const USBDevice::setup_packet_t*), (int)0>(T1, T2)
              weak defn :  void mbed::Callback<void()>::target_call<mbed::Callback<void()>::Callback<USBMSD*, void(USBMSD::*)(), (int)0>(T1, T2)::[lambda() (instance 1)]>(const mbed::detail::CallbackBase*)
              weak defn :  void mbed::Callback<void()>::generate<mbed::Callback<void()>::Callback<USBMSD*, void(USBMSD::*)(), (int)0>(T1, T2)::[lambda() (instance 1)], void>(T1&&)
              weak defn :  mbed::Callback<void()>::Callback__sub_object<USBMSD*, void(USBMSD::*)(), (int)0>(T1, T2)
              weak defn :  mbed::Callback<T3(T4...)> mbed::callback<USBMSD, USBMSD, void, <>>(T2*, T3(T1::*)(T4...))
              weak defn :  mbed::Callback<T3(T4...)> mbed::callback<USBMSD, USBMSD, void, <const USBDevice::setup_packet_t*>>(T2*, T3(T1::*)(T4...))
              weak defn :  std::__1::enable_if<((std::is_function<T2>::value&&(!std::is_base_of<T1, std::__1::decay<T3>::type>::value))&&(!is_reference_wrapper<std::__1::decay<T3>::type>::value)), decltype((((*std::forward<T3>(param#2)).*param#1)(std::forward<T4>(param#3)...)))>::type mstd::impl::INVOKE<USBMSD, void(const USBDevice::setup_packet_t*), USBMSD*const &, <const USBDevice::setup_packet_t*>>(T2T1::*, T3&&, T4&&...)
              weak defn :  std::__1::enable_if<((std::is_function<T2>::value&&(!std::is_base_of<T1, std::__1::decay<T3>::type>::value))&&(!is_reference_wrapper<std::__1::decay<T3>::type>::value)), decltype((((*std::forward<T3>(param#2)).*param#1)(std::forward<T4>(param#3)...)))>::type mstd::impl::INVOKE<USBMSD, void(), USBMSD*const &, <>>(T2T1::*, T3&&, T4&&...)
              weak defn :  std::__1::enable_if<((!std::is_member_pointer<std::__1::decay<T1>::type>::value)||(std::is_member_object_pointer<std::__1::decay<T1>::type>::value&&(sizeof...(param#2)!=(int)1))), decltype((std::forward<T1>(param#1)(std::forward<T2>(param#2)...)))>::type mstd::impl::INVOKE<mbed::Callback<void(const USBDevice::setup_packet_t*)>::Callback<USBMSD*, void(USBMSD::*)(const USBDevice::setup_packet_t*), (int)0>(T1, T2)::[lambda(const USBDevice::setup_packet_t*) (instance 1)]&, <const USBDevice::setup_packet_t*>>(T1&&, T2&&...)
              weak defn :  std::__1::enable_if<((!std::is_member_pointer<std::__1::decay<T1>::type>::value)||(std::is_member_object_pointer<std::__1::decay<T1>::type>::value&&(sizeof...(param#2)!=(int)1))), decltype((std::forward<T1>(param#1)(std::forward<T2>(param#2)...)))>::type mstd::impl::INVOKE<mbed::Callback<void()>::Callback<USBMSD*, void(USBMSD::*)(), (int)0>(T1, T2)::[lambda() (instance 1)]&, <>>(T1&&, T2&&...)
              weak defn :  mstd::invoke_result<T1, <T2...>>::type mstd::invoke<void(USBMSD::*const &)(const USBDevice::setup_packet_t*), <USBMSD*const &, const USBDevice::setup_packet_t*>>(T1&&, T2&&...)
              weak defn :  mstd::invoke_result<T1, <T2...>>::type mstd::invoke<void(USBMSD::*const &)(), <USBMSD*const &>>(T1&&, T2&&...)
              weak defn :  mstd::invoke_result<T1, <T2...>>::type mstd::invoke<mbed::Callback<void(const USBDevice::setup_packet_t*)>::Callback<USBMSD*, void(USBMSD::*)(const USBDevice::setup_packet_t*), (int)0>(T1, T2)::[lambda(const USBDevice::setup_packet_t*) (instance 1)]&, <const USBDevice::setup_packet_t*>>(T1&&, T2&&...)
              weak defn :  mstd::invoke_result<T1, <T2...>>::type mstd::invoke<mbed::Callback<void()>::Callback<USBMSD*, void(USBMSD::*)(), (int)0>(T1, T2)::[lambda() (instance 1)]&, <>>(T1&&, T2&&...)
              reference :  rtos::Mutex::lock()
              reference :  rtos::Mutex::unlock()
              reference :  rtos::Mutex::Mutex()
              reference :  rtos::Mutex::~Mutex()
              definition:  USBMSD::_configure()
              definition:  USBMSD::_read_next()
              definition:  USBMSD::disconnect()
              definition:  USBMSD::disk_write(const unsigned char*, unsigned long long, unsigned char)
              definition:  USBMSD::memoryRead()
              definition:  USBMSD::modeSense6()
              definition:  USBMSD::_write_next(unsigned char*, unsigned)
              definition:  USBMSD::disk_status()
              definition:  USBMSD::memoryWrite(unsigned char*, unsigned short)
              definition:  USBMSD::modeSense10()
              definition:  USBMSD::disk_sectors()
              definition:  USBMSD::infoTransfer()
              definition:  USBMSD::memoryVerify(unsigned char*, unsigned short)
              definition:  USBMSD::readCapacity()
              definition:  USBMSD::requestSense()
              definition:  USBMSD::media_removed()
              definition:  USBMSD::testUnitReady()
              definition:  USBMSD::inquiryRequest()
              definition:  USBMSD::disk_initialize()
              definition:  USBMSD::callback_request(const USBDevice::setup_packet_t*)
              definition:  USBMSD::configuration_desc(unsigned char)
              definition:  USBMSD::readFormatCapacity()
              definition:  USBMSD::string_iproduct_desc()
              definition:  USBMSD::callback_state_change(USBDevice::DeviceState)
              definition:  USBMSD::callback_set_interface(unsigned short, unsigned char)
              definition:  USBMSD::string_iinterface_desc()
              definition:  USBMSD::callback_request_xfer_done(const USBDevice::setup_packet_t*, bool)
              definition:  USBMSD::callback_set_configuration(unsigned char)
              definition:  USBMSD::_in()
              definition:  USBMSD::_out()
              definition:  USBMSD::fail()
              definition:  USBMSD::_init()
              definition:  USBMSD::write(unsigned char*, unsigned short)
              definition:  USBMSD::_reset()
              definition:  USBMSD::attach(mbed::Callback<void()>)
              definition:  USBMSD::_isr_in()
              definition:  USBMSD::connect()
              definition:  USBMSD::process()
              definition:  USBMSD::sendCSW()
              definition:  USBMSD::_control(const USBDevice::setup_packet_t*)
              definition:  USBMSD::_isr_out()
              definition:  USBMSD::_process()
              definition:  USBMSD::CBWDecode(unsigned char*, unsigned short)
              definition:  USBMSD::disk_read(unsigned char*, unsigned long long, unsigned char)
              definition:  USBMSD::disk_size()
              definition:  USBMSD::msd_reset()
              definition:  USBMSD::USBMSD(USBPhy*, mbed::BlockDevice*, unsigned short, unsigned short, unsigned short)
              definition:  USBMSD::USBMSD(mbed::BlockDevice*, bool, unsigned short, unsigned short, unsigned short)
              definition:  USBMSD::USBMSD__sub_object(USBPhy*, mbed::BlockDevice*, unsigned short, unsigned short, unsigned short)
              definition:  USBMSD::USBMSD__sub_object(mbed::BlockDevice*, bool, unsigned short, unsigned short, unsigned short)
              definition:  USBMSD::~USBMSD__deallocating()
              definition:  USBMSD::~USBMSD()
              definition:  USBMSD::~USBMSD__sub_object()
              reference :  events::PolledQueue::attach(mbed::Callback<void()>)
              reference :  events::PolledQueue::dispatch()
              reference :  events::PolledQueue::PolledQueue(mbed::Callback<void()>)
              reference :  events::PolledQueue::~PolledQueue()
              weak defn :  events::Task<void(const USBDevice::setup_packet_t*)>::call(const USBDevice::setup_packet_t*)
              weak defn :  events::Task<void(const USBDevice::setup_packet_t*)>::size()
              weak defn :  events::Task<void(const USBDevice::setup_packet_t*)>::start(void*, unsigned)
              weak defn :  events::Task<void(const USBDevice::setup_packet_t*)>::Task__sub_object(events::TaskQueue*, mbed::Callback<void(const USBDevice::setup_packet_t*)>)
              weak defn :  events::Task<void(const USBDevice::setup_packet_t*)>::~Task__deallocating()
              weak defn :  events::Task<void(const USBDevice::setup_packet_t*)>::operator =(mbed::Callback<void(const USBDevice::setup_packet_t*)>)
              weak defn :  events::Task<void()>::call()
              weak defn :  events::Task<void()>::size()
              weak defn :  events::Task<void()>::start(void*, unsigned)
              weak defn :  events::Task<void()>::Task__sub_object(events::TaskQueue*, mbed::Callback<void()>)
              weak defn :  events::Task<void()>::~Task__deallocating()
              weak defn :  events::Task<void()>::operator =(mbed::Callback<void()>)
              weak defn :  events::AllArgs<mbed::Callback<void(const USBDevice::setup_packet_t*)>, const USBDevice::setup_packet_t*, void, void, void, void>::Operations<mbed::Callback<void(const USBDevice::setup_packet_t*)>, const USBDevice::setup_packet_t*>::call(void*)
              weak defn :  events::AllArgs<mbed::Callback<void(const USBDevice::setup_packet_t*)>, const USBDevice::setup_packet_t*, void, void, void, void>::Operations<mbed::Callback<void(const USBDevice::setup_packet_t*)>, const USBDevice::setup_packet_t*>::copy(void*, void*)
              weak defn :  events::AllArgs<mbed::Callback<void(const USBDevice::setup_packet_t*)>, const USBDevice::setup_packet_t*, void, void, void, void>::AllArgs__sub_object(mbed::Callback<void(const USBDevice::setup_packet_t*)>, const USBDevice::setup_packet_t*)
              weak defn :  events::AllArgs<mbed::Callback<void()>, void, void, void, void, void>::Operations<mbed::Callback<void()>, void>::call(void*)
              weak defn :  events::AllArgs<mbed::Callback<void()>, void, void, void, void, void>::Operations<mbed::Callback<void()>, void>::copy(void*, void*)
              weak defn :  events::AllArgs<mbed::Callback<void()>, void, void, void, void, void>::AllArgs__sub_object(mbed::Callback<void()>)
              reference :  events::TaskBase::post()
              reference :  events::TaskBase::wait()
              reference :  events::TaskBase::cancel()
              reference :  events::TaskBase::finish()
              reference :  events::TaskBase::TaskBase__sub_object(events::TaskQueue*)
              reference :  events::TaskBase::~TaskBase__sub_object()
              reference :  USBDevice::disconnect()
              reference :  USBDevice::read_start(unsigned char, unsigned char*, unsigned)
              reference :  USBDevice::device_desc()
              reference :  USBDevice::read_finish(unsigned char)
              reference :  USBDevice::write_start(unsigned char, unsigned char*, unsigned)
              reference :  USBDevice::endpoint_add(unsigned char, unsigned, usb_ep_type_t, mbed::Callback<void()>)
              weak defn :  bool USBDevice::endpoint_add<USBMSD>(unsigned char, unsigned, usb_ep_type_t, void(T1::*)())
              reference :  USBDevice::write_finish(unsigned char)
              reference :  USBDevice::assert_locked()
              reference :  USBDevice::start_process()
              reference :  USBDevice::endpoint_stall(unsigned char)
              reference :  USBDevice::endpoint_table()
              reference :  USBDevice::complete_request(USBDevice::RequestResult, unsigned char*, unsigned)
              reference :  USBDevice::string_langid_desc()
              reference :  USBDevice::string_iserial_desc()
              reference :  USBDevice::complete_set_interface(bool)
              reference :  USBDevice::string_imanufacturer_desc()
              reference :  USBDevice::complete_request_xfer_done(bool)
              reference :  USBDevice::complete_set_configuration(bool)
              reference :  USBDevice::string_iconfiguration_desc()
              reference :  USBDevice::in(unsigned char)
              reference :  USBDevice::out(unsigned char)
              reference :  USBDevice::sof(int)
              reference :  USBDevice::init()
              reference :  USBDevice::lock()
              reference :  USBDevice::power(bool)
              reference :  USBDevice::reset()
              reference :  USBDevice::deinit()
              reference :  USBDevice::ep0_in()
              reference :  USBDevice::unlock()
              reference :  USBDevice::connect()
              reference :  USBDevice::ep0_out()
              reference :  USBDevice::suspend(bool)
              reference :  USBDevice::ep0_setup()
              reference :  USBDevice::USBDevice__sub_object(USBPhy*, unsigned short, unsigned short, unsigned short)
              reference :  USBDevice::~USBDevice__sub_object()
              weak defn :  mbed::Callback<void(const USBDevice::setup_packet_t*)>::call(const USBDevice::setup_packet_t*) const
              weak defn :  mbed::Callback<void(const USBDevice::setup_packet_t*)>::operator ()(const USBDevice::setup_packet_t*) const
              weak defn :  mbed::Callback<void(const USBDevice::setup_packet_t*)>::operator bool() const
              definition:  vtable for USBMSD
              weak defn :  vtable for events::Task<void(const USBDevice::setup_packet_t*)>
              weak defn :  vtable for events::Task<void()>
              weak defn :  mbed::Callback<void(const USBDevice::setup_packet_t*)>::Callback<USBMSD*, void(USBMSD::*)(const USBDevice::setup_packet_t*), (int)0>(T1, T2)::[lambda(const USBDevice::setup_packet_t*) (instance 1)]::operator ()(const USBDevice::setup_packet_t*) const
              weak defn :  mbed::Callback<void()>::Callback<USBMSD*, void(USBMSD::*)(), (int)0>(T1, T2)::[lambda() (instance 1)]::operator ()() const
              reference :  operator delete (void*)
              reference :  __aeabi_memclr
              reference :  __aeabi_memcpy
              reference :  __aeabi_uldivmod
              reference :  free
              reference :  malloc
              reference :  mbed_assert_internal
              reference :  mbed::Callback<void()>::Callback__sub_object(std::nullptr_t)
              reference :  mbed::Callback<void()>::Callback__sub_object()
              reference :  mbed::detail::CallbackBase::CallbackBase__sub_object(std::nullptr_t)
              reference :  mbed::Callback<T3(T4...)> mbed::callback<USBDevice, USBDevice, void, <>>(T2*, T3(T1::*)(T4...))
              reference :  mbed::Callback<void()>::operator ()() const
              reference :  mbed::detail::CallbackBase::call_fn() const
              reference :  mbed::detail::CallbackBase::control() const
              reference :  USBDevice::report_desc_dength()
              reference :  USBDevice::callback_power(bool)
              reference :  USBDevice::callback_sof(int)
              reference :  USBDevice::callback_reset()
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/drivers/source/usb/USBMouse.o.
              reference :  get_usb_phy()
              reference :  rtos::ThisThread::sleep_for(std::__1::chrono::duration<unsigned, std::__1::ratio<(long long)1, (long long)1000>>)
              reference :  rtos::Mutex::lock()
              reference :  rtos::Mutex::unlock()
              reference :  rtos::Mutex::Mutex()
              reference :  rtos::Mutex::~Mutex()
              reference :  USBHID::wait_ready()
              reference :  USBHID::callback_request(const USBDevice::setup_packet_t*)
              reference :  USBHID::report_desc_length()
              reference :  USBHID::string_iproduct_desc()
              reference :  USBHID::callback_state_change(USBDevice::DeviceState)
              reference :  USBHID::callback_set_interface(unsigned short, unsigned char)
              reference :  USBHID::string_iinterface_desc()
              reference :  USBHID::callback_request_xfer_done(const USBDevice::setup_packet_t*, bool)
              reference :  USBHID::callback_set_configuration(unsigned char)
              reference :  USBHID::send(const HID_REPORT*)
              reference :  USBHID::USBHID__sub_object(USBPhy*, unsigned char, unsigned char, unsigned short, unsigned short, unsigned short)
              reference :  USBHID::~USBHID__sub_object()
              definition:  USBMouse::mouse_send(signed char, signed char, unsigned char, signed char)
              definition:  USBMouse::report_desc()
              definition:  USBMouse::double_click()
              definition:  USBMouse::configuration_desc(unsigned char)
              definition:  USBMouse::move(short, short)
              definition:  USBMouse::click(unsigned char)
              definition:  USBMouse::press(unsigned char)
              definition:  USBMouse::scroll(signed char)
              definition:  USBMouse::update(short, short, unsigned char, signed char)
              definition:  USBMouse::release(unsigned char)
              definition:  USBMouse::USBMouse(USBPhy*, MOUSE_TYPE, unsigned short, unsigned short, unsigned short)
              definition:  USBMouse::USBMouse(bool, MOUSE_TYPE, unsigned short, unsigned short, unsigned short)
              definition:  USBMouse::USBMouse__sub_object(USBPhy*, MOUSE_TYPE, unsigned short, unsigned short, unsigned short)
              definition:  USBMouse::USBMouse__sub_object(bool, MOUSE_TYPE, unsigned short, unsigned short, unsigned short)
              definition:  USBMouse::~USBMouse__deallocating()
              definition:  USBMouse::~USBMouse()
              definition:  USBMouse::~USBMouse__sub_object()
              reference :  USBDevice::device_desc()
              reference :  USBDevice::assert_locked()
              reference :  USBDevice::start_process()
              reference :  USBDevice::string_langid_desc()
              reference :  USBDevice::string_iserial_desc()
              reference :  USBDevice::string_imanufacturer_desc()
              reference :  USBDevice::string_iconfiguration_desc()
              reference :  USBDevice::in(unsigned char)
              reference :  USBDevice::out(unsigned char)
              reference :  USBDevice::sof(int)
              reference :  USBDevice::init()
              reference :  USBDevice::lock()
              reference :  USBDevice::power(bool)
              reference :  USBDevice::reset()
              reference :  USBDevice::deinit()
              reference :  USBDevice::ep0_in()
              reference :  USBDevice::unlock()
              reference :  USBDevice::connect()
              reference :  USBDevice::ep0_out()
              reference :  USBDevice::suspend(bool)
              reference :  USBDevice::ep0_setup()
              definition:  vtable for USBMouse
              reference :  operator delete (void*)
              reference :  _ZNSt3__18literals15chrono_literalsli2msEy
              reference :  USBDevice::report_desc_dength()
              reference :  USBDevice::callback_power(bool)
              reference :  USBDevice::callback_sof(int)
              reference :  USBDevice::callback_reset()
              reference :  USBHID::HID_callbackSetReport(HID_REPORT*)
              reference :  USBHID::report_rx()
              reference :  USBHID::report_tx()
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/drivers/source/usb/USBMouseKeyboard.o.
              reference :  get_usb_phy()
              definition:  USBMouseKeyboard::_mouse_send(signed char, signed char, unsigned char, signed char)
              definition:  USBMouseKeyboard::doubleClick()
              definition:  USBMouseKeyboard::lock_status()
              definition:  USBMouseKeyboard::report_desc()
              definition:  USBMouseKeyboard::media_control(MEDIA_KEY)
              definition:  USBMouseKeyboard::move(short, short)
              definition:  USBMouseKeyboard::_getc()
              definition:  USBMouseKeyboard::_putc(int)
              definition:  USBMouseKeyboard::click(unsigned char)
              definition:  USBMouseKeyboard::press(unsigned char)
              definition:  USBMouseKeyboard::scroll(signed char)
              definition:  USBMouseKeyboard::update(short, short, unsigned char, signed char)
              definition:  USBMouseKeyboard::release(unsigned char)
              definition:  USBMouseKeyboard::key_code(unsigned char, unsigned char)
              definition:  USBMouseKeyboard::report_rx()
              definition:  USBMouseKeyboard::USBMouseKeyboard(USBPhy*, MOUSE_TYPE, unsigned short, unsigned short, unsigned short)
              definition:  USBMouseKeyboard::USBMouseKeyboard(bool, MOUSE_TYPE, unsigned short, unsigned short, unsigned short)
              definition:  USBMouseKeyboard::USBMouseKeyboard__sub_object(USBPhy*, MOUSE_TYPE, unsigned short, unsigned short, unsigned short)
              definition:  USBMouseKeyboard::USBMouseKeyboard__sub_object(bool, MOUSE_TYPE, unsigned short, unsigned short, unsigned short)
              definition:  USBMouseKeyboard::~USBMouseKeyboard__deallocating()
              definition:  USBMouseKeyboard::~USBMouseKeyboard()
              definition:  USBMouseKeyboard::~USBMouseKeyboard__sub_object()
              reference :  mbed::Stream::read(void*, unsigned)
              reference :  mbed::Stream::seek(long, int)
              reference :  mbed::Stream::size()
              reference :  mbed::Stream::sync()
              reference :  mbed::Stream::tell()
              reference :  mbed::Stream::close()
              reference :  mbed::Stream::write(const void*, unsigned)
              reference :  mbed::Stream::isatty()
              reference :  mbed::Stream::rewind()
              reference :  mbed::Stream::Stream__sub_object(const char*)
              reference :  mbed::Stream::~Stream__sub_object()
              reference :  rtos::ThisThread::sleep_for(std::__1::chrono::duration<unsigned, std::__1::ratio<(long long)1, (long long)1000>>)
              reference :  rtos::Mutex::lock()
              reference :  rtos::Mutex::unlock()
              reference :  rtos::Mutex::Mutex()
              reference :  rtos::Mutex::~Mutex()
              reference :  USBHID::wait_ready()
              reference :  USBHID::callback_request(const USBDevice::setup_packet_t*)
              reference :  USBHID::configuration_desc(unsigned char)
              reference :  USBHID::report_desc_length()
              reference :  USBHID::string_iproduct_desc()
              reference :  USBHID::callback_state_change(USBDevice::DeviceState)
              reference :  USBHID::callback_set_interface(unsigned short, unsigned char)
              reference :  USBHID::string_iinterface_desc()
              reference :  USBHID::callback_request_xfer_done(const USBDevice::setup_packet_t*, bool)
              reference :  USBHID::callback_set_configuration(unsigned char)
              reference :  USBHID::send(const HID_REPORT*)
              reference :  USBHID::read_nb(HID_REPORT*)
              reference :  USBHID::USBHID__sub_object(USBPhy*, unsigned char, unsigned char, unsigned short, unsigned short, unsigned short)
              reference :  USBHID::~USBHID__sub_object()
              reference :  USBDevice::device_desc()
              reference :  USBDevice::assert_locked()
              reference :  USBDevice::start_process()
              reference :  USBDevice::string_langid_desc()
              reference :  USBDevice::string_iserial_desc()
              reference :  USBDevice::string_imanufacturer_desc()
              reference :  USBDevice::string_iconfiguration_desc()
              reference :  USBDevice::in(unsigned char)
              reference :  USBDevice::out(unsigned char)
              reference :  USBDevice::sof(int)
              reference :  USBDevice::init()
              reference :  USBDevice::lock()
              reference :  USBDevice::power(bool)
              reference :  USBDevice::reset()
              reference :  USBDevice::deinit()
              reference :  USBDevice::ep0_in()
              reference :  USBDevice::unlock()
              reference :  USBDevice::connect()
              reference :  USBDevice::ep0_out()
              reference :  USBDevice::suspend(bool)
              reference :  USBDevice::ep0_setup()
              definition:  vtable for USBMouseKeyboard
              definition:  thunk{-1068} to USBMouseKeyboard::_getc()
              definition:  thunk{-1068} to USBMouseKeyboard::_putc(int)
              definition:  thunk{-1068} to USBMouseKeyboard::~USBMouseKeyboard__deallocating()
              definition:  thunk{-1068} to USBMouseKeyboard::~USBMouseKeyboard()
              definition:  thunk{-1072} to USBMouseKeyboard::~USBMouseKeyboard__deallocating()
              definition:  thunk{-1072} to USBMouseKeyboard::~USBMouseKeyboard()
              reference :  operator delete (void*)
              reference :  _ZNSt3__18literals15chrono_literalsli2msEy
              reference :  USBDevice::report_desc_dength()
              reference :  USBDevice::callback_power(bool)
              reference :  USBDevice::callback_sof(int)
              reference :  USBDevice::callback_reset()
              reference :  USBHID::HID_callbackSetReport(HID_REPORT*)
              reference :  USBHID::report_tx()
              reference :  mbed::FileHandle::truncate(long)
              reference :  mbed::FileHandle::set_blocking(bool)
              reference :  mbed::FileHandle::is_blocking() const
              reference :  mbed::FileHandle::enable_input(bool)
              reference :  mbed::FileHandle::enable_output(bool)
              reference :  mbed::FileHandle::poll(short) const
              reference :  mbed::FileHandle::sigio(mbed::Callback<void()>)
              reference :  mbed::Stream::lock()
              reference :  mbed::Stream::unlock()
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/drivers/source/usb/USBSerial.o.
              reference :  get_usb_phy()
              reference :  mbed::Stream::read(void*, unsigned)
              reference :  mbed::Stream::seek(long, int)
              reference :  mbed::Stream::size()
              reference :  mbed::Stream::sync()
              reference :  mbed::Stream::tell()
              reference :  mbed::Stream::close()
              reference :  mbed::Stream::write(const void*, unsigned)
              reference :  mbed::Stream::isatty()
              reference :  mbed::Stream::rewind()
              reference :  mbed::Stream::Stream__sub_object(const char*)
              reference :  mbed::Stream::~Stream__sub_object()
              reference :  USBCDC::wait_ready()
              reference :  USBCDC::device_desc()
              reference :  USBCDC::callback_reset()
              reference :  USBCDC::callback_request(const USBDevice::setup_packet_t*)
              reference :  USBCDC::configuration_desc(unsigned char)
              reference :  USBCDC::string_iproduct_desc()
              reference :  USBCDC::callback_state_change(USBDevice::DeviceState)
              reference :  USBCDC::callback_set_interface(unsigned short, unsigned char)
              reference :  USBCDC::string_iinterface_desc()
              reference :  USBCDC::callback_request_xfer_done(const USBDevice::setup_packet_t*, bool)
              reference :  USBCDC::callback_set_configuration(unsigned char)
              reference :  USBCDC::send(unsigned char*, unsigned)
              reference :  USBCDC::receive(unsigned char*, unsigned, unsigned*)
              reference :  USBCDC::USBCDC__sub_object(USBPhy*, unsigned short, unsigned short, unsigned short)
              reference :  USBCDC::~USBCDC__sub_object()
              reference :  USBDevice::assert_locked()
              reference :  USBDevice::start_process()
              reference :  USBDevice::string_langid_desc()
              reference :  USBDevice::string_iserial_desc()
              reference :  USBDevice::string_imanufacturer_desc()
              reference :  USBDevice::string_iconfiguration_desc()
              reference :  USBDevice::in(unsigned char)
              reference :  USBDevice::out(unsigned char)
              reference :  USBDevice::sof(int)
              reference :  USBDevice::init()
              reference :  USBDevice::lock()
              reference :  USBDevice::power(bool)
              reference :  USBDevice::reset()
              reference :  USBDevice::deinit()
              reference :  USBDevice::ep0_in()
              reference :  USBDevice::unlock()
              reference :  USBDevice::connect()
              reference :  USBDevice::ep0_out()
              reference :  USBDevice::suspend(bool)
              reference :  USBDevice::ep0_setup()
              weak defn :  USBSerial::line_coding_changed(int, int, int, int)
              definition:  USBSerial::_getc()
              definition:  USBSerial::_putc(int)
              definition:  USBSerial::data_rx()
              definition:  USBSerial::available()
              definition:  USBSerial::connected()
              definition:  USBSerial::USBSerial(USBPhy*, unsigned short, unsigned short, unsigned short)
              definition:  USBSerial::USBSerial(bool, unsigned short, unsigned short, unsigned short)
              definition:  USBSerial::USBSerial__sub_object(USBPhy*, unsigned short, unsigned short, unsigned short)
              definition:  USBSerial::USBSerial__sub_object(bool, unsigned short, unsigned short, unsigned short)
              definition:  USBSerial::~USBSerial__deallocating()
              definition:  USBSerial::~USBSerial()
              definition:  USBSerial::~USBSerial__sub_object()
              definition:  vtable for USBSerial
              definition:  thunk{-1096} to USBSerial::_getc()
              definition:  thunk{-1096} to USBSerial::_putc(int)
              definition:  thunk{-1096} to USBSerial::~USBSerial__deallocating()
              definition:  thunk{-1096} to USBSerial::~USBSerial()
              definition:  thunk{-1100} to USBSerial::~USBSerial__deallocating()
              definition:  thunk{-1100} to USBSerial::~USBSerial()
              reference :  operator delete (void*)
              reference :  mbed_assert_internal
              reference :  mbed::Callback<void()>::Callback__sub_object()
              reference :  mbed::Callback<void()>::operator bool() const
              reference :  mbed::Callback<void()>::call() const
              reference :  USBDevice::report_desc_dength()
              reference :  USBDevice::callback_power(bool)
              reference :  USBDevice::callback_sof(int)
              reference :  USBCDC::data_tx()
              reference :  mbed::FileHandle::truncate(long)
              reference :  mbed::FileHandle::set_blocking(bool)
              reference :  mbed::FileHandle::is_blocking() const
              reference :  mbed::FileHandle::enable_input(bool)
              reference :  mbed::FileHandle::enable_output(bool)
              reference :  mbed::FileHandle::poll(short) const
              reference :  mbed::FileHandle::sigio(mbed::Callback<void()>)
              reference :  mbed::Stream::lock()
              reference :  mbed::Stream::unlock()
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/events/source/EventQueue.o.
              weak defn :  mbed::Callback<void(int)>::thunk(void*, int)
              definition:  events::EventQueue::background(mbed::Callback<void(int)>)
              definition:  events::EventQueue::break_dispatch()
              definition:  events::EventQueue::tick()
              definition:  events::EventQueue::chain(events::EventQueue*)
              definition:  events::EventQueue::cancel(int)
              definition:  events::EventQueue::dispatch(int)
              definition:  events::EventQueue::time_left(int)
              definition:  events::EventQueue::EventQueue(unsigned, unsigned char*)
              definition:  events::EventQueue::EventQueue__sub_object(unsigned, unsigned char*)
              definition:  events::EventQueue::~EventQueue()
              definition:  events::EventQueue::~EventQueue__sub_object()
              reference :  equeue_background
              reference :  equeue_break
              reference :  equeue_cancel
              reference :  equeue_chain
              reference :  equeue_create
              reference :  equeue_create_inplace
              reference :  equeue_destroy
              reference :  equeue_dispatch
              reference :  equeue_tick
              reference :  equeue_timeleft
              reference :  mbed_assert_internal
              reference :  mbed::Callback<void(int)>::Callback__sub_object()
              reference :  mbed::Callback<void(int)>::operator bool() const
              reference :  mbed::Callback<void(int)>::call(int) const
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/events/source/equeue.o.
              definition:  equeue_alloc
              definition:  equeue_background
              definition:  equeue_break
              definition:  equeue_call
              definition:  equeue_call_every
              definition:  equeue_call_in
              definition:  equeue_cancel
              definition:  equeue_cancel_user_allocated
              definition:  equeue_chain
              definition:  equeue_create
              definition:  equeue_create_inplace
              definition:  equeue_dealloc
              definition:  equeue_destroy
              definition:  equeue_dispatch
              definition:  equeue_enqueue
              definition:  equeue_event_delay
              definition:  equeue_event_dtor
              definition:  equeue_event_period
              reference :  equeue_mutex_create
              reference :  equeue_mutex_destroy
              reference :  equeue_mutex_lock
              reference :  equeue_mutex_unlock
              definition:  equeue_post
              definition:  equeue_post_user_allocated
              reference :  equeue_sema_create
              reference :  equeue_sema_destroy
              reference :  equeue_sema_signal
              reference :  equeue_sema_wait
              reference :  equeue_tick
              reference :  equeue_tick_init
              definition:  equeue_timeleft
              definition:  equeue_timeleft_user_allocated
              reference :  free
              reference :  malloc
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/events/source/equeue_mbed.o.
              reference :  mbed::internal::init_os_timer()
              reference :  mbed::internal::os_timer
              reference :  rtos::EventFlags::set(unsigned)
              reference :  rtos::EventFlags::wait_any(unsigned, unsigned, bool)
              reference :  rtos::EventFlags::EventFlags(const char*)
              reference :  rtos::EventFlags::~EventFlags()
              reference :  rtos::Kernel::impl::get_tick_count()
              reference :  mbed::internal::SysTimer<std::__1::ratio<(long long)1, (long long)1000>, (bool)1>::get_time() const
              reference :  __aeabi_ldivmod
              reference :  core_util_critical_section_enter
              reference :  core_util_critical_section_exit
              reference :  core_util_is_isr_active
              definition:  equeue_mutex_create
              definition:  equeue_mutex_destroy
              definition:  equeue_mutex_lock
              definition:  equeue_mutex_unlock
              definition:  equeue_sema_create
              definition:  equeue_sema_destroy
              definition:  equeue_sema_signal
              definition:  equeue_sema_wait
              definition:  equeue_tick
              definition:  equeue_tick_init
              reference :  rtos::Kernel::Clock::now()
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/events/source/equeue_posix.o.
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/events/source/mbed_shared_queues.o.
              weak defn :  guard variable for events::EventQueue* mbed::do_shared_event_queue_with_thread<(osPriority_t)24, (unsigned)768, (unsigned)2048>(const char*)::queue
              weak defn :  guard variable for events::EventQueue* mbed::do_shared_event_queue_with_thread<(osPriority_t)24, (unsigned)768, (unsigned)2048>(const char*)::thread
              weak defn :  guard variable for events::EventQueue* mbed::do_shared_event_queue_with_thread<(osPriority_t)40, (unsigned)256, (unsigned)1024>(const char*)::queue
              weak defn :  guard variable for events::EventQueue* mbed::do_shared_event_queue_with_thread<(osPriority_t)40, (unsigned)256, (unsigned)1024>(const char*)::thread
              definition:  mbed::mbed_event_queue()
              definition:  mbed::mbed_highprio_event_queue()
              weak defn :  events::EventQueue* mbed::do_shared_event_queue_with_thread<(osPriority_t)24, (unsigned)768, (unsigned)2048>(const char*)
              weak defn :  events::EventQueue* mbed::do_shared_event_queue_with_thread<(osPriority_t)40, (unsigned)256, (unsigned)1024>(const char*)
              reference :  rtos::Mutex::Mutex()
              reference :  rtos::Thread::constructor(osPriority_t, unsigned, unsigned char*, const char*)
              reference :  rtos::Thread::start(mbed::Callback<void()>)
              reference :  rtos::Semaphore::Semaphore(int)
              reference :  events::EventQueue::dispatch(int)
              reference :  events::EventQueue::EventQueue(unsigned, unsigned char*)
              reference :  rtos::Thread::get_state() const
              reference :  vtable for rtos::Thread
              weak defn :  events::EventQueue* mbed::do_shared_event_queue_with_thread<(osPriority_t)24, (unsigned)768, (unsigned)2048>(const char*)::queue_buffer
              weak defn :  events::EventQueue* mbed::do_shared_event_queue_with_thread<(osPriority_t)24, (unsigned)768, (unsigned)2048>(const char*)::queue
              weak defn :  events::EventQueue* mbed::do_shared_event_queue_with_thread<(osPriority_t)24, (unsigned)768, (unsigned)2048>(const char*)::stack
              weak defn :  events::EventQueue* mbed::do_shared_event_queue_with_thread<(osPriority_t)24, (unsigned)768, (unsigned)2048>(const char*)::thread
              weak defn :  events::EventQueue* mbed::do_shared_event_queue_with_thread<(osPriority_t)40, (unsigned)256, (unsigned)1024>(const char*)::queue_buffer
              weak defn :  events::EventQueue* mbed::do_shared_event_queue_with_thread<(osPriority_t)40, (unsigned)256, (unsigned)1024>(const char*)::queue
              weak defn :  events::EventQueue* mbed::do_shared_event_queue_with_thread<(osPriority_t)40, (unsigned)256, (unsigned)1024>(const char*)::stack
              weak defn :  events::EventQueue* mbed::do_shared_event_queue_with_thread<(osPriority_t)40, (unsigned)256, (unsigned)1024>(const char*)::thread
              reference :  __cxa_guard_acquire
              reference :  __cxa_guard_release
              reference :  mbed_assert_internal
              reference :  events::EventQueue::dispatch_forever()
              reference :  mbed::Callback<T3(T4...)> mbed::callback<events::EventQueue, events::EventQueue, void, <>>(T2*, T3(T1::*)(T4...))
              reference :  rtos::Thread::Thread__sub_object(osPriority_t, unsigned, unsigned char*, const char*)
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/features/frameworks/greentea-client/source/greentea_metrics.o.
              definition:  greentea_metrics_setup()
              definition:  greentea_metrics_report()
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/features/frameworks/greentea-client/source/greentea_test_env.o.
              definition:  GREENTEA_SETUP
              definition:  GREENTEA_TEST_ENV_END
              definition:  GREENTEA_TEST_ENV_EXIT
              definition:  GREENTEA_TEST_ENV_FAILURE
              definition:  GREENTEA_TEST_ENV_HOST_TEST_NAME
              definition:  GREENTEA_TEST_ENV_HOST_TEST_VERSION
              definition:  GREENTEA_TEST_ENV_LCOV_START
              definition:  GREENTEA_TEST_ENV_SUCCESS
              definition:  GREENTEA_TEST_ENV_SYNC
              definition:  GREENTEA_TEST_ENV_TESTCASE_COUNT
              definition:  GREENTEA_TEST_ENV_TESTCASE_FINISH
              definition:  GREENTEA_TEST_ENV_TESTCASE_NAME
              definition:  GREENTEA_TEST_ENV_TESTCASE_START
              definition:  GREENTEA_TEST_ENV_TESTCASE_SUMMARY
              definition:  GREENTEA_TEST_ENV_TIMEOUT
              definition:  greentea_send_kv(const char*, const char*, int)
              definition:  greentea_send_kv(const char*, const char*, int, int)
              definition:  greentea_send_kv(const char*, int)
              definition:  greentea_send_kv(const char*, int, int)
              definition:  GREENTEA_SETUP_UUID(int, const char*, char*, unsigned)
              definition:  _GREENTEA_SETUP_COMMON(int, const char*, char*, unsigned)
              reference :  greentea_metrics_setup()
              definition:  GREENTEA_TESTCASE_START(const char*)
              reference :  greentea_metrics_report()
              definition:  GREENTEA_TESTCASE_FINISH(const char*, unsigned, unsigned)
              definition:  GREENTEA_TESTSUITE_RESULT(int)
              reference :  __2sprintf
              reference :  __aeabi_memclr4
              reference :  __rt_ctype_table
              reference :  _printf_d
              reference :  _printf_int_dec
              reference :  _printf_percent
              definition:  greentea_getc
              definition:  greentea_parse_kv
              definition:  greentea_putc
              definition:  greentea_send_kv
              definition:  greentea_write_string
              weak defn :  isspace
              reference :  read
              reference :  strcmp
              reference :  strlen
              reference :  write
              reference :  isalpha
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/features/frameworks/mbed-client-cli/source/ns_cmdline.o.
              reference :  __2snprintf
              reference :  __aeabi_memclr
              reference :  __aeabi_memclr4
              reference :  __aeabi_memcpy
              reference :  __aeabi_memmove
              reference :  __hardfp_strtof
              reference :  __rt_ctype_table
              reference :  __stdout
              reference :  _printf_d
              reference :  _printf_int_dec
              reference :  _printf_percent
              definition:  alias_command
              definition:  clear_command
              definition:  cmd
              definition:  cmd_add
              definition:  cmd_alias_add
              definition:  cmd_char_input
              definition:  cmd_ctrl_func
              definition:  cmd_delete
              definition:  cmd_echo_off
              definition:  cmd_echo_on
              definition:  cmd_echo_state
              definition:  cmd_escape_read
              definition:  cmd_escape_start
              definition:  cmd_exe
              definition:  cmd_free
              definition:  cmd_get_retfmt
              definition:  cmd_has_option
              definition:  cmd_history_size
              definition:  cmd_init
              definition:  cmd_init_screen
              definition:  cmd_input_passthrough_func
              definition:  cmd_mutex_lock
              definition:  cmd_mutex_release_func
              definition:  cmd_mutex_unlock
              definition:  cmd_mutex_wait_func
              definition:  cmd_next
              definition:  cmd_out_func
              definition:  cmd_output
              definition:  cmd_parameter_bool
              definition:  cmd_parameter_float
              definition:  cmd_parameter_index
              definition:  cmd_parameter_int
              definition:  cmd_parameter_last
              definition:  cmd_parameter_timestamp
              definition:  cmd_parameter_val
              definition:  cmd_printf
              definition:  cmd_ready
              definition:  cmd_request_screen_size
              definition:  cmd_reset
              definition:  cmd_set_ready_cb
              definition:  cmd_variable_add
              definition:  cmd_variable_add_int
              definition:  cmd_vprintf
              definition:  cmdline_get_prompt
              definition:  default_cmd_response_out
              definition:  echo_command
              definition:  false_command
              reference :  fflush
              reference :  free
              definition:  help_command
              definition:  history_command
              reference :  malloc
              reference :  memcmp
              reference :  ns_list_add_to_end_
              reference :  ns_list_add_to_start_
              reference :  ns_list_count_
              reference :  ns_list_get_last_
              reference :  ns_list_get_next_
              reference :  ns_list_get_previous_
              reference :  ns_list_init_
              reference :  ns_list_remove_
              definition:  replace_alias
              definition:  set_command
              reference :  strchr
              reference :  strcmp
              reference :  strcpy
              reference :  strlen
              reference :  strncmp
              reference :  strstr
              reference :  strtok
              reference :  strtol
              reference :  strtoul
              definition:  true_command
              definition:  unset_command
              reference :  vprintf
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/features/frameworks/unity/source/unity.o.
              definition:  Unity
              definition:  UnityAssertBits
              definition:  UnityAssertDoubleSpecial
              definition:  UnityAssertDoublesWithin
              definition:  UnityAssertEqualDoubleArray
              definition:  UnityAssertEqualFloatArray
              definition:  UnityAssertEqualIntArray
              definition:  UnityAssertEqualMemory
              definition:  UnityAssertEqualNumber
              definition:  UnityAssertEqualString
              definition:  UnityAssertEqualStringArray
              definition:  UnityAssertEqualStringLen
              definition:  UnityAssertFloatSpecial
              definition:  UnityAssertFloatsWithin
              definition:  UnityAssertNumbersWithin
              definition:  UnityBegin
              definition:  UnityConcludeTest
              definition:  UnityDefaultTestRun
              definition:  UnityEnd
              definition:  UnityFail
              definition:  UnityIgnore
              definition:  UnityPrint
              definition:  UnityPrintFail
              definition:  UnityPrintFloat
              definition:  UnityPrintLen
              definition:  UnityPrintMask
              definition:  UnityPrintNumber
              definition:  UnityPrintNumberByStyle
              definition:  UnityPrintNumberHex
              definition:  UnityPrintNumberUnsigned
              definition:  UnityPrintOk
              definition:  UnitySkipPrint
              definition:  UnityStrErr64
              definition:  UnityStrErrDouble
              definition:  UnityStrErrFloat
              reference :  __2snprintf
              reference :  __aeabi_dcmpgt
              reference :  __aeabi_dcmplt
              reference :  __aeabi_dmul
              reference :  __aeabi_dsub
              reference :  __aeabi_f2d
              reference :  __aeabi_memclr4
              reference :  __aeabi_uldivmod
              reference :  __stdout
              reference :  _printf_f
              reference :  _printf_fp_dec
              reference :  _printf_percent
              reference :  _printf_widthprec
              reference :  fflush
              weak defn :  setUp
              reference :  setjmp
              weak defn :  tearDown
              reference :  utest_safe_putc
              reference :  utest_unity_assert_failure
              reference :  utest_unity_ignore_failure
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/features/frameworks/utest/mbed-utest-shim.o.
              reference :  core_util_critical_section_enter
              reference :  core_util_critical_section_exit
              definition:  utest_v1_enter_critical_section
              definition:  utest_v1_leave_critical_section
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/features/frameworks/utest/source/unity_handler.o.
              reference :  utest::v1::Harness::raise_failure(utest::v1::failure_reason_t)
              reference :  greentea_putc
              definition:  utest_safe_putc
              definition:  utest_unity_assert_failure
              definition:  utest_unity_ignore_failure
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/features/frameworks/utest/source/utest_case.o.
              definition:  utest::v1::Case::Case(const char*, utest::v1::status_t(*)(const utest::v1::Case*, unsigned), utest::v1::control_t(*)(unsigned), utest::v1::status_t(*)(const utest::v1::Case*, unsigned, unsigned, utest::v1::failure_t), utest::v1::status_t(*)(const utest::v1::Case*, utest::v1::failure_t))
              definition:  utest::v1::Case::Case(const char*, utest::v1::status_t(*)(const utest::v1::Case*, unsigned), utest::v1::control_t(*)(), utest::v1::status_t(*)(const utest::v1::Case*, unsigned, unsigned, utest::v1::failure_t), utest::v1::status_t(*)(const utest::v1::Case*, utest::v1::failure_t))
              definition:  utest::v1::Case::Case(const char*, utest::v1::status_t(*)(const utest::v1::Case*, unsigned), void(*)(), utest::v1::status_t(*)(const utest::v1::Case*, unsigned, unsigned, utest::v1::failure_t), utest::v1::status_t(*)(const utest::v1::Case*, utest::v1::failure_t))
              definition:  utest::v1::Case::Case(const char*, utest::v1::control_t(*)(unsigned), utest::v1::status_t(*)(const utest::v1::Case*, utest::v1::failure_t))
              definition:  utest::v1::Case::Case(const char*, utest::v1::control_t(*)(unsigned), utest::v1::status_t(*)(const utest::v1::Case*, unsigned, unsigned, utest::v1::failure_t), utest::v1::status_t(*)(const utest::v1::Case*, utest::v1::failure_t))
              definition:  utest::v1::Case::Case(const char*, utest::v1::control_t(*)(), utest::v1::status_t(*)(const utest::v1::Case*, utest::v1::failure_t))
              definition:  utest::v1::Case::Case(const char*, utest::v1::control_t(*)(), utest::v1::status_t(*)(const utest::v1::Case*, unsigned, unsigned, utest::v1::failure_t), utest::v1::status_t(*)(const utest::v1::Case*, utest::v1::failure_t))
              definition:  utest::v1::Case::Case(const char*, void(*)(), utest::v1::status_t(*)(const utest::v1::Case*, utest::v1::failure_t))
              definition:  utest::v1::Case::Case(const char*, void(*)(), utest::v1::status_t(*)(const utest::v1::Case*, unsigned, unsigned, utest::v1::failure_t), utest::v1::status_t(*)(const utest::v1::Case*, utest::v1::failure_t))
              definition:  utest::v1::Case::Case__sub_object(const char*, utest::v1::status_t(*)(const utest::v1::Case*, unsigned), utest::v1::control_t(*)(unsigned), utest::v1::status_t(*)(const utest::v1::Case*, unsigned, unsigned, utest::v1::failure_t), utest::v1::status_t(*)(const utest::v1::Case*, utest::v1::failure_t))
              definition:  utest::v1::Case::Case__sub_object(const char*, utest::v1::status_t(*)(const utest::v1::Case*, unsigned), utest::v1::control_t(*)(), utest::v1::status_t(*)(const utest::v1::Case*, unsigned, unsigned, utest::v1::failure_t), utest::v1::status_t(*)(const utest::v1::Case*, utest::v1::failure_t))
              definition:  utest::v1::Case::Case__sub_object(const char*, utest::v1::status_t(*)(const utest::v1::Case*, unsigned), void(*)(), utest::v1::status_t(*)(const utest::v1::Case*, unsigned, unsigned, utest::v1::failure_t), utest::v1::status_t(*)(const utest::v1::Case*, utest::v1::failure_t))
              definition:  utest::v1::Case::Case__sub_object(const char*, utest::v1::control_t(*)(unsigned), utest::v1::status_t(*)(const utest::v1::Case*, utest::v1::failure_t))
              definition:  utest::v1::Case::Case__sub_object(const char*, utest::v1::control_t(*)(unsigned), utest::v1::status_t(*)(const utest::v1::Case*, unsigned, unsigned, utest::v1::failure_t), utest::v1::status_t(*)(const utest::v1::Case*, utest::v1::failure_t))
              definition:  utest::v1::Case::Case__sub_object(const char*, utest::v1::control_t(*)(), utest::v1::status_t(*)(const utest::v1::Case*, utest::v1::failure_t))
              definition:  utest::v1::Case::Case__sub_object(const char*, utest::v1::control_t(*)(), utest::v1::status_t(*)(const utest::v1::Case*, unsigned, unsigned, utest::v1::failure_t), utest::v1::status_t(*)(const utest::v1::Case*, utest::v1::failure_t))
              definition:  utest::v1::Case::Case__sub_object(const char*, void(*)(), utest::v1::status_t(*)(const utest::v1::Case*, utest::v1::failure_t))
              definition:  utest::v1::Case::Case__sub_object(const char*, void(*)(), utest::v1::status_t(*)(const utest::v1::Case*, unsigned, unsigned, utest::v1::failure_t), utest::v1::status_t(*)(const utest::v1::Case*, utest::v1::failure_t))
              definition:  utest::v1::Case::get_description() const
              definition:  utest::v1::Case::is_empty() const
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/features/frameworks/utest/source/utest_default_handlers.o.
              definition:  utest::v1::default_handlers
              reference :  utest::v1::greentea_abort_handlers
              definition:  utest::v1::verbose_continue_handlers
              definition:  utest::v1::verbose_case_setup_handler(const utest::v1::Case*, unsigned)
              definition:  utest::v1::verbose_test_setup_handler(unsigned)
              definition:  utest::v1::verbose_case_failure_handler(const utest::v1::Case*, utest::v1::failure_t)
              definition:  utest::v1::verbose_test_failure_handler(utest::v1::failure_t)
              definition:  utest::v1::verbose_case_teardown_handler(const utest::v1::Case*, unsigned, unsigned, utest::v1::failure_t)
              definition:  utest::v1::verbose_test_teardown_handler(unsigned, unsigned, utest::v1::failure_t)
              weak defn :  utest::v1::failure_t::failure_t__sub_object(const utest::v1::failure_t&)
              reference :  utest::v1::stringify(utest::v1::location_t)
              reference :  utest::v1::stringify(utest::v1::failure_reason_t)
              reference :  utest::v1::Case::get_description() const
              reference :  utest_printf
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/features/frameworks/utest/source/utest_greentea_handlers.o.
              reference :  GREENTEA_SETUP
              reference :  GREENTEA_TEST_ENV_TESTCASE_COUNT
              reference :  GREENTEA_TEST_ENV_TESTCASE_FINISH
              reference :  GREENTEA_TEST_ENV_TESTCASE_NAME
              reference :  GREENTEA_TEST_ENV_TESTCASE_START
              reference :  GREENTEA_TEST_ENV_TESTCASE_SUMMARY
              reference :  greentea_send_kv(const char*, const char*, int, int)
              reference :  greentea_send_kv(const char*, int)
              reference :  greentea_send_kv(const char*, int, int)
              reference :  GREENTEA_TESTSUITE_RESULT(int)
              definition:  utest::v1::selftest_handlers
              definition:  utest::v1::greentea_abort_handlers
              definition:  utest::v1::greentea_continue_handlers
              reference :  utest::v1::verbose_case_setup_handler(const utest::v1::Case*, unsigned)
              reference :  utest::v1::verbose_test_setup_handler(unsigned)
              definition:  utest::v1::greentea_case_setup_handler(const utest::v1::Case*, unsigned)
              definition:  utest::v1::greentea_test_setup_handler(unsigned)
              reference :  utest::v1::verbose_case_failure_handler(const utest::v1::Case*, utest::v1::failure_t)
              reference :  utest::v1::verbose_test_failure_handler(utest::v1::failure_t)
              definition:  utest::v1::greentea_test_failure_handler(utest::v1::failure_t)
              reference :  utest::v1::verbose_case_teardown_handler(const utest::v1::Case*, unsigned, unsigned, utest::v1::failure_t)
              reference :  utest::v1::verbose_test_teardown_handler(unsigned, unsigned, utest::v1::failure_t)
              definition:  utest::v1::greentea_case_teardown_handler(const utest::v1::Case*, unsigned, unsigned, utest::v1::failure_t)
              definition:  utest::v1::greentea_test_teardown_handler(unsigned, unsigned, utest::v1::failure_t)
              definition:  utest::v1::default_greentea_test_setup_handler(unsigned)
              definition:  utest::v1::greentea_case_failure_abort_handler(const utest::v1::Case*, utest::v1::failure_t)
              definition:  utest::v1::greentea_case_failure_continue_handler(const utest::v1::Case*, utest::v1::failure_t)
              definition:  utest::v1::greentea_testcase_notification_handler(const char*)
              reference :  utest::v1::Case::get_description() const
              reference :  greentea_send_kv
              reference :  utest::v1::failure_t::failure_t__sub_object(const utest::v1::failure_t&)
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/features/frameworks/utest/source/utest_harness.o.
              reference :  utest::v1::default_handlers
              reference :  utest::v1::greentea_testcase_notification_handler(const char*)
              definition:  utest::v1::Harness::raise_failure(utest::v1::failure_reason_t)
              definition:  utest::v1::Harness::run_next_case()
              definition:  utest::v1::Harness::set_scheduler(utest_v1_scheduler_t)
              definition:  utest::v1::Harness::handle_timeout()
              definition:  utest::v1::Harness::notify_testcases()
              definition:  utest::v1::Harness::validate_callback(utest::v1::control_t)
              definition:  utest::v1::Harness::schedule_next_case()
              definition:  utest::v1::Harness::run(const utest::v1::Specification&)
              definition:  utest::v1::Harness::run(const utest::v1::Specification&, unsigned)
              definition:  utest::v1::Harness::is_busy()
              weak defn :  utest::v1::control_t::make_base_control_t(utest::v1::repeat_t, unsigned)
              weak defn :  utest::v1::control_t::control_t__sub_object(utest::v1::repeat_t)
              weak defn :  utest::v1::control_t::control_t__sub_object(utest::v1::repeat_t, unsigned)
              weak defn :  utest::v1::control_t::control_t__sub_object(const utest::v1::base_control_t&)
              weak defn :  utest::v1::control_t::control_t__sub_object()
              weak defn :  utest::v1::failure_t::failure_t__sub_object(utest::v1::failure_reason_t)
              weak defn :  utest::v1::failure_t::failure_t__sub_object(utest::v1::failure_reason_t, utest::v1::location_t)
              weak defn :  utest::v1::operator +(const utest::v1::base_control_t&, const utest::v1::control_t&)
              weak defn :  utest::v1::operator +(const utest::v1::control_t&, const utest::v1::control_t&)
              weak defn :  utest::v1::handlers_t::get_handler(utest::v1::status_t(*)(const utest::v1::Case*, utest::v1::failure_t)) const
              weak defn :  utest::v1::handlers_t::get_handler(utest::v1::status_t(*)(const utest::v1::Case*, unsigned)) const
              weak defn :  utest::v1::handlers_t::get_handler(utest::v1::status_t(*)(const utest::v1::Case*, unsigned, unsigned, utest::v1::failure_t)) const
              weak defn :  utest::v1::handlers_t::get_handler(utest::v1::status_t(*)(unsigned)) const
              weak defn :  utest::v1::handlers_t::get_handler(void(*)(utest::v1::failure_t)) const
              weak defn :  utest::v1::handlers_t::get_handler(void(*)(unsigned, unsigned, utest::v1::failure_t)) const
              reference :  utest::v1::Case::get_description() const
              reference :  utest::v1::Case::is_empty() const
              reference :  exit
              reference :  mbed_assert_internal
              reference :  osMutexAcquire
              reference :  osMutexRelease
              reference :  singleton_mutex_id
              reference :  utest_v1_enter_critical_section
              reference :  utest_v1_get_scheduler
              reference :  utest_v1_leave_critical_section
              reference :  utest::v1::failure_t::failure_t__sub_object(const utest::v1::failure_t&)
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/features/frameworks/utest/source/utest_print.o.
              reference :  operator delete[] (void*)
              reference :  operator new[] (unsigned)
              reference :  greentea_write_string
              definition:  utest_printf
              reference :  vsnprintf
              reference :  vsprintf
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/features/frameworks/utest/source/utest_shim.o.
              reference :  mbed::TickerBase::attach(mbed::Callback<void()>, std::__1::chrono::duration<long long, std::__1::ratio<(long long)1, (long long)1000000>>)
              reference :  mbed::TickerBase::detach()
              reference :  mbed::Timeout::Timeout()
              reference :  mbed_assert_internal
              reference :  osMutexAcquire
              reference :  osMutexRelease
              reference :  singleton_mutex_id
              definition:  utest_timeout_object
              definition:  utest_v1_get_scheduler
              reference :  SingletonPtr<mbed::Timeout>::get() const
              reference :  SingletonPtr<mbed::Timeout>::operator ->() const
              reference :  mbed::Callback<void()>::Callback__sub_object<void(*)(), (int)0>(T1)
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/features/frameworks/utest/source/utest_stack_trace.o.
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/features/frameworks/utest/source/utest_types.o.
              definition:  utest::v1::CaseRepeat
              definition:  utest::v1::CaseNoRepeat
              definition:  utest::v1::CaseNoTimeout
              definition:  utest::v1::CaseRepeatAll
              definition:  utest::v1::CaseRepeatHandler
              definition:  utest::v1::CaseRepeatHandlerOnly
              definition:  utest::v1::CaseNext
              definition:  utest::v1::CaseAwait
              definition:  utest::v1::stringify(utest::v1::location_t)
              definition:  utest::v1::stringify(utest::v1::failure_reason_t)
              definition:  utest::v1::stringify(utest::v1::status_t)
              definition:  utest::v1::stringify(utest::v1::failure_t)
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/hal/source/LowPowerTickerWrapper.o.
              definition:  LowPowerTickerWrapper::irq_handler(void(*)(const ticker_data_t*))
              definition:  LowPowerTickerWrapper::_match_check(unsigned)
              definition:  LowPowerTickerWrapper::set_interrupt(unsigned)
              definition:  LowPowerTickerWrapper::fire_interrupt()
              definition:  LowPowerTickerWrapper::_lp_ticks_to_us(unsigned)
              definition:  LowPowerTickerWrapper::_schedule_match(unsigned)
              definition:  LowPowerTickerWrapper::clear_interrupt()
              definition:  LowPowerTickerWrapper::timeout_pending()
              definition:  LowPowerTickerWrapper::_timeout_handler()
              definition:  LowPowerTickerWrapper::disable_interrupt()
              definition:  LowPowerTickerWrapper::free()
              definition:  LowPowerTickerWrapper::init()
              definition:  LowPowerTickerWrapper::read()
              definition:  LowPowerTickerWrapper::_reset()
              definition:  LowPowerTickerWrapper::resume()
              definition:  LowPowerTickerWrapper::suspend()
              definition:  LowPowerTickerWrapper::get_info()
              definition:  LowPowerTickerWrapper::LowPowerTickerWrapper(const ticker_data_t*, const ticker_interface_t*, unsigned, unsigned)
              definition:  LowPowerTickerWrapper::LowPowerTickerWrapper__sub_object(const ticker_data_t*, const ticker_interface_t*, unsigned, unsigned)
              reference :  mbed::TickerBase::attach(mbed::Callback<void()>, std::__1::chrono::duration<long long, std::__1::ratio<(long long)1, (long long)1000000>>)
              reference :  mbed::TickerBase::detach()
              weak defn :  T1 mbed::detail::invoke_r<void, void(LowPowerTickerWrapper::*const &)(), <LowPowerTickerWrapper*const &>, (int)0>(T2&&, T3&&...)
              weak defn :  T1 mbed::detail::invoke_r<void, mbed::Callback<void()>::Callback<LowPowerTickerWrapper*, void(LowPowerTickerWrapper::*)(), (int)0>(T1, T2)::[lambda() (instance 1)]&, <>, (int)0>(T2&&, T3&&...)
              reference :  mbed::Timeout::Timeout()
              weak defn :  void mbed::Callback<void()>::target_call<mbed::Callback<void()>::Callback<LowPowerTickerWrapper*, void(LowPowerTickerWrapper::*)(), (int)0>(T1, T2)::[lambda() (instance 1)]>(const mbed::detail::CallbackBase*)
              weak defn :  void mbed::Callback<void()>::generate<mbed::Callback<void()>::Callback<LowPowerTickerWrapper*, void(LowPowerTickerWrapper::*)(), (int)0>(T1, T2)::[lambda() (instance 1)], void>(T1&&)
              weak defn :  mbed::Callback<void()>::Callback__sub_object<LowPowerTickerWrapper*, void(LowPowerTickerWrapper::*)(), (int)0>(T1, T2)
              weak defn :  mbed::Callback<T3(T4...)> mbed::callback<LowPowerTickerWrapper, LowPowerTickerWrapper, void, <>>(T2*, T3(T1::*)(T4...))
              weak defn :  std::__1::enable_if<((std::is_function<T2>::value&&(!std::is_base_of<T1, std::__1::decay<T3>::type>::value))&&(!is_reference_wrapper<std::__1::decay<T3>::type>::value)), decltype((((*std::forward<T3>(param#2)).*param#1)(std::forward<T4>(param#3)...)))>::type mstd::impl::INVOKE<LowPowerTickerWrapper, void(), LowPowerTickerWrapper*const &, <>>(T2T1::*, T3&&, T4&&...)
              weak defn :  std::__1::enable_if<((!std::is_member_pointer<std::__1::decay<T1>::type>::value)||(std::is_member_object_pointer<std::__1::decay<T1>::type>::value&&(sizeof...(param#2)!=(int)1))), decltype((std::forward<T1>(param#1)(std::forward<T2>(param#2)...)))>::type mstd::impl::INVOKE<mbed::Callback<void()>::Callback<LowPowerTickerWrapper*, void(LowPowerTickerWrapper::*)(), (int)0>(T1, T2)::[lambda() (instance 1)]&, <>>(T1&&, T2&&...)
              weak defn :  mstd::invoke_result<T1, <T2...>>::type mstd::invoke<void(LowPowerTickerWrapper::*const &)(), <LowPowerTickerWrapper*const &>>(T1&&, T2&&...)
              weak defn :  mstd::invoke_result<T1, <T2...>>::type mstd::invoke<mbed::Callback<void()>::Callback<LowPowerTickerWrapper*, void(LowPowerTickerWrapper::*)(), (int)0>(T1, T2)::[lambda() (instance 1)]&, <>>(T1&&, T2&&...)
              weak defn :  mbed::Callback<void()>::Callback<LowPowerTickerWrapper*, void(LowPowerTickerWrapper::*)(), (int)0>(T1, T2)::[lambda() (instance 1)]::operator ()() const
              reference :  _ticker_match_interval_passed
              reference :  core_util_critical_section_enter
              reference :  core_util_critical_section_exit
              reference :  core_util_in_critical_section
              reference :  mbed_assert_internal
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/hal/source/mbed_compat.o.
              weak defn :  analogin_free
              weak defn :  gpio_free
              weak defn :  hal_reset_reason_get_capabilities
              weak defn :  i2c_free
              weak defn :  spi_get_capabilities
              reference :  spi_master_cs_pinmap
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/hal/source/mbed_critical_section_api.o.
              weak defn :  hal_critical_section_enter
              weak defn :  hal_critical_section_exit
              weak defn :  hal_in_critical_section
              reference :  mbed_assert_internal
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/hal/source/mbed_flash_api.o.
              reference :  __aeabi_memcpy
              weak defn :  flash_read
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/hal/source/mbed_gpio.o.
              reference :  gpio_dir
              weak defn :  gpio_get_capabilities
              reference :  gpio_init
              definition:  gpio_init_in
              definition:  gpio_init_in_ex
              definition:  gpio_init_inout
              definition:  gpio_init_out
              definition:  gpio_init_out_ex
              reference :  gpio_mode
              weak defn :  gpio_pinmap
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/hal/source/mbed_gpio_irq.o.
              weak defn :  gpio_irq_pinmap
              reference :  gpio_pinmap
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/hal/source/mbed_itm_api.o.
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/hal/source/mbed_lp_ticker_api.o.
              definition:  get_lp_ticker_data
              reference :  lp_ticker_clear_interrupt
              reference :  lp_ticker_disable_interrupt
              reference :  lp_ticker_fire_interrupt
              reference :  lp_ticker_free
              reference :  lp_ticker_get_info
              reference :  lp_ticker_init
              definition:  lp_ticker_irq_handler
              reference :  lp_ticker_read
              reference :  lp_ticker_set_interrupt
              definition:  set_lp_ticker_irq_handler
              reference :  ticker_irq_handler
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/hal/source/mbed_lp_ticker_wrapper.o.
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/hal/source/mbed_pinmap_common.o.
              reference :  mbed_error
              reference :  pin_function
              reference :  pin_mode
              definition:  pinmap_find_function
              definition:  pinmap_find_peripheral
              definition:  pinmap_find_peripheral_pins
              definition:  pinmap_function
              definition:  pinmap_list_has_peripheral
              definition:  pinmap_list_has_pin
              definition:  pinmap_merge
              definition:  pinmap_peripheral
              definition:  pinmap_pinout
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/hal/source/mbed_pinmap_default.o.
              reference :  __cxa_guard_acquire
              reference :  __cxa_guard_release
              definition:  pinmap_ff_arduino_pin_to_string
              definition:  pinmap_ff_arduino_pins
              weak defn :  pinmap_gpio_restricted_pins
              reference :  pinmap_peripheral
              weak defn :  pinmap_restricted_pins
              weak defn :  pinmap_uart_restricted_peripherals
              reference :  serial_tx_pinmap
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/hal/source/mbed_ticker_api.o.
              reference :  __aeabi_uldivmod
              definition:  _ticker_match_interval_passed
              reference :  core_util_critical_section_enter
              reference :  core_util_critical_section_exit
              reference :  mbed_assert_internal
              reference :  mbed_error
              definition:  ticker_get_next_timestamp
              definition:  ticker_get_next_timestamp_us
              definition:  ticker_insert_event
              definition:  ticker_insert_event_us
              definition:  ticker_irq_handler
              definition:  ticker_read
              definition:  ticker_read_us
              definition:  ticker_remove_event
              definition:  ticker_resume
              definition:  ticker_set_handler
              definition:  ticker_suspend
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/hal/source/mbed_us_ticker_api.o.
              definition:  get_us_ticker_data
              definition:  set_us_ticker_irq_handler
              reference :  ticker_irq_handler
              reference :  us_ticker_clear_interrupt
              reference :  us_ticker_disable_interrupt
              reference :  us_ticker_fire_interrupt
              reference :  us_ticker_get_info
              reference :  us_ticker_init
              definition:  us_ticker_irq_handler
              reference :  us_ticker_read
              reference :  us_ticker_set_interrupt
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/hal/source/mpu/mbed_mpu_v7m.o.
              reference :  mbed_assert_internal
              definition:  mbed_mpu_enable_ram_xn
              definition:  mbed_mpu_enable_rom_wn
              definition:  mbed_mpu_free
              definition:  mbed_mpu_init
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/hal/source/mpu/mbed_mpu_v8m.o.
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/hal/source/static_pinmap.o.
              reference :  analogin_init
              weak defn :  analogin_init_direct
              reference :  analogout_init
              weak defn :  analogout_init_direct
              reference :  can_init
              weak defn :  can_init_direct
              reference :  can_init_freq
              weak defn :  can_init_freq_direct
              reference :  i2c_init
              weak defn :  i2c_init_direct
              reference :  pwmout_init
              weak defn :  pwmout_init_direct
              reference :  serial_init
              weak defn :  serial_init_direct
              reference :  serial_set_flow_control
              weak defn :  serial_set_flow_control_direct
              reference :  spi_init
              weak defn :  spi_init_direct
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/hal/usb/source/mbed_usb_phy.o.
              definition:  get_usb_phy()
              reference :  error
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/platform/cxxsupport/mstd_mutex.o.
              weak defn :  SingletonPtr<rtos::Mutex>::destroy()
              definition:  mstd::_Mutex_base::lock()
              definition:  mstd::_Mutex_base::unlock()
              definition:  mstd::_Mutex_base::try_lock()
              definition:  mstd::_Mutex_base::~_Mutex_base()
              definition:  mstd::_Mutex_base::~_Mutex_base__sub_object()
              reference :  rtos::Mutex::lock()
              reference :  rtos::Mutex::unlock()
              reference :  rtos::Mutex::trylock()
              reference :  rtos::Mutex::Mutex()
              reference :  rtos::Mutex::~Mutex()
              weak defn :  SingletonPtr<rtos::Mutex>::get_no_init() const
              reference :  mbed_assert_internal
              reference :  osMutexAcquire
              reference :  osMutexRelease
              reference :  singleton_mutex_id
              reference :  SingletonPtr<rtos::Mutex>::get() const
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/platform/mbed-trace/source/mbed_trace.o.
              reference :  __2snprintf
              reference :  __aeabi_memclr
              reference :  _printf_flags
              reference :  _printf_longlong_hex
              reference :  _printf_percent
              reference :  _printf_pre_padding
              reference :  _printf_return_value
              reference :  _printf_s
              reference :  _printf_str
              reference :  _printf_widthprec
              reference :  _printf_x
              reference :  free
              reference :  ip6_prefix_tos
              reference :  ip6tos
              reference :  malloc
              definition:  mbed_trace_array
              definition:  mbed_trace_buffer_sizes
              definition:  mbed_trace_cmdprint_function_set
              definition:  mbed_trace_config_get
              definition:  mbed_trace_config_set
              definition:  mbed_trace_exclude_filters_get
              definition:  mbed_trace_exclude_filters_set
              definition:  mbed_trace_free
              definition:  mbed_trace_include_filters_get
              definition:  mbed_trace_include_filters_set
              definition:  mbed_trace_init
              definition:  mbed_trace_ipv6
              definition:  mbed_trace_ipv6_prefix
              definition:  mbed_trace_last
              definition:  mbed_trace_mutex_release_function_set
              definition:  mbed_trace_mutex_wait_function_set
              definition:  mbed_trace_prefix_function_set
              definition:  mbed_trace_print_function_set
              definition:  mbed_trace_suffix_function_set
              definition:  mbed_tracef
              definition:  mbed_vtracef
              reference :  puts
              reference :  strncpy
              reference :  strstr
              reference :  vsnprintf
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/platform/randlib/source/randLIB.o.
              reference :  arm_random_module_init
              reference :  arm_random_seed_get
              definition:  randLIB_add_seed
              definition:  randLIB_get_16bit
              definition:  randLIB_get_32bit
              definition:  randLIB_get_64bit
              definition:  randLIB_get_8bit
              definition:  randLIB_get_n_bytes_random
              definition:  randLIB_get_random_in_range
              definition:  randLIB_randomise_base
              definition:  randLIB_seed_random
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/platform/source/ATCmdParser.o.
              definition:  mbed::ATCmdParser::remove_oob(const char*)
              definition:  mbed::ATCmdParser::vrecvscanf(const char*, std::__va_list, bool)
              definition:  mbed::ATCmdParser::process_oob()
              weak defn :  mbed::ATCmdParser::oob::oob__sub_object()
              definition:  mbed::ATCmdParser::oob(const char*, mbed::Callback<void()>)
              definition:  mbed::ATCmdParser::getc()
              definition:  mbed::ATCmdParser::putc(char)
              definition:  mbed::ATCmdParser::read(char*, int)
              definition:  mbed::ATCmdParser::recv(const char*, ...)
              definition:  mbed::ATCmdParser::send(const char*, ...)
              definition:  mbed::ATCmdParser::abort()
              definition:  mbed::ATCmdParser::flush()
              definition:  mbed::ATCmdParser::scanf(const char*, ...)
              definition:  mbed::ATCmdParser::vrecv(const char*, std::__va_list)
              definition:  mbed::ATCmdParser::vsend(const char*, std::__va_list)
              definition:  mbed::ATCmdParser::write(const char*, int)
              definition:  mbed::ATCmdParser::printf(const char*, ...)
              definition:  mbed::ATCmdParser::vscanf(const char*, std::__va_list)
              definition:  mbed::ATCmdParser::vprintf(const char*, std::__va_list)
              reference :  mbed::poll(mbed::pollfh*, unsigned, int)
              reference :  operator delete (void*)
              reference :  operator new(unsigned)
              reference :  __0sscanf
              reference :  __aeabi_memcpy
              reference :  __stderr
              reference :  _scanf_int
              reference :  _scanf_mbtowc
              reference :  mbed_assert_internal
              reference :  memcmp
              reference :  strlen
              reference :  vfprintf
              reference :  vsprintf
              reference :  vsscanf
              reference :  mbed::FileHandle::readable() const
              reference :  mbed::Callback<void()>::operator ()() const
              reference :  mbed::Callback<void()>::Callback__sub_object()
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/platform/source/CThunkBase.o.
              definition:  CThunkBase::cthunk_free(void(*)())
              weak defn :  void CThunkBase::thunk_entry<(int)0>()
              weak defn :  void CThunkBase::thunk_entry<(int)1>()
              weak defn :  void CThunkBase::thunk_entry<(int)2>()
              weak defn :  void CThunkBase::thunk_entry<(int)3>()
              weak defn :  void CThunkBase::thunk_entry<(int)4>()
              weak defn :  void CThunkBase::thunk_entry<(int)5>()
              weak defn :  void CThunkBase::thunk_entry<(int)6>()
              weak defn :  void CThunkBase::thunk_entry<(int)7>()
              definition:  CThunkBase::_thunk_table
              definition:  CThunkBase::cthunk_alloc(CThunkBase*)
              definition:  CThunkBase::_thunk_storage
              definition:  CThunkBase::cthunk_free_real(void(*)())
              definition:  CThunkBase::_cthunk_free_real
              reference :  core_util_critical_section_enter
              reference :  core_util_critical_section_exit
              reference :  mbed_error
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/platform/source/CriticalSectionLock.o.
              definition:  mbed::CriticalSectionLock::enable()
              definition:  mbed::CriticalSectionLock::disable()
              definition:  mbed::CriticalSectionLock::CriticalSectionLock()
              definition:  mbed::CriticalSectionLock::CriticalSectionLock__sub_object()
              definition:  mbed::CriticalSectionLock::~CriticalSectionLock()
              definition:  mbed::CriticalSectionLock::~CriticalSectionLock__sub_object()
              reference :  core_util_critical_section_enter
              reference :  core_util_critical_section_exit
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/platform/source/DeepSleepLock.o.
              definition:  mbed::DeepSleepLock::lock()
              definition:  mbed::DeepSleepLock::unlock()
              definition:  mbed::DeepSleepLock::DeepSleepLock()
              definition:  mbed::DeepSleepLock::DeepSleepLock__sub_object()
              definition:  mbed::DeepSleepLock::~DeepSleepLock()
              definition:  mbed::DeepSleepLock::~DeepSleepLock__sub_object()
              weak defn :  core_util_atomic_decr_u16
              weak defn :  core_util_atomic_incr_u16
              reference :  core_util_critical_section_exit
              reference :  mbed_error
              reference :  sleep_manager_lock_deep_sleep_internal
              reference :  sleep_manager_unlock_deep_sleep_internal
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/platform/source/FileBase.o.
              reference :  mbed::remove_filehandle(mbed::FileHandle*)
              definition:  mbed::FileBase::getPathType()
              definition:  mbed::FileBase::set_as_default()
              definition:  mbed::FileBase::get(int)
              definition:  mbed::FileBase::_head
              definition:  mbed::FileBase::_mutex
              definition:  mbed::FileBase::lookup(const char*, unsigned)
              definition:  mbed::FileBase::getName()
              definition:  mbed::FileBase::_default
              definition:  mbed::FileBase::FileBase(const char*, mbed::PathType)
              definition:  mbed::FileBase::FileBase__sub_object(const char*, mbed::PathType)
              definition:  mbed::FileBase::~FileBase__deallocating()
              definition:  mbed::FileBase::~FileBase()
              definition:  mbed::FileBase::~FileBase__sub_object()
              reference :  rtos::Mutex::lock()
              reference :  rtos::Mutex::unlock()
              reference :  rtos::Mutex::Mutex()
              definition:  vtable for mbed::FileBase
              reference :  operator delete (void*)
              reference :  mbed_assert_internal
              reference :  memcmp
              reference :  osMutexAcquire
              reference :  osMutexRelease
              reference :  singleton_mutex_id
              reference :  strlen
              reference :  SingletonPtr<rtos::Mutex>::operator ->() const
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/platform/source/FileHandle.o.
              definition:  mbed::FileHandle::size()
              weak defn :  mbed::FileHandle::isatty()
              weak defn :  mbed::FileHandle::~FileHandle__deallocating()
              definition:  vtable for mbed::FileHandle
              reference :  __cxa_pure_virtual
              reference :  mbed::FileHandle::~FileHandle__sub_object()
              reference :  mbed::FileHandle::sync()
              reference :  mbed::FileHandle::tell()
              reference :  mbed::FileHandle::rewind()
              reference :  mbed::FileHandle::truncate(long)
              reference :  mbed::FileHandle::set_blocking(bool)
              reference :  mbed::FileHandle::is_blocking() const
              reference :  mbed::FileHandle::enable_input(bool)
              reference :  mbed::FileHandle::enable_output(bool)
              reference :  mbed::FileHandle::poll(short) const
              reference :  mbed::FileHandle::sigio(mbed::Callback<void()>)
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/platform/source/FilePath.o.
              reference :  mbed::FileBase::getPathType()
              reference :  mbed::FileBase::lookup(const char*, unsigned)
              definition:  mbed::FilePath::fileSystem()
              definition:  mbed::FilePath::isFileSystem()
              definition:  mbed::FilePath::file()
              definition:  mbed::FilePath::exists()
              definition:  mbed::FilePath::isFile()
              definition:  mbed::FilePath::fileName()
              definition:  mbed::FilePath::FilePath(const char*)
              definition:  mbed::FilePath::FilePath__sub_object(const char*)
              reference :  mbed_assert_internal
              reference :  strspn
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/platform/source/FileSystemHandle.o.
              definition:  mbed::FileSystemHandle::open(mbed::DirHandle**, const char*)
              definition:  mbed::FileSystemHandle::stat(const char*, stat*)
              definition:  mbed::FileSystemHandle::mkdir(const char*, unsigned)
              definition:  mbed::FileSystemHandle::remove(const char*)
              definition:  mbed::FileSystemHandle::rename(const char*, const char*)
              definition:  mbed::FileSystemHandle::statvfs(const char*, statvfs*)
              weak defn :  mbed::FileSystemHandle::~FileSystemHandle__deallocating()
              weak defn :  mbed::FileSystemHandle::~FileSystemHandle__sub_object()
              definition:  vtable for mbed::FileSystemHandle
              reference :  __cxa_pure_virtual
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/platform/source/LocalFileSystem.o.
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/platform/source/Stream.o.
              reference :  mbed::FileHandle::size()
              reference :  mbed::mbed_set_unbuffered_stream(std::__FILE*)
              definition:  mbed::Stream::getc()
              definition:  mbed::Stream::gets(char*, int)
              definition:  mbed::Stream::putc(int)
              definition:  mbed::Stream::puts(const char*)
              definition:  mbed::Stream::read(void*, unsigned)
              definition:  mbed::Stream::seek(long, int)
              definition:  mbed::Stream::size()
              definition:  mbed::Stream::sync()
              definition:  mbed::Stream::tell()
              definition:  mbed::Stream::close()
              definition:  mbed::Stream::scanf(const char*, ...)
              definition:  mbed::Stream::write(const void*, unsigned)
              definition:  mbed::Stream::isatty()
              definition:  mbed::Stream::printf(const char*, ...)
              definition:  mbed::Stream::rewind()
              definition:  mbed::Stream::vscanf(const char*, std::__va_list)
              definition:  mbed::Stream::vprintf(const char*, std::__va_list)
              definition:  mbed::Stream::Stream__sub_object(const char*)
              definition:  mbed::Stream::~Stream__deallocating()
              definition:  mbed::Stream::~Stream()
              definition:  mbed::Stream::~Stream__sub_object()
              reference :  mbed::fdopen(mbed::FileHandle*, const char*)
              reference :  mbed::FileBase::FileBase__sub_object(const char*, mbed::PathType)
              reference :  mbed::FileBase::~FileBase__sub_object()
              weak defn :  mbed::FileLike::FileLike__sub_object(const char*)
              weak defn :  mbed::FileLike::~FileLike__deallocating()
              weak defn :  mbed::FileLike::~FileLike__sub_object()
              reference :  vtable for mbed::FileHandle
              definition:  vtable for mbed::Stream
              weak defn :  vtable for mbed::FileLike
              definition:  thunk{-4} to mbed::Stream::~Stream__deallocating()
              definition:  thunk{-4} to mbed::Stream::~Stream()
              weak defn :  thunk{-4} to mbed::FileLike::~FileLike__deallocating()
              weak defn :  thunk{-4} to mbed::FileLike::~FileLike()
              reference :  __cxa_pure_virtual
              reference :  fclose
              reference :  fflush
              reference :  fgetc
              reference :  fgets
              reference :  fputc
              reference :  fputs
              reference :  fseek
              reference :  mbed_error
              reference :  vfprintf
              reference :  vfscanf
              reference :  mbed::FileHandle::FileHandle__sub_object()
              reference :  mbed::FileHandle::~FileHandle__sub_object()
              reference :  mbed::FileHandle::truncate(long)
              reference :  mbed::FileHandle::set_blocking(bool)
              reference :  mbed::FileHandle::is_blocking() const
              reference :  mbed::FileHandle::enable_input(bool)
              reference :  mbed::FileHandle::enable_output(bool)
              reference :  mbed::FileHandle::poll(short) const
              reference :  mbed::FileHandle::sigio(mbed::Callback<void()>)
              reference :  mbed::Stream::lock()
              reference :  mbed::Stream::unlock()
              reference :  mbed::FileHandle::sync()
              reference :  mbed::FileHandle::isatty()
              reference :  mbed::FileHandle::tell()
              reference :  mbed::FileHandle::rewind()
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/platform/source/SysTimer.o.
              reference :  mbed::TimerEvent::insert_absolute(std::__1::chrono::time_point<mbed::TickerDataClock, std::__1::chrono::duration<long long, std::__1::ratio<(long long)1, (long long)1000000>>>)
              reference :  mbed::TimerEvent::remove()
              reference :  mbed::TimerEvent::TimerEvent__sub_object(const ticker_data_t*)
              reference :  mbed::TimerEvent::~TimerEvent__sub_object()
              weak defn :  mbed::internal::SysTimer<std::__1::ratio<(long long)1, (long long)1000>, (bool)0>::start_tick()
              weak defn :  mbed::internal::SysTimer<std::__1::ratio<(long long)1, (long long)1000>, (bool)0>::cancel_tick()
              weak defn :  mbed::internal::SysTimer<std::__1::ratio<(long long)1, (long long)1000>, (bool)0>::cancel_wake()
              weak defn :  mbed::internal::SysTimer<std::__1::ratio<(long long)1, (long long)1000>, (bool)0>::set_wake_time(std::__1::chrono::time_point<mbed::internal::SysTimer<std::__1::ratio<(long long)1, (long long)1000>, (bool)0>, std::__1::chrono::duration<unsigned long long, std::__1::ratio<(long long)1, (long long)1000>>>)
              weak defn :  mbed::internal::SysTimer<std::__1::ratio<(long long)1, (long long)1000>, (bool)0>::_schedule_tick()
              weak defn :  mbed::internal::SysTimer<std::__1::ratio<(long long)1, (long long)1000>, (bool)0>::get_irq_number()
              weak defn :  mbed::internal::SysTimer<std::__1::ratio<(long long)1, (long long)1000>, (bool)0>::_increment_tick()
              weak defn :  mbed::internal::SysTimer<std::__1::ratio<(long long)1, (long long)1000>, (bool)0>::_set_irq_pending()
              weak defn :  mbed::internal::SysTimer<std::__1::ratio<(long long)1, (long long)1000>, (bool)0>::acknowledge_tick()
              weak defn :  mbed::internal::SysTimer<std::__1::ratio<(long long)1, (long long)1000>, (bool)0>::_clear_irq_pending()
              weak defn :  mbed::internal::SysTimer<std::__1::ratio<(long long)1, (long long)1000>, (bool)0>::update_and_get_tick()
              weak defn :  mbed::internal::SysTimer<std::__1::ratio<(long long)1, (long long)1000>, (bool)0>::handler()
              weak defn :  mbed::internal::SysTimer<std::__1::ratio<(long long)1, (long long)1000>, (bool)0>::SysTimer(const ticker_data_t*)
              weak defn :  mbed::internal::SysTimer<std::__1::ratio<(long long)1, (long long)1000>, (bool)0>::SysTimer()
              weak defn :  mbed::internal::SysTimer<std::__1::ratio<(long long)1, (long long)1000>, (bool)0>::SysTimer__sub_object(const ticker_data_t*)
              weak defn :  mbed::internal::SysTimer<std::__1::ratio<(long long)1, (long long)1000>, (bool)0>::SysTimer__sub_object()
              weak defn :  mbed::internal::SysTimer<std::__1::ratio<(long long)1, (long long)1000>, (bool)0>::~SysTimer()
              weak defn :  mbed::internal::SysTimer<std::__1::ratio<(long long)1, (long long)1000>, (bool)0>::~SysTimer__sub_object()
              weak defn :  mbed::internal::SysTimer<std::__1::ratio<(long long)1, (long long)1000>, (bool)1>::start_tick()
              weak defn :  mbed::internal::SysTimer<std::__1::ratio<(long long)1, (long long)1000>, (bool)1>::cancel_tick()
              weak defn :  mbed::internal::SysTimer<std::__1::ratio<(long long)1, (long long)1000>, (bool)1>::cancel_wake()
              weak defn :  mbed::internal::SysTimer<std::__1::ratio<(long long)1, (long long)1000>, (bool)1>::set_wake_time(std::__1::chrono::time_point<mbed::internal::SysTimer<std::__1::ratio<(long long)1, (long long)1000>, (bool)1>, std::__1::chrono::duration<unsigned long long, std::__1::ratio<(long long)1, (long long)1000>>>)
              weak defn :  mbed::internal::SysTimer<std::__1::ratio<(long long)1, (long long)1000>, (bool)1>::_schedule_tick()
              weak defn :  mbed::internal::SysTimer<std::__1::ratio<(long long)1, (long long)1000>, (bool)1>::get_irq_number()
              weak defn :  mbed::internal::SysTimer<std::__1::ratio<(long long)1, (long long)1000>, (bool)1>::_increment_tick()
              weak defn :  mbed::internal::SysTimer<std::__1::ratio<(long long)1, (long long)1000>, (bool)1>::_set_irq_pending()
              weak defn :  mbed::internal::SysTimer<std::__1::ratio<(long long)1, (long long)1000>, (bool)1>::acknowledge_tick()
              weak defn :  mbed::internal::SysTimer<std::__1::ratio<(long long)1, (long long)1000>, (bool)1>::_clear_irq_pending()
              weak defn :  mbed::internal::SysTimer<std::__1::ratio<(long long)1, (long long)1000>, (bool)1>::update_and_get_tick()
              weak defn :  mbed::internal::SysTimer<std::__1::ratio<(long long)1, (long long)1000>, (bool)1>::handler()
              weak defn :  mbed::internal::SysTimer<std::__1::ratio<(long long)1, (long long)1000>, (bool)1>::SysTimer(const ticker_data_t*)
              weak defn :  mbed::internal::SysTimer<std::__1::ratio<(long long)1, (long long)1000>, (bool)1>::SysTimer()
              weak defn :  mbed::internal::SysTimer<std::__1::ratio<(long long)1, (long long)1000>, (bool)1>::SysTimer__sub_object(const ticker_data_t*)
              weak defn :  mbed::internal::SysTimer<std::__1::ratio<(long long)1, (long long)1000>, (bool)1>::SysTimer__sub_object()
              weak defn :  mbed::internal::SysTimer<std::__1::ratio<(long long)1, (long long)1000>, (bool)1>::~SysTimer()
              weak defn :  mbed::internal::SysTimer<std::__1::ratio<(long long)1, (long long)1000>, (bool)1>::~SysTimer__sub_object()
              weak defn :  mbed::internal::SysTimer<std::__1::ratio<(long long)21, (long long)500>, (bool)0>::start_tick()
              weak defn :  mbed::internal::SysTimer<std::__1::ratio<(long long)21, (long long)500>, (bool)0>::cancel_tick()
              weak defn :  mbed::internal::SysTimer<std::__1::ratio<(long long)21, (long long)500>, (bool)0>::cancel_wake()
              weak defn :  mbed::internal::SysTimer<std::__1::ratio<(long long)21, (long long)500>, (bool)0>::set_wake_time(std::__1::chrono::time_point<mbed::internal::SysTimer<std::__1::ratio<(long long)21, (long long)500>, (bool)0>, std::__1::chrono::duration<unsigned long long, std::__1::ratio<(long long)21, (long long)500>>>)
              weak defn :  mbed::internal::SysTimer<std::__1::ratio<(long long)21, (long long)500>, (bool)0>::_schedule_tick()
              weak defn :  mbed::internal::SysTimer<std::__1::ratio<(long long)21, (long long)500>, (bool)0>::get_irq_number()
              weak defn :  mbed::internal::SysTimer<std::__1::ratio<(long long)21, (long long)500>, (bool)0>::_increment_tick()
              weak defn :  mbed::internal::SysTimer<std::__1::ratio<(long long)21, (long long)500>, (bool)0>::_set_irq_pending()
              weak defn :  mbed::internal::SysTimer<std::__1::ratio<(long long)21, (long long)500>, (bool)0>::acknowledge_tick()
              weak defn :  mbed::internal::SysTimer<std::__1::ratio<(long long)21, (long long)500>, (bool)0>::_clear_irq_pending()
              weak defn :  mbed::internal::SysTimer<std::__1::ratio<(long long)21, (long long)500>, (bool)0>::update_and_get_tick()
              weak defn :  mbed::internal::SysTimer<std::__1::ratio<(long long)21, (long long)500>, (bool)0>::handler()
              weak defn :  mbed::internal::SysTimer<std::__1::ratio<(long long)21, (long long)500>, (bool)0>::SysTimer(const ticker_data_t*)
              weak defn :  mbed::internal::SysTimer<std::__1::ratio<(long long)21, (long long)500>, (bool)0>::SysTimer()
              weak defn :  mbed::internal::SysTimer<std::__1::ratio<(long long)21, (long long)500>, (bool)0>::SysTimer__sub_object(const ticker_data_t*)
              weak defn :  mbed::internal::SysTimer<std::__1::ratio<(long long)21, (long long)500>, (bool)0>::SysTimer__sub_object()
              weak defn :  mbed::internal::SysTimer<std::__1::ratio<(long long)21, (long long)500>, (bool)0>::~SysTimer()
              weak defn :  mbed::internal::SysTimer<std::__1::ratio<(long long)21, (long long)500>, (bool)0>::~SysTimer__sub_object()
              weak defn :  mbed::TickerDataClock::operator ->() const
              weak defn :  mbed::internal::SysTimer<std::__1::ratio<(long long)1, (long long)1000>, (bool)0>::wake_time_set() const
              weak defn :  mbed::internal::SysTimer<std::__1::ratio<(long long)1, (long long)1000>, (bool)0>::_elapsed_ticks() const
              weak defn :  mbed::internal::SysTimer<std::__1::ratio<(long long)1, (long long)1000>, (bool)0>::wake_time_passed() const
              weak defn :  mbed::internal::SysTimer<std::__1::ratio<(long long)1, (long long)1000>, (bool)0>::get_time_since_tick() const
              weak defn :  mbed::internal::SysTimer<std::__1::ratio<(long long)1, (long long)1000>, (bool)0>::unacknowledged_ticks() const
              weak defn :  mbed::internal::SysTimer<std::__1::ratio<(long long)1, (long long)1000>, (bool)0>::ticking() const
              weak defn :  mbed::internal::SysTimer<std::__1::ratio<(long long)1, (long long)1000>, (bool)0>::get_tick() const
              weak defn :  mbed::internal::SysTimer<std::__1::ratio<(long long)1, (long long)1000>, (bool)0>::get_time() const
              weak defn :  mbed::internal::SysTimer<std::__1::ratio<(long long)1, (long long)1000>, (bool)1>::wake_time_set() const
              weak defn :  mbed::internal::SysTimer<std::__1::ratio<(long long)1, (long long)1000>, (bool)1>::_elapsed_ticks() const
              weak defn :  mbed::internal::SysTimer<std::__1::ratio<(long long)1, (long long)1000>, (bool)1>::wake_time_passed() const
              weak defn :  mbed::internal::SysTimer<std::__1::ratio<(long long)1, (long long)1000>, (bool)1>::get_time_since_tick() const
              weak defn :  mbed::internal::SysTimer<std::__1::ratio<(long long)1, (long long)1000>, (bool)1>::unacknowledged_ticks() const
              weak defn :  mbed::internal::SysTimer<std::__1::ratio<(long long)1, (long long)1000>, (bool)1>::ticking() const
              weak defn :  mbed::internal::SysTimer<std::__1::ratio<(long long)1, (long long)1000>, (bool)1>::get_tick() const
              weak defn :  mbed::internal::SysTimer<std::__1::ratio<(long long)1, (long long)1000>, (bool)1>::get_time() const
              weak defn :  mbed::internal::SysTimer<std::__1::ratio<(long long)21, (long long)500>, (bool)0>::wake_time_set() const
              weak defn :  mbed::internal::SysTimer<std::__1::ratio<(long long)21, (long long)500>, (bool)0>::_elapsed_ticks() const
              weak defn :  mbed::internal::SysTimer<std::__1::ratio<(long long)21, (long long)500>, (bool)0>::wake_time_passed() const
              weak defn :  mbed::internal::SysTimer<std::__1::ratio<(long long)21, (long long)500>, (bool)0>::get_time_since_tick() const
              weak defn :  mbed::internal::SysTimer<std::__1::ratio<(long long)21, (long long)500>, (bool)0>::unacknowledged_ticks() const
              weak defn :  mbed::internal::SysTimer<std::__1::ratio<(long long)21, (long long)500>, (bool)0>::ticking() const
              weak defn :  mbed::internal::SysTimer<std::__1::ratio<(long long)21, (long long)500>, (bool)0>::get_tick() const
              weak defn :  mbed::internal::SysTimer<std::__1::ratio<(long long)21, (long long)500>, (bool)0>::get_time() const
              weak defn :  vtable for mbed::internal::SysTimer<std::__1::ratio<(long long)1, (long long)1000>, (bool)0>
              weak defn :  vtable for mbed::internal::SysTimer<std::__1::ratio<(long long)1, (long long)1000>, (bool)1>
              weak defn :  vtable for mbed::internal::SysTimer<std::__1::ratio<(long long)21, (long long)500>, (bool)0>
              reference :  __aeabi_uldivmod
              weak defn :  core_util_atomic_decr_u8
              reference :  core_util_atomic_load_u64
              reference :  get_lp_ticker_data
              reference :  mbed_assert_internal
              reference :  sleep_manager_lock_deep_sleep_internal
              reference :  sleep_manager_unlock_deep_sleep_internal
              reference :  ticker_read_us
              reference :  mbed::TickerDataClock::now() const
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/platform/source/TARGET_CORTEX_M/TOOLCHAIN_ARM/except.o.
              definition:  HardFault_Handler
              definition:  MemManage_Handler
              definition:  BusFault_Handler
              definition:  UsageFault_Handler
              definition:  Fault_Handler
              reference :  Image$$RW_m_crash_data$$ZI$$Base
              reference :  mbed_fault_handler
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/platform/source/TARGET_CORTEX_M/mbed_fault_handler.o.
              reference :  Image$$RW_m_crash_data$$ZI$$Base
              reference :  __aeabi_memcpy4
              reference :  core_util_atomic_exchange_u8
              reference :  mbed_error
              reference :  mbed_error_in_progress
              reference :  mbed_error_printf
              definition:  mbed_fault_handler
              definition:  mbed_get_reboot_fault_context
              definition:  print_context_info
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/platform/source/mbed_alloc_wrappers.o.
              definition:  mbed_stats_heap_get
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/platform/source/mbed_application.o.
              reference :  mbed_mpu_free
              definition:  mbed_start_application
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/platform/source/mbed_assert.o.
              definition:  mbed_assert_internal
              reference :  mbed_error
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/platform/source/mbed_atomic_impl.o.
              definition:  core_util_atomic_cas_ptr
              definition:  core_util_atomic_cas_u16
              definition:  core_util_atomic_cas_u32
              definition:  core_util_atomic_cas_u64
              definition:  core_util_atomic_cas_u8
              definition:  core_util_atomic_compare_exchange_weak_u16
              definition:  core_util_atomic_compare_exchange_weak_u32
              definition:  core_util_atomic_compare_exchange_weak_u64
              definition:  core_util_atomic_compare_exchange_weak_u8
              definition:  core_util_atomic_decr_ptr
              definition:  core_util_atomic_decr_u16
              definition:  core_util_atomic_decr_u32
              definition:  core_util_atomic_decr_u64
              definition:  core_util_atomic_decr_u8
              definition:  core_util_atomic_exchange_ptr
              definition:  core_util_atomic_exchange_u16
              definition:  core_util_atomic_exchange_u32
              definition:  core_util_atomic_exchange_u64
              definition:  core_util_atomic_exchange_u8
              definition:  core_util_atomic_fetch_add_u16
              definition:  core_util_atomic_fetch_add_u32
              definition:  core_util_atomic_fetch_add_u64
              definition:  core_util_atomic_fetch_add_u8
              definition:  core_util_atomic_fetch_and_u16
              definition:  core_util_atomic_fetch_and_u32
              definition:  core_util_atomic_fetch_and_u64
              definition:  core_util_atomic_fetch_and_u8
              definition:  core_util_atomic_fetch_or_u16
              definition:  core_util_atomic_fetch_or_u32
              definition:  core_util_atomic_fetch_or_u64
              definition:  core_util_atomic_fetch_or_u8
              definition:  core_util_atomic_fetch_sub_u16
              definition:  core_util_atomic_fetch_sub_u32
              definition:  core_util_atomic_fetch_sub_u64
              definition:  core_util_atomic_fetch_sub_u8
              definition:  core_util_atomic_fetch_xor_u16
              definition:  core_util_atomic_fetch_xor_u32
              definition:  core_util_atomic_fetch_xor_u64
              definition:  core_util_atomic_fetch_xor_u8
              definition:  core_util_atomic_flag_test_and_set
              definition:  core_util_atomic_incr_ptr
              definition:  core_util_atomic_incr_u16
              definition:  core_util_atomic_incr_u32
              definition:  core_util_atomic_incr_u64
              definition:  core_util_atomic_incr_u8
              definition:  core_util_atomic_load_u64
              definition:  core_util_atomic_store_u64
              reference :  core_util_critical_section_enter
              reference :  core_util_critical_section_exit
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/platform/source/mbed_board.o.
              reference :  core_util_critical_section_enter
              reference :  core_util_critical_section_exit
              reference :  gpio_init_out
              weak defn :  mbed_die
              definition:  mbed_error_printf
              definition:  mbed_error_puts
              definition:  mbed_error_vprintf
              reference :  vsnprintf
              reference :  wait_us
              reference :  write
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/platform/source/mbed_critical.o.
              definition:  core_util_are_interrupts_enabled
              definition:  core_util_critical_section_enter
              definition:  core_util_critical_section_exit
              definition:  core_util_in_critical_section
              definition:  core_util_is_isr_active
              reference :  hal_critical_section_enter
              reference :  hal_critical_section_exit
              reference :  hal_in_critical_section
              reference :  mbed_assert_internal
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/platform/source/mbed_error.o.
              reference :  Image$$RW_m_crash_data$$ZI$$Base
              reference :  __aeabi_memclr4
              reference :  core_util_are_interrupts_enabled
              reference :  core_util_atomic_exchange_u8
              reference :  core_util_atomic_flag_test_and_set
              reference :  core_util_critical_section_enter
              reference :  core_util_critical_section_exit
              reference :  core_util_is_isr_active
              weak defn :  error
              reference :  exit
              definition:  mbed_clear_all_errors
              reference :  mbed_die
              weak defn :  mbed_error
              weak defn :  mbed_error_hook
              definition:  mbed_error_in_progress
              definition:  mbed_error_initialize
              reference :  mbed_error_printf
              reference :  mbed_error_puts
              weak defn :  mbed_error_reboot_callback
              reference :  mbed_error_vprintf
              definition:  mbed_get_error_count
              definition:  mbed_get_error_in_progress
              definition:  mbed_get_first_error
              definition:  mbed_get_first_error_info
              definition:  mbed_get_last_error
              definition:  mbed_get_last_error_info
              definition:  mbed_get_reboot_error_info
              definition:  mbed_make_error
              definition:  mbed_reset_reboot_count
              definition:  mbed_reset_reboot_error_info
              definition:  mbed_set_error_hook
              reference :  mbed_tiny_compute_crc32
              definition:  mbed_warning
              reference :  osRtxInfo
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/platform/source/mbed_error_hist.o.
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/platform/source/mbed_interface.o.
              weak defn :  mbed_mac_address
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/platform/source/mbed_mem_trace.o.
              reference :  rtos::Mutex::lock()
              reference :  rtos::Mutex::unlock()
              reference :  rtos::Mutex::Mutex()
              reference :  __2printf
              reference :  _printf_int_dec
              reference :  _printf_longlong_hex
              reference :  _printf_p
              reference :  _printf_percent
              reference :  _printf_u
              reference :  mbed_assert_internal
              definition:  mbed_mem_trace_calloc
              definition:  mbed_mem_trace_default_callback
              definition:  mbed_mem_trace_disable
              definition:  mbed_mem_trace_enable
              definition:  mbed_mem_trace_free
              definition:  mbed_mem_trace_lock
              definition:  mbed_mem_trace_malloc
              definition:  mbed_mem_trace_realloc
              definition:  mbed_mem_trace_set_callback
              definition:  mbed_mem_trace_unlock
              reference :  osMutexAcquire
              reference :  osMutexRelease
              reference :  puts
              reference :  singleton_mutex_id
              reference :  SingletonPtr<rtos::Mutex>::operator ->() const
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/platform/source/mbed_mktime.o.
              definition:  _rtc_is_leap_year
              definition:  _rtc_localtime
              definition:  _rtc_maketime
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/platform/source/mbed_mpu_mgmt.o.
              reference :  core_util_critical_section_enter
              reference :  core_util_critical_section_exit
              reference :  mbed_assert_internal
              reference :  mbed_mpu_enable_ram_xn
              reference :  mbed_mpu_enable_rom_wn
              definition:  mbed_mpu_manager_lock_ram_execution
              definition:  mbed_mpu_manager_lock_rom_write
              definition:  mbed_mpu_manager_unlock_ram_execution
              definition:  mbed_mpu_manager_unlock_rom_write
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/platform/source/mbed_os_timer.o.
              reference :  mbed::CriticalSectionLock::CriticalSectionLock()
              reference :  mbed::CriticalSectionLock::~CriticalSectionLock()
              definition:  mbed::internal::init_os_timer()
              weak defn :  void mbed::internal::do_sleep_operation<mbed::internal::timed_predicate_op>(T1&)
              weak defn :  mbed::internal::timed_predicate_op::sleep_prepare()
              weak defn :  mbed::internal::timed_predicate_op::sleep_prepared()
              weak defn :  mbed::internal::timed_predicate_op::timed_predicate_op__sub_object(std::__1::chrono::time_point<mbed::internal::OsClock, std::__1::chrono::duration<long long, std::__1::ratio<(long long)1, (long long)1000>>>, bool(*)(void*), void*)
              weak defn :  mbed::internal::timed_predicate_op::~timed_predicate_op__sub_object()
              definition:  mbed::internal::do_timed_sleep_absolute(std::__1::chrono::time_point<mbed::internal::OsClock, std::__1::chrono::duration<long long, std::__1::ratio<(long long)1, (long long)1000>>>, bool(*)(void*), void*)
              definition:  mbed::internal::do_timed_sleep_relative_to_acknowledged_ticks(std::__1::chrono::duration<unsigned, std::__1::ratio<(long long)1, (long long)1000>>, bool(*)(void*), void*)
              weak defn :  mbed::internal::OsClock::set_wake_time(std::__1::chrono::time_point<mbed::internal::OsClock, std::__1::chrono::duration<long long, std::__1::ratio<(long long)1, (long long)1000>>>)
              weak defn :  mbed::internal::OsClock::reported_ticks()
              weak defn :  mbed::internal::OsClock::acknowledged_ticks()
              weak defn :  mbed::internal::OsClock::now_with_init_done()
              reference :  mbed::internal::SysTimer<std::__1::ratio<(long long)1, (long long)1000>, (bool)1>::cancel_wake()
              reference :  mbed::internal::SysTimer<std::__1::ratio<(long long)1, (long long)1000>, (bool)1>::set_wake_time(std::__1::chrono::time_point<mbed::internal::SysTimer<std::__1::ratio<(long long)1, (long long)1000>, (bool)1>, std::__1::chrono::duration<unsigned long long, std::__1::ratio<(long long)1, (long long)1000>>>)
              reference :  mbed::internal::SysTimer<std::__1::ratio<(long long)1, (long long)1000>, (bool)1>::update_and_get_tick()
              reference :  mbed::internal::SysTimer<std::__1::ratio<(long long)1, (long long)1000>, (bool)1>::SysTimer(const ticker_data_t*)
              definition:  mbed::internal::os_timer
              weak defn :  mbed::internal::timed_predicate_op::wake_condition() const
              reference :  mbed::internal::SysTimer<std::__1::ratio<(long long)1, (long long)1000>, (bool)1>::get_tick() const
              reference :  get_lp_ticker_data
              reference :  sleep_manager_sleep_auto
              reference :  mbed::internal::SysTimer<std::__1::ratio<(long long)1, (long long)1000>, (bool)1>::unacknowledged_ticks() const
              reference :  mbed::internal::SysTimer<std::__1::ratio<(long long)1, (long long)1000>, (bool)1>::wake_time_passed() const
              reference :  mbed::internal::SysTimer<std::__1::ratio<(long long)1, (long long)1000>, (bool)1>::wake_time_set() const
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/platform/source/mbed_poll.o.
              definition:  mbed::poll(mbed::pollfh*, unsigned, int)
              reference :  get_ms_count
              reference :  thread_sleep_for
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/platform/source/mbed_power_mgmt.o.
              reference :  core_util_atomic_decr_u16
              reference :  core_util_atomic_incr_u16
              reference :  core_util_critical_section_enter
              reference :  core_util_critical_section_exit
              reference :  hal_sleep
              reference :  mbed_error
              definition:  mbed_time_deepsleep
              definition:  mbed_time_idle
              definition:  mbed_time_sleep
              definition:  mbed_uptime
              definition:  sleep_manager_can_deep_sleep
              definition:  sleep_manager_can_deep_sleep_test_check
              definition:  sleep_manager_lock_deep_sleep_internal
              definition:  sleep_manager_sleep_auto
              definition:  sleep_manager_unlock_deep_sleep_internal
              reference :  wait_ns
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/platform/source/mbed_retarget.o.
              definition:  __rt_lib_init
              reference :  $Super$$__rt_lib_init
              weak ref  :  Image$$ARM_LIB_HEAP$$ZI$$Base
              weak ref  :  Image$$ARM_LIB_HEAP$$ZI$$Limit
              reference :  Image$$ARM_LIB_STACK$$ZI$$Base
              reference :  Image$$RW_IRAM1$$ZI$$Limit
              definition:  DirectSerial::read(void*, unsigned)
              weak defn :  DirectSerial::seek(long, int)
              weak defn :  DirectSerial::size()
              weak defn :  DirectSerial::close()
              definition:  DirectSerial::write(const void*, unsigned)
              weak defn :  DirectSerial::isatty()
              definition:  DirectSerial::DirectSerial(PinName, PinName, int)
              definition:  DirectSerial::DirectSerial(const serial_pinmap_t&, int)
              definition:  DirectSerial::DirectSerial__sub_object(PinName, PinName, int)
              definition:  DirectSerial::DirectSerial__sub_object(const serial_pinmap_t&, int)
              weak defn :  DirectSerial::~DirectSerial__deallocating()
              definition:  Sink::read(void*, unsigned)
              weak defn :  Sink::seek(long, int)
              weak defn :  Sink::size()
              weak defn :  Sink::close()
              definition:  Sink::write(const void*, unsigned)
              weak defn :  Sink::isatty()
              weak defn :  Sink::~Sink__deallocating()
              definition:  mbed::bind_to_fd(mbed::FileHandle*)
              definition:  mbed::mbed_file_handle(int)
              definition:  mbed::remove_filehandle(mbed::FileHandle*)
              weak defn :  mbed::mbed_override_console(int)
              definition:  mbed::mbed_set_unbuffered_stream(std::__FILE*)
              weak defn :  mbed::mbed_target_override_console(int)
              reference :  mbed::poll(mbed::pollfh*, unsigned, int)
              definition:  mbed::fdopen(mbed::FileHandle*, const char*)
              reference :  mbed::FilePath::fileSystem()
              reference :  mbed::FilePath::file()
              reference :  mbed::FilePath::exists()
              reference :  mbed::FilePath::isFile()
              reference :  mbed::FilePath::fileName()
              reference :  mbed::FilePath::FilePath(const char*)
              reference :  rtos::Mutex::lock()
              reference :  rtos::Mutex::unlock()
              reference :  rtos::Mutex::Mutex()
              definition:  DirectSerial::poll(short) const
              definition:  vtable for DirectSerial
              definition:  vtable for Sink
              reference :  vtable for mbed::FileHandle
              definition:  operator delete[] (void*)
              definition:  operator delete[] (void*, unsigned)
              definition:  operator delete (void*)
              definition:  operator delete (void*, unsigned)
              definition:  operator new[] (unsigned)
              definition:  operator new[] (unsigned, const std::nothrow_t&)
              definition:  operator new(unsigned)
              definition:  operator new(unsigned, const std::nothrow_t&)
              definition:  __aeabi_atexit
              reference :  __aeabi_errno_addr
              definition:  __cxa_atexit
              definition:  __cxa_finalize
              definition:  __cxa_guard_abort
              definition:  __cxa_guard_acquire
              definition:  __cxa_guard_release
              definition:  __env_lock
              definition:  __env_unlock
              definition:  __malloc_lock
              definition:  __malloc_unlock
              weak defn :  __rtos_env_lock
              weak defn :  __rtos_env_unlock
              weak defn :  __rtos_malloc_lock
              weak defn :  __rtos_malloc_unlock
              reference :  __stderr
              definition:  __stderr_name
              definition:  __stdin_name
              reference :  __stdout
              definition:  __stdout_name
              reference :  __use_no_semihosting
              reference :  __use_two_region_memory
              definition:  __user_setup_stackheap
              weak defn :  _mbed_user_setup_stackheap
              weak defn :  _scanf_mbtowc
              definition:  _sys_close
              definition:  _sys_command_string
              definition:  _sys_ensure
              definition:  _sys_exit
              definition:  _sys_flen
              definition:  _sys_istty
              definition:  _sys_open
              definition:  _sys_read
              definition:  _sys_seek
              definition:  _sys_write
              definition:  _ttywrch
              definition:  clock
              definition:  close
              definition:  closedir
              reference :  core_util_are_interrupts_enabled
              reference :  core_util_is_isr_active
              definition:  exit
              definition:  fcntl
              definition:  fdopen
              reference :  fflush
              reference :  fopen
              reference :  free
              definition:  fstat
              definition:  fsync
              definition:  ftruncate
              reference :  get_us_ticker_data
              definition:  isatty
              weak defn :  lp_ticker_get_info
              definition:  lseek
              reference :  malloc
              reference :  mbed_assert_internal
              reference :  mbed_die
              reference :  mbed_error
              definition:  mbed_heap_size
              definition:  mbed_heap_start
              definition:  mkdir
              definition:  open
              definition:  opendir
              reference :  osMutexAcquire
              reference :  osMutexRelease
              definition:  poll
              definition:  read
              definition:  readdir
              definition:  remove
              definition:  rename
              definition:  rewinddir
              definition:  seekdir
              reference :  serial_baud
              reference :  serial_getc
              reference :  serial_init_direct
              reference :  serial_putc
              reference :  serial_readable
              reference :  serial_writable
              reference :  setbuf
              reference :  singleton_mutex_id
              definition:  stat
              definition:  statvfs
              reference :  stdio_uart
              reference :  stdio_uart_inited
              reference :  strcmp
              definition:  telldir
              reference :  ticker_read
              definition:  tmpfile
              definition:  tmpnam
              weak defn :  us_ticker_get_info
              definition:  write
              reference :  SingletonPtr<rtos::Mutex>::operator ->() const
              reference :  mbed::FileHandle::FileHandle__sub_object()
              reference :  mbed::FileHandle::~FileHandle__sub_object()
              reference :  mbed::FileHandle::sync()
              reference :  mbed::FileHandle::tell()
              reference :  mbed::FileHandle::rewind()
              reference :  mbed::FileHandle::truncate(long)
              reference :  mbed::FileHandle::set_blocking(bool)
              reference :  mbed::FileHandle::is_blocking() const
              reference :  mbed::FileHandle::enable_input(bool)
              reference :  mbed::FileHandle::enable_output(bool)
              reference :  mbed::FileHandle::sigio(mbed::Callback<void()>)
              reference :  mbed::FileHandle::poll(short) const
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/platform/source/mbed_rtc_time.o.
              reference :  rtos::Mutex::lock()
              reference :  rtos::Mutex::unlock()
              reference :  rtos::Mutex::Mutex()
              definition:  attach_rtc
              definition:  gettimeofday
              reference :  mbed_assert_internal
              reference :  osMutexAcquire
              reference :  osMutexRelease
              reference :  rtc_init
              reference :  rtc_isenabled
              reference :  rtc_read
              reference :  rtc_write
              definition:  set_time
              definition:  settimeofday
              reference :  singleton_mutex_id
              definition:  time
              reference :  SingletonPtr<rtos::Mutex>::operator ->() const
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/platform/source/mbed_sdk_boot.o.
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/platform/source/mbed_semihost_api.o.
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/platform/source/mbed_stats.o.
              reference :  __aeabi_memclr4
              reference :  mbed_assert_internal
              definition:  mbed_stats_cpu_get
              definition:  mbed_stats_stack_get
              definition:  mbed_stats_stack_get_each
              definition:  mbed_stats_sys_get
              definition:  mbed_stats_thread_get_each
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/platform/source/mbed_thread.o.
              reference :  rtos::ThisThread::sleep_until(std::__1::chrono::time_point<rtos::Kernel::Clock, std::__1::chrono::duration<long long, std::__1::ratio<(long long)1, (long long)1000>>>)
              reference :  rtos::ThisThread::sleep_for(std::__1::chrono::duration<unsigned, std::__1::ratio<(long long)1, (long long)1000>>)
              reference :  rtos::Kernel::impl::get_tick_count()
              definition:  get_ms_count
              definition:  thread_sleep_for
              definition:  thread_sleep_until
              reference :  rtos::Kernel::Clock::now()
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/platform/source/mbed_wait_api_no_rtos.o.
              reference :  SystemCoreClock
              reference :  get_us_ticker_data
              reference :  ticker_read
              weak defn :  wait_ns
              definition:  wait_us
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/platform/source/minimal-printf/mbed_printf_armlink_overrides.o.
              definition:  __2fprintf
              definition:  __2printf
              definition:  __2snprintf
              definition:  __2sprintf
              definition:  __2vfprintf
              definition:  __2vprintf
              definition:  __2vsnprintf
              definition:  __2vsprintf
              definition:  _printf_a
              definition:  _printf_c
              definition:  _printf_char
              definition:  _printf_char_common
              definition:  _printf_char_file_locked
              definition:  _printf_charcount
              definition:  _printf_cs_common
              definition:  _printf_d
              definition:  _printf_dec
              definition:  _printf_e
              definition:  _printf_f
              definition:  _printf_fp_dec
              definition:  _printf_fp_dec_real
              definition:  _printf_fp_hex
              definition:  _printf_fp_hex_real
              definition:  _printf_fp_infnan
              definition:  _printf_g
              definition:  _printf_hex_int_ll_ptr
              definition:  _printf_hex_ptr
              definition:  _printf_i
              definition:  _printf_int_common
              definition:  _printf_int_dec
              definition:  _printf_int_hex
              definition:  _printf_int_oct
              definition:  _printf_l
              definition:  _printf_lc
              definition:  _printf_lcs_common
              definition:  _printf_ll
              definition:  _printf_ll_hex
              definition:  _printf_ll_oct
              definition:  _printf_lld
              definition:  _printf_lli
              definition:  _printf_llo
              definition:  _printf_llu
              definition:  _printf_llx
              definition:  _printf_longlong_dec
              definition:  _printf_longlong_hex
              definition:  _printf_longlong_oct
              definition:  _printf_ls
              definition:  _printf_n
              definition:  _printf_o
              definition:  _printf_oct_int_ll
              definition:  _printf_p
              definition:  _printf_pad
              definition:  _printf_percent
              definition:  _printf_percent_end
              definition:  _printf_s
              definition:  _printf_str
              definition:  _printf_string
              definition:  _printf_truncate
              definition:  _printf_truncate_signed
              definition:  _printf_truncate_unsigned
              definition:  _printf_u
              definition:  _printf_wchar
              definition:  _printf_wctomb
              definition:  _printf_wstring
              definition:  _printf_x
              reference :  __stdout
              reference :  mbed_minimal_formatted_string
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/platform/source/minimal-printf/mbed_printf_implementation.o.
              reference :  __aeabi_uldivmod
              reference :  fputc
              definition:  mbed_minimal_formatted_string
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/platform/source/minimal-printf/mbed_printf_wrapper.o.
              definition:  fprintf
              definition:  printf
              definition:  snprintf
              definition:  sprintf
              definition:  vfprintf
              definition:  vprintf
              definition:  vsnprintf
              definition:  vsprintf
              reference :  __stdout
              reference :  mbed_minimal_formatted_string
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/rtos/source/ConditionVariable.o.
              reference :  rtos::ThisThread::get_id()
              definition:  rtos::ConditionVariable::notify_all()
              definition:  rtos::ConditionVariable::notify_one()
              definition:  rtos::ConditionVariable::wait_until(std::__1::chrono::time_point<rtos::Kernel::Clock, std::__1::chrono::duration<long long, std::__1::ratio<(long long)1, (long long)1000>>>)
              definition:  rtos::ConditionVariable::wait_until(unsigned long long)
              definition:  rtos::ConditionVariable::_add_wait_list(rtos::ConditionVariable::Waiter**, rtos::ConditionVariable::Waiter*)
              definition:  rtos::ConditionVariable::_remove_wait_list(rtos::ConditionVariable::Waiter**, rtos::ConditionVariable::Waiter*)
              definition:  rtos::ConditionVariable::wait()
              definition:  rtos::ConditionVariable::Waiter::Waiter()
              definition:  rtos::ConditionVariable::Waiter::Waiter__sub_object()
              weak defn :  rtos::ConditionVariable::Waiter::~Waiter__sub_object()
              definition:  rtos::ConditionVariable::wait_for(std::__1::chrono::duration<unsigned, std::__1::ratio<(long long)1, (long long)1000>>)
              definition:  rtos::ConditionVariable::wait_for(unsigned)
              definition:  rtos::ConditionVariable::ConditionVariable(rtos::Mutex&)
              definition:  rtos::ConditionVariable::ConditionVariable__sub_object(rtos::Mutex&)
              definition:  rtos::ConditionVariable::~ConditionVariable()
              definition:  rtos::ConditionVariable::~ConditionVariable__sub_object()
              reference :  rtos::Mutex::lock()
              reference :  rtos::Mutex::unlock()
              reference :  rtos::Mutex::get_owner()
              reference :  rtos::Kernel::impl::get_tick_count()
              reference :  rtos::Semaphore::try_acquire_for(std::__1::chrono::duration<unsigned, std::__1::ratio<(long long)1, (long long)1000>>)
              reference :  rtos::Semaphore::release()
              reference :  rtos::Semaphore::Semaphore(int)
              reference :  rtos::Semaphore::~Semaphore()
              reference :  mbed_assert_internal
              reference :  rtos::Kernel::Clock::now()
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/rtos/source/EventFlags.o.
              definition:  rtos::EventFlags::wait_until(unsigned, unsigned, std::__1::chrono::time_point<rtos::Kernel::Clock, std::__1::chrono::duration<long long, std::__1::ratio<(long long)1, (long long)1000>>>, bool)
              definition:  rtos::EventFlags::constructor(const char*)
              definition:  rtos::EventFlags::wait_all_for(unsigned, std::__1::chrono::duration<unsigned, std::__1::ratio<(long long)1, (long long)1000>>, bool)
              definition:  rtos::EventFlags::wait_any_for(unsigned, std::__1::chrono::duration<unsigned, std::__1::ratio<(long long)1, (long long)1000>>, bool)
              definition:  rtos::EventFlags::wait_all_until(unsigned, std::__1::chrono::time_point<rtos::Kernel::Clock, std::__1::chrono::duration<long long, std::__1::ratio<(long long)1, (long long)1000>>>, bool)
              definition:  rtos::EventFlags::wait_any_until(unsigned, std::__1::chrono::time_point<rtos::Kernel::Clock, std::__1::chrono::duration<long long, std::__1::ratio<(long long)1, (long long)1000>>>, bool)
              definition:  rtos::EventFlags::set(unsigned)
              definition:  rtos::EventFlags::clear(unsigned)
              definition:  rtos::EventFlags::wait_all(unsigned, unsigned, bool)
              definition:  rtos::EventFlags::wait_any(unsigned, unsigned, bool)
              definition:  rtos::EventFlags::wait_for(unsigned, unsigned, std::__1::chrono::duration<unsigned, std::__1::ratio<(long long)1, (long long)1000>>, bool)
              definition:  rtos::EventFlags::EventFlags(const char*)
              definition:  rtos::EventFlags::EventFlags()
              definition:  rtos::EventFlags::EventFlags__sub_object(const char*)
              definition:  rtos::EventFlags::EventFlags__sub_object()
              definition:  rtos::EventFlags::~EventFlags()
              definition:  rtos::EventFlags::~EventFlags__sub_object()
              reference :  rtos::Kernel::impl::get_tick_count()
              definition:  rtos::EventFlags::get() const
              reference :  mbed_assert_internal
              reference :  osEventFlagsClear
              reference :  osEventFlagsDelete
              reference :  osEventFlagsGet
              reference :  osEventFlagsNew
              reference :  osEventFlagsSet
              reference :  osEventFlagsWait
              reference :  rtos::Kernel::Clock::now()
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/rtos/source/Kernel.o.
              definition:  rtos::Kernel::get_ms_count()
              definition:  rtos::Kernel::attach_idle_hook(void(*)())
              definition:  rtos::Kernel::attach_thread_terminate_hook(void(*)(void*))
              definition:  rtos::Kernel::impl::get_tick_count()
              definition:  rtos::Kernel::Clock::is_steady
              reference :  core_util_critical_section_enter
              reference :  core_util_critical_section_exit
              reference :  osKernelGetTickCount
              reference :  rtos_attach_idle_hook
              reference :  rtos_attach_thread_terminate_hook
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/rtos/source/Mutex.o.
              definition:  rtos::Mutex::constructor(const char*)
              definition:  rtos::Mutex::trylock_for(std::__1::chrono::duration<unsigned, std::__1::ratio<(long long)1, (long long)1000>>)
              definition:  rtos::Mutex::trylock_for(unsigned)
              definition:  rtos::Mutex::trylock_until(std::__1::chrono::time_point<rtos::Kernel::Clock, std::__1::chrono::duration<long long, std::__1::ratio<(long long)1, (long long)1000>>>)
              definition:  rtos::Mutex::trylock_until(unsigned long long)
              definition:  rtos::Mutex::lock()
              definition:  rtos::Mutex::unlock()
              definition:  rtos::Mutex::trylock()
              definition:  rtos::Mutex::get_owner()
              definition:  rtos::Mutex::Mutex(const char*)
              definition:  rtos::Mutex::Mutex()
              definition:  rtos::Mutex::Mutex__sub_object(const char*)
              definition:  rtos::Mutex::Mutex__sub_object()
              definition:  rtos::Mutex::~Mutex()
              definition:  rtos::Mutex::~Mutex__sub_object()
              reference :  rtos::Kernel::impl::get_tick_count()
              reference :  mbed_assert_internal
              reference :  mbed_error
              reference :  mbed_get_error_in_progress
              reference :  osMutexAcquire
              reference :  osMutexDelete
              reference :  osMutexGetOwner
              reference :  osMutexNew
              reference :  osMutexRelease
              reference :  _ZNSt3__18literals15chrono_literalsli1sEy
              reference :  rtos::Kernel::Clock::now()
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/rtos/source/Semaphore.o.
              reference :  rtos::Kernel::impl::get_tick_count()
              definition:  rtos::Semaphore::constructor(int, unsigned short)
              definition:  rtos::Semaphore::try_acquire()
              definition:  rtos::Semaphore::try_acquire_for(std::__1::chrono::duration<unsigned, std::__1::ratio<(long long)1, (long long)1000>>)
              definition:  rtos::Semaphore::try_acquire_for(unsigned)
              definition:  rtos::Semaphore::try_acquire_until(std::__1::chrono::time_point<rtos::Kernel::Clock, std::__1::chrono::duration<long long, std::__1::ratio<(long long)1, (long long)1000>>>)
              definition:  rtos::Semaphore::try_acquire_until(unsigned long long)
              definition:  rtos::Semaphore::acquire()
              definition:  rtos::Semaphore::release()
              definition:  rtos::Semaphore::Semaphore(int)
              definition:  rtos::Semaphore::Semaphore(int, unsigned short)
              definition:  rtos::Semaphore::Semaphore__sub_object(int)
              definition:  rtos::Semaphore::Semaphore__sub_object(int, unsigned short)
              definition:  rtos::Semaphore::~Semaphore()
              definition:  rtos::Semaphore::~Semaphore__sub_object()
              reference :  mbed_assert_internal
              reference :  mbed_error
              reference :  osSemaphoreAcquire
              reference :  osSemaphoreDelete
              reference :  osSemaphoreNew
              reference :  osSemaphoreRelease
              reference :  rtos::Kernel::Clock::now()
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/rtos/source/ThisThread.o.
              definition:  rtos::ThisThread::flags_clear(unsigned)
              definition:  rtos::ThisThread::sleep_until(std::__1::chrono::time_point<rtos::Kernel::Clock, std::__1::chrono::duration<long long, std::__1::ratio<(long long)1, (long long)1000>>>)
              definition:  rtos::ThisThread::sleep_until(unsigned long long)
              definition:  rtos::ThisThread::flags_wait_all(unsigned, bool)
              definition:  rtos::ThisThread::flags_wait_any(unsigned, bool)
              definition:  rtos::ThisThread::flags_wait_all_for(unsigned, std::__1::chrono::duration<unsigned, std::__1::ratio<(long long)1, (long long)1000>>, bool)
              definition:  rtos::ThisThread::flags_wait_all_for(unsigned, unsigned, bool)
              definition:  rtos::ThisThread::flags_wait_any_for(unsigned, std::__1::chrono::duration<unsigned, std::__1::ratio<(long long)1, (long long)1000>>, bool)
              definition:  rtos::ThisThread::flags_wait_any_for(unsigned, unsigned, bool)
              definition:  rtos::ThisThread::flags_wait_all_until(unsigned, std::__1::chrono::time_point<rtos::Kernel::Clock, std::__1::chrono::duration<long long, std::__1::ratio<(long long)1, (long long)1000>>>, bool)
              definition:  rtos::ThisThread::flags_wait_all_until(unsigned, unsigned long long, bool)
              definition:  rtos::ThisThread::flags_wait_any_until(unsigned, std::__1::chrono::time_point<rtos::Kernel::Clock, std::__1::chrono::duration<long long, std::__1::ratio<(long long)1, (long long)1000>>>, bool)
              definition:  rtos::ThisThread::flags_wait_any_until(unsigned, unsigned long long, bool)
              definition:  rtos::ThisThread::yield()
              definition:  rtos::ThisThread::get_id()
              definition:  rtos::ThisThread::get_name()
              definition:  rtos::ThisThread::flags_get()
              definition:  rtos::ThisThread::sleep_for(std::__1::chrono::duration<unsigned, std::__1::ratio<(long long)1, (long long)1000>>)
              definition:  rtos::ThisThread::sleep_for(unsigned)
              reference :  rtos::Kernel::impl::get_tick_count()
              reference :  mbed_assert_internal
              reference :  osDelay
              reference :  osThreadFlagsClear
              reference :  osThreadFlagsGet
              reference :  osThreadFlagsWait
              reference :  osThreadGetId
              reference :  osThreadGetName
              reference :  osThreadYield
              reference :  rtos::Kernel::Clock::now()
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/rtos/source/Thread.o.
              reference :  rtos::Mutex::lock()
              reference :  rtos::Mutex::unlock()
              reference :  rtos::Mutex::~Mutex()
              definition:  rtos::Thread::constructor(osPriority_t, unsigned, unsigned char*, const char*)
              definition:  rtos::Thread::constructor(unsigned, osPriority_t, unsigned, unsigned char*, const char*)
              definition:  rtos::Thread::set_priority(osPriority_t)
              definition:  rtos::Thread::join()
              definition:  rtos::Thread::start(mbed::Callback<void()>)
              definition:  rtos::Thread::_thunk(void*)
              definition:  rtos::Thread::flags_set(unsigned)
              definition:  rtos::Thread::terminate()
              definition:  rtos::Thread::~Thread__deallocating()
              definition:  rtos::Thread::~Thread()
              definition:  rtos::Thread::~Thread__sub_object()
              reference :  rtos::Semaphore::acquire()
              reference :  rtos::Semaphore::release()
              reference :  rtos::Semaphore::~Semaphore()
              definition:  rtos::Thread::free_stack() const
              definition:  rtos::Thread::stack_size() const
              definition:  rtos::Thread::used_stack() const
              definition:  rtos::Thread::get_priority() const
              definition:  rtos::Thread::get_id() const
              definition:  rtos::Thread::get_name() const
              definition:  rtos::Thread::get_state() const
              definition:  rtos::Thread::max_stack() const
              definition:  vtable for rtos::Thread
              reference :  operator delete[] (void*)
              reference :  operator delete (void*)
              reference :  operator new[] (unsigned)
              reference :  __aeabi_memclr4
              reference :  mbed_assert_internal
              reference :  osThreadFlagsSet
              reference :  osThreadGetPriority
              reference :  osThreadGetStackSize
              reference :  osThreadNew
              reference :  osThreadSetPriority
              reference :  osThreadTerminate
              reference :  mbed::Callback<void()>::operator ()() const
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/storage/blockdevice/source/BufferedBlockDevice.o.
              weak defn :  mbed::BlockDevice::sync()
              weak defn :  mbed::BlockDevice::trim(unsigned long long, unsigned long long)
              weak defn :  mbed::BlockDevice::erase(unsigned long long, unsigned long long)
              weak defn :  mbed::BlockDevice::BlockDevice__sub_object()
              weak defn :  mbed::BlockDevice::~BlockDevice__deallocating()
              weak defn :  mbed::BlockDevice::~BlockDevice__sub_object()
              definition:  mbed::BufferedBlockDevice::invalidate_write_cache()
              definition:  mbed::BufferedBlockDevice::init()
              definition:  mbed::BufferedBlockDevice::read(void*, unsigned long long, unsigned long long)
              definition:  mbed::BufferedBlockDevice::sync()
              definition:  mbed::BufferedBlockDevice::trim(unsigned long long, unsigned long long)
              definition:  mbed::BufferedBlockDevice::erase(unsigned long long, unsigned long long)
              definition:  mbed::BufferedBlockDevice::flush()
              definition:  mbed::BufferedBlockDevice::deinit()
              definition:  mbed::BufferedBlockDevice::program(const void*, unsigned long long, unsigned long long)
              definition:  mbed::BufferedBlockDevice::BufferedBlockDevice(mbed::BlockDevice*)
              definition:  mbed::BufferedBlockDevice::BufferedBlockDevice__sub_object(mbed::BlockDevice*)
              definition:  mbed::BufferedBlockDevice::~BufferedBlockDevice__deallocating()
              definition:  mbed::BufferedBlockDevice::~BufferedBlockDevice()
              definition:  mbed::BufferedBlockDevice::~BufferedBlockDevice__sub_object()
              weak defn :  mbed::BlockDevice::is_valid_read(unsigned long long, unsigned long long) const
              weak defn :  mbed::BlockDevice::get_erase_size() const
              weak defn :  mbed::BlockDevice::get_erase_size(unsigned long long) const
              weak defn :  mbed::BlockDevice::is_valid_erase(unsigned long long, unsigned long long) const
              weak defn :  mbed::BlockDevice::get_erase_value() const
              weak defn :  mbed::BlockDevice::is_valid_program(unsigned long long, unsigned long long) const
              definition:  mbed::BufferedBlockDevice::get_read_size() const
              definition:  mbed::BufferedBlockDevice::get_erase_size() const
              definition:  mbed::BufferedBlockDevice::get_erase_size(unsigned long long) const
              definition:  mbed::BufferedBlockDevice::get_erase_value() const
              definition:  mbed::BufferedBlockDevice::get_program_size() const
              definition:  mbed::BufferedBlockDevice::size() const
              definition:  mbed::BufferedBlockDevice::get_type() const
              weak defn :  vtable for mbed::BlockDevice
              definition:  vtable for mbed::BufferedBlockDevice
              reference :  operator delete[] (void*)
              reference :  operator delete (void*)
              reference :  operator new[] (unsigned)
              reference :  __aeabi_memclr8
              reference :  __aeabi_memcpy
              reference :  __aeabi_uldivmod
              reference :  __cxa_pure_virtual
              weak defn :  core_util_atomic_incr_u32
              reference :  mbed_assert_internal
              reference :  core_util_atomic_decr_u32
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/storage/blockdevice/source/ChainingBlockDevice.o.
              definition:  mbed::ChainingBlockDevice::init()
              definition:  mbed::ChainingBlockDevice::read(void*, unsigned long long, unsigned long long)
              definition:  mbed::ChainingBlockDevice::sync()
              definition:  mbed::ChainingBlockDevice::erase(unsigned long long, unsigned long long)
              definition:  mbed::ChainingBlockDevice::deinit()
              definition:  mbed::ChainingBlockDevice::program(const void*, unsigned long long, unsigned long long)
              definition:  mbed::ChainingBlockDevice::ChainingBlockDevice(mbed::BlockDevice**, unsigned)
              definition:  mbed::ChainingBlockDevice::ChainingBlockDevice__sub_object(mbed::BlockDevice**, unsigned)
              weak defn :  mbed::ChainingBlockDevice::~ChainingBlockDevice__deallocating()
              definition:  mbed::ChainingBlockDevice::get_read_size() const
              definition:  mbed::ChainingBlockDevice::get_erase_size() const
              definition:  mbed::ChainingBlockDevice::get_erase_size(unsigned long long) const
              definition:  mbed::ChainingBlockDevice::get_erase_value() const
              definition:  mbed::ChainingBlockDevice::get_program_size() const
              definition:  mbed::ChainingBlockDevice::size() const
              definition:  mbed::ChainingBlockDevice::get_type() const
              definition:  vtable for mbed::ChainingBlockDevice
              reference :  operator delete (void*)
              reference :  __aeabi_uldivmod
              reference :  __cxa_pure_virtual
              reference :  mbed_assert_internal
              reference :  mbed::BlockDevice::BlockDevice__sub_object()
              reference :  core_util_atomic_incr_u32
              reference :  core_util_atomic_decr_u32
              reference :  mbed::BlockDevice::~BlockDevice__sub_object()
              reference :  mbed::BlockDevice::trim(unsigned long long, unsigned long long)
              reference :  mbed::BlockDevice::is_valid_read(unsigned long long, unsigned long long) const
              reference :  mbed::BlockDevice::is_valid_program(unsigned long long, unsigned long long) const
              reference :  mbed::BlockDevice::is_valid_erase(unsigned long long, unsigned long long) const
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/storage/blockdevice/source/ExhaustibleBlockDevice.o.
              definition:  mbed::ExhaustibleBlockDevice::init()
              definition:  mbed::ExhaustibleBlockDevice::read(void*, unsigned long long, unsigned long long)
              definition:  mbed::ExhaustibleBlockDevice::sync()
              definition:  mbed::ExhaustibleBlockDevice::erase(unsigned long long, unsigned long long)
              definition:  mbed::ExhaustibleBlockDevice::deinit()
              definition:  mbed::ExhaustibleBlockDevice::program(const void*, unsigned long long, unsigned long long)
              definition:  mbed::ExhaustibleBlockDevice::ExhaustibleBlockDevice(mbed::BlockDevice*, unsigned)
              definition:  mbed::ExhaustibleBlockDevice::ExhaustibleBlockDevice__sub_object(mbed::BlockDevice*, unsigned)
              definition:  mbed::ExhaustibleBlockDevice::~ExhaustibleBlockDevice__deallocating()
              definition:  mbed::ExhaustibleBlockDevice::~ExhaustibleBlockDevice()
              definition:  mbed::ExhaustibleBlockDevice::~ExhaustibleBlockDevice__sub_object()
              definition:  mbed::ExhaustibleBlockDevice::get_read_size() const
              definition:  mbed::ExhaustibleBlockDevice::get_erase_size() const
              definition:  mbed::ExhaustibleBlockDevice::get_erase_size(unsigned long long) const
              definition:  mbed::ExhaustibleBlockDevice::get_erase_value() const
              definition:  mbed::ExhaustibleBlockDevice::get_program_size() const
              definition:  mbed::ExhaustibleBlockDevice::size() const
              definition:  mbed::ExhaustibleBlockDevice::get_type() const
              definition:  vtable for mbed::ExhaustibleBlockDevice
              reference :  operator delete[] (void*)
              reference :  operator delete (void*)
              reference :  operator new[] (unsigned)
              reference :  __aeabi_uldivmod
              reference :  __cxa_pure_virtual
              reference :  mbed::BlockDevice::BlockDevice__sub_object()
              reference :  mbed::BlockDevice::~BlockDevice__sub_object()
              reference :  core_util_atomic_incr_u32
              reference :  core_util_atomic_decr_u32
              reference :  mbed::BlockDevice::trim(unsigned long long, unsigned long long)
              reference :  mbed::BlockDevice::is_valid_read(unsigned long long, unsigned long long) const
              reference :  mbed::BlockDevice::is_valid_program(unsigned long long, unsigned long long) const
              reference :  mbed::BlockDevice::is_valid_erase(unsigned long long, unsigned long long) const
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/storage/blockdevice/source/FlashSimBlockDevice.o.
              definition:  mbed::FlashSimBlockDevice::init()
              definition:  mbed::FlashSimBlockDevice::read(void*, unsigned long long, unsigned long long)
              definition:  mbed::FlashSimBlockDevice::sync()
              definition:  mbed::FlashSimBlockDevice::erase(unsigned long long, unsigned long long)
              definition:  mbed::FlashSimBlockDevice::deinit()
              definition:  mbed::FlashSimBlockDevice::program(const void*, unsigned long long, unsigned long long)
              definition:  mbed::FlashSimBlockDevice::FlashSimBlockDevice(mbed::BlockDevice*, unsigned char)
              definition:  mbed::FlashSimBlockDevice::FlashSimBlockDevice__sub_object(mbed::BlockDevice*, unsigned char)
              definition:  mbed::FlashSimBlockDevice::~FlashSimBlockDevice__deallocating()
              definition:  mbed::FlashSimBlockDevice::~FlashSimBlockDevice()
              definition:  mbed::FlashSimBlockDevice::~FlashSimBlockDevice__sub_object()
              definition:  mbed::FlashSimBlockDevice::get_read_size() const
              definition:  mbed::FlashSimBlockDevice::get_erase_size() const
              definition:  mbed::FlashSimBlockDevice::get_erase_size(unsigned long long) const
              definition:  mbed::FlashSimBlockDevice::get_erase_value() const
              definition:  mbed::FlashSimBlockDevice::get_program_size() const
              definition:  mbed::FlashSimBlockDevice::size() const
              definition:  mbed::FlashSimBlockDevice::get_type() const
              definition:  vtable for mbed::FlashSimBlockDevice
              reference :  operator delete[] (void*)
              reference :  operator delete (void*)
              reference :  operator new[] (unsigned)
              reference :  __aeabi_memclr
              reference :  __aeabi_memset
              reference :  __aeabi_uldivmod
              reference :  __cxa_pure_virtual
              reference :  mbed_assert_internal
              reference :  mbed::BlockDevice::BlockDevice__sub_object()
              reference :  mbed::BlockDevice::~BlockDevice__sub_object()
              reference :  core_util_atomic_incr_u32
              reference :  core_util_atomic_decr_u32
              reference :  mbed::BlockDevice::trim(unsigned long long, unsigned long long)
              reference :  mbed::BlockDevice::is_valid_read(unsigned long long, unsigned long long) const
              reference :  mbed::BlockDevice::is_valid_program(unsigned long long, unsigned long long) const
              reference :  mbed::BlockDevice::is_valid_erase(unsigned long long, unsigned long long) const
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/storage/blockdevice/source/HeapBlockDevice.o.
              definition:  mbed::HeapBlockDevice::init()
              definition:  mbed::HeapBlockDevice::read(void*, unsigned long long, unsigned long long)
              definition:  mbed::HeapBlockDevice::erase(unsigned long long, unsigned long long)
              definition:  mbed::HeapBlockDevice::deinit()
              definition:  mbed::HeapBlockDevice::program(const void*, unsigned long long, unsigned long long)
              definition:  mbed::HeapBlockDevice::HeapBlockDevice(unsigned long long, unsigned long long)
              definition:  mbed::HeapBlockDevice::HeapBlockDevice(unsigned long long, unsigned long long, unsigned long long, unsigned long long)
              definition:  mbed::HeapBlockDevice::HeapBlockDevice__sub_object(unsigned long long, unsigned long long)
              definition:  mbed::HeapBlockDevice::HeapBlockDevice__sub_object(unsigned long long, unsigned long long, unsigned long long, unsigned long long)
              definition:  mbed::HeapBlockDevice::~HeapBlockDevice__deallocating()
              definition:  mbed::HeapBlockDevice::~HeapBlockDevice()
              definition:  mbed::HeapBlockDevice::~HeapBlockDevice__sub_object()
              definition:  mbed::HeapBlockDevice::get_read_size() const
              definition:  mbed::HeapBlockDevice::get_erase_size() const
              definition:  mbed::HeapBlockDevice::get_erase_size(unsigned long long) const
              definition:  mbed::HeapBlockDevice::get_program_size() const
              definition:  mbed::HeapBlockDevice::size() const
              definition:  mbed::HeapBlockDevice::get_type() const
              definition:  vtable for mbed::HeapBlockDevice
              reference :  operator delete[] (void*)
              reference :  operator delete (void*)
              reference :  operator new[] (unsigned)
              reference :  __aeabi_memclr
              reference :  __aeabi_memcpy
              reference :  __aeabi_uldivmod
              reference :  __cxa_pure_virtual
              reference :  free
              reference :  malloc
              reference :  mbed_assert_internal
              reference :  mbed::BlockDevice::BlockDevice__sub_object()
              reference :  mbed::BlockDevice::~BlockDevice__sub_object()
              reference :  core_util_atomic_incr_u32
              reference :  core_util_atomic_decr_u32
              reference :  mbed::BlockDevice::sync()
              reference :  mbed::BlockDevice::trim(unsigned long long, unsigned long long)
              reference :  mbed::BlockDevice::get_erase_value() const
              reference :  mbed::BlockDevice::is_valid_read(unsigned long long, unsigned long long) const
              reference :  mbed::BlockDevice::is_valid_program(unsigned long long, unsigned long long) const
              reference :  mbed::BlockDevice::is_valid_erase(unsigned long long, unsigned long long) const
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/storage/blockdevice/source/MBRBlockDevice.o.
              definition:  mbed::MBRBlockDevice::init()
              definition:  mbed::MBRBlockDevice::read(void*, unsigned long long, unsigned long long)
              definition:  mbed::MBRBlockDevice::sync()
              definition:  mbed::MBRBlockDevice::erase(unsigned long long, unsigned long long)
              definition:  mbed::MBRBlockDevice::deinit()
              definition:  mbed::MBRBlockDevice::program(const void*, unsigned long long, unsigned long long)
              definition:  mbed::MBRBlockDevice::partition(mbed::BlockDevice*, int, unsigned char, unsigned long long)
              definition:  mbed::MBRBlockDevice::partition(mbed::BlockDevice*, int, unsigned char, unsigned long long, unsigned long long)
              definition:  mbed::MBRBlockDevice::MBRBlockDevice(mbed::BlockDevice*, int)
              definition:  mbed::MBRBlockDevice::MBRBlockDevice__sub_object(mbed::BlockDevice*, int)
              weak defn :  mbed::MBRBlockDevice::~MBRBlockDevice__deallocating()
              definition:  mbed::MBRBlockDevice::get_read_size() const
              definition:  mbed::MBRBlockDevice::get_erase_size() const
              definition:  mbed::MBRBlockDevice::get_erase_size(unsigned long long) const
              definition:  mbed::MBRBlockDevice::get_erase_value() const
              definition:  mbed::MBRBlockDevice::get_program_size() const
              definition:  mbed::MBRBlockDevice::get_partition_stop() const
              definition:  mbed::MBRBlockDevice::get_partition_type() const
              definition:  mbed::MBRBlockDevice::get_partition_start() const
              definition:  mbed::MBRBlockDevice::get_partition_number() const
              definition:  mbed::MBRBlockDevice::size() const
              definition:  mbed::MBRBlockDevice::get_type() const
              definition:  vtable for mbed::MBRBlockDevice
              reference :  operator delete[] (void*)
              reference :  operator delete (void*)
              reference :  operator new[] (unsigned)
              reference :  __aeabi_memclr
              reference :  __aeabi_memset
              reference :  __aeabi_uldivmod
              reference :  __cxa_pure_virtual
              reference :  mbed_assert_internal
              reference :  mbed::BlockDevice::BlockDevice__sub_object()
              reference :  core_util_atomic_incr_u32
              reference :  core_util_atomic_decr_u32
              reference :  mbed::BlockDevice::~BlockDevice__sub_object()
              reference :  mbed::BlockDevice::trim(unsigned long long, unsigned long long)
              reference :  mbed::BlockDevice::is_valid_read(unsigned long long, unsigned long long) const
              reference :  mbed::BlockDevice::is_valid_program(unsigned long long, unsigned long long) const
              reference :  mbed::BlockDevice::is_valid_erase(unsigned long long, unsigned long long) const
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/storage/blockdevice/source/ObservingBlockDevice.o.
              reference :  mbed::ReadOnlyBlockDevice::ReadOnlyBlockDevice(mbed::BlockDevice*)
              reference :  mbed::ReadOnlyBlockDevice::~ReadOnlyBlockDevice()
              definition:  mbed::ObservingBlockDevice::init()
              definition:  mbed::ObservingBlockDevice::read(void*, unsigned long long, unsigned long long)
              definition:  mbed::ObservingBlockDevice::sync()
              definition:  mbed::ObservingBlockDevice::erase(unsigned long long, unsigned long long)
              definition:  mbed::ObservingBlockDevice::attach(mbed::Callback<void(mbed::BlockDevice*)>)
              definition:  mbed::ObservingBlockDevice::deinit()
              definition:  mbed::ObservingBlockDevice::program(const void*, unsigned long long, unsigned long long)
              definition:  mbed::ObservingBlockDevice::ObservingBlockDevice(mbed::BlockDevice*)
              definition:  mbed::ObservingBlockDevice::ObservingBlockDevice__sub_object(mbed::BlockDevice*)
              definition:  mbed::ObservingBlockDevice::~ObservingBlockDevice__deallocating()
              definition:  mbed::ObservingBlockDevice::~ObservingBlockDevice()
              definition:  mbed::ObservingBlockDevice::~ObservingBlockDevice__sub_object()
              weak defn :  mbed::Callback<void(mbed::BlockDevice*)>::Callback__sub_object()
              definition:  mbed::ObservingBlockDevice::get_read_size() const
              definition:  mbed::ObservingBlockDevice::get_erase_size() const
              definition:  mbed::ObservingBlockDevice::get_erase_size(unsigned long long) const
              definition:  mbed::ObservingBlockDevice::get_erase_value() const
              definition:  mbed::ObservingBlockDevice::get_program_size() const
              definition:  mbed::ObservingBlockDevice::size() const
              definition:  mbed::ObservingBlockDevice::get_type() const
              weak defn :  mbed::Callback<void(mbed::BlockDevice*)>::call(mbed::BlockDevice*) const
              weak defn :  mbed::Callback<void(mbed::BlockDevice*)>::operator ()(mbed::BlockDevice*) const
              weak defn :  mbed::Callback<void(mbed::BlockDevice*)>::operator bool() const
              definition:  vtable for mbed::ObservingBlockDevice
              reference :  operator delete (void*)
              reference :  __aeabi_uldivmod
              reference :  __cxa_pure_virtual
              reference :  mbed_assert_internal
              reference :  mbed::BlockDevice::BlockDevice__sub_object()
              reference :  mbed::detail::CallbackBase::CallbackBase__sub_object(std::nullptr_t)
              reference :  mbed::BlockDevice::~BlockDevice__sub_object()
              reference :  mbed::detail::CallbackBase::control() const
              reference :  mbed::detail::CallbackBase::call_fn() const
              reference :  mbed::BlockDevice::trim(unsigned long long, unsigned long long)
              reference :  mbed::BlockDevice::is_valid_read(unsigned long long, unsigned long long) const
              reference :  mbed::BlockDevice::is_valid_program(unsigned long long, unsigned long long) const
              reference :  mbed::BlockDevice::is_valid_erase(unsigned long long, unsigned long long) const
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/storage/blockdevice/source/ProfilingBlockDevice.o.
              definition:  mbed::ProfilingBlockDevice::init()
              definition:  mbed::ProfilingBlockDevice::read(void*, unsigned long long, unsigned long long)
              definition:  mbed::ProfilingBlockDevice::sync()
              definition:  mbed::ProfilingBlockDevice::erase(unsigned long long, unsigned long long)
              definition:  mbed::ProfilingBlockDevice::reset()
              definition:  mbed::ProfilingBlockDevice::deinit()
              definition:  mbed::ProfilingBlockDevice::program(const void*, unsigned long long, unsigned long long)
              definition:  mbed::ProfilingBlockDevice::ProfilingBlockDevice(mbed::BlockDevice*)
              definition:  mbed::ProfilingBlockDevice::ProfilingBlockDevice__sub_object(mbed::BlockDevice*)
              weak defn :  mbed::ProfilingBlockDevice::~ProfilingBlockDevice__deallocating()
              definition:  mbed::ProfilingBlockDevice::get_read_size() const
              definition:  mbed::ProfilingBlockDevice::get_erase_size() const
              definition:  mbed::ProfilingBlockDevice::get_erase_size(unsigned long long) const
              definition:  mbed::ProfilingBlockDevice::get_read_count() const
              definition:  mbed::ProfilingBlockDevice::get_erase_count() const
              definition:  mbed::ProfilingBlockDevice::get_erase_value() const
              definition:  mbed::ProfilingBlockDevice::get_program_size() const
              definition:  mbed::ProfilingBlockDevice::get_program_count() const
              definition:  mbed::ProfilingBlockDevice::size() const
              definition:  mbed::ProfilingBlockDevice::get_type() const
              definition:  vtable for mbed::ProfilingBlockDevice
              reference :  operator delete (void*)
              reference :  __aeabi_uldivmod
              reference :  __cxa_pure_virtual
              reference :  mbed::BlockDevice::BlockDevice__sub_object()
              reference :  mbed::BlockDevice::~BlockDevice__sub_object()
              reference :  mbed::BlockDevice::trim(unsigned long long, unsigned long long)
              reference :  mbed::BlockDevice::is_valid_read(unsigned long long, unsigned long long) const
              reference :  mbed::BlockDevice::is_valid_program(unsigned long long, unsigned long long) const
              reference :  mbed::BlockDevice::is_valid_erase(unsigned long long, unsigned long long) const
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/storage/blockdevice/source/ReadOnlyBlockDevice.o.
              definition:  mbed::ReadOnlyBlockDevice::init()
              definition:  mbed::ReadOnlyBlockDevice::read(void*, unsigned long long, unsigned long long)
              definition:  mbed::ReadOnlyBlockDevice::sync()
              definition:  mbed::ReadOnlyBlockDevice::erase(unsigned long long, unsigned long long)
              definition:  mbed::ReadOnlyBlockDevice::deinit()
              definition:  mbed::ReadOnlyBlockDevice::program(const void*, unsigned long long, unsigned long long)
              definition:  mbed::ReadOnlyBlockDevice::ReadOnlyBlockDevice(mbed::BlockDevice*)
              definition:  mbed::ReadOnlyBlockDevice::ReadOnlyBlockDevice__sub_object(mbed::BlockDevice*)
              definition:  mbed::ReadOnlyBlockDevice::~ReadOnlyBlockDevice__deallocating()
              definition:  mbed::ReadOnlyBlockDevice::~ReadOnlyBlockDevice()
              definition:  mbed::ReadOnlyBlockDevice::~ReadOnlyBlockDevice__sub_object()
              definition:  mbed::ReadOnlyBlockDevice::get_read_size() const
              definition:  mbed::ReadOnlyBlockDevice::get_erase_size() const
              definition:  mbed::ReadOnlyBlockDevice::get_erase_size(unsigned long long) const
              definition:  mbed::ReadOnlyBlockDevice::get_erase_value() const
              definition:  mbed::ReadOnlyBlockDevice::get_program_size() const
              definition:  mbed::ReadOnlyBlockDevice::size() const
              definition:  mbed::ReadOnlyBlockDevice::get_type() const
              definition:  vtable for mbed::ReadOnlyBlockDevice
              reference :  operator delete (void*)
              reference :  __aeabi_uldivmod
              reference :  __cxa_pure_virtual
              reference :  mbed::BlockDevice::BlockDevice__sub_object()
              reference :  mbed::BlockDevice::~BlockDevice__sub_object()
              reference :  mbed::BlockDevice::trim(unsigned long long, unsigned long long)
              reference :  mbed::BlockDevice::is_valid_read(unsigned long long, unsigned long long) const
              reference :  mbed::BlockDevice::is_valid_program(unsigned long long, unsigned long long) const
              reference :  mbed::BlockDevice::is_valid_erase(unsigned long long, unsigned long long) const
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/storage/blockdevice/source/SlicingBlockDevice.o.
              definition:  mbed::SlicingBlockDevice::init()
              definition:  mbed::SlicingBlockDevice::read(void*, unsigned long long, unsigned long long)
              definition:  mbed::SlicingBlockDevice::sync()
              definition:  mbed::SlicingBlockDevice::erase(unsigned long long, unsigned long long)
              definition:  mbed::SlicingBlockDevice::deinit()
              definition:  mbed::SlicingBlockDevice::program(const void*, unsigned long long, unsigned long long)
              definition:  mbed::SlicingBlockDevice::SlicingBlockDevice(mbed::BlockDevice*, unsigned long long, unsigned long long)
              definition:  mbed::SlicingBlockDevice::SlicingBlockDevice__sub_object(mbed::BlockDevice*, unsigned long long, unsigned long long)
              weak defn :  mbed::SlicingBlockDevice::~SlicingBlockDevice__deallocating()
              definition:  mbed::SlicingBlockDevice::get_read_size() const
              definition:  mbed::SlicingBlockDevice::is_valid_read(unsigned long long, unsigned long long) const
              definition:  mbed::SlicingBlockDevice::get_erase_size() const
              definition:  mbed::SlicingBlockDevice::get_erase_size(unsigned long long) const
              definition:  mbed::SlicingBlockDevice::is_valid_erase(unsigned long long, unsigned long long) const
              definition:  mbed::SlicingBlockDevice::get_erase_value() const
              definition:  mbed::SlicingBlockDevice::get_program_size() const
              definition:  mbed::SlicingBlockDevice::is_valid_program(unsigned long long, unsigned long long) const
              definition:  mbed::SlicingBlockDevice::size() const
              definition:  mbed::SlicingBlockDevice::get_type() const
              definition:  vtable for mbed::SlicingBlockDevice
              reference :  operator delete (void*)
              reference :  __aeabi_uldivmod
              reference :  __cxa_pure_virtual
              reference :  mbed_assert_internal
              reference :  mbed::BlockDevice::BlockDevice__sub_object()
              reference :  mbed::BlockDevice::~BlockDevice__sub_object()
              reference :  mbed::BlockDevice::trim(unsigned long long, unsigned long long)
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/storage/filesystem/fat/ChaN/ff.o.
              reference :  __aeabi_memset
              reference :  disk_initialize
              reference :  disk_ioctl
              reference :  disk_read
              reference :  disk_status
              reference :  disk_write
              definition:  f_chdir
              definition:  f_chdrive
              definition:  f_close
              definition:  f_closedir
              definition:  f_getfree
              definition:  f_lseek
              definition:  f_mkdir
              definition:  f_mkfs
              definition:  f_mount
              definition:  f_open
              definition:  f_opendir
              definition:  f_read
              definition:  f_readdir
              definition:  f_rename
              definition:  f_stat
              definition:  f_sync
              definition:  f_truncate
              definition:  f_unlink
              definition:  f_write
              reference :  ff_memalloc
              reference :  ff_memfree
              reference :  ff_oem2uni
              reference :  ff_uni2oem
              reference :  ff_wtoupper
              reference :  get_fattime
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/storage/filesystem/fat/ChaN/ffunicode.o.
              definition:  ff_oem2uni
              definition:  ff_uni2oem
              definition:  ff_wtoupper
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/storage/filesystem/fat/source/FATFileSystem.o.
              reference :  mbed::FileSystem::file_isatty(void*)
              reference :  mbed::FileSystem::file_rewind(void*)
              reference :  mbed::FileSystem::open(mbed::FileHandle**, const char*, int)
              reference :  mbed::FileSystem::open(mbed::DirHandle**, const char*)
              reference :  mbed::FileSystem::dir_size(void*)
              reference :  mbed::FileSystem::FileSystem__sub_object(const char*)
              definition:  mbed::FATFileSystem::dir_rewind(void*)
              definition:  mbed::FATFileSystem::file_close(void*)
              definition:  mbed::FATFileSystem::file_write(void*, const void*, unsigned)
              definition:  mbed::FATFileSystem::file_truncate(void*, long)
              definition:  mbed::FATFileSystem::lock()
              definition:  mbed::FATFileSystem::stat(const char*, stat*)
              definition:  mbed::FATFileSystem::mkdir(const char*, unsigned)
              definition:  mbed::FATFileSystem::mount(mbed::BlockDevice*)
              definition:  mbed::FATFileSystem::mount(mbed::BlockDevice*, bool)
              definition:  mbed::FATFileSystem::format(mbed::BlockDevice*, unsigned long long)
              definition:  mbed::FATFileSystem::remove(const char*)
              definition:  mbed::FATFileSystem::rename(const char*, const char*)
              definition:  mbed::FATFileSystem::unlock()
              definition:  mbed::FATFileSystem::statvfs(const char*, statvfs*)
              definition:  mbed::FATFileSystem::unmount()
              definition:  mbed::FATFileSystem::dir_open(void**, const char*)
              definition:  mbed::FATFileSystem::dir_read(void*, dirent*)
              definition:  mbed::FATFileSystem::dir_seek(void*, long)
              definition:  mbed::FATFileSystem::dir_tell(void*)
              weak defn :  mbed::FATFileSystem::reformat(mbed::BlockDevice*)
              definition:  mbed::FATFileSystem::reformat(mbed::BlockDevice*, int)
              definition:  mbed::FATFileSystem::dir_close(void*)
              definition:  mbed::FATFileSystem::file_open(void**, const char*, int)
              definition:  mbed::FATFileSystem::file_read(void*, void*, unsigned)
              definition:  mbed::FATFileSystem::file_seek(void*, long, int)
              definition:  mbed::FATFileSystem::file_size(void*)
              definition:  mbed::FATFileSystem::file_sync(void*)
              definition:  mbed::FATFileSystem::file_tell(void*)
              definition:  mbed::FATFileSystem::FATFileSystem(const char*, mbed::BlockDevice*)
              definition:  mbed::FATFileSystem::FATFileSystem__sub_object(const char*, mbed::BlockDevice*)
              definition:  mbed::FATFileSystem::~FATFileSystem__deallocating()
              definition:  mbed::FATFileSystem::~FATFileSystem()
              definition:  mbed::FATFileSystem::~FATFileSystem__sub_object()
              weak defn :  mbed::FileSystemLike::~FileSystemLike__sub_object()
              weak defn :  T1 mbed::detail::invoke_r<void, void(*&)(const char*), <const char*>, (int)0>(T2&&, T3&&...)
              weak defn :  void mbed::Callback<void(const char*)>::target_call<void(*)(const char*)>(const mbed::detail::CallbackBase*, const char*)
              weak defn :  void mbed::Callback<void(const char*)>::generate<void(*)(const char*), void>(T1&&)
              weak defn :  mbed::Callback<void(const char*)>::Callback__sub_object(std::nullptr_t)
              weak defn :  mbed::Callback<void(const char*)>::Callback__sub_object()
              weak defn :  mbed::Callback<void(const char*)>::Callback__sub_object<void(*)(const char*), (int)0>(T1)
              weak defn :  mbed::Deferred<const char*>::Deferred__sub_object(const char*, mbed::Callback<void(const char*)>)
              weak defn :  mbed::Deferred<const char*>::~Deferred__sub_object()
              weak defn :  mbed::Deferred<const char*>::operator const char*()
              reference :  mbed::FileBase::getName()
              reference :  mbed::FileBase::~FileBase__sub_object()
              weak defn :  std::__1::enable_if<((!std::is_member_pointer<std::__1::decay<T1>::type>::value)||(std::is_member_object_pointer<std::__1::decay<T1>::type>::value&&(sizeof...(param#2)!=(int)1))), decltype((std::forward<T1>(param#1)(std::forward<T2>(param#2)...)))>::type mstd::impl::INVOKE<void(*&)(const char*), <const char*>>(T1&&, T2&&...)
              weak defn :  mstd::invoke_result<T1, <T2...>>::type mstd::invoke<void(*&)(const char*), <const char*>>(T1&&, T2&&...)
              reference :  rtos::Mutex::lock()
              reference :  rtos::Mutex::unlock()
              reference :  rtos::Mutex::Mutex()
              weak defn :  mbed::Callback<void(const char*)>::call(const char*) const
              weak defn :  mbed::Callback<void(const char*)>::operator ()(const char*) const
              weak defn :  mbed::Callback<void(const char*)>::operator bool() const
              definition:  vtable for mbed::FATFileSystem
              definition:  thunk{-4} to mbed::FATFileSystem::~FATFileSystem__deallocating()
              definition:  thunk{-4} to mbed::FATFileSystem::~FATFileSystem()
              reference :  operator delete[] (void*)
              reference :  operator delete (void*)
              reference :  operator new[] (unsigned)
              reference :  operator new(unsigned)
              reference :  __aeabi_memclr4
              reference :  __aeabi_memclr8
              reference :  __aeabi_memset
              reference :  __aeabi_uldivmod
              definition:  disk_initialize
              definition:  disk_ioctl
              definition:  disk_read
              definition:  disk_status
              definition:  disk_write
              reference :  f_close
              reference :  f_closedir
              reference :  f_getfree
              reference :  f_lseek
              reference :  f_mkdir
              reference :  f_mkfs
              reference :  f_mount
              reference :  f_open
              reference :  f_opendir
              reference :  f_read
              reference :  f_readdir
              reference :  f_rename
              reference :  f_stat
              reference :  f_sync
              reference :  f_truncate
              reference :  f_unlink
              reference :  f_write
              definition:  ff_memalloc
              definition:  ff_memfree
              reference :  free
              definition:  get_fattime
              reference :  localtime
              reference :  malloc
              reference :  mbed_assert_internal
              reference :  osMutexAcquire
              reference :  osMutexRelease
              reference :  singleton_mutex_id
              reference :  strcpy
              reference :  strlen
              reference :  strncpy
              reference :  time
              reference :  mbed::FileSystemHandle::~FileSystemHandle__sub_object()
              reference :  SingletonPtr<rtos::Mutex>::operator ->() const
              reference :  mbed::detail::CallbackBase::clear()
              reference :  mbed::detail::CallbackBase::CallbackBase__sub_object(std::nullptr_t)
              reference :  mbed::detail::CallbackBase::control() const
              reference :  mbed::detail::CallbackBase::call_fn() const
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/storage/filesystem/littlefs/littlefs/lfs.o.
              reference :  __aeabi_memclr4
              reference :  __aeabi_memcpy
              reference :  __aeabi_memset
              reference :  __stderr
              reference :  free
              reference :  lfs_crc
              definition:  lfs_deorphan
              definition:  lfs_dir_close
              definition:  lfs_dir_open
              definition:  lfs_dir_read
              definition:  lfs_dir_rewind
              definition:  lfs_dir_seek
              definition:  lfs_dir_tell
              definition:  lfs_file_close
              definition:  lfs_file_open
              definition:  lfs_file_opencfg
              definition:  lfs_file_read
              definition:  lfs_file_rewind
              definition:  lfs_file_seek
              definition:  lfs_file_size
              definition:  lfs_file_sync
              definition:  lfs_file_tell
              definition:  lfs_file_truncate
              definition:  lfs_file_write
              definition:  lfs_format
              definition:  lfs_mkdir
              definition:  lfs_mount
              definition:  lfs_remove
              definition:  lfs_rename
              definition:  lfs_stat
              definition:  lfs_traverse
              definition:  lfs_unmount
              reference :  malloc
              reference :  mbed_assert_internal
              reference :  memcmp
              reference :  strchr
              reference :  strcspn
              reference :  strlen
              reference :  strspn
              reference :  vfprintf
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/storage/filesystem/littlefs/littlefs/lfs_util.o.
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/storage/filesystem/littlefs/source/LittleFileSystem.o.
              reference :  mbed::FileSystem::file_isatty(void*)
              reference :  mbed::FileSystem::file_rewind(void*)
              reference :  mbed::FileSystem::open(mbed::FileHandle**, const char*, int)
              reference :  mbed::FileSystem::open(mbed::DirHandle**, const char*)
              reference :  mbed::FileSystem::dir_size(void*)
              reference :  mbed::FileSystem::FileSystem__sub_object(const char*)
              definition:  mbed::LittleFileSystem::dir_rewind(void*)
              definition:  mbed::LittleFileSystem::file_close(void*)
              definition:  mbed::LittleFileSystem::file_write(void*, const void*, unsigned)
              definition:  mbed::LittleFileSystem::file_truncate(void*, long)
              definition:  mbed::LittleFileSystem::stat(const char*, stat*)
              definition:  mbed::LittleFileSystem::mkdir(const char*, unsigned)
              definition:  mbed::LittleFileSystem::mount(mbed::BlockDevice*)
              definition:  mbed::LittleFileSystem::format(mbed::BlockDevice*, unsigned, unsigned, unsigned, unsigned)
              definition:  mbed::LittleFileSystem::remove(const char*)
              definition:  mbed::LittleFileSystem::rename(const char*, const char*)
              definition:  mbed::LittleFileSystem::statvfs(const char*, statvfs*)
              definition:  mbed::LittleFileSystem::unmount()
              definition:  mbed::LittleFileSystem::dir_open(void**, const char*)
              definition:  mbed::LittleFileSystem::dir_read(void*, dirent*)
              definition:  mbed::LittleFileSystem::dir_seek(void*, long)
              definition:  mbed::LittleFileSystem::dir_tell(void*)
              definition:  mbed::LittleFileSystem::reformat(mbed::BlockDevice*)
              definition:  mbed::LittleFileSystem::dir_close(void*)
              definition:  mbed::LittleFileSystem::file_open(void**, const char*, int)
              definition:  mbed::LittleFileSystem::file_read(void*, void*, unsigned)
              definition:  mbed::LittleFileSystem::file_seek(void*, long, int)
              definition:  mbed::LittleFileSystem::file_size(void*)
              definition:  mbed::LittleFileSystem::file_sync(void*)
              definition:  mbed::LittleFileSystem::file_tell(void*)
              definition:  mbed::LittleFileSystem::LittleFileSystem(const char*, mbed::BlockDevice*, unsigned, unsigned, unsigned, unsigned)
              definition:  mbed::LittleFileSystem::LittleFileSystem__sub_object(const char*, mbed::BlockDevice*, unsigned, unsigned, unsigned, unsigned)
              definition:  mbed::LittleFileSystem::~LittleFileSystem__deallocating()
              definition:  mbed::LittleFileSystem::~LittleFileSystem()
              definition:  mbed::LittleFileSystem::~LittleFileSystem__sub_object()
              reference :  mbed::impl::MbedCRC<(unsigned)79764919, (unsigned char)32, (mbed::CrcMode)1>::_crc_table
              weak defn :  mbed::impl::MbedCRC<(unsigned)79764919, (unsigned char)32, (mbed::CrcMode)1>::reflect_crc(unsigned)
              weak defn :  mbed::impl::MbedCRC<(unsigned)79764919, (unsigned char)32, (mbed::CrcMode)1>::get_crc_mask()
              weak defn :  mbed::impl::MbedCRC<(unsigned)79764919, (unsigned char)32, (mbed::CrcMode)1>::reflect_byte(unsigned)
              weak defn :  mbed::impl::MbedCRC<(unsigned)79764919, (unsigned char)32, (mbed::CrcMode)1>::compute_partial(const void*, unsigned, unsigned*)
              weak defn :  mbed::impl::MbedCRC<(unsigned)79764919, (unsigned char)32, (mbed::CrcMode)1>::adjust_initial_value(unsigned, bool)
              weak defn :  mbed::impl::MbedCRC<(unsigned)79764919, (unsigned char)32, (mbed::CrcMode)1>::compute_partial_stop(unsigned*)
              weak defn :  mbed::impl::MbedCRC<(unsigned)79764919, (unsigned char)32, (mbed::CrcMode)1>::compute_partial_start(unsigned*)
              weak defn :  mbed::impl::MbedCRC<(unsigned)79764919, (unsigned char)32, (mbed::CrcMode)1>::compute(const void*, unsigned, unsigned*)
              weak defn :  mbed::impl::MbedCRC<(unsigned)79764919, (unsigned char)32, (mbed::CrcMode)1>::reflect(unsigned)
              weak defn :  mbed::impl::MbedCRC<(unsigned)79764919, (unsigned char)32, (mbed::CrcMode)1>::MbedCRC__sub_object(unsigned, unsigned, bool, bool)
              weak defn :  mbed::MbedCRC<(unsigned)79764919, (unsigned char)32, (mbed::CrcMode)1>::compute(const void*, unsigned, unsigned*)
              weak defn :  mbed::MbedCRC<(unsigned)79764919, (unsigned char)32, (mbed::CrcMode)1>::MbedCRC__sub_object(unsigned, unsigned, bool, bool)
              reference :  mbed::FileBase::~FileBase__sub_object()
              reference :  rtos::Mutex::lock()
              reference :  rtos::Mutex::unlock()
              reference :  rtos::Mutex::Mutex()
              reference :  rtos::Mutex::~Mutex()
              weak defn :  std::__1::enable_if<(T1==(mbed::CrcMode)1), int>::type mbed::impl::MbedCRC<(unsigned)79764919, (unsigned char)32, (mbed::CrcMode)1>::do_compute_partial<(mbed::CrcMode)1>(const unsigned char*, unsigned, unsigned*) const
              definition:  vtable for mbed::LittleFileSystem
              definition:  thunk{-4} to mbed::LittleFileSystem::~LittleFileSystem__deallocating()
              definition:  thunk{-4} to mbed::LittleFileSystem::~LittleFileSystem()
              reference :  operator delete (void*)
              reference :  operator new(unsigned)
              reference :  __aeabi_memclr4
              reference :  __aeabi_memclr8
              reference :  __aeabi_uldivmod
              definition:  lfs_crc
              reference :  lfs_dir_close
              reference :  lfs_dir_open
              reference :  lfs_dir_read
              reference :  lfs_dir_rewind
              reference :  lfs_dir_seek
              reference :  lfs_dir_tell
              reference :  lfs_file_close
              reference :  lfs_file_open
              reference :  lfs_file_read
              reference :  lfs_file_seek
              reference :  lfs_file_size
              reference :  lfs_file_sync
              reference :  lfs_file_tell
              reference :  lfs_file_truncate
              reference :  lfs_file_write
              reference :  lfs_format
              reference :  lfs_mkdir
              reference :  lfs_mount
              reference :  lfs_remove
              reference :  lfs_rename
              reference :  lfs_stat
              reference :  lfs_traverse
              reference :  lfs_unmount
              reference :  strcpy
              reference :  mbed::FileSystemLike::~FileSystemLike__sub_object()
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/storage/filesystem/littlefsv2/littlefs/lfs2.o.
              reference :  __aeabi_memclr
              reference :  __aeabi_memclr4
              reference :  __aeabi_memcpy
              reference :  __aeabi_memset
              reference :  __stderr
              reference :  free
              reference :  lfs2_crc
              definition:  lfs2_dir_close
              definition:  lfs2_dir_open
              definition:  lfs2_dir_read
              definition:  lfs2_dir_rewind
              definition:  lfs2_dir_seek
              definition:  lfs2_dir_tell
              definition:  lfs2_file_close
              definition:  lfs2_file_open
              definition:  lfs2_file_opencfg
              definition:  lfs2_file_read
              definition:  lfs2_file_rewind
              definition:  lfs2_file_seek
              definition:  lfs2_file_size
              definition:  lfs2_file_sync
              definition:  lfs2_file_tell
              definition:  lfs2_file_truncate
              definition:  lfs2_file_write
              definition:  lfs2_format
              definition:  lfs2_fs_size
              definition:  lfs2_fs_traverse
              definition:  lfs2_fs_traverseraw
              definition:  lfs2_getattr
              definition:  lfs2_mkdir
              definition:  lfs2_mount
              definition:  lfs2_remove
              definition:  lfs2_removeattr
              definition:  lfs2_rename
              definition:  lfs2_setattr
              definition:  lfs2_stat
              definition:  lfs2_unmount
              reference :  malloc
              reference :  mbed_assert_internal
              reference :  strchr
              reference :  strcspn
              reference :  strlen
              reference :  strspn
              reference :  vfprintf
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/storage/filesystem/littlefsv2/littlefs/lfs2_util.o.
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/storage/filesystem/littlefsv2/source/LittleFileSystem2.o.
              reference :  mbed::FileSystem::file_isatty(void*)
              reference :  mbed::FileSystem::file_rewind(void*)
              reference :  mbed::FileSystem::open(mbed::FileHandle**, const char*, int)
              reference :  mbed::FileSystem::open(mbed::DirHandle**, const char*)
              reference :  mbed::FileSystem::dir_size(void*)
              reference :  mbed::FileSystem::FileSystem__sub_object(const char*)
              definition:  mbed::LittleFileSystem2::dir_rewind(void*)
              definition:  mbed::LittleFileSystem2::file_close(void*)
              definition:  mbed::LittleFileSystem2::file_write(void*, const void*, unsigned)
              definition:  mbed::LittleFileSystem2::file_truncate(void*, long)
              definition:  mbed::LittleFileSystem2::stat(const char*, stat*)
              definition:  mbed::LittleFileSystem2::mkdir(const char*, unsigned)
              definition:  mbed::LittleFileSystem2::mount(mbed::BlockDevice*)
              definition:  mbed::LittleFileSystem2::format(mbed::BlockDevice*, unsigned, unsigned, unsigned, unsigned)
              definition:  mbed::LittleFileSystem2::remove(const char*)
              definition:  mbed::LittleFileSystem2::rename(const char*, const char*)
              definition:  mbed::LittleFileSystem2::statvfs(const char*, statvfs*)
              definition:  mbed::LittleFileSystem2::unmount()
              definition:  mbed::LittleFileSystem2::dir_open(void**, const char*)
              definition:  mbed::LittleFileSystem2::dir_read(void*, dirent*)
              definition:  mbed::LittleFileSystem2::dir_seek(void*, long)
              definition:  mbed::LittleFileSystem2::dir_tell(void*)
              definition:  mbed::LittleFileSystem2::reformat(mbed::BlockDevice*)
              definition:  mbed::LittleFileSystem2::dir_close(void*)
              definition:  mbed::LittleFileSystem2::file_open(void**, const char*, int)
              definition:  mbed::LittleFileSystem2::file_read(void*, void*, unsigned)
              definition:  mbed::LittleFileSystem2::file_seek(void*, long, int)
              definition:  mbed::LittleFileSystem2::file_size(void*)
              definition:  mbed::LittleFileSystem2::file_sync(void*)
              definition:  mbed::LittleFileSystem2::file_tell(void*)
              definition:  mbed::LittleFileSystem2::LittleFileSystem2(const char*, mbed::BlockDevice*, unsigned, unsigned, unsigned, unsigned)
              definition:  mbed::LittleFileSystem2::LittleFileSystem2__sub_object(const char*, mbed::BlockDevice*, unsigned, unsigned, unsigned, unsigned)
              definition:  mbed::LittleFileSystem2::~LittleFileSystem2__deallocating()
              definition:  mbed::LittleFileSystem2::~LittleFileSystem2()
              definition:  mbed::LittleFileSystem2::~LittleFileSystem2__sub_object()
              reference :  mbed::impl::MbedCRC<(unsigned)79764919, (unsigned char)32, (mbed::CrcMode)1>::_crc_table
              reference :  mbed::FileBase::~FileBase__sub_object()
              reference :  rtos::Mutex::lock()
              reference :  rtos::Mutex::unlock()
              reference :  rtos::Mutex::Mutex()
              reference :  rtos::Mutex::~Mutex()
              definition:  vtable for mbed::LittleFileSystem2
              definition:  thunk{-4} to mbed::LittleFileSystem2::~LittleFileSystem2__deallocating()
              definition:  thunk{-4} to mbed::LittleFileSystem2::~LittleFileSystem2()
              reference :  operator delete (void*)
              reference :  operator new(unsigned)
              reference :  __aeabi_memclr4
              reference :  __aeabi_memclr8
              reference :  __aeabi_uldivmod
              definition:  lfs2_crc
              reference :  lfs2_dir_close
              reference :  lfs2_dir_open
              reference :  lfs2_dir_read
              reference :  lfs2_dir_rewind
              reference :  lfs2_dir_seek
              reference :  lfs2_dir_tell
              reference :  lfs2_file_close
              reference :  lfs2_file_open
              reference :  lfs2_file_read
              reference :  lfs2_file_seek
              reference :  lfs2_file_size
              reference :  lfs2_file_sync
              reference :  lfs2_file_tell
              reference :  lfs2_file_truncate
              reference :  lfs2_file_write
              reference :  lfs2_format
              reference :  lfs2_fs_size
              reference :  lfs2_mkdir
              reference :  lfs2_mount
              reference :  lfs2_remove
              reference :  lfs2_rename
              reference :  lfs2_stat
              reference :  lfs2_unmount
              reference :  strcpy
              reference :  mbed::MbedCRC<(unsigned)79764919, (unsigned char)32, (mbed::CrcMode)1>::MbedCRC__sub_object(unsigned, unsigned, bool, bool)
              reference :  mbed::MbedCRC<(unsigned)79764919, (unsigned char)32, (mbed::CrcMode)1>::compute(const void*, unsigned, unsigned*)
              reference :  mbed::FileSystemLike::~FileSystemLike__sub_object()
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/storage/filesystem/source/Dir.o.
              definition:  mbed::Dir::open(mbed::FileSystem*, const char*)
              definition:  mbed::Dir::read(dirent*)
              definition:  mbed::Dir::seek(long)
              definition:  mbed::Dir::size()
              definition:  mbed::Dir::tell()
              definition:  mbed::Dir::close()
              definition:  mbed::Dir::rewind()
              definition:  mbed::Dir::Dir(mbed::FileSystem*, const char*)
              definition:  mbed::Dir::Dir()
              definition:  mbed::Dir::Dir__sub_object(mbed::FileSystem*, const char*)
              definition:  mbed::Dir::Dir__sub_object()
              definition:  mbed::Dir::~Dir__deallocating()
              definition:  mbed::Dir::~Dir()
              definition:  mbed::Dir::~Dir__sub_object()
              weak defn :  mbed::DirHandle::size()
              weak defn :  mbed::DirHandle::DirHandle__sub_object()
              weak defn :  mbed::DirHandle::~DirHandle__deallocating()
              weak defn :  mbed::DirHandle::~DirHandle__sub_object()
              definition:  vtable for mbed::Dir
              weak defn :  vtable for mbed::DirHandle
              reference :  operator delete (void*)
              reference :  operator new(unsigned)
              reference :  __aeabi_memclr
              reference :  __cxa_pure_virtual
              reference :  mbed_assert_internal
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/storage/filesystem/source/File.o.
              definition:  mbed::File::open(mbed::FileSystem*, const char*, int)
              definition:  mbed::File::read(void*, unsigned)
              definition:  mbed::File::seek(long, int)
              definition:  mbed::File::size()
              definition:  mbed::File::sync()
              definition:  mbed::File::tell()
              definition:  mbed::File::close()
              definition:  mbed::File::write(const void*, unsigned)
              definition:  mbed::File::isatty()
              definition:  mbed::File::rewind()
              definition:  mbed::File::truncate(long)
              definition:  mbed::File::File(mbed::FileSystem*, const char*, int)
              definition:  mbed::File::File()
              definition:  mbed::File::File__sub_object(mbed::FileSystem*, const char*, int)
              definition:  mbed::File::File__sub_object()
              definition:  mbed::File::~File__deallocating()
              definition:  mbed::File::~File()
              definition:  mbed::File::~File__sub_object()
              reference :  vtable for mbed::FileHandle
              definition:  vtable for mbed::File
              reference :  operator delete (void*)
              reference :  mbed_assert_internal
              reference :  mbed::FileHandle::FileHandle__sub_object()
              reference :  mbed::FileHandle::~FileHandle__sub_object()
              reference :  mbed::FileHandle::set_blocking(bool)
              reference :  mbed::FileHandle::is_blocking() const
              reference :  mbed::FileHandle::enable_input(bool)
              reference :  mbed::FileHandle::enable_output(bool)
              reference :  mbed::FileHandle::poll(short) const
              reference :  mbed::FileHandle::sigio(mbed::Callback<void()>)
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/storage/filesystem/source/FileSystem.o.
              definition:  mbed::FileSystem::dir_rewind(void*)
              definition:  mbed::FileSystem::file_isatty(void*)
              definition:  mbed::FileSystem::file_rewind(void*)
              definition:  mbed::FileSystem::file_truncate(void*, long)
              definition:  mbed::FileSystem::open(mbed::FileHandle**, const char*, int)
              definition:  mbed::FileSystem::open(mbed::DirHandle**, const char*)
              definition:  mbed::FileSystem::stat(const char*, stat*)
              definition:  mbed::FileSystem::mkdir(const char*, unsigned)
              definition:  mbed::FileSystem::remove(const char*)
              definition:  mbed::FileSystem::rename(const char*, const char*)
              definition:  mbed::FileSystem::statvfs(const char*, statvfs*)
              definition:  mbed::FileSystem::dir_open(void**, const char*)
              definition:  mbed::FileSystem::dir_read(void*, dirent*)
              definition:  mbed::FileSystem::dir_seek(void*, long)
              definition:  mbed::FileSystem::dir_size(void*)
              definition:  mbed::FileSystem::dir_tell(void*)
              definition:  mbed::FileSystem::reformat(mbed::BlockDevice*)
              definition:  mbed::FileSystem::dir_close(void*)
              definition:  mbed::FileSystem::file_size(void*)
              definition:  mbed::FileSystem::file_sync(void*)
              definition:  mbed::FileSystem::file_tell(void*)
              definition:  mbed::FileSystem::FileSystem__sub_object(const char*)
              weak defn :  mbed::FileSystem::~FileSystem__deallocating()
              weak defn :  mbed::FileSystemLike::FileSystemLike__sub_object(const char*)
              weak defn :  mbed::FileSystemLike::~FileSystemLike__deallocating()
              reference :  mbed::FileSystemHandle::open(mbed::DirHandle**, const char*)
              reference :  mbed::FileSystemHandle::stat(const char*, stat*)
              reference :  mbed::FileSystemHandle::mkdir(const char*, unsigned)
              reference :  mbed::FileSystemHandle::remove(const char*)
              reference :  mbed::FileSystemHandle::rename(const char*, const char*)
              reference :  mbed::FileSystemHandle::statvfs(const char*, statvfs*)
              weak defn :  mbed::FileSystemHandle::FileSystemHandle__sub_object()
              reference :  mbed::Dir::open(mbed::FileSystem*, const char*)
              reference :  mbed::Dir::read(dirent*)
              reference :  mbed::Dir::seek(long)
              reference :  mbed::Dir::size()
              reference :  mbed::Dir::tell()
              reference :  mbed::Dir::close()
              reference :  mbed::Dir::rewind()
              reference :  mbed::Dir::Dir__sub_object()
              reference :  mbed::Dir::~Dir__sub_object()
              reference :  mbed::File::open(mbed::FileSystem*, const char*, int)
              reference :  mbed::File::read(void*, unsigned)
              reference :  mbed::File::seek(long, int)
              reference :  mbed::File::size()
              reference :  mbed::File::sync()
              reference :  mbed::File::tell()
              reference :  mbed::File::close()
              reference :  mbed::File::write(const void*, unsigned)
              reference :  mbed::File::isatty()
              reference :  mbed::File::rewind()
              reference :  mbed::File::truncate(long)
              reference :  mbed::File::File__sub_object()
              reference :  mbed::File::~File__sub_object()
              weak defn :  mbed::Managed<mbed::Dir>::close()
              weak defn :  mbed::Managed<mbed::Dir>::Managed__sub_object()
              weak defn :  mbed::Managed<mbed::Dir>::~Managed__deallocating()
              weak defn :  mbed::Managed<mbed::File>::close()
              weak defn :  mbed::Managed<mbed::File>::Managed__sub_object()
              weak defn :  mbed::Managed<mbed::File>::~Managed__deallocating()
              reference :  mbed::FileBase::FileBase__sub_object(const char*, mbed::PathType)
              reference :  mbed::FileBase::~FileBase__sub_object()
              definition:  vtable for mbed::FileSystem
              weak defn :  vtable for mbed::FileSystemLike
              reference :  vtable for mbed::FileSystemHandle
              weak defn :  vtable for mbed::Managed<mbed::Dir>
              weak defn :  vtable for mbed::Managed<mbed::File>
              weak defn :  thunk{-4} to mbed::FileSystem::~FileSystem__deallocating()
              weak defn :  thunk{-4} to mbed::FileSystem::~FileSystem()
              weak defn :  thunk{-4} to mbed::FileSystemLike::~FileSystemLike__deallocating()
              weak defn :  thunk{-4} to mbed::FileSystemLike::~FileSystemLike()
              reference :  operator delete (void*)
              reference :  operator new(unsigned)
              reference :  __cxa_pure_virtual
              reference :  mbed::FileSystemLike::~FileSystemLike__sub_object()
              reference :  mbed::FileHandle::set_blocking(bool)
              reference :  mbed::FileHandle::is_blocking() const
              reference :  mbed::FileHandle::enable_input(bool)
              reference :  mbed::FileHandle::enable_output(bool)
              reference :  mbed::FileHandle::poll(short) const
              reference :  mbed::FileHandle::sigio(mbed::Callback<void()>)
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/storage/kvstore/direct_access_devicekey/source/DirectAccessDevicekey.o.
              definition:  direct_access_to_devicekey(unsigned, unsigned, void*, unsigned, unsigned*)
              definition:  get_expected_internal_TDBStore_position(unsigned*, unsigned*)
              reference :  mbed::mbed_crc_mutex
              weak defn :  mbed::impl::MbedCRC<(unsigned)79764919, (unsigned char)32, (mbed::CrcMode)0>::compute_partial(const void*, unsigned, unsigned*)
              weak defn :  mbed::impl::MbedCRC<(unsigned)79764919, (unsigned char)32, (mbed::CrcMode)0>::adjust_initial_value(unsigned, bool)
              weak defn :  mbed::impl::MbedCRC<(unsigned)79764919, (unsigned char)32, (mbed::CrcMode)0>::compute_partial_stop(unsigned*)
              weak defn :  mbed::impl::MbedCRC<(unsigned)79764919, (unsigned char)32, (mbed::CrcMode)0>::compute_partial_start(unsigned*)
              weak defn :  mbed::impl::MbedCRC<(unsigned)79764919, (unsigned char)32, (mbed::CrcMode)0>::lock()
              weak defn :  mbed::impl::MbedCRC<(unsigned)79764919, (unsigned char)32, (mbed::CrcMode)0>::unlock()
              weak defn :  mbed::impl::MbedCRC<(unsigned)79764919, (unsigned char)32, (mbed::CrcMode)0>::compute(const void*, unsigned, unsigned*)
              weak defn :  mbed::impl::MbedCRC<(unsigned)79764919, (unsigned char)32, (mbed::CrcMode)0>::MbedCRC__sub_object(unsigned, unsigned, bool, bool)
              weak defn :  mbed::MbedCRC<(unsigned)79764919, (unsigned char)32, (mbed::CrcMode)0>::compute(const void*, unsigned, unsigned*)
              weak defn :  mbed::MbedCRC<(unsigned)79764919, (unsigned char)32, (mbed::CrcMode)0>::MbedCRC__sub_object(unsigned, unsigned, bool, bool)
              reference :  mbed::FlashIAP::init()
              reference :  mbed::FlashIAP::read(void*, unsigned, unsigned)
              reference :  mbed::FlashIAP::deinit()
              weak defn :  mbed::FlashIAP::FlashIAP__sub_object()
              reference :  rtos::Mutex::lock()
              reference :  rtos::Mutex::unlock()
              reference :  rtos::Mutex::Mutex()
              weak defn :  std::__1::enable_if<(T1==(mbed::CrcMode)0), int>::type mbed::impl::MbedCRC<(unsigned)79764919, (unsigned char)32, (mbed::CrcMode)0>::do_compute_partial<(mbed::CrcMode)0>(const unsigned char*, unsigned, unsigned*) const
              reference :  mbed::FlashIAP::get_flash_size() const
              reference :  mbed::FlashIAP::get_erase_value() const
              reference :  mbed::FlashIAP::get_flash_start() const
              reference :  mbed::FlashIAP::get_sector_size(unsigned) const
              reference :  hal_crc_compute_partial
              reference :  hal_crc_compute_partial_start
              reference :  hal_crc_get_result
              reference :  kv_get_default_flash_addresses
              reference :  kv_get_flash_bounds_from_config
              reference :  mbed_assert_internal
              reference :  osMutexAcquire
              reference :  osMutexRelease
              reference :  singleton_mutex_id
              reference :  SingletonPtr<rtos::Mutex>::operator ->() const
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/storage/kvstore/kv_config/source/kv_config.o.
              definition:  _get_addresses(mbed::BlockDevice*, unsigned long long, unsigned long long, unsigned long long*, unsigned long long*)
              definition:  _get_blockdevice_SD(unsigned long long, unsigned long long)
              definition:  _get_filesystem_FAT(const char*)
              definition:  _create_internal_tdb(mbed::BlockDevice**, mbed::KVStore**, unsigned long long, unsigned long long)
              definition:  _get_blockdevice_SPIF(unsigned long long, unsigned long long)
              weak defn :  get_other_blockdevice()
              definition:  _get_blockdevice_QSPIF(unsigned long long, unsigned long long)
              definition:  _get_blockdevice_other(unsigned long long, unsigned long long)
              definition:  _get_file_system_store(mbed::FileSystem*)
              definition:  _get_filesystem_LITTLE(const char*)
              definition:  _get_filesystem_default(const char*)
              definition:  _storage_config_default()
              definition:  _get_blockdevice_default(unsigned long long, unsigned long long)
              definition:  _get_blockdevice_FLASHIAP(unsigned long long, unsigned long long)
              definition:  _get_blockdevice_DATAFLASH(unsigned long long, unsigned long long)
              definition:  _storage_config_FILESYSTEM()
              definition:  _storage_config_TDB_EXTERNAL()
              definition:  _storage_config_TDB_INTERNAL()
              definition:  _storage_config_FILESYSTEM_NO_RBP()
              definition:  _storage_config_filesystem_common()
              definition:  _calculate_blocksize_match_tdbstore(mbed::BlockDevice*)
              definition:  _storage_config_TDB_EXTERNAL_NO_RBP()
              definition:  _storage_config_tdb_external_common()
              reference :  mbed::FATFileSystem::FATFileSystem(const char*, mbed::BlockDevice*)
              reference :  mbed::FileSystemStore::FileSystemStore(mbed::FileSystem*)
              reference :  mbed::LittleFileSystem::LittleFileSystem(const char*, mbed::BlockDevice*, unsigned, unsigned, unsigned, unsigned)
              reference :  mbed::SlicingBlockDevice::SlicingBlockDevice(mbed::BlockDevice*, unsigned long long, unsigned long long)
              reference :  __aeabi_uldivmod
              reference :  __cxa_guard_acquire
              reference :  __cxa_guard_release
              definition:  get_filesystemstore_folder_path
              definition:  kv_get_default_flash_addresses
              definition:  kv_get_flash_bounds_from_config
              weak defn :  kv_init_storage_config
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/storage/kvstore/securestore/source/SecureStore.o.
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/storage/kvstore/source/FileSystemStore.o.
              definition:  mbed::FileSystemStore::set_add_data(mbed::_opaque_set_handle*, const void*, unsigned)
              definition:  mbed::FileSystemStore::set_finalize(mbed::_opaque_set_handle*)
              definition:  mbed::FileSystemStore::iterator_next(mbed::_opaque_key_iterator*, char*, unsigned)
              definition:  mbed::FileSystemStore::iterator_open(mbed::_opaque_key_iterator**, const char*)
              definition:  mbed::FileSystemStore::iterator_close(mbed::_opaque_key_iterator*)
              definition:  mbed::FileSystemStore::_verify_key_file(const char*, mbed::FileSystemStore::key_metadata_t*, mbed::File*)
              definition:  mbed::FileSystemStore::_build_full_path_key(const char*)
              definition:  mbed::FileSystemStore::get(const char*, void*, unsigned, unsigned*, unsigned)
              definition:  mbed::FileSystemStore::set(const char*, const void*, unsigned, unsigned)
              definition:  mbed::FileSystemStore::init()
              definition:  mbed::FileSystemStore::reset()
              definition:  mbed::FileSystemStore::deinit()
              definition:  mbed::FileSystemStore::remove(const char*)
              definition:  mbed::FileSystemStore::get_info(const char*, mbed::KVStore::info*)
              definition:  mbed::FileSystemStore::set_start(mbed::_opaque_set_handle**, const char*, unsigned, unsigned)
              definition:  mbed::FileSystemStore::FileSystemStore(mbed::FileSystem*)
              definition:  mbed::FileSystemStore::FileSystemStore__sub_object(mbed::FileSystem*)
              weak defn :  mbed::FileSystemStore::~FileSystemStore__deallocating()
              weak defn :  mbed::FileSystemStore::~FileSystemStore__sub_object()
              reference :  mbed::Dir::open(mbed::FileSystem*, const char*)
              reference :  mbed::Dir::read(dirent*)
              reference :  mbed::Dir::close()
              reference :  mbed::Dir::Dir()
              reference :  mbed::Dir::~Dir()
              reference :  mbed::File::read(void*, unsigned)
              reference :  mbed::File::seek(long, int)
              reference :  mbed::File::size()
              reference :  mbed::File::close()
              reference :  mbed::File::File()
              reference :  mbed::File::~File()
              weak defn :  mbed::KVStore::KVStore__sub_object()
              weak defn :  mbed::KVStore::~KVStore__deallocating()
              weak defn :  mbed::KVStore::~KVStore__sub_object()
              reference :  rtos::Mutex::lock()
              reference :  rtos::Mutex::unlock()
              reference :  rtos::Mutex::Mutex()
              reference :  rtos::Mutex::~Mutex()
              weak defn :  mbed::KVStore::is_valid_key(const char*) const
              definition:  vtable for mbed::FileSystemStore
              weak defn :  vtable for mbed::KVStore
              reference :  operator delete[] (void*)
              reference :  operator delete (void*)
              reference :  operator new[] (unsigned)
              reference :  operator new(unsigned)
              reference :  __aeabi_memclr
              reference :  __cxa_pure_virtual
              reference :  get_filesystemstore_folder_path
              reference :  strlen
              reference :  strncmp
              reference :  strncpy
              reference :  strpbrk
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/storage/kvstore/source/KVMap.o.
              definition:  mbed::KVMap::config_lookup(const char*, mbed::kvstore_config_t**, unsigned*)
              definition:  mbed::KVMap::deinit_partition(mbed::kv_map_entry_t*)
              definition:  mbed::KVMap::get_main_kv_instance(const char*)
              definition:  mbed::KVMap::get_external_kv_instance(const char*)
              definition:  mbed::KVMap::get_internal_kv_instance(const char*)
              definition:  mbed::KVMap::get_external_filesystem_instance(const char*)
              definition:  mbed::KVMap::get_external_blockdevice_instance(const char*)
              definition:  mbed::KVMap::get_internal_blockdevice_instance(const char*)
              definition:  mbed::KVMap::init()
              definition:  mbed::KVMap::attach(const char*, mbed::kvstore_config_t*)
              definition:  mbed::KVMap::deinit()
              definition:  mbed::KVMap::detach(const char*)
              definition:  mbed::KVMap::lookup(const char*, mbed::KVStore**, unsigned*, unsigned*)
              definition:  mbed::KVMap::~KVMap()
              definition:  mbed::KVMap::~KVMap__sub_object()
              reference :  rtos::Mutex::lock()
              reference :  rtos::Mutex::unlock()
              reference :  rtos::Mutex::Mutex()
              reference :  operator delete[] (void*)
              reference :  operator new[] (unsigned)
              reference :  __aeabi_memcpy4
              reference :  mbed_assert_internal
              reference :  osMutexAcquire
              reference :  osMutexRelease
              reference :  singleton_mutex_id
              reference :  strchr
              reference :  strcmp
              reference :  strcpy
              reference :  strlen
              reference :  strncmp
              reference :  SingletonPtr<rtos::Mutex>::operator ->() const
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/storage/kvstore/source/TDBStore.o.
              reference :  mbed::mbed_crc_mutex
              reference :  mbed::BufferedBlockDevice::BufferedBlockDevice(mbed::BlockDevice*)
              definition:  mbed::TDBStore::reset_area(unsigned char)
              definition:  mbed::TDBStore::write_area(unsigned char, unsigned, unsigned, const void*)
              definition:  mbed::TDBStore::copy_record(unsigned char, unsigned, unsigned, unsigned&)
              definition:  mbed::TDBStore::find_record(unsigned char, const char*, unsigned&, unsigned&, unsigned&)
              definition:  mbed::TDBStore::read_record(unsigned char, unsigned, char*, void*, unsigned, unsigned&, unsigned, bool, bool, bool, bool, unsigned&, unsigned&, unsigned&)
              definition:  mbed::TDBStore::record_size(const char*, unsigned)
              definition:  mbed::TDBStore::set_add_data(mbed::_opaque_set_handle*, const void*, unsigned)
              definition:  mbed::TDBStore::set_finalize(mbed::_opaque_set_handle*)
              definition:  mbed::TDBStore::iterator_next(mbed::_opaque_key_iterator*, char*, unsigned)
              definition:  mbed::TDBStore::iterator_open(mbed::_opaque_key_iterator**, const char*)
              definition:  mbed::TDBStore::iterator_close(mbed::_opaque_key_iterator*)
              definition:  mbed::TDBStore::build_ram_table()
              definition:  mbed::TDBStore::calc_area_params()
              definition:  mbed::TDBStore::erase_erase_unit(unsigned char, unsigned)
              definition:  mbed::TDBStore::reserved_data_get(void*, unsigned, unsigned*)
              definition:  mbed::TDBStore::reserved_data_set(const void*, unsigned)
              definition:  mbed::TDBStore::garbage_collection()
              definition:  mbed::TDBStore::increment_max_keys(void**)
              definition:  mbed::TDBStore::write_master_record(unsigned char, unsigned short, unsigned&)
              definition:  mbed::TDBStore::do_reserved_data_get(void*, unsigned, unsigned*, void*)
              definition:  mbed::TDBStore::offset_in_erase_unit(unsigned char, unsigned, unsigned&, unsigned&)
              definition:  mbed::TDBStore::update_all_iterators(bool, unsigned)
              definition:  mbed::TDBStore::check_erase_before_write(unsigned char, unsigned, unsigned, bool)
              definition:  mbed::TDBStore::get(const char*, void*, unsigned, unsigned*, unsigned)
              definition:  mbed::TDBStore::set(const char*, const void*, unsigned, unsigned)
              definition:  mbed::TDBStore::init()
              definition:  mbed::TDBStore::reset()
              definition:  mbed::TDBStore::deinit()
              definition:  mbed::TDBStore::remove(const char*)
              definition:  mbed::TDBStore::get_info(const char*, mbed::KVStore::info*)
              definition:  mbed::TDBStore::read_area(unsigned char, unsigned, unsigned, void*)
              definition:  mbed::TDBStore::set_start(mbed::_opaque_set_handle**, const char*, unsigned, unsigned)
              definition:  mbed::TDBStore::TDBStore(mbed::BlockDevice*)
              definition:  mbed::TDBStore::TDBStore__sub_object(mbed::BlockDevice*)
              definition:  mbed::TDBStore::~TDBStore__deallocating()
              definition:  mbed::TDBStore::~TDBStore()
              definition:  mbed::TDBStore::~TDBStore__sub_object()
              reference :  rtos::Mutex::lock()
              reference :  rtos::Mutex::unlock()
              reference :  rtos::Mutex::Mutex()
              reference :  rtos::Mutex::~Mutex()
              definition:  vtable for mbed::TDBStore
              reference :  operator delete[] (void*)
              reference :  operator delete (void*)
              reference :  operator new[] (unsigned)
              reference :  operator new(unsigned)
              reference :  __aeabi_memclr
              reference :  __aeabi_memclr4
              reference :  __aeabi_memclr8
              reference :  __aeabi_memcpy
              reference :  __aeabi_memcpy8
              reference :  __aeabi_memmove8
              reference :  __cxa_pure_virtual
              reference :  hal_crc_compute_partial
              reference :  hal_crc_compute_partial_start
              reference :  hal_crc_get_result
              reference :  mbed_assert_internal
              reference :  mbed_error
              reference :  memcmp
              reference :  osMutexAcquire
              reference :  osMutexRelease
              reference :  singleton_mutex_id
              reference :  strcmp
              reference :  strcpy
              reference :  strlen
              reference :  strncmp
              reference :  strpbrk
              reference :  mbed::KVStore::KVStore__sub_object()
              reference :  mbed::KVStore::~KVStore__sub_object()
              reference :  mbed::MbedCRC<(unsigned)79764919, (unsigned char)32, (mbed::CrcMode)0>::MbedCRC__sub_object(unsigned, unsigned, bool, bool)
              reference :  mbed::MbedCRC<(unsigned)79764919, (unsigned char)32, (mbed::CrcMode)0>::compute(const void*, unsigned, unsigned*)
              reference :  mbed::KVStore::is_valid_key(const char*) const
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/storage/kvstore/source/kvstore_global_api.o.
              weak defn :  guard variable for mbed::KVMap::get_instance()::instance
              weak defn :  SingletonPtr<rtos::Mutex>::SingletonPtr__sub_object()
              weak defn :  mbed::KVMap::get_instance()
              reference :  mbed::KVMap::lookup(const char*, mbed::KVStore**, unsigned*, unsigned*)
              weak defn :  mbed::KVMap::KVMap__sub_object()
              weak defn :  mbed::KVMap::get_instance()::instance
              reference :  operator delete[] (void*)
              reference :  operator delete (void*)
              reference :  operator new[] (unsigned)
              reference :  operator new(unsigned)
              reference :  __aeabi_memclr4
              reference :  __cxa_guard_acquire
              reference :  __cxa_guard_release
              definition:  kv_get
              definition:  kv_get_info
              reference :  kv_init_storage_config
              definition:  kv_iterator_close
              definition:  kv_iterator_next
              definition:  kv_iterator_open
              definition:  kv_remove
              definition:  kv_reset
              definition:  kv_set
              reference :  strcpy
              reference :  strlen
              reference :  strncpy
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/storage/platform/source/PlatformStorage.o.
              weak defn :  mbed::FileSystem::get_default_instance()
              weak defn :  mbed::BlockDevice::get_default_instance()
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/targets/TARGET_STM/TARGET_STM32L4/TARGET_STM32L476xG/TARGET_NUCLEO_L476RG/PeripheralPins.o.
              weak defn :  PinMap_ADC
              weak defn :  PinMap_ADC_Internal
              weak defn :  PinMap_CAN_RD
              weak defn :  PinMap_CAN_TD
              weak defn :  PinMap_DAC
              weak defn :  PinMap_I2C_SCL
              weak defn :  PinMap_I2C_SDA
              weak defn :  PinMap_PWM
              weak defn :  PinMap_QSPI_DATA0
              weak defn :  PinMap_QSPI_DATA1
              weak defn :  PinMap_QSPI_DATA2
              weak defn :  PinMap_QSPI_DATA3
              weak defn :  PinMap_QSPI_SCLK
              weak defn :  PinMap_QSPI_SSEL
              weak defn :  PinMap_SPI_MISO
              weak defn :  PinMap_SPI_MOSI
              weak defn :  PinMap_SPI_SCLK
              weak defn :  PinMap_SPI_SSEL
              weak defn :  PinMap_UART_CTS
              weak defn :  PinMap_UART_RTS
              weak defn :  PinMap_UART_RX
              weak defn :  PinMap_UART_TX
              weak defn :  PinMap_USB_FS
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/targets/TARGET_STM/TARGET_STM32L4/TARGET_STM32L476xG/TARGET_NUCLEO_L476RG/system_clock.o.
              reference :  HAL_RCCEx_DisableLSECSS
              reference :  HAL_RCCEx_EnableMSIPLLMode
              reference :  HAL_RCC_ClockConfig
              reference :  HAL_RCC_OscConfig
              definition:  SetSysClock
              definition:  SetSysClock_PLL_MSI
              reference :  __aeabi_memclr4
              reference :  error
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/targets/TARGET_STM/TARGET_STM32L4/TARGET_STM32L476xG/device/TOOLCHAIN_ARM/startup_stm32l476xx.o.
              definition:  __Vectors_Size
              definition:  __Vectors
              definition:  __Vectors_End
              reference :  Image$$ARM_LIB_STACK$$ZI$$Limit
              reference :  SystemInit
              reference :  __main
              weak defn :  Reset_Handler
              weak defn :  NMI_Handler
              weak defn :  HardFault_Handler
              weak defn :  MemManage_Handler
              weak defn :  BusFault_Handler
              weak defn :  UsageFault_Handler
              weak defn :  SVC_Handler
              weak defn :  DebugMon_Handler
              weak defn :  PendSV_Handler
              weak defn :  SysTick_Handler
              weak defn :  ADC1_2_IRQHandler
              weak defn :  ADC3_IRQHandler
              weak defn :  CAN1_RX0_IRQHandler
              weak defn :  CAN1_RX1_IRQHandler
              weak defn :  CAN1_SCE_IRQHandler
              weak defn :  CAN1_TX_IRQHandler
              weak defn :  COMP_IRQHandler
              weak defn :  DFSDM1_FLT0_IRQHandler
              weak defn :  DFSDM1_FLT1_IRQHandler
              weak defn :  DFSDM1_FLT2_IRQHandler
              weak defn :  DFSDM1_FLT3_IRQHandler
              weak defn :  DMA1_Channel1_IRQHandler
              weak defn :  DMA1_Channel2_IRQHandler
              weak defn :  DMA1_Channel3_IRQHandler
              weak defn :  DMA1_Channel4_IRQHandler
              weak defn :  DMA1_Channel5_IRQHandler
              weak defn :  DMA1_Channel6_IRQHandler
              weak defn :  DMA1_Channel7_IRQHandler
              weak defn :  DMA2_Channel1_IRQHandler
              weak defn :  DMA2_Channel2_IRQHandler
              weak defn :  DMA2_Channel3_IRQHandler
              weak defn :  DMA2_Channel4_IRQHandler
              weak defn :  DMA2_Channel5_IRQHandler
              weak defn :  DMA2_Channel6_IRQHandler
              weak defn :  DMA2_Channel7_IRQHandler
              weak defn :  EXTI0_IRQHandler
              weak defn :  EXTI15_10_IRQHandler
              weak defn :  EXTI1_IRQHandler
              weak defn :  EXTI2_IRQHandler
              weak defn :  EXTI3_IRQHandler
              weak defn :  EXTI4_IRQHandler
              weak defn :  EXTI9_5_IRQHandler
              weak defn :  FLASH_IRQHandler
              weak defn :  FMC_IRQHandler
              weak defn :  FPU_IRQHandler
              weak defn :  I2C1_ER_IRQHandler
              weak defn :  I2C1_EV_IRQHandler
              weak defn :  I2C2_ER_IRQHandler
              weak defn :  I2C2_EV_IRQHandler
              weak defn :  I2C3_ER_IRQHandler
              weak defn :  I2C3_EV_IRQHandler
              weak defn :  LCD_IRQHandler
              weak defn :  LPTIM1_IRQHandler
              weak defn :  LPTIM2_IRQHandler
              weak defn :  LPUART1_IRQHandler
              weak defn :  OTG_FS_IRQHandler
              weak defn :  PVD_PVM_IRQHandler
              weak defn :  QUADSPI_IRQHandler
              weak defn :  RCC_IRQHandler
              weak defn :  RNG_IRQHandler
              weak defn :  RTC_Alarm_IRQHandler
              weak defn :  RTC_WKUP_IRQHandler
              weak defn :  SAI1_IRQHandler
              weak defn :  SAI2_IRQHandler
              weak defn :  SDMMC1_IRQHandler
              weak defn :  SPI1_IRQHandler
              weak defn :  SPI2_IRQHandler
              weak defn :  SPI3_IRQHandler
              weak defn :  SWPMI1_IRQHandler
              weak defn :  TAMP_STAMP_IRQHandler
              weak defn :  TIM1_BRK_TIM15_IRQHandler
              weak defn :  TIM1_CC_IRQHandler
              weak defn :  TIM1_TRG_COM_TIM17_IRQHandler
              weak defn :  TIM1_UP_TIM16_IRQHandler
              weak defn :  TIM2_IRQHandler
              weak defn :  TIM3_IRQHandler
              weak defn :  TIM4_IRQHandler
              weak defn :  TIM5_IRQHandler
              weak defn :  TIM6_DAC_IRQHandler
              weak defn :  TIM7_IRQHandler
              weak defn :  TIM8_BRK_IRQHandler
              weak defn :  TIM8_CC_IRQHandler
              weak defn :  TIM8_TRG_COM_IRQHandler
              weak defn :  TIM8_UP_IRQHandler
              weak defn :  TSC_IRQHandler
              weak defn :  UART4_IRQHandler
              weak defn :  UART5_IRQHandler
              weak defn :  USART1_IRQHandler
              weak defn :  USART2_IRQHandler
              weak defn :  USART3_IRQHandler
              weak defn :  WWDG_IRQHandler
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/targets/TARGET_STM/TARGET_STM32L4/analogin_device.o.
              reference :  HAL_ADCEx_Calibration_GetValue
              reference :  HAL_ADCEx_Calibration_Start
              reference :  HAL_ADC_ConfigChannel
              reference :  HAL_ADC_GetValue
              reference :  HAL_ADC_Init
              reference :  HAL_ADC_PollForConversion
              reference :  HAL_ADC_Start
              reference :  PinMap_ADC
              reference :  PinMap_ADC_Internal
              definition:  adc_read
              definition:  analogin_init
              definition:  analogin_pinmap
              reference :  error
              reference :  mbed_assert_internal
              reference :  pin_function
              reference :  pin_mode
              reference :  pinmap_find_function
              reference :  pinmap_peripheral
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/targets/TARGET_STM/TARGET_STM32L4/analogout_device.o.
              reference :  HAL_DAC_ConfigChannel
              reference :  HAL_DAC_Init
              reference :  PinMap_DAC
              reference :  __aeabi_memclr4
              definition:  analogout_free
              definition:  analogout_init
              definition:  analogout_pinmap
              reference :  analogout_write_u16
              reference :  error
              reference :  mbed_assert_internal
              reference :  pin_function
              reference :  pin_mode
              reference :  pinmap_find_function
              reference :  pinmap_peripheral
              reference :  sleep_manager_lock_deep_sleep_internal
              reference :  sleep_manager_unlock_deep_sleep_internal
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/targets/TARGET_STM/TARGET_STM32L4/device/stm32l4xx_hal.o.
              definition:  HAL_DBGMCU_DisableDBGSleepMode
              definition:  HAL_DBGMCU_DisableDBGStandbyMode
              definition:  HAL_DBGMCU_DisableDBGStopMode
              definition:  HAL_DBGMCU_EnableDBGSleepMode
              definition:  HAL_DBGMCU_EnableDBGStandbyMode
              definition:  HAL_DBGMCU_EnableDBGStopMode
              definition:  HAL_DeInit
              weak defn :  HAL_Delay
              definition:  HAL_GetDEVID
              definition:  HAL_GetHalVersion
              definition:  HAL_GetREVID
              weak defn :  HAL_GetTick
              definition:  HAL_GetTickFreq
              definition:  HAL_GetTickPrio
              definition:  HAL_GetUIDw0
              definition:  HAL_GetUIDw1
              definition:  HAL_GetUIDw2
              weak defn :  HAL_IncTick
              definition:  HAL_Init
              weak defn :  HAL_InitTick
              weak defn :  HAL_MspDeInit
              weak defn :  HAL_MspInit
              reference :  HAL_NVIC_SetPriority
              reference :  HAL_NVIC_SetPriorityGrouping
              weak defn :  HAL_ResumeTick
              definition:  HAL_SYSCFG_DisableIOAnalogSwitchBooster
              definition:  HAL_SYSCFG_DisableMemorySwappingBank
              definition:  HAL_SYSCFG_DisableVREFBUF
              definition:  HAL_SYSCFG_EnableIOAnalogSwitchBooster
              definition:  HAL_SYSCFG_EnableMemorySwappingBank
              definition:  HAL_SYSCFG_EnableVREFBUF
              definition:  HAL_SYSCFG_SRAM2Erase
              definition:  HAL_SYSCFG_VREFBUF_HighImpedanceConfig
              definition:  HAL_SYSCFG_VREFBUF_TrimmingConfig
              definition:  HAL_SYSCFG_VREFBUF_VoltageScalingConfig
              reference :  HAL_SYSTICK_Config
              definition:  HAL_SetTickFreq
              weak defn :  HAL_SuspendTick
              reference :  SystemCoreClock
              definition:  uwTick
              definition:  uwTickFreq
              definition:  uwTickPrio
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/targets/TARGET_STM/TARGET_STM32L4/device/stm32l4xx_hal_adc.o.
              definition:  ADC_ConversionStop
              definition:  ADC_DMAConvCplt
              definition:  ADC_DMAError
              definition:  ADC_DMAHalfConvCplt
              definition:  ADC_Disable
              definition:  ADC_Enable
              reference :  HAL_ADCEx_EndOfSamplingCallback
              reference :  HAL_ADCEx_InjectedConvCpltCallback
              reference :  HAL_ADCEx_InjectedQueueOverflowCallback
              reference :  HAL_ADCEx_LevelOutOfWindow2Callback
              reference :  HAL_ADCEx_LevelOutOfWindow3Callback
              definition:  HAL_ADC_AnalogWDGConfig
              definition:  HAL_ADC_ConfigChannel
              weak defn :  HAL_ADC_ConvCpltCallback
              weak defn :  HAL_ADC_ConvHalfCpltCallback
              definition:  HAL_ADC_DeInit
              weak defn :  HAL_ADC_ErrorCallback
              definition:  HAL_ADC_GetError
              definition:  HAL_ADC_GetState
              definition:  HAL_ADC_GetValue
              definition:  HAL_ADC_IRQHandler
              definition:  HAL_ADC_Init
              weak defn :  HAL_ADC_LevelOutOfWindowCallback
              weak defn :  HAL_ADC_MspDeInit
              weak defn :  HAL_ADC_MspInit
              definition:  HAL_ADC_PollForConversion
              definition:  HAL_ADC_PollForEvent
              definition:  HAL_ADC_Start
              definition:  HAL_ADC_Start_DMA
              definition:  HAL_ADC_Start_IT
              definition:  HAL_ADC_Stop
              definition:  HAL_ADC_Stop_DMA
              definition:  HAL_ADC_Stop_IT
              reference :  HAL_DMA_Abort
              reference :  HAL_DMA_Start_IT
              reference :  HAL_GetTick
              reference :  SystemCoreClock
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/targets/TARGET_STM/TARGET_STM32L4/device/stm32l4xx_hal_adc_ex.o.
              reference :  ADC_ConversionStop
              reference :  ADC_DMAConvCplt
              reference :  ADC_DMAError
              reference :  ADC_DMAHalfConvCplt
              reference :  ADC_Disable
              reference :  ADC_Enable
              definition:  HAL_ADCEx_Calibration_GetValue
              definition:  HAL_ADCEx_Calibration_SetValue
              definition:  HAL_ADCEx_Calibration_Start
              definition:  HAL_ADCEx_DisableInjectedQueue
              definition:  HAL_ADCEx_DisableVoltageRegulator
              definition:  HAL_ADCEx_EnableInjectedQueue
              weak defn :  HAL_ADCEx_EndOfSamplingCallback
              definition:  HAL_ADCEx_EnterADCDeepPowerDownMode
              definition:  HAL_ADCEx_InjectedConfigChannel
              weak defn :  HAL_ADCEx_InjectedConvCpltCallback
              definition:  HAL_ADCEx_InjectedGetValue
              definition:  HAL_ADCEx_InjectedPollForConversion
              weak defn :  HAL_ADCEx_InjectedQueueOverflowCallback
              definition:  HAL_ADCEx_InjectedStart
              definition:  HAL_ADCEx_InjectedStart_IT
              definition:  HAL_ADCEx_InjectedStop
              definition:  HAL_ADCEx_InjectedStop_IT
              weak defn :  HAL_ADCEx_LevelOutOfWindow2Callback
              weak defn :  HAL_ADCEx_LevelOutOfWindow3Callback
              definition:  HAL_ADCEx_MultiModeConfigChannel
              definition:  HAL_ADCEx_MultiModeGetValue
              definition:  HAL_ADCEx_MultiModeStart_DMA
              definition:  HAL_ADCEx_MultiModeStop_DMA
              definition:  HAL_ADCEx_RegularMultiModeStop_DMA
              definition:  HAL_ADCEx_RegularStop
              definition:  HAL_ADCEx_RegularStop_DMA
              definition:  HAL_ADCEx_RegularStop_IT
              reference :  HAL_DMA_Abort
              reference :  HAL_DMA_Start_IT
              reference :  HAL_GetTick
              reference :  SystemCoreClock
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/targets/TARGET_STM/TARGET_STM32L4/device/stm32l4xx_hal_can.o.
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/targets/TARGET_STM/TARGET_STM32L4/device/stm32l4xx_hal_can_legacy.o.
              definition:  HAL_CAN_ConfigFilter
              definition:  HAL_CAN_DeInit
              weak defn :  HAL_CAN_ErrorCallback
              definition:  HAL_CAN_GetError
              definition:  HAL_CAN_GetState
              definition:  HAL_CAN_IRQHandler
              definition:  HAL_CAN_Init
              weak defn :  HAL_CAN_MspDeInit
              weak defn :  HAL_CAN_MspInit
              definition:  HAL_CAN_Receive
              definition:  HAL_CAN_Receive_IT
              weak defn :  HAL_CAN_RxCpltCallback
              definition:  HAL_CAN_Sleep
              definition:  HAL_CAN_Transmit
              definition:  HAL_CAN_Transmit_IT
              weak defn :  HAL_CAN_TxCpltCallback
              definition:  HAL_CAN_WakeUp
              reference :  HAL_GetTick
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/targets/TARGET_STM/TARGET_STM32L4/device/stm32l4xx_hal_comp.o.
              definition:  HAL_COMP_DeInit
              definition:  HAL_COMP_GetError
              definition:  HAL_COMP_GetOutputLevel
              definition:  HAL_COMP_GetState
              definition:  HAL_COMP_IRQHandler
              definition:  HAL_COMP_Init
              definition:  HAL_COMP_Lock
              weak defn :  HAL_COMP_MspDeInit
              weak defn :  HAL_COMP_MspInit
              definition:  HAL_COMP_Start
              definition:  HAL_COMP_Stop
              weak defn :  HAL_COMP_TriggerCallback
              reference :  SystemCoreClock
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/targets/TARGET_STM/TARGET_STM32L4/device/stm32l4xx_hal_cortex.o.
              definition:  HAL_MPU_ConfigRegion
              definition:  HAL_MPU_Disable
              definition:  HAL_MPU_Enable
              definition:  HAL_NVIC_ClearPendingIRQ
              definition:  HAL_NVIC_DisableIRQ
              definition:  HAL_NVIC_EnableIRQ
              definition:  HAL_NVIC_GetActive
              definition:  HAL_NVIC_GetPendingIRQ
              definition:  HAL_NVIC_GetPriority
              definition:  HAL_NVIC_GetPriorityGrouping
              definition:  HAL_NVIC_SetPendingIRQ
              definition:  HAL_NVIC_SetPriority
              definition:  HAL_NVIC_SetPriorityGrouping
              definition:  HAL_NVIC_SystemReset
              definition:  HAL_SYSTICK_CLKSourceConfig
              weak defn :  HAL_SYSTICK_Callback
              definition:  HAL_SYSTICK_Config
              definition:  HAL_SYSTICK_IRQHandler
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/targets/TARGET_STM/TARGET_STM32L4/device/stm32l4xx_hal_crc.o.
              reference :  HAL_CRCEx_Polynomial_Set
              definition:  HAL_CRC_Accumulate
              definition:  HAL_CRC_Calculate
              definition:  HAL_CRC_DeInit
              definition:  HAL_CRC_GetState
              definition:  HAL_CRC_Init
              weak defn :  HAL_CRC_MspDeInit
              weak defn :  HAL_CRC_MspInit
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/targets/TARGET_STM/TARGET_STM32L4/device/stm32l4xx_hal_crc_ex.o.
              definition:  HAL_CRCEx_Input_Data_Reverse
              definition:  HAL_CRCEx_Output_Data_Reverse
              definition:  HAL_CRCEx_Polynomial_Set
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/targets/TARGET_STM/TARGET_STM32L4/device/stm32l4xx_hal_cryp.o.
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/targets/TARGET_STM/TARGET_STM32L4/device/stm32l4xx_hal_cryp_ex.o.
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/targets/TARGET_STM/TARGET_STM32L4/device/stm32l4xx_hal_dac.o.
              definition:  DAC_DMAConvCpltCh1
              reference :  DAC_DMAConvCpltCh2
              definition:  DAC_DMAErrorCh1
              reference :  DAC_DMAErrorCh2
              definition:  DAC_DMAHalfConvCpltCh1
              reference :  DAC_DMAHalfConvCpltCh2
              reference :  HAL_DACEx_DMAUnderrunCallbackCh2
              definition:  HAL_DAC_ConfigChannel
              weak defn :  HAL_DAC_ConvCpltCallbackCh1
              weak defn :  HAL_DAC_ConvHalfCpltCallbackCh1
              weak defn :  HAL_DAC_DMAUnderrunCallbackCh1
              definition:  HAL_DAC_DeInit
              weak defn :  HAL_DAC_ErrorCallbackCh1
              definition:  HAL_DAC_GetError
              definition:  HAL_DAC_GetState
              definition:  HAL_DAC_GetValue
              definition:  HAL_DAC_IRQHandler
              definition:  HAL_DAC_Init
              weak defn :  HAL_DAC_MspDeInit
              weak defn :  HAL_DAC_MspInit
              definition:  HAL_DAC_SetValue
              definition:  HAL_DAC_Start
              definition:  HAL_DAC_Start_DMA
              definition:  HAL_DAC_Stop
              definition:  HAL_DAC_Stop_DMA
              reference :  HAL_DMA_Abort
              reference :  HAL_DMA_Start_IT
              reference :  HAL_Delay
              reference :  HAL_GetTick
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/targets/TARGET_STM/TARGET_STM32L4/device/stm32l4xx_hal_dac_ex.o.
              definition:  DAC_DMAConvCpltCh2
              definition:  DAC_DMAErrorCh2
              definition:  DAC_DMAHalfConvCpltCh2
              weak defn :  HAL_DACEx_ConvCpltCallbackCh2
              weak defn :  HAL_DACEx_ConvHalfCpltCallbackCh2
              weak defn :  HAL_DACEx_DMAUnderrunCallbackCh2
              definition:  HAL_DACEx_DualGetValue
              definition:  HAL_DACEx_DualSetValue
              weak defn :  HAL_DACEx_ErrorCallbackCh2
              definition:  HAL_DACEx_GetTrimOffset
              definition:  HAL_DACEx_NoiseWaveGenerate
              definition:  HAL_DACEx_SelfCalibrate
              definition:  HAL_DACEx_SetUserTrimming
              definition:  HAL_DACEx_TriangleWaveGenerate
              reference :  HAL_Delay
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/targets/TARGET_STM/TARGET_STM32L4/device/stm32l4xx_hal_dcmi.o.
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/targets/TARGET_STM/TARGET_STM32L4/device/stm32l4xx_hal_dfsdm.o.
              weak defn :  HAL_DFSDM_ChannelCkabCallback
              definition:  HAL_DFSDM_ChannelCkabStart
              definition:  HAL_DFSDM_ChannelCkabStart_IT
              definition:  HAL_DFSDM_ChannelCkabStop
              definition:  HAL_DFSDM_ChannelCkabStop_IT
              definition:  HAL_DFSDM_ChannelDeInit
              definition:  HAL_DFSDM_ChannelGetAwdValue
              definition:  HAL_DFSDM_ChannelGetState
              definition:  HAL_DFSDM_ChannelInit
              definition:  HAL_DFSDM_ChannelModifyOffset
              weak defn :  HAL_DFSDM_ChannelMspDeInit
              weak defn :  HAL_DFSDM_ChannelMspInit
              definition:  HAL_DFSDM_ChannelPollForCkab
              definition:  HAL_DFSDM_ChannelPollForScd
              weak defn :  HAL_DFSDM_ChannelScdCallback
              definition:  HAL_DFSDM_ChannelScdStart
              definition:  HAL_DFSDM_ChannelScdStart_IT
              definition:  HAL_DFSDM_ChannelScdStop
              definition:  HAL_DFSDM_ChannelScdStop_IT
              weak defn :  HAL_DFSDM_FilterAwdCallback
              definition:  HAL_DFSDM_FilterAwdStart_IT
              definition:  HAL_DFSDM_FilterAwdStop_IT
              definition:  HAL_DFSDM_FilterConfigInjChannel
              definition:  HAL_DFSDM_FilterConfigRegChannel
              definition:  HAL_DFSDM_FilterDeInit
              weak defn :  HAL_DFSDM_FilterErrorCallback
              definition:  HAL_DFSDM_FilterExdStart
              definition:  HAL_DFSDM_FilterExdStop
              definition:  HAL_DFSDM_FilterGetConvTimeValue
              definition:  HAL_DFSDM_FilterGetError
              definition:  HAL_DFSDM_FilterGetExdMaxValue
              definition:  HAL_DFSDM_FilterGetExdMinValue
              definition:  HAL_DFSDM_FilterGetInjectedValue
              definition:  HAL_DFSDM_FilterGetRegularValue
              definition:  HAL_DFSDM_FilterGetState
              definition:  HAL_DFSDM_FilterInit
              weak defn :  HAL_DFSDM_FilterInjConvCpltCallback
              weak defn :  HAL_DFSDM_FilterInjConvHalfCpltCallback
              definition:  HAL_DFSDM_FilterInjectedMsbStart_DMA
              definition:  HAL_DFSDM_FilterInjectedStart
              definition:  HAL_DFSDM_FilterInjectedStart_DMA
              definition:  HAL_DFSDM_FilterInjectedStart_IT
              definition:  HAL_DFSDM_FilterInjectedStop
              definition:  HAL_DFSDM_FilterInjectedStop_DMA
              definition:  HAL_DFSDM_FilterInjectedStop_IT
              weak defn :  HAL_DFSDM_FilterMspDeInit
              weak defn :  HAL_DFSDM_FilterMspInit
              definition:  HAL_DFSDM_FilterPollForInjConversion
              definition:  HAL_DFSDM_FilterPollForRegConversion
              weak defn :  HAL_DFSDM_FilterRegConvCpltCallback
              weak defn :  HAL_DFSDM_FilterRegConvHalfCpltCallback
              definition:  HAL_DFSDM_FilterRegularMsbStart_DMA
              definition:  HAL_DFSDM_FilterRegularStart
              definition:  HAL_DFSDM_FilterRegularStart_DMA
              definition:  HAL_DFSDM_FilterRegularStart_IT
              definition:  HAL_DFSDM_FilterRegularStop
              definition:  HAL_DFSDM_FilterRegularStop_DMA
              definition:  HAL_DFSDM_FilterRegularStop_IT
              definition:  HAL_DFSDM_IRQHandler
              reference :  HAL_DMA_Abort
              reference :  HAL_DMA_Start_IT
              reference :  HAL_GetTick
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/targets/TARGET_STM/TARGET_STM32L4/device/stm32l4xx_hal_dfsdm_ex.o.
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/targets/TARGET_STM/TARGET_STM32L4/device/stm32l4xx_hal_dma.o.
              definition:  HAL_DMA_Abort
              definition:  HAL_DMA_Abort_IT
              definition:  HAL_DMA_DeInit
              definition:  HAL_DMA_GetError
              definition:  HAL_DMA_GetState
              definition:  HAL_DMA_IRQHandler
              definition:  HAL_DMA_Init
              definition:  HAL_DMA_PollForTransfer
              definition:  HAL_DMA_RegisterCallback
              definition:  HAL_DMA_Start
              definition:  HAL_DMA_Start_IT
              definition:  HAL_DMA_UnRegisterCallback
              reference :  HAL_GetTick
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/targets/TARGET_STM/TARGET_STM32L4/device/stm32l4xx_hal_dma2d.o.
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/targets/TARGET_STM/TARGET_STM32L4/device/stm32l4xx_hal_dma_ex.o.
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/targets/TARGET_STM/TARGET_STM32L4/device/stm32l4xx_hal_dsi.o.
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/targets/TARGET_STM/TARGET_STM32L4/device/stm32l4xx_hal_exti.o.
              definition:  HAL_EXTI_ClearConfigLine
              definition:  HAL_EXTI_ClearPending
              definition:  HAL_EXTI_GenerateSWI
              definition:  HAL_EXTI_GetConfigLine
              definition:  HAL_EXTI_GetHandle
              definition:  HAL_EXTI_GetPending
              definition:  HAL_EXTI_IRQHandler
              definition:  HAL_EXTI_RegisterCallback
              definition:  HAL_EXTI_SetConfigLine
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/targets/TARGET_STM/TARGET_STM32L4/device/stm32l4xx_hal_firewall.o.
              definition:  HAL_FIREWALL_Config
              definition:  HAL_FIREWALL_DisablePreArmFlag
              definition:  HAL_FIREWALL_EnableFirewall
              definition:  HAL_FIREWALL_EnablePreArmFlag
              definition:  HAL_FIREWALL_GetConfig
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/targets/TARGET_STM/TARGET_STM32L4/device/stm32l4xx_hal_flash.o.
              reference :  FLASH_FlushCaches
              reference :  FLASH_PageErase
              definition:  FLASH_WaitForLastOperation
              weak defn :  HAL_FLASH_EndOfOperationCallback
              definition:  HAL_FLASH_GetError
              definition:  HAL_FLASH_IRQHandler
              definition:  HAL_FLASH_Lock
              definition:  HAL_FLASH_OB_Launch
              definition:  HAL_FLASH_OB_Lock
              definition:  HAL_FLASH_OB_Unlock
              weak defn :  HAL_FLASH_OperationErrorCallback
              definition:  HAL_FLASH_Program
              definition:  HAL_FLASH_Program_IT
              definition:  HAL_FLASH_Unlock
              reference :  HAL_GetTick
              definition:  pFlash
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/targets/TARGET_STM/TARGET_STM32L4/device/stm32l4xx_hal_flash_ex.o.
              definition:  FLASH_FlushCaches
              definition:  FLASH_PageErase
              reference :  FLASH_WaitForLastOperation
              definition:  HAL_FLASHEx_Erase
              definition:  HAL_FLASHEx_Erase_IT
              definition:  HAL_FLASHEx_OBGetConfig
              definition:  HAL_FLASHEx_OBProgram
              reference :  pFlash
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/targets/TARGET_STM/TARGET_STM32L4/device/stm32l4xx_hal_flash_ramfunc.o.
              definition:  HAL_FLASHEx_DisableRunPowerDown
              definition:  HAL_FLASHEx_EnableRunPowerDown
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/targets/TARGET_STM/TARGET_STM32L4/device/stm32l4xx_hal_gfxmmu.o.
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/targets/TARGET_STM/TARGET_STM32L4/device/stm32l4xx_hal_gpio.o.
              definition:  HAL_GPIO_DeInit
              weak defn :  HAL_GPIO_EXTI_Callback
              definition:  HAL_GPIO_EXTI_IRQHandler
              definition:  HAL_GPIO_Init
              definition:  HAL_GPIO_LockPin
              definition:  HAL_GPIO_ReadPin
              definition:  HAL_GPIO_TogglePin
              definition:  HAL_GPIO_WritePin
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/targets/TARGET_STM/TARGET_STM32L4/device/stm32l4xx_hal_hash.o.
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/targets/TARGET_STM/TARGET_STM32L4/device/stm32l4xx_hal_hash_ex.o.
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/targets/TARGET_STM/TARGET_STM32L4/device/stm32l4xx_hal_hcd.o.
              weak defn :  HAL_HCD_Connect_Callback
              definition:  HAL_HCD_DeInit
              weak defn :  HAL_HCD_Disconnect_Callback
              definition:  HAL_HCD_GetCurrentFrame
              definition:  HAL_HCD_GetCurrentSpeed
              definition:  HAL_HCD_GetState
              definition:  HAL_HCD_HC_GetState
              definition:  HAL_HCD_HC_GetURBState
              definition:  HAL_HCD_HC_GetXferCount
              definition:  HAL_HCD_HC_Halt
              definition:  HAL_HCD_HC_Init
              weak defn :  HAL_HCD_HC_NotifyURBChange_Callback
              definition:  HAL_HCD_HC_SubmitRequest
              definition:  HAL_HCD_IRQHandler
              definition:  HAL_HCD_Init
              weak defn :  HAL_HCD_MspDeInit
              weak defn :  HAL_HCD_MspInit
              weak defn :  HAL_HCD_PortDisabled_Callback
              weak defn :  HAL_HCD_PortEnabled_Callback
              definition:  HAL_HCD_ResetPort
              weak defn :  HAL_HCD_SOF_Callback
              definition:  HAL_HCD_Start
              definition:  HAL_HCD_Stop
              reference :  USB_CoreInit
              reference :  USB_DisableGlobalInt
              reference :  USB_DriveVbus
              reference :  USB_EnableGlobalInt
              reference :  USB_GetCurrentFrame
              reference :  USB_GetHostSpeed
              reference :  USB_GetMode
              reference :  USB_HC_Halt
              reference :  USB_HC_Init
              reference :  USB_HC_ReadInterrupt
              reference :  USB_HC_StartXfer
              reference :  USB_HostInit
              reference :  USB_InitFSLSPClkSel
              reference :  USB_ReadInterrupts
              reference :  USB_ReadPacket
              reference :  USB_ResetPort
              reference :  USB_SetCurrentMode
              reference :  USB_StopHost
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/targets/TARGET_STM/TARGET_STM32L4/device/stm32l4xx_hal_i2c.o.
              reference :  HAL_DMA_Abort_IT
              reference :  HAL_DMA_Start_IT
              reference :  HAL_GetTick
              weak defn :  HAL_I2C_AbortCpltCallback
              weak defn :  HAL_I2C_AddrCallback
              definition:  HAL_I2C_DeInit
              definition:  HAL_I2C_DisableListen_IT
              definition:  HAL_I2C_ER_IRQHandler
              definition:  HAL_I2C_EV_IRQHandler
              definition:  HAL_I2C_EnableListen_IT
              weak defn :  HAL_I2C_ErrorCallback
              definition:  HAL_I2C_GetError
              definition:  HAL_I2C_GetMode
              definition:  HAL_I2C_GetState
              definition:  HAL_I2C_Init
              definition:  HAL_I2C_IsDeviceReady
              weak defn :  HAL_I2C_ListenCpltCallback
              weak defn :  HAL_I2C_MasterRxCpltCallback
              weak defn :  HAL_I2C_MasterTxCpltCallback
              definition:  HAL_I2C_Master_Abort_IT
              definition:  HAL_I2C_Master_Receive
              definition:  HAL_I2C_Master_Receive_DMA
              definition:  HAL_I2C_Master_Receive_IT
              definition:  HAL_I2C_Master_Seq_Receive_DMA
              definition:  HAL_I2C_Master_Seq_Receive_IT
              definition:  HAL_I2C_Master_Seq_Transmit_DMA
              definition:  HAL_I2C_Master_Seq_Transmit_IT
              definition:  HAL_I2C_Master_Transmit
              definition:  HAL_I2C_Master_Transmit_DMA
              definition:  HAL_I2C_Master_Transmit_IT
              weak defn :  HAL_I2C_MemRxCpltCallback
              weak defn :  HAL_I2C_MemTxCpltCallback
              definition:  HAL_I2C_Mem_Read
              definition:  HAL_I2C_Mem_Read_DMA
              definition:  HAL_I2C_Mem_Read_IT
              definition:  HAL_I2C_Mem_Write
              definition:  HAL_I2C_Mem_Write_DMA
              definition:  HAL_I2C_Mem_Write_IT
              weak defn :  HAL_I2C_MspDeInit
              weak defn :  HAL_I2C_MspInit
              weak defn :  HAL_I2C_SlaveRxCpltCallback
              weak defn :  HAL_I2C_SlaveTxCpltCallback
              definition:  HAL_I2C_Slave_Receive
              definition:  HAL_I2C_Slave_Receive_DMA
              definition:  HAL_I2C_Slave_Receive_IT
              definition:  HAL_I2C_Slave_Seq_Receive_DMA
              definition:  HAL_I2C_Slave_Seq_Receive_IT
              definition:  HAL_I2C_Slave_Seq_Transmit_DMA
              definition:  HAL_I2C_Slave_Seq_Transmit_IT
              definition:  HAL_I2C_Slave_Transmit
              definition:  HAL_I2C_Slave_Transmit_DMA
              definition:  HAL_I2C_Slave_Transmit_IT
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/targets/TARGET_STM/TARGET_STM32L4/device/stm32l4xx_hal_i2c_ex.o.
              definition:  HAL_I2CEx_ConfigAnalogFilter
              definition:  HAL_I2CEx_ConfigDigitalFilter
              definition:  HAL_I2CEx_DisableFastModePlus
              definition:  HAL_I2CEx_DisableWakeUp
              definition:  HAL_I2CEx_EnableFastModePlus
              definition:  HAL_I2CEx_EnableWakeUp
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/targets/TARGET_STM/TARGET_STM32L4/device/stm32l4xx_hal_irda.o.
              reference :  HAL_DMA_Abort
              reference :  HAL_DMA_Abort_IT
              reference :  HAL_DMA_GetError
              reference :  HAL_DMA_Start_IT
              reference :  HAL_GetTick
              definition:  HAL_IRDA_Abort
              weak defn :  HAL_IRDA_AbortCpltCallback
              definition:  HAL_IRDA_AbortReceive
              weak defn :  HAL_IRDA_AbortReceiveCpltCallback
              definition:  HAL_IRDA_AbortReceive_IT
              definition:  HAL_IRDA_AbortTransmit
              weak defn :  HAL_IRDA_AbortTransmitCpltCallback
              definition:  HAL_IRDA_AbortTransmit_IT
              definition:  HAL_IRDA_Abort_IT
              definition:  HAL_IRDA_DMAPause
              definition:  HAL_IRDA_DMAResume
              definition:  HAL_IRDA_DMAStop
              definition:  HAL_IRDA_DeInit
              weak defn :  HAL_IRDA_ErrorCallback
              definition:  HAL_IRDA_GetError
              definition:  HAL_IRDA_GetState
              definition:  HAL_IRDA_IRQHandler
              definition:  HAL_IRDA_Init
              weak defn :  HAL_IRDA_MspDeInit
              weak defn :  HAL_IRDA_MspInit
              definition:  HAL_IRDA_Receive
              definition:  HAL_IRDA_Receive_DMA
              definition:  HAL_IRDA_Receive_IT
              weak defn :  HAL_IRDA_RxCpltCallback
              weak defn :  HAL_IRDA_RxHalfCpltCallback
              definition:  HAL_IRDA_Transmit
              definition:  HAL_IRDA_Transmit_DMA
              definition:  HAL_IRDA_Transmit_IT
              weak defn :  HAL_IRDA_TxCpltCallback
              weak defn :  HAL_IRDA_TxHalfCpltCallback
              reference :  HAL_RCC_GetPCLK1Freq
              reference :  HAL_RCC_GetPCLK2Freq
              reference :  HAL_RCC_GetSysClockFreq
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/targets/TARGET_STM/TARGET_STM32L4/device/stm32l4xx_hal_iwdg.o.
              reference :  HAL_GetTick
              definition:  HAL_IWDG_Init
              definition:  HAL_IWDG_Refresh
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/targets/TARGET_STM/TARGET_STM32L4/device/stm32l4xx_hal_lcd.o.
              reference :  HAL_GetTick
              definition:  HAL_LCD_Clear
              definition:  HAL_LCD_DeInit
              definition:  HAL_LCD_GetError
              definition:  HAL_LCD_GetState
              definition:  HAL_LCD_Init
              weak defn :  HAL_LCD_MspDeInit
              weak defn :  HAL_LCD_MspInit
              definition:  HAL_LCD_UpdateDisplayRequest
              definition:  HAL_LCD_Write
              definition:  LCD_WaitForSynchro
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/targets/TARGET_STM/TARGET_STM32L4/device/stm32l4xx_hal_lptim.o.
              reference :  HAL_GetTick
              weak defn :  HAL_LPTIM_AutoReloadMatchCallback
              weak defn :  HAL_LPTIM_AutoReloadWriteCallback
              weak defn :  HAL_LPTIM_CompareMatchCallback
              weak defn :  HAL_LPTIM_CompareWriteCallback
              definition:  HAL_LPTIM_Counter_Start
              definition:  HAL_LPTIM_Counter_Start_IT
              definition:  HAL_LPTIM_Counter_Stop
              definition:  HAL_LPTIM_Counter_Stop_IT
              definition:  HAL_LPTIM_DeInit
              weak defn :  HAL_LPTIM_DirectionDownCallback
              weak defn :  HAL_LPTIM_DirectionUpCallback
              definition:  HAL_LPTIM_Encoder_Start
              definition:  HAL_LPTIM_Encoder_Start_IT
              definition:  HAL_LPTIM_Encoder_Stop
              definition:  HAL_LPTIM_Encoder_Stop_IT
              definition:  HAL_LPTIM_GetState
              definition:  HAL_LPTIM_IRQHandler
              definition:  HAL_LPTIM_Init
              weak defn :  HAL_LPTIM_MspDeInit
              weak defn :  HAL_LPTIM_MspInit
              definition:  HAL_LPTIM_OnePulse_Start
              definition:  HAL_LPTIM_OnePulse_Start_IT
              definition:  HAL_LPTIM_OnePulse_Stop
              definition:  HAL_LPTIM_OnePulse_Stop_IT
              definition:  HAL_LPTIM_PWM_Start
              definition:  HAL_LPTIM_PWM_Start_IT
              definition:  HAL_LPTIM_PWM_Stop
              definition:  HAL_LPTIM_PWM_Stop_IT
              definition:  HAL_LPTIM_ReadAutoReload
              definition:  HAL_LPTIM_ReadCompare
              definition:  HAL_LPTIM_ReadCounter
              definition:  HAL_LPTIM_SetOnce_Start
              definition:  HAL_LPTIM_SetOnce_Start_IT
              definition:  HAL_LPTIM_SetOnce_Stop
              definition:  HAL_LPTIM_SetOnce_Stop_IT
              definition:  HAL_LPTIM_TimeOut_Start
              definition:  HAL_LPTIM_TimeOut_Start_IT
              definition:  HAL_LPTIM_TimeOut_Stop
              definition:  HAL_LPTIM_TimeOut_Stop_IT
              weak defn :  HAL_LPTIM_TriggerCallback
              definition:  LPTIM_Disable
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/targets/TARGET_STM/TARGET_STM32L4/device/stm32l4xx_hal_ltdc.o.
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/targets/TARGET_STM/TARGET_STM32L4/device/stm32l4xx_hal_ltdc_ex.o.
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/targets/TARGET_STM/TARGET_STM32L4/device/stm32l4xx_hal_mmc.o.
              reference :  HAL_DMA_Abort
              reference :  HAL_DMA_Abort_IT
              reference :  HAL_DMA_Start_IT
              reference :  HAL_GetTick
              definition:  HAL_MMC_Abort
              weak defn :  HAL_MMC_AbortCallback
              definition:  HAL_MMC_Abort_IT
              definition:  HAL_MMC_ConfigWideBusOperation
              definition:  HAL_MMC_DeInit
              definition:  HAL_MMC_Erase
              weak defn :  HAL_MMC_ErrorCallback
              definition:  HAL_MMC_GetCardCID
              definition:  HAL_MMC_GetCardCSD
              definition:  HAL_MMC_GetCardInfo
              definition:  HAL_MMC_GetCardState
              definition:  HAL_MMC_GetError
              definition:  HAL_MMC_GetState
              definition:  HAL_MMC_IRQHandler
              definition:  HAL_MMC_Init
              definition:  HAL_MMC_InitCard
              weak defn :  HAL_MMC_MspDeInit
              weak defn :  HAL_MMC_MspInit
              definition:  HAL_MMC_ReadBlocks
              definition:  HAL_MMC_ReadBlocks_DMA
              definition:  HAL_MMC_ReadBlocks_IT
              weak defn :  HAL_MMC_RxCpltCallback
              weak defn :  HAL_MMC_TxCpltCallback
              definition:  HAL_MMC_WriteBlocks
              definition:  HAL_MMC_WriteBlocks_DMA
              definition:  HAL_MMC_WriteBlocks_IT
              reference :  SDMMC_CmdBlockLength
              reference :  SDMMC_CmdErase
              reference :  SDMMC_CmdEraseEndAdd
              reference :  SDMMC_CmdEraseStartAdd
              reference :  SDMMC_CmdGoIdleState
              reference :  SDMMC_CmdOpCondition
              reference :  SDMMC_CmdReadMultiBlock
              reference :  SDMMC_CmdReadSingleBlock
              reference :  SDMMC_CmdSelDesel
              reference :  SDMMC_CmdSendCID
              reference :  SDMMC_CmdSendCSD
              reference :  SDMMC_CmdSendStatus
              reference :  SDMMC_CmdSetRelAdd
              reference :  SDMMC_CmdStopTransfer
              reference :  SDMMC_CmdSwitch
              reference :  SDMMC_CmdWriteMultiBlock
              reference :  SDMMC_CmdWriteSingleBlock
              reference :  SDMMC_ConfigData
              reference :  SDMMC_GetPowerState
              reference :  SDMMC_GetResponse
              reference :  SDMMC_Init
              reference :  SDMMC_PowerState_OFF
              reference :  SDMMC_PowerState_ON
              reference :  SDMMC_ReadFIFO
              reference :  SDMMC_WriteFIFO
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/targets/TARGET_STM/TARGET_STM32L4/device/stm32l4xx_hal_mmc_ex.o.
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/targets/TARGET_STM/TARGET_STM32L4/device/stm32l4xx_hal_nand.o.
              reference :  FMC_NAND_AttributeSpace_Timing_Init
              reference :  FMC_NAND_CommonSpace_Timing_Init
              reference :  FMC_NAND_DeInit
              reference :  FMC_NAND_ECC_Disable
              reference :  FMC_NAND_ECC_Enable
              reference :  FMC_NAND_GetECC
              reference :  FMC_NAND_Init
              reference :  HAL_GetTick
              definition:  HAL_NAND_Address_Inc
              definition:  HAL_NAND_ConfigDevice
              definition:  HAL_NAND_DeInit
              definition:  HAL_NAND_ECC_Disable
              definition:  HAL_NAND_ECC_Enable
              definition:  HAL_NAND_Erase_Block
              definition:  HAL_NAND_GetECC
              definition:  HAL_NAND_GetState
              definition:  HAL_NAND_IRQHandler
              weak defn :  HAL_NAND_ITCallback
              definition:  HAL_NAND_Init
              weak defn :  HAL_NAND_MspDeInit
              weak defn :  HAL_NAND_MspInit
              definition:  HAL_NAND_Read_ID
              definition:  HAL_NAND_Read_Page_16b
              definition:  HAL_NAND_Read_Page_8b
              definition:  HAL_NAND_Read_SpareArea_16b
              definition:  HAL_NAND_Read_SpareArea_8b
              definition:  HAL_NAND_Read_Status
              definition:  HAL_NAND_Reset
              definition:  HAL_NAND_Write_Page_16b
              definition:  HAL_NAND_Write_Page_8b
              definition:  HAL_NAND_Write_SpareArea_16b
              definition:  HAL_NAND_Write_SpareArea_8b
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/targets/TARGET_STM/TARGET_STM32L4/device/stm32l4xx_hal_nor.o.
              reference :  FMC_NORSRAM_DeInit
              reference :  FMC_NORSRAM_Extended_Timing_Init
              reference :  FMC_NORSRAM_Init
              reference :  FMC_NORSRAM_Timing_Init
              reference :  FMC_NORSRAM_WriteOperation_Disable
              reference :  FMC_NORSRAM_WriteOperation_Enable
              reference :  HAL_GetTick
              definition:  HAL_NOR_DeInit
              definition:  HAL_NOR_Erase_Block
              definition:  HAL_NOR_Erase_Chip
              definition:  HAL_NOR_GetState
              definition:  HAL_NOR_GetStatus
              definition:  HAL_NOR_Init
              weak defn :  HAL_NOR_MspDeInit
              weak defn :  HAL_NOR_MspInit
              weak defn :  HAL_NOR_MspWait
              definition:  HAL_NOR_Program
              definition:  HAL_NOR_ProgramBuffer
              definition:  HAL_NOR_Read
              definition:  HAL_NOR_ReadBuffer
              definition:  HAL_NOR_Read_CFI
              definition:  HAL_NOR_Read_ID
              definition:  HAL_NOR_ReturnToReadMode
              definition:  HAL_NOR_WriteOperation_Disable
              definition:  HAL_NOR_WriteOperation_Enable
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/targets/TARGET_STM/TARGET_STM32L4/device/stm32l4xx_hal_opamp.o.
              reference :  HAL_Delay
              definition:  HAL_OPAMP_DeInit
              definition:  HAL_OPAMP_GetState
              definition:  HAL_OPAMP_GetTrimOffset
              definition:  HAL_OPAMP_Init
              definition:  HAL_OPAMP_Lock
              weak defn :  HAL_OPAMP_MspDeInit
              weak defn :  HAL_OPAMP_MspInit
              definition:  HAL_OPAMP_SelfCalibrate
              definition:  HAL_OPAMP_Start
              definition:  HAL_OPAMP_Stop
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/targets/TARGET_STM/TARGET_STM32L4/device/stm32l4xx_hal_opamp_ex.o.
              reference :  HAL_Delay
              definition:  HAL_OPAMPEx_SelfCalibrateAll
              definition:  HAL_OPAMPEx_Unlock
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/targets/TARGET_STM/TARGET_STM32L4/device/stm32l4xx_hal_ospi.o.
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/targets/TARGET_STM/TARGET_STM32L4/device/stm32l4xx_hal_pcd.o.
              reference :  HAL_PCDEx_ActivateLPM
              reference :  HAL_PCDEx_LPM_Callback
              definition:  HAL_PCD_ActivateRemoteWakeup
              weak defn :  HAL_PCD_ConnectCallback
              weak defn :  HAL_PCD_DataInStageCallback
              weak defn :  HAL_PCD_DataOutStageCallback
              definition:  HAL_PCD_DeActivateRemoteWakeup
              definition:  HAL_PCD_DeInit
              definition:  HAL_PCD_DevConnect
              definition:  HAL_PCD_DevDisconnect
              weak defn :  HAL_PCD_DisconnectCallback
              definition:  HAL_PCD_EP_Close
              definition:  HAL_PCD_EP_ClrStall
              definition:  HAL_PCD_EP_Flush
              definition:  HAL_PCD_EP_GetRxCount
              definition:  HAL_PCD_EP_Open
              definition:  HAL_PCD_EP_Receive
              definition:  HAL_PCD_EP_SetStall
              definition:  HAL_PCD_EP_Transmit
              definition:  HAL_PCD_GetState
              definition:  HAL_PCD_IRQHandler
              weak defn :  HAL_PCD_ISOINIncompleteCallback
              weak defn :  HAL_PCD_ISOOUTIncompleteCallback
              definition:  HAL_PCD_Init
              weak defn :  HAL_PCD_MspDeInit
              weak defn :  HAL_PCD_MspInit
              weak defn :  HAL_PCD_ResetCallback
              weak defn :  HAL_PCD_ResumeCallback
              weak defn :  HAL_PCD_SOFCallback
              definition:  HAL_PCD_SetAddress
              weak defn :  HAL_PCD_SetupStageCallback
              definition:  HAL_PCD_Start
              definition:  HAL_PCD_Stop
              weak defn :  HAL_PCD_SuspendCallback
              reference :  HAL_RCC_GetHCLKFreq
              reference :  USB_ActivateEndpoint
              reference :  USB_ActivateRemoteWakeup
              reference :  USB_ActivateSetup
              reference :  USB_CoreInit
              reference :  USB_DeActivateRemoteWakeup
              reference :  USB_DeactivateEndpoint
              reference :  USB_DevConnect
              reference :  USB_DevDisconnect
              reference :  USB_DevInit
              reference :  USB_DisableGlobalInt
              reference :  USB_EP0StartXfer
              reference :  USB_EP0_OutStart
              reference :  USB_EPClearStall
              reference :  USB_EPSetStall
              reference :  USB_EPStartXfer
              reference :  USB_EnableGlobalInt
              reference :  USB_FlushRxFifo
              reference :  USB_FlushTxFifo
              reference :  USB_GetDevSpeed
              reference :  USB_GetMode
              reference :  USB_ReadDevAllInEpInterrupt
              reference :  USB_ReadDevAllOutEpInterrupt
              reference :  USB_ReadDevInEPInterrupt
              reference :  USB_ReadDevOutEPInterrupt
              reference :  USB_ReadInterrupts
              reference :  USB_ReadPacket
              reference :  USB_SetCurrentMode
              reference :  USB_SetDevAddress
              reference :  USB_SetTurnaroundTime
              reference :  USB_StopDevice
              reference :  USB_WritePacket
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/targets/TARGET_STM/TARGET_STM32L4/device/stm32l4xx_hal_pcd_ex.o.
              reference :  HAL_Delay
              reference :  HAL_GetTick
              definition:  HAL_PCDEx_ActivateBCD
              definition:  HAL_PCDEx_ActivateLPM
              weak defn :  HAL_PCDEx_BCD_Callback
              definition:  HAL_PCDEx_BCD_VBUSDetect
              definition:  HAL_PCDEx_DeActivateBCD
              definition:  HAL_PCDEx_DeActivateLPM
              weak defn :  HAL_PCDEx_LPM_Callback
              definition:  HAL_PCDEx_SetRxFiFo
              definition:  HAL_PCDEx_SetTxFiFo
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/targets/TARGET_STM/TARGET_STM32L4/device/stm32l4xx_hal_pwr.o.
              reference :  HAL_PWREx_DisableLowPowerRunMode
              reference :  HAL_PWREx_EnableLowPowerRunMode
              reference :  HAL_PWREx_EnterSTOP0Mode
              reference :  HAL_PWREx_EnterSTOP1Mode
              definition:  HAL_PWR_ConfigPVD
              definition:  HAL_PWR_DeInit
              definition:  HAL_PWR_DisableBkUpAccess
              definition:  HAL_PWR_DisablePVD
              definition:  HAL_PWR_DisableSEVOnPend
              definition:  HAL_PWR_DisableSleepOnExit
              definition:  HAL_PWR_DisableWakeUpPin
              definition:  HAL_PWR_EnableBkUpAccess
              definition:  HAL_PWR_EnablePVD
              definition:  HAL_PWR_EnableSEVOnPend
              definition:  HAL_PWR_EnableSleepOnExit
              definition:  HAL_PWR_EnableWakeUpPin
              definition:  HAL_PWR_EnterSLEEPMode
              definition:  HAL_PWR_EnterSTANDBYMode
              definition:  HAL_PWR_EnterSTOPMode
              weak defn :  HAL_PWR_PVDCallback
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/targets/TARGET_STM/TARGET_STM32L4/device/stm32l4xx_hal_pwr_ex.o.
              definition:  HAL_PWREx_ConfigPVM
              definition:  HAL_PWREx_ControlVoltageScaling
              definition:  HAL_PWREx_DisableBatteryCharging
              definition:  HAL_PWREx_DisableGPIOPullDown
              definition:  HAL_PWREx_DisableGPIOPullUp
              definition:  HAL_PWREx_DisableInternalWakeUpLine
              definition:  HAL_PWREx_DisableLowPowerRunMode
              definition:  HAL_PWREx_DisablePVM1
              definition:  HAL_PWREx_DisablePVM2
              definition:  HAL_PWREx_DisablePVM3
              definition:  HAL_PWREx_DisablePVM4
              definition:  HAL_PWREx_DisablePullUpPullDownConfig
              definition:  HAL_PWREx_DisableSRAM2ContentRetention
              definition:  HAL_PWREx_DisableVddIO2
              definition:  HAL_PWREx_DisableVddUSB
              definition:  HAL_PWREx_EnableBatteryCharging
              definition:  HAL_PWREx_EnableGPIOPullDown
              definition:  HAL_PWREx_EnableGPIOPullUp
              definition:  HAL_PWREx_EnableInternalWakeUpLine
              definition:  HAL_PWREx_EnableLowPowerRunMode
              definition:  HAL_PWREx_EnablePVM1
              definition:  HAL_PWREx_EnablePVM2
              definition:  HAL_PWREx_EnablePVM3
              definition:  HAL_PWREx_EnablePVM4
              definition:  HAL_PWREx_EnablePullUpPullDownConfig
              definition:  HAL_PWREx_EnableSRAM2ContentRetention
              definition:  HAL_PWREx_EnableVddIO2
              definition:  HAL_PWREx_EnableVddUSB
              definition:  HAL_PWREx_EnterSHUTDOWNMode
              definition:  HAL_PWREx_EnterSTOP0Mode
              definition:  HAL_PWREx_EnterSTOP1Mode
              definition:  HAL_PWREx_EnterSTOP2Mode
              definition:  HAL_PWREx_GetVoltageRange
              definition:  HAL_PWREx_PVD_PVM_IRQHandler
              weak defn :  HAL_PWREx_PVM1Callback
              weak defn :  HAL_PWREx_PVM2Callback
              weak defn :  HAL_PWREx_PVM3Callback
              weak defn :  HAL_PWREx_PVM4Callback
              reference :  HAL_PWR_PVDCallback
              reference :  SystemCoreClock
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/targets/TARGET_STM/TARGET_STM32L4/device/stm32l4xx_hal_qspi.o.
              reference :  HAL_DMA_Abort
              reference :  HAL_DMA_Abort_IT
              reference :  HAL_DMA_Start_IT
              reference :  HAL_GetTick
              definition:  HAL_QSPI_Abort
              weak defn :  HAL_QSPI_AbortCpltCallback
              definition:  HAL_QSPI_Abort_IT
              definition:  HAL_QSPI_AutoPolling
              definition:  HAL_QSPI_AutoPolling_IT
              weak defn :  HAL_QSPI_CmdCpltCallback
              definition:  HAL_QSPI_Command
              definition:  HAL_QSPI_Command_IT
              definition:  HAL_QSPI_DeInit
              weak defn :  HAL_QSPI_ErrorCallback
              weak defn :  HAL_QSPI_FifoThresholdCallback
              definition:  HAL_QSPI_GetError
              definition:  HAL_QSPI_GetFifoThreshold
              definition:  HAL_QSPI_GetState
              definition:  HAL_QSPI_IRQHandler
              definition:  HAL_QSPI_Init
              definition:  HAL_QSPI_MemoryMapped
              weak defn :  HAL_QSPI_MspDeInit
              weak defn :  HAL_QSPI_MspInit
              definition:  HAL_QSPI_Receive
              definition:  HAL_QSPI_Receive_DMA
              definition:  HAL_QSPI_Receive_IT
              weak defn :  HAL_QSPI_RxCpltCallback
              weak defn :  HAL_QSPI_RxHalfCpltCallback
              definition:  HAL_QSPI_SetFifoThreshold
              definition:  HAL_QSPI_SetTimeout
              weak defn :  HAL_QSPI_StatusMatchCallback
              weak defn :  HAL_QSPI_TimeOutCallback
              definition:  HAL_QSPI_Transmit
              definition:  HAL_QSPI_Transmit_DMA
              definition:  HAL_QSPI_Transmit_IT
              weak defn :  HAL_QSPI_TxCpltCallback
              weak defn :  HAL_QSPI_TxHalfCpltCallback
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/targets/TARGET_STM/TARGET_STM32L4/device/stm32l4xx_hal_rcc.o.
              reference :  AHBPrescTable
              reference :  APBPrescTable
              reference :  HAL_GPIO_Init
              reference :  HAL_GetTick
              reference :  HAL_InitTick
              reference :  HAL_PWREx_GetVoltageRange
              weak defn :  HAL_RCC_CSSCallback
              definition:  HAL_RCC_ClockConfig
              definition:  HAL_RCC_DeInit
              definition:  HAL_RCC_EnableCSS
              definition:  HAL_RCC_GetClockConfig
              definition:  HAL_RCC_GetHCLKFreq
              definition:  HAL_RCC_GetOscConfig
              definition:  HAL_RCC_GetPCLK1Freq
              definition:  HAL_RCC_GetPCLK2Freq
              definition:  HAL_RCC_GetSysClockFreq
              definition:  HAL_RCC_MCOConfig
              definition:  HAL_RCC_NMI_IRQHandler
              definition:  HAL_RCC_OscConfig
              reference :  MSIRangeTable
              reference :  SystemCoreClock
              reference :  uwTickPrio
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/targets/TARGET_STM/TARGET_STM32L4/device/stm32l4xx_hal_rcc_ex.o.
              reference :  HAL_GPIO_Init
              reference :  HAL_GetTick
              reference :  HAL_PWR_DisableBkUpAccess
              reference :  HAL_PWR_EnableBkUpAccess
              definition:  HAL_RCCEx_DisableLSCO
              definition:  HAL_RCCEx_DisableLSECSS
              definition:  HAL_RCCEx_DisableMSIPLLMode
              definition:  HAL_RCCEx_DisablePLLSAI1
              definition:  HAL_RCCEx_DisablePLLSAI2
              definition:  HAL_RCCEx_EnableLSCO
              definition:  HAL_RCCEx_EnableLSECSS
              definition:  HAL_RCCEx_EnableLSECSS_IT
              definition:  HAL_RCCEx_EnableMSIPLLMode
              definition:  HAL_RCCEx_EnablePLLSAI1
              definition:  HAL_RCCEx_EnablePLLSAI2
              definition:  HAL_RCCEx_GetPeriphCLKConfig
              definition:  HAL_RCCEx_GetPeriphCLKFreq
              weak defn :  HAL_RCCEx_LSECSS_Callback
              definition:  HAL_RCCEx_LSECSS_IRQHandler
              definition:  HAL_RCCEx_PeriphCLKConfig
              definition:  HAL_RCCEx_StandbyMSIRangeConfig
              definition:  HAL_RCCEx_WakeUpStopCLKConfig
              reference :  HAL_RCC_GetPCLK1Freq
              reference :  HAL_RCC_GetPCLK2Freq
              reference :  HAL_RCC_GetSysClockFreq
              reference :  MSIRangeTable
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/targets/TARGET_STM/TARGET_STM32L4/device/stm32l4xx_hal_rng.o.
              reference :  HAL_GetTick
              definition:  HAL_RNG_DeInit
              weak defn :  HAL_RNG_ErrorCallback
              definition:  HAL_RNG_GenerateRandomNumber
              definition:  HAL_RNG_GenerateRandomNumber_IT
              definition:  HAL_RNG_GetError
              definition:  HAL_RNG_GetRandomNumber
              definition:  HAL_RNG_GetRandomNumber_IT
              definition:  HAL_RNG_GetState
              definition:  HAL_RNG_IRQHandler
              definition:  HAL_RNG_Init
              weak defn :  HAL_RNG_MspDeInit
              weak defn :  HAL_RNG_MspInit
              definition:  HAL_RNG_ReadLastRandomNumber
              weak defn :  HAL_RNG_ReadyDataCallback
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/targets/TARGET_STM/TARGET_STM32L4/device/stm32l4xx_hal_rtc.o.
              reference :  HAL_GetTick
              reference :  HAL_RTCEx_AlarmBEventCallback
              weak defn :  HAL_RTC_AlarmAEventCallback
              definition:  HAL_RTC_AlarmIRQHandler
              definition:  HAL_RTC_DeInit
              definition:  HAL_RTC_DeactivateAlarm
              definition:  HAL_RTC_GetAlarm
              definition:  HAL_RTC_GetDate
              definition:  HAL_RTC_GetState
              definition:  HAL_RTC_GetTime
              definition:  HAL_RTC_Init
              weak defn :  HAL_RTC_MspDeInit
              weak defn :  HAL_RTC_MspInit
              definition:  HAL_RTC_PollForAlarmAEvent
              definition:  HAL_RTC_SetAlarm
              definition:  HAL_RTC_SetAlarm_IT
              definition:  HAL_RTC_SetDate
              definition:  HAL_RTC_SetTime
              definition:  HAL_RTC_WaitForSynchro
              definition:  RTC_Bcd2ToByte
              definition:  RTC_ByteToBcd2
              definition:  RTC_EnterInitMode
              definition:  RTC_ExitInitMode
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/targets/TARGET_STM/TARGET_STM32L4/device/stm32l4xx_hal_rtc_ex.o.
              reference :  HAL_GetTick
              weak defn :  HAL_RTCEx_AlarmBEventCallback
              definition:  HAL_RTCEx_BKUPRead
              definition:  HAL_RTCEx_BKUPWrite
              definition:  HAL_RTCEx_DeactivateCalibrationOutPut
              definition:  HAL_RTCEx_DeactivateInternalTimeStamp
              definition:  HAL_RTCEx_DeactivateRefClock
              definition:  HAL_RTCEx_DeactivateTamper
              definition:  HAL_RTCEx_DeactivateTimeStamp
              definition:  HAL_RTCEx_DeactivateWakeUpTimer
              definition:  HAL_RTCEx_DisableBypassShadow
              definition:  HAL_RTCEx_EnableBypassShadow
              definition:  HAL_RTCEx_GetTimeStamp
              definition:  HAL_RTCEx_GetWakeUpTimer
              definition:  HAL_RTCEx_PollForAlarmBEvent
              definition:  HAL_RTCEx_PollForTamper1Event
              definition:  HAL_RTCEx_PollForTamper2Event
              definition:  HAL_RTCEx_PollForTamper3Event
              definition:  HAL_RTCEx_PollForTimeStampEvent
              definition:  HAL_RTCEx_PollForWakeUpTimerEvent
              definition:  HAL_RTCEx_SetCalibrationOutPut
              definition:  HAL_RTCEx_SetInternalTimeStamp
              definition:  HAL_RTCEx_SetRefClock
              definition:  HAL_RTCEx_SetSmoothCalib
              definition:  HAL_RTCEx_SetSynchroShift
              definition:  HAL_RTCEx_SetTamper
              definition:  HAL_RTCEx_SetTamper_IT
              definition:  HAL_RTCEx_SetTimeStamp
              definition:  HAL_RTCEx_SetTimeStamp_IT
              definition:  HAL_RTCEx_SetWakeUpTimer
              definition:  HAL_RTCEx_SetWakeUpTimer_IT
              weak defn :  HAL_RTCEx_Tamper1EventCallback
              weak defn :  HAL_RTCEx_Tamper2EventCallback
              weak defn :  HAL_RTCEx_Tamper3EventCallback
              definition:  HAL_RTCEx_TamperTimeStampIRQHandler
              weak defn :  HAL_RTCEx_TimeStampEventCallback
              weak defn :  HAL_RTCEx_WakeUpTimerEventCallback
              definition:  HAL_RTCEx_WakeUpTimerIRQHandler
              reference :  HAL_RTC_WaitForSynchro
              reference :  RTC_Bcd2ToByte
              reference :  RTC_EnterInitMode
              reference :  RTC_ExitInitMode
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/targets/TARGET_STM/TARGET_STM32L4/device/stm32l4xx_hal_sai.o.
              reference :  HAL_DMA_Abort
              reference :  HAL_DMA_Abort_IT
              reference :  HAL_DMA_Start_IT
              reference :  HAL_GetTick
              reference :  HAL_RCCEx_GetPeriphCLKFreq
              definition:  HAL_SAI_Abort
              definition:  HAL_SAI_DMAPause
              definition:  HAL_SAI_DMAResume
              definition:  HAL_SAI_DMAStop
              definition:  HAL_SAI_DeInit
              definition:  HAL_SAI_DisableRxMuteMode
              definition:  HAL_SAI_DisableTxMuteMode
              definition:  HAL_SAI_EnableRxMuteMode
              definition:  HAL_SAI_EnableTxMuteMode
              weak defn :  HAL_SAI_ErrorCallback
              definition:  HAL_SAI_GetError
              definition:  HAL_SAI_GetState
              definition:  HAL_SAI_IRQHandler
              definition:  HAL_SAI_Init
              definition:  HAL_SAI_InitProtocol
              weak defn :  HAL_SAI_MspDeInit
              weak defn :  HAL_SAI_MspInit
              definition:  HAL_SAI_Receive
              definition:  HAL_SAI_Receive_DMA
              definition:  HAL_SAI_Receive_IT
              weak defn :  HAL_SAI_RxCpltCallback
              weak defn :  HAL_SAI_RxHalfCpltCallback
              definition:  HAL_SAI_Transmit
              definition:  HAL_SAI_Transmit_DMA
              definition:  HAL_SAI_Transmit_IT
              weak defn :  HAL_SAI_TxCpltCallback
              weak defn :  HAL_SAI_TxHalfCpltCallback
              reference :  SystemCoreClock
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/targets/TARGET_STM/TARGET_STM32L4/device/stm32l4xx_hal_sai_ex.o.
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/targets/TARGET_STM/TARGET_STM32L4/device/stm32l4xx_hal_sd.o.
              reference :  HAL_DMA_Abort
              reference :  HAL_DMA_Abort_IT
              reference :  HAL_DMA_Start_IT
              reference :  HAL_GetTick
              definition:  HAL_SD_Abort
              weak defn :  HAL_SD_AbortCallback
              definition:  HAL_SD_Abort_IT
              definition:  HAL_SD_ConfigWideBusOperation
              definition:  HAL_SD_DeInit
              definition:  HAL_SD_Erase
              weak defn :  HAL_SD_ErrorCallback
              definition:  HAL_SD_GetCardCID
              definition:  HAL_SD_GetCardCSD
              definition:  HAL_SD_GetCardInfo
              definition:  HAL_SD_GetCardState
              definition:  HAL_SD_GetCardStatus
              definition:  HAL_SD_GetError
              definition:  HAL_SD_GetState
              definition:  HAL_SD_IRQHandler
              definition:  HAL_SD_Init
              definition:  HAL_SD_InitCard
              weak defn :  HAL_SD_MspDeInit
              weak defn :  HAL_SD_MspInit
              definition:  HAL_SD_ReadBlocks
              definition:  HAL_SD_ReadBlocks_DMA
              definition:  HAL_SD_ReadBlocks_IT
              weak defn :  HAL_SD_RxCpltCallback
              weak defn :  HAL_SD_TxCpltCallback
              definition:  HAL_SD_WriteBlocks
              definition:  HAL_SD_WriteBlocks_DMA
              definition:  HAL_SD_WriteBlocks_IT
              reference :  SDMMC_CmdAppCommand
              reference :  SDMMC_CmdAppOperCommand
              reference :  SDMMC_CmdBlockLength
              reference :  SDMMC_CmdBusWidth
              reference :  SDMMC_CmdErase
              reference :  SDMMC_CmdGoIdleState
              reference :  SDMMC_CmdOperCond
              reference :  SDMMC_CmdReadMultiBlock
              reference :  SDMMC_CmdReadSingleBlock
              reference :  SDMMC_CmdSDEraseEndAdd
              reference :  SDMMC_CmdSDEraseStartAdd
              reference :  SDMMC_CmdSelDesel
              reference :  SDMMC_CmdSendCID
              reference :  SDMMC_CmdSendCSD
              reference :  SDMMC_CmdSendSCR
              reference :  SDMMC_CmdSendStatus
              reference :  SDMMC_CmdSetRelAdd
              reference :  SDMMC_CmdStatusRegister
              reference :  SDMMC_CmdStopTransfer
              reference :  SDMMC_CmdWriteMultiBlock
              reference :  SDMMC_CmdWriteSingleBlock
              reference :  SDMMC_ConfigData
              reference :  SDMMC_GetPowerState
              reference :  SDMMC_GetResponse
              reference :  SDMMC_Init
              reference :  SDMMC_PowerState_OFF
              reference :  SDMMC_PowerState_ON
              reference :  SDMMC_ReadFIFO
              reference :  SDMMC_WriteFIFO
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/targets/TARGET_STM/TARGET_STM32L4/device/stm32l4xx_hal_sd_ex.o.
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/targets/TARGET_STM/TARGET_STM32L4/device/stm32l4xx_hal_smartcard.o.
              reference :  HAL_DMA_Abort
              reference :  HAL_DMA_Abort_IT
              reference :  HAL_DMA_GetError
              reference :  HAL_DMA_Start_IT
              reference :  HAL_GetTick
              reference :  HAL_RCC_GetPCLK1Freq
              reference :  HAL_RCC_GetPCLK2Freq
              reference :  HAL_RCC_GetSysClockFreq
              definition:  HAL_SMARTCARD_Abort
              weak defn :  HAL_SMARTCARD_AbortCpltCallback
              definition:  HAL_SMARTCARD_AbortReceive
              weak defn :  HAL_SMARTCARD_AbortReceiveCpltCallback
              definition:  HAL_SMARTCARD_AbortReceive_IT
              definition:  HAL_SMARTCARD_AbortTransmit
              weak defn :  HAL_SMARTCARD_AbortTransmitCpltCallback
              definition:  HAL_SMARTCARD_AbortTransmit_IT
              definition:  HAL_SMARTCARD_Abort_IT
              definition:  HAL_SMARTCARD_DeInit
              weak defn :  HAL_SMARTCARD_ErrorCallback
              definition:  HAL_SMARTCARD_GetError
              definition:  HAL_SMARTCARD_GetState
              definition:  HAL_SMARTCARD_IRQHandler
              definition:  HAL_SMARTCARD_Init
              weak defn :  HAL_SMARTCARD_MspDeInit
              weak defn :  HAL_SMARTCARD_MspInit
              definition:  HAL_SMARTCARD_Receive
              definition:  HAL_SMARTCARD_Receive_DMA
              definition:  HAL_SMARTCARD_Receive_IT
              weak defn :  HAL_SMARTCARD_RxCpltCallback
              definition:  HAL_SMARTCARD_Transmit
              definition:  HAL_SMARTCARD_Transmit_DMA
              definition:  HAL_SMARTCARD_Transmit_IT
              weak defn :  HAL_SMARTCARD_TxCpltCallback
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/targets/TARGET_STM/TARGET_STM32L4/device/stm32l4xx_hal_smartcard_ex.o.
              definition:  HAL_SMARTCARDEx_BlockLength_Config
              definition:  HAL_SMARTCARDEx_DisableReceiverTimeOut
              definition:  HAL_SMARTCARDEx_EnableReceiverTimeOut
              definition:  HAL_SMARTCARDEx_TimeOut_Config
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/targets/TARGET_STM/TARGET_STM32L4/device/stm32l4xx_hal_smbus.o.
              reference :  HAL_GetTick
              weak defn :  HAL_SMBUS_AddrCallback
              definition:  HAL_SMBUS_ConfigAnalogFilter
              definition:  HAL_SMBUS_ConfigDigitalFilter
              definition:  HAL_SMBUS_DeInit
              definition:  HAL_SMBUS_DisableAlert_IT
              definition:  HAL_SMBUS_DisableListen_IT
              definition:  HAL_SMBUS_ER_IRQHandler
              definition:  HAL_SMBUS_EV_IRQHandler
              definition:  HAL_SMBUS_EnableAlert_IT
              definition:  HAL_SMBUS_EnableListen_IT
              weak defn :  HAL_SMBUS_ErrorCallback
              definition:  HAL_SMBUS_GetError
              definition:  HAL_SMBUS_GetState
              definition:  HAL_SMBUS_Init
              definition:  HAL_SMBUS_IsDeviceReady
              weak defn :  HAL_SMBUS_ListenCpltCallback
              weak defn :  HAL_SMBUS_MasterRxCpltCallback
              weak defn :  HAL_SMBUS_MasterTxCpltCallback
              definition:  HAL_SMBUS_Master_Abort_IT
              definition:  HAL_SMBUS_Master_Receive_IT
              definition:  HAL_SMBUS_Master_Transmit_IT
              weak defn :  HAL_SMBUS_MspDeInit
              weak defn :  HAL_SMBUS_MspInit
              weak defn :  HAL_SMBUS_SlaveRxCpltCallback
              weak defn :  HAL_SMBUS_SlaveTxCpltCallback
              definition:  HAL_SMBUS_Slave_Receive_IT
              definition:  HAL_SMBUS_Slave_Transmit_IT
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/targets/TARGET_STM/TARGET_STM32L4/device/stm32l4xx_hal_spi.o.
              reference :  HAL_DMA_Abort
              reference :  HAL_DMA_Abort_IT
              reference :  HAL_DMA_Start_IT
              reference :  HAL_GetTick
              definition:  HAL_SPI_Abort
              weak defn :  HAL_SPI_AbortCpltCallback
              definition:  HAL_SPI_Abort_IT
              definition:  HAL_SPI_DMAPause
              definition:  HAL_SPI_DMAResume
              definition:  HAL_SPI_DMAStop
              definition:  HAL_SPI_DeInit
              weak defn :  HAL_SPI_ErrorCallback
              definition:  HAL_SPI_GetError
              definition:  HAL_SPI_GetState
              definition:  HAL_SPI_IRQHandler
              definition:  HAL_SPI_Init
              weak defn :  HAL_SPI_MspDeInit
              weak defn :  HAL_SPI_MspInit
              definition:  HAL_SPI_Receive
              definition:  HAL_SPI_Receive_DMA
              definition:  HAL_SPI_Receive_IT
              weak defn :  HAL_SPI_RxCpltCallback
              weak defn :  HAL_SPI_RxHalfCpltCallback
              definition:  HAL_SPI_Transmit
              definition:  HAL_SPI_TransmitReceive
              definition:  HAL_SPI_TransmitReceive_DMA
              definition:  HAL_SPI_TransmitReceive_IT
              definition:  HAL_SPI_Transmit_DMA
              definition:  HAL_SPI_Transmit_IT
              weak defn :  HAL_SPI_TxCpltCallback
              weak defn :  HAL_SPI_TxHalfCpltCallback
              weak defn :  HAL_SPI_TxRxCpltCallback
              weak defn :  HAL_SPI_TxRxHalfCpltCallback
              reference :  SystemCoreClock
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/targets/TARGET_STM/TARGET_STM32L4/device/stm32l4xx_hal_spi_ex.o.
              definition:  HAL_SPIEx_FlushRxFifo
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/targets/TARGET_STM/TARGET_STM32L4/device/stm32l4xx_hal_sram.o.
              reference :  FMC_NORSRAM_DeInit
              reference :  FMC_NORSRAM_Extended_Timing_Init
              reference :  FMC_NORSRAM_Init
              reference :  FMC_NORSRAM_Timing_Init
              reference :  FMC_NORSRAM_WriteOperation_Disable
              reference :  FMC_NORSRAM_WriteOperation_Enable
              reference :  HAL_DMA_Start_IT
              weak defn :  HAL_SRAM_DMA_XferCpltCallback
              weak defn :  HAL_SRAM_DMA_XferErrorCallback
              definition:  HAL_SRAM_DeInit
              definition:  HAL_SRAM_GetState
              definition:  HAL_SRAM_Init
              weak defn :  HAL_SRAM_MspDeInit
              weak defn :  HAL_SRAM_MspInit
              definition:  HAL_SRAM_Read_16b
              definition:  HAL_SRAM_Read_32b
              definition:  HAL_SRAM_Read_8b
              definition:  HAL_SRAM_Read_DMA
              definition:  HAL_SRAM_WriteOperation_Disable
              definition:  HAL_SRAM_WriteOperation_Enable
              definition:  HAL_SRAM_Write_16b
              definition:  HAL_SRAM_Write_32b
              definition:  HAL_SRAM_Write_8b
              definition:  HAL_SRAM_Write_DMA
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/targets/TARGET_STM/TARGET_STM32L4/device/stm32l4xx_hal_swpmi.o.
              reference :  HAL_DMA_Abort
              reference :  HAL_DMA_Abort_IT
              reference :  HAL_DMA_Start_IT
              reference :  HAL_GetTick
              definition:  HAL_SWPMI_DMAStop
              definition:  HAL_SWPMI_DeInit
              definition:  HAL_SWPMI_DisableLoopback
              definition:  HAL_SWPMI_EnableLoopback
              weak defn :  HAL_SWPMI_ErrorCallback
              definition:  HAL_SWPMI_GetError
              definition:  HAL_SWPMI_GetState
              definition:  HAL_SWPMI_IRQHandler
              definition:  HAL_SWPMI_Init
              weak defn :  HAL_SWPMI_MspDeInit
              weak defn :  HAL_SWPMI_MspInit
              definition:  HAL_SWPMI_Receive
              definition:  HAL_SWPMI_Receive_DMA
              definition:  HAL_SWPMI_Receive_IT
              weak defn :  HAL_SWPMI_RxCpltCallback
              weak defn :  HAL_SWPMI_RxHalfCpltCallback
              definition:  HAL_SWPMI_Transmit
              definition:  HAL_SWPMI_Transmit_DMA
              definition:  HAL_SWPMI_Transmit_IT
              weak defn :  HAL_SWPMI_TxCpltCallback
              weak defn :  HAL_SWPMI_TxHalfCpltCallback
              reference :  SystemCoreClock
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/targets/TARGET_STM/TARGET_STM32L4/device/stm32l4xx_hal_tim.o.
              reference :  HAL_DMA_Abort_IT
              reference :  HAL_DMA_Start_IT
              reference :  HAL_TIMEx_Break2Callback
              reference :  HAL_TIMEx_BreakCallback
              reference :  HAL_TIMEx_CommutCallback
              definition:  HAL_TIM_Base_DeInit
              definition:  HAL_TIM_Base_GetState
              definition:  HAL_TIM_Base_Init
              weak defn :  HAL_TIM_Base_MspDeInit
              weak defn :  HAL_TIM_Base_MspInit
              definition:  HAL_TIM_Base_Start
              definition:  HAL_TIM_Base_Start_DMA
              definition:  HAL_TIM_Base_Start_IT
              definition:  HAL_TIM_Base_Stop
              definition:  HAL_TIM_Base_Stop_DMA
              definition:  HAL_TIM_Base_Stop_IT
              definition:  HAL_TIM_ConfigClockSource
              definition:  HAL_TIM_ConfigOCrefClear
              definition:  HAL_TIM_ConfigTI1Input
              definition:  HAL_TIM_DMABurst_ReadStart
              definition:  HAL_TIM_DMABurst_ReadStop
              definition:  HAL_TIM_DMABurst_WriteStart
              definition:  HAL_TIM_DMABurst_WriteStop
              definition:  HAL_TIM_Encoder_DeInit
              definition:  HAL_TIM_Encoder_GetState
              definition:  HAL_TIM_Encoder_Init
              weak defn :  HAL_TIM_Encoder_MspDeInit
              weak defn :  HAL_TIM_Encoder_MspInit
              definition:  HAL_TIM_Encoder_Start
              definition:  HAL_TIM_Encoder_Start_DMA
              definition:  HAL_TIM_Encoder_Start_IT
              definition:  HAL_TIM_Encoder_Stop
              definition:  HAL_TIM_Encoder_Stop_DMA
              definition:  HAL_TIM_Encoder_Stop_IT
              weak defn :  HAL_TIM_ErrorCallback
              definition:  HAL_TIM_GenerateEvent
              weak defn :  HAL_TIM_IC_CaptureCallback
              weak defn :  HAL_TIM_IC_CaptureHalfCpltCallback
              definition:  HAL_TIM_IC_ConfigChannel
              definition:  HAL_TIM_IC_DeInit
              definition:  HAL_TIM_IC_GetState
              definition:  HAL_TIM_IC_Init
              weak defn :  HAL_TIM_IC_MspDeInit
              weak defn :  HAL_TIM_IC_MspInit
              definition:  HAL_TIM_IC_Start
              definition:  HAL_TIM_IC_Start_DMA
              definition:  HAL_TIM_IC_Start_IT
              definition:  HAL_TIM_IC_Stop
              definition:  HAL_TIM_IC_Stop_DMA
              definition:  HAL_TIM_IC_Stop_IT
              definition:  HAL_TIM_IRQHandler
              definition:  HAL_TIM_OC_ConfigChannel
              definition:  HAL_TIM_OC_DeInit
              weak defn :  HAL_TIM_OC_DelayElapsedCallback
              definition:  HAL_TIM_OC_GetState
              definition:  HAL_TIM_OC_Init
              weak defn :  HAL_TIM_OC_MspDeInit
              weak defn :  HAL_TIM_OC_MspInit
              definition:  HAL_TIM_OC_Start
              definition:  HAL_TIM_OC_Start_DMA
              definition:  HAL_TIM_OC_Start_IT
              definition:  HAL_TIM_OC_Stop
              definition:  HAL_TIM_OC_Stop_DMA
              definition:  HAL_TIM_OC_Stop_IT
              definition:  HAL_TIM_OnePulse_ConfigChannel
              definition:  HAL_TIM_OnePulse_DeInit
              definition:  HAL_TIM_OnePulse_GetState
              definition:  HAL_TIM_OnePulse_Init
              weak defn :  HAL_TIM_OnePulse_MspDeInit
              weak defn :  HAL_TIM_OnePulse_MspInit
              definition:  HAL_TIM_OnePulse_Start
              definition:  HAL_TIM_OnePulse_Start_IT
              definition:  HAL_TIM_OnePulse_Stop
              definition:  HAL_TIM_OnePulse_Stop_IT
              definition:  HAL_TIM_PWM_ConfigChannel
              definition:  HAL_TIM_PWM_DeInit
              definition:  HAL_TIM_PWM_GetState
              definition:  HAL_TIM_PWM_Init
              weak defn :  HAL_TIM_PWM_MspDeInit
              weak defn :  HAL_TIM_PWM_MspInit
              weak defn :  HAL_TIM_PWM_PulseFinishedCallback
              weak defn :  HAL_TIM_PWM_PulseFinishedHalfCpltCallback
              definition:  HAL_TIM_PWM_Start
              definition:  HAL_TIM_PWM_Start_DMA
              definition:  HAL_TIM_PWM_Start_IT
              definition:  HAL_TIM_PWM_Stop
              definition:  HAL_TIM_PWM_Stop_DMA
              definition:  HAL_TIM_PWM_Stop_IT
              weak defn :  HAL_TIM_PeriodElapsedCallback
              weak defn :  HAL_TIM_PeriodElapsedHalfCpltCallback
              definition:  HAL_TIM_ReadCapturedValue
              definition:  HAL_TIM_SlaveConfigSynchro
              definition:  HAL_TIM_SlaveConfigSynchro_IT
              weak defn :  HAL_TIM_TriggerCallback
              weak defn :  HAL_TIM_TriggerHalfCpltCallback
              reference :  TIMEx_DMACommutationCplt
              reference :  TIMEx_DMACommutationHalfCplt
              definition:  TIM_Base_SetConfig
              definition:  TIM_CCxChannelCmd
              definition:  TIM_DMACaptureCplt
              definition:  TIM_DMACaptureHalfCplt
              definition:  TIM_DMADelayPulseCplt
              definition:  TIM_DMADelayPulseHalfCplt
              definition:  TIM_DMAError
              definition:  TIM_ETR_SetConfig
              definition:  TIM_OC2_SetConfig
              definition:  TIM_TI1_SetConfig
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/targets/TARGET_STM/TARGET_STM32L4/device/stm32l4xx_hal_tim_ex.o.
              reference :  HAL_DMA_Abort_IT
              reference :  HAL_DMA_Start_IT
              weak defn :  HAL_TIMEx_Break2Callback
              weak defn :  HAL_TIMEx_BreakCallback
              weak defn :  HAL_TIMEx_CommutCallback
              weak defn :  HAL_TIMEx_CommutHalfCpltCallback
              definition:  HAL_TIMEx_ConfigBreakDeadTime
              definition:  HAL_TIMEx_ConfigBreakInput
              definition:  HAL_TIMEx_ConfigCommutEvent
              definition:  HAL_TIMEx_ConfigCommutEvent_DMA
              definition:  HAL_TIMEx_ConfigCommutEvent_IT
              definition:  HAL_TIMEx_GroupChannel5
              definition:  HAL_TIMEx_HallSensor_DeInit
              definition:  HAL_TIMEx_HallSensor_GetState
              definition:  HAL_TIMEx_HallSensor_Init
              weak defn :  HAL_TIMEx_HallSensor_MspDeInit
              weak defn :  HAL_TIMEx_HallSensor_MspInit
              definition:  HAL_TIMEx_HallSensor_Start
              definition:  HAL_TIMEx_HallSensor_Start_DMA
              definition:  HAL_TIMEx_HallSensor_Start_IT
              definition:  HAL_TIMEx_HallSensor_Stop
              definition:  HAL_TIMEx_HallSensor_Stop_DMA
              definition:  HAL_TIMEx_HallSensor_Stop_IT
              definition:  HAL_TIMEx_MasterConfigSynchronization
              definition:  HAL_TIMEx_OCN_Start
              definition:  HAL_TIMEx_OCN_Start_DMA
              definition:  HAL_TIMEx_OCN_Start_IT
              definition:  HAL_TIMEx_OCN_Stop
              definition:  HAL_TIMEx_OCN_Stop_DMA
              definition:  HAL_TIMEx_OCN_Stop_IT
              definition:  HAL_TIMEx_OnePulseN_Start
              definition:  HAL_TIMEx_OnePulseN_Start_IT
              definition:  HAL_TIMEx_OnePulseN_Stop
              definition:  HAL_TIMEx_OnePulseN_Stop_IT
              definition:  HAL_TIMEx_PWMN_Start
              definition:  HAL_TIMEx_PWMN_Start_DMA
              definition:  HAL_TIMEx_PWMN_Start_IT
              definition:  HAL_TIMEx_PWMN_Stop
              definition:  HAL_TIMEx_PWMN_Stop_DMA
              definition:  HAL_TIMEx_PWMN_Stop_IT
              definition:  HAL_TIMEx_RemapConfig
              definition:  TIMEx_DMACommutationCplt
              definition:  TIMEx_DMACommutationHalfCplt
              reference :  TIM_Base_SetConfig
              reference :  TIM_CCxChannelCmd
              reference :  TIM_DMACaptureCplt
              reference :  TIM_DMACaptureHalfCplt
              reference :  TIM_DMADelayPulseCplt
              reference :  TIM_DMADelayPulseHalfCplt
              reference :  TIM_DMAError
              reference :  TIM_OC2_SetConfig
              reference :  TIM_TI1_SetConfig
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/targets/TARGET_STM/TARGET_STM32L4/device/stm32l4xx_hal_tsc.o.
              weak defn :  HAL_TSC_ConvCpltCallback
              definition:  HAL_TSC_DeInit
              weak defn :  HAL_TSC_ErrorCallback
              definition:  HAL_TSC_GetState
              definition:  HAL_TSC_GroupGetStatus
              definition:  HAL_TSC_GroupGetValue
              definition:  HAL_TSC_IOConfig
              definition:  HAL_TSC_IODischarge
              definition:  HAL_TSC_IRQHandler
              definition:  HAL_TSC_Init
              weak defn :  HAL_TSC_MspDeInit
              weak defn :  HAL_TSC_MspInit
              definition:  HAL_TSC_PollForAcquisition
              definition:  HAL_TSC_Start
              definition:  HAL_TSC_Start_IT
              definition:  HAL_TSC_Stop
              definition:  HAL_TSC_Stop_IT
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/targets/TARGET_STM/TARGET_STM32L4/device/stm32l4xx_hal_uart.o.
              reference :  HAL_DMA_Abort
              reference :  HAL_DMA_Abort_IT
              reference :  HAL_DMA_GetError
              reference :  HAL_DMA_Start_IT
              reference :  HAL_GetTick
              definition:  HAL_HalfDuplex_EnableReceiver
              definition:  HAL_HalfDuplex_EnableTransmitter
              definition:  HAL_HalfDuplex_Init
              definition:  HAL_LIN_Init
              definition:  HAL_LIN_SendBreak
              definition:  HAL_MultiProcessor_DisableMuteMode
              definition:  HAL_MultiProcessor_EnableMuteMode
              definition:  HAL_MultiProcessor_EnterMuteMode
              definition:  HAL_MultiProcessor_Init
              reference :  HAL_RCC_GetPCLK1Freq
              reference :  HAL_RCC_GetPCLK2Freq
              reference :  HAL_RCC_GetSysClockFreq
              reference :  HAL_UARTEx_WakeupCallback
              definition:  HAL_UART_Abort
              weak defn :  HAL_UART_AbortCpltCallback
              definition:  HAL_UART_AbortReceive
              weak defn :  HAL_UART_AbortReceiveCpltCallback
              definition:  HAL_UART_AbortReceive_IT
              definition:  HAL_UART_AbortTransmit
              weak defn :  HAL_UART_AbortTransmitCpltCallback
              definition:  HAL_UART_AbortTransmit_IT
              definition:  HAL_UART_Abort_IT
              definition:  HAL_UART_DMAPause
              definition:  HAL_UART_DMAResume
              definition:  HAL_UART_DMAStop
              definition:  HAL_UART_DeInit
              weak defn :  HAL_UART_ErrorCallback
              definition:  HAL_UART_GetError
              definition:  HAL_UART_GetState
              definition:  HAL_UART_IRQHandler
              definition:  HAL_UART_Init
              weak defn :  HAL_UART_MspDeInit
              weak defn :  HAL_UART_MspInit
              definition:  HAL_UART_Receive
              definition:  HAL_UART_Receive_DMA
              definition:  HAL_UART_Receive_IT
              weak defn :  HAL_UART_RxCpltCallback
              weak defn :  HAL_UART_RxHalfCpltCallback
              definition:  HAL_UART_Transmit
              definition:  HAL_UART_Transmit_DMA
              definition:  HAL_UART_Transmit_IT
              weak defn :  HAL_UART_TxCpltCallback
              weak defn :  HAL_UART_TxHalfCpltCallback
              definition:  UART_AdvFeatureConfig
              definition:  UART_CheckIdleState
              definition:  UART_SetConfig
              definition:  UART_WaitOnFlagUntilTimeout
              reference :  __aeabi_uldivmod
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/targets/TARGET_STM/TARGET_STM32L4/device/stm32l4xx_hal_uart_ex.o.
              reference :  HAL_GetTick
              definition:  HAL_MultiProcessorEx_AddressLength_Set
              definition:  HAL_RS485Ex_Init
              definition:  HAL_UARTEx_DisableClockStopMode
              definition:  HAL_UARTEx_DisableStopMode
              definition:  HAL_UARTEx_EnableClockStopMode
              definition:  HAL_UARTEx_EnableStopMode
              definition:  HAL_UARTEx_StopModeWakeUpSourceConfig
              weak defn :  HAL_UARTEx_WakeupCallback
              reference :  HAL_UART_MspInit
              reference :  UART_AdvFeatureConfig
              reference :  UART_CheckIdleState
              reference :  UART_SetConfig
              reference :  UART_WaitOnFlagUntilTimeout
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/targets/TARGET_STM/TARGET_STM32L4/device/stm32l4xx_hal_usart.o.
              reference :  HAL_DMA_Abort
              reference :  HAL_DMA_Abort_IT
              reference :  HAL_DMA_GetError
              reference :  HAL_DMA_Start_IT
              reference :  HAL_GetTick
              reference :  HAL_RCC_GetPCLK1Freq
              reference :  HAL_RCC_GetPCLK2Freq
              reference :  HAL_RCC_GetSysClockFreq
              definition:  HAL_USART_Abort
              weak defn :  HAL_USART_AbortCpltCallback
              definition:  HAL_USART_Abort_IT
              definition:  HAL_USART_DMAPause
              definition:  HAL_USART_DMAResume
              definition:  HAL_USART_DMAStop
              definition:  HAL_USART_DeInit
              weak defn :  HAL_USART_ErrorCallback
              definition:  HAL_USART_GetError
              definition:  HAL_USART_GetState
              definition:  HAL_USART_IRQHandler
              definition:  HAL_USART_Init
              weak defn :  HAL_USART_MspDeInit
              weak defn :  HAL_USART_MspInit
              definition:  HAL_USART_Receive
              definition:  HAL_USART_Receive_DMA
              definition:  HAL_USART_Receive_IT
              weak defn :  HAL_USART_RxCpltCallback
              weak defn :  HAL_USART_RxHalfCpltCallback
              definition:  HAL_USART_Transmit
              definition:  HAL_USART_TransmitReceive
              definition:  HAL_USART_TransmitReceive_DMA
              definition:  HAL_USART_TransmitReceive_IT
              definition:  HAL_USART_Transmit_DMA
              definition:  HAL_USART_Transmit_IT
              weak defn :  HAL_USART_TxCpltCallback
              weak defn :  HAL_USART_TxHalfCpltCallback
              weak defn :  HAL_USART_TxRxCpltCallback
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/targets/TARGET_STM/TARGET_STM32L4/device/stm32l4xx_hal_usart_ex.o.
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/targets/TARGET_STM/TARGET_STM32L4/device/stm32l4xx_hal_wwdg.o.
              weak defn :  HAL_WWDG_EarlyWakeupCallback
              definition:  HAL_WWDG_IRQHandler
              definition:  HAL_WWDG_Init
              weak defn :  HAL_WWDG_MspInit
              definition:  HAL_WWDG_Refresh
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/targets/TARGET_STM/TARGET_STM32L4/device/stm32l4xx_ll_adc.o.
              definition:  LL_ADC_CommonDeInit
              definition:  LL_ADC_CommonInit
              definition:  LL_ADC_CommonStructInit
              definition:  LL_ADC_DeInit
              definition:  LL_ADC_INJ_Init
              definition:  LL_ADC_INJ_StructInit
              definition:  LL_ADC_Init
              definition:  LL_ADC_REG_Init
              definition:  LL_ADC_REG_StructInit
              definition:  LL_ADC_StructInit
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/targets/TARGET_STM/TARGET_STM32L4/device/stm32l4xx_ll_comp.o.
              definition:  LL_COMP_DeInit
              definition:  LL_COMP_Init
              definition:  LL_COMP_StructInit
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/targets/TARGET_STM/TARGET_STM32L4/device/stm32l4xx_ll_crc.o.
              definition:  LL_CRC_DeInit
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/targets/TARGET_STM/TARGET_STM32L4/device/stm32l4xx_ll_crs.o.
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/targets/TARGET_STM/TARGET_STM32L4/device/stm32l4xx_ll_dac.o.
              definition:  LL_DAC_DeInit
              definition:  LL_DAC_Init
              definition:  LL_DAC_StructInit
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/targets/TARGET_STM/TARGET_STM32L4/device/stm32l4xx_ll_dma.o.
              definition:  LL_DMA_DeInit
              definition:  LL_DMA_Init
              definition:  LL_DMA_StructInit
              reference :  __aeabi_memclr4
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/targets/TARGET_STM/TARGET_STM32L4/device/stm32l4xx_ll_dma2d.o.
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/targets/TARGET_STM/TARGET_STM32L4/device/stm32l4xx_ll_exti.o.
              definition:  LL_EXTI_DeInit
              definition:  LL_EXTI_Init
              definition:  LL_EXTI_StructInit
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/targets/TARGET_STM/TARGET_STM32L4/device/stm32l4xx_ll_fmc.o.
              definition:  FMC_NAND_AttributeSpace_Timing_Init
              definition:  FMC_NAND_CommonSpace_Timing_Init
              definition:  FMC_NAND_DeInit
              definition:  FMC_NAND_ECC_Disable
              definition:  FMC_NAND_ECC_Enable
              definition:  FMC_NAND_GetECC
              definition:  FMC_NAND_Init
              definition:  FMC_NORSRAM_DeInit
              definition:  FMC_NORSRAM_Extended_Timing_Init
              definition:  FMC_NORSRAM_Init
              definition:  FMC_NORSRAM_Timing_Init
              definition:  FMC_NORSRAM_WriteOperation_Disable
              definition:  FMC_NORSRAM_WriteOperation_Enable
              reference :  HAL_GetTick
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/targets/TARGET_STM/TARGET_STM32L4/device/stm32l4xx_ll_gpio.o.
              definition:  LL_GPIO_DeInit
              definition:  LL_GPIO_Init
              definition:  LL_GPIO_StructInit
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/targets/TARGET_STM/TARGET_STM32L4/device/stm32l4xx_ll_i2c.o.
              definition:  LL_I2C_DeInit
              definition:  LL_I2C_Init
              definition:  LL_I2C_StructInit
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/targets/TARGET_STM/TARGET_STM32L4/device/stm32l4xx_ll_lptim.o.
              definition:  LL_LPTIM_DeInit
              definition:  LL_LPTIM_Disable
              definition:  LL_LPTIM_Init
              definition:  LL_LPTIM_StructInit
              reference :  LL_RCC_GetSystemClocksFreq
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/targets/TARGET_STM/TARGET_STM32L4/device/stm32l4xx_ll_lpuart.o.
              definition:  LL_LPUART_DeInit
              definition:  LL_LPUART_Init
              definition:  LL_LPUART_StructInit
              reference :  LL_RCC_GetLPUARTClockFreq
              reference :  __aeabi_uldivmod
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/targets/TARGET_STM/TARGET_STM32L4/device/stm32l4xx_ll_opamp.o.
              definition:  LL_OPAMP_DeInit
              definition:  LL_OPAMP_Init
              definition:  LL_OPAMP_StructInit
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/targets/TARGET_STM/TARGET_STM32L4/device/stm32l4xx_ll_pwr.o.
              definition:  LL_PWR_DeInit
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/targets/TARGET_STM/TARGET_STM32L4/device/stm32l4xx_ll_rcc.o.
              reference :  AHBPrescTable
              reference :  APBPrescTable
              definition:  LL_RCC_DeInit
              definition:  LL_RCC_GetADCClockFreq
              definition:  LL_RCC_GetDFSDMClockFreq
              definition:  LL_RCC_GetI2CClockFreq
              definition:  LL_RCC_GetLPTIMClockFreq
              definition:  LL_RCC_GetLPUARTClockFreq
              definition:  LL_RCC_GetRNGClockFreq
              definition:  LL_RCC_GetSAIClockFreq
              definition:  LL_RCC_GetSDMMCClockFreq
              definition:  LL_RCC_GetSWPMIClockFreq
              definition:  LL_RCC_GetSystemClocksFreq
              definition:  LL_RCC_GetUARTClockFreq
              definition:  LL_RCC_GetUSARTClockFreq
              definition:  LL_RCC_GetUSBClockFreq
              reference :  MSIRangeTable
              definition:  RCC_GetHCLKClockFreq
              definition:  RCC_GetPCLK1ClockFreq
              definition:  RCC_GetPCLK2ClockFreq
              definition:  RCC_GetSystemClockFreq
              definition:  RCC_PLLSAI1_GetFreqDomain_48M
              definition:  RCC_PLLSAI1_GetFreqDomain_ADC
              definition:  RCC_PLLSAI1_GetFreqDomain_SAI
              definition:  RCC_PLLSAI2_GetFreqDomain_ADC
              definition:  RCC_PLLSAI2_GetFreqDomain_SAI
              definition:  RCC_PLL_GetFreqDomain_48M
              definition:  RCC_PLL_GetFreqDomain_SAI
              definition:  RCC_PLL_GetFreqDomain_SYS
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/targets/TARGET_STM/TARGET_STM32L4/device/stm32l4xx_ll_rng.o.
              definition:  LL_RNG_DeInit
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/targets/TARGET_STM/TARGET_STM32L4/device/stm32l4xx_ll_rtc.o.
              definition:  LL_RTC_ALMA_Init
              definition:  LL_RTC_ALMA_StructInit
              definition:  LL_RTC_ALMB_Init
              definition:  LL_RTC_ALMB_StructInit
              definition:  LL_RTC_DATE_Init
              definition:  LL_RTC_DATE_StructInit
              definition:  LL_RTC_DeInit
              definition:  LL_RTC_EnterInitMode
              definition:  LL_RTC_ExitInitMode
              definition:  LL_RTC_Init
              definition:  LL_RTC_StructInit
              definition:  LL_RTC_TIME_Init
              definition:  LL_RTC_TIME_StructInit
              definition:  LL_RTC_WaitForSynchro
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/targets/TARGET_STM/TARGET_STM32L4/device/stm32l4xx_ll_sdmmc.o.
              reference :  HAL_Delay
              definition:  SDMMC_CmdAppCommand
              definition:  SDMMC_CmdAppOperCommand
              definition:  SDMMC_CmdBlockLength
              definition:  SDMMC_CmdBusWidth
              definition:  SDMMC_CmdErase
              definition:  SDMMC_CmdEraseEndAdd
              definition:  SDMMC_CmdEraseStartAdd
              definition:  SDMMC_CmdGoIdleState
              definition:  SDMMC_CmdOpCondition
              definition:  SDMMC_CmdOperCond
              definition:  SDMMC_CmdReadMultiBlock
              definition:  SDMMC_CmdReadSingleBlock
              definition:  SDMMC_CmdSDEraseEndAdd
              definition:  SDMMC_CmdSDEraseStartAdd
              definition:  SDMMC_CmdSelDesel
              definition:  SDMMC_CmdSendCID
              definition:  SDMMC_CmdSendCSD
              definition:  SDMMC_CmdSendSCR
              definition:  SDMMC_CmdSendStatus
              definition:  SDMMC_CmdSetRelAdd
              definition:  SDMMC_CmdStatusRegister
              definition:  SDMMC_CmdStopTransfer
              definition:  SDMMC_CmdSwitch
              definition:  SDMMC_CmdWriteMultiBlock
              definition:  SDMMC_CmdWriteSingleBlock
              definition:  SDMMC_ConfigData
              definition:  SDMMC_GetCommandResponse
              definition:  SDMMC_GetDataCounter
              definition:  SDMMC_GetFIFOCount
              definition:  SDMMC_GetPowerState
              definition:  SDMMC_GetResponse
              definition:  SDMMC_Init
              definition:  SDMMC_PowerState_OFF
              definition:  SDMMC_PowerState_ON
              definition:  SDMMC_ReadFIFO
              definition:  SDMMC_SendCommand
              definition:  SDMMC_SetSDMMCReadWaitMode
              definition:  SDMMC_WriteFIFO
              reference :  SystemCoreClock
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/targets/TARGET_STM/TARGET_STM32L4/device/stm32l4xx_ll_spi.o.
              definition:  LL_SPI_DeInit
              definition:  LL_SPI_Init
              definition:  LL_SPI_StructInit
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/targets/TARGET_STM/TARGET_STM32L4/device/stm32l4xx_ll_swpmi.o.
              definition:  LL_SWPMI_DeInit
              definition:  LL_SWPMI_Init
              definition:  LL_SWPMI_StructInit
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/targets/TARGET_STM/TARGET_STM32L4/device/stm32l4xx_ll_tim.o.
              definition:  LL_TIM_BDTR_Init
              definition:  LL_TIM_BDTR_StructInit
              definition:  LL_TIM_DeInit
              definition:  LL_TIM_ENCODER_Init
              definition:  LL_TIM_ENCODER_StructInit
              definition:  LL_TIM_HALLSENSOR_Init
              definition:  LL_TIM_HALLSENSOR_StructInit
              definition:  LL_TIM_IC_Init
              definition:  LL_TIM_IC_StructInit
              definition:  LL_TIM_Init
              definition:  LL_TIM_OC_Init
              definition:  LL_TIM_OC_StructInit
              definition:  LL_TIM_StructInit
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/targets/TARGET_STM/TARGET_STM32L4/device/stm32l4xx_ll_usart.o.
              reference :  LL_RCC_GetUARTClockFreq
              reference :  LL_RCC_GetUSARTClockFreq
              definition:  LL_USART_ClockInit
              definition:  LL_USART_ClockStructInit
              definition:  LL_USART_DeInit
              definition:  LL_USART_Init
              definition:  LL_USART_StructInit
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/targets/TARGET_STM/TARGET_STM32L4/device/stm32l4xx_ll_usb.o.
              reference :  HAL_Delay
              definition:  USB_ActivateDedicatedEndpoint
              definition:  USB_ActivateEndpoint
              definition:  USB_ActivateRemoteWakeup
              definition:  USB_ActivateSetup
              definition:  USB_ClearInterrupts
              definition:  USB_CoreInit
              definition:  USB_DeActivateRemoteWakeup
              definition:  USB_DeactivateDedicatedEndpoint
              definition:  USB_DeactivateEndpoint
              definition:  USB_DevConnect
              definition:  USB_DevDisconnect
              definition:  USB_DevInit
              definition:  USB_DisableGlobalInt
              definition:  USB_DoPing
              definition:  USB_DriveVbus
              definition:  USB_EP0StartXfer
              definition:  USB_EP0_OutStart
              definition:  USB_EPClearStall
              definition:  USB_EPSetStall
              definition:  USB_EPStartXfer
              definition:  USB_EnableGlobalInt
              definition:  USB_FlushRxFifo
              definition:  USB_FlushTxFifo
              definition:  USB_GetCurrentFrame
              definition:  USB_GetDevSpeed
              definition:  USB_GetHostSpeed
              definition:  USB_GetMode
              definition:  USB_HC_Halt
              definition:  USB_HC_Init
              definition:  USB_HC_ReadInterrupt
              definition:  USB_HC_StartXfer
              definition:  USB_HostInit
              definition:  USB_InitFSLSPClkSel
              definition:  USB_ReadDevAllInEpInterrupt
              definition:  USB_ReadDevAllOutEpInterrupt
              definition:  USB_ReadDevInEPInterrupt
              definition:  USB_ReadDevOutEPInterrupt
              definition:  USB_ReadInterrupts
              definition:  USB_ReadPacket
              definition:  USB_ResetPort
              definition:  USB_SetCurrentMode
              definition:  USB_SetDevAddress
              definition:  USB_SetDevSpeed
              definition:  USB_SetTurnaroundTime
              definition:  USB_StopDevice
              definition:  USB_StopHost
              definition:  USB_WritePacket
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/targets/TARGET_STM/TARGET_STM32L4/device/stm32l4xx_ll_utils.o.
              reference :  AHBPrescTable
              definition:  LL_Init1msTick
              definition:  LL_PLL_ConfigSystemClock_HSE
              definition:  LL_PLL_ConfigSystemClock_HSI
              definition:  LL_PLL_ConfigSystemClock_MSI
              definition:  LL_SetSystemCoreClock
              definition:  LL_mDelay
              reference :  MSIRangeTable
              reference :  SystemCoreClock
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/targets/TARGET_STM/TARGET_STM32L4/device/system_stm32l4xx.o.
              definition:  AHBPrescTable
              definition:  APBPrescTable
              reference :  Load$$LR$$LR_IROM1$$Base
              definition:  MSIRangeTable
              definition:  SystemCoreClock
              definition:  SystemCoreClockUpdate
              definition:  SystemInit
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/targets/TARGET_STM/TARGET_STM32L4/flash_api.o.
              reference :  HAL_FLASHEx_Erase
              reference :  HAL_FLASH_Lock
              reference :  HAL_FLASH_Program
              reference :  HAL_FLASH_Unlock
              definition:  flash_erase_sector
              definition:  flash_free
              definition:  flash_get_erase_value
              definition:  flash_get_page_size
              definition:  flash_get_sector_size
              definition:  flash_get_size
              definition:  flash_get_start_address
              definition:  flash_init
              definition:  flash_program_page
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/targets/TARGET_STM/TARGET_STM32L4/gpio_irq_device.o.
              definition:  pin_lines_desc
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/targets/TARGET_STM/TARGET_STM32L4/pwmout_device.o.
              definition:  pwm_apb_map_table
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/targets/TARGET_STM/TARGET_STM32L4/serial_device.o.
              reference :  HAL_LIN_SendBreak
              definition:  HAL_UART_ErrorCallback
              reference :  HAL_UART_GetState
              reference :  HAL_UART_IRQHandler
              reference :  HAL_UART_Receive_IT
              reference :  HAL_UART_Transmit_IT
              reference :  PinMap_UART_CTS
              reference :  PinMap_UART_RTS
              reference :  get_uart_index
              reference :  init_uart
              reference :  mbed_assert_internal
              reference :  pin_function
              reference :  pin_mode
              reference :  pinmap_find_function
              reference :  pinmap_merge
              reference :  pinmap_peripheral
              definition:  serial_break_set
              definition:  serial_clear
              definition:  serial_getc
              definition:  serial_irq_handler
              definition:  serial_irq_handler_asynch
              definition:  serial_irq_ids
              definition:  serial_irq_set
              definition:  serial_putc
              reference :  serial_readable
              definition:  serial_rx_abort_asynch
              definition:  serial_rx_active
              definition:  serial_rx_asynch
              definition:  serial_set_flow_control
              definition:  serial_tx_abort_asynch
              definition:  serial_tx_active
              definition:  serial_tx_asynch
              reference :  serial_writable
              definition:  uart_handlers
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/targets/TARGET_STM/TARGET_STM32L4/spi_api.o.
              reference :  HAL_RCC_GetPCLK1Freq
              reference :  HAL_RCC_GetPCLK2Freq
              reference :  error
              definition:  spi_get_clock_freq
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/targets/TARGET_STM/USBPhy_STM32.o.
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/targets/TARGET_STM/analogin_api.o.
              reference :  adc_read
              definition:  analogin_read
              definition:  analogin_read_u16
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/targets/TARGET_STM/analogout_api.o.
              reference :  HAL_DAC_GetValue
              reference :  HAL_DAC_SetValue
              reference :  HAL_DAC_Start
              definition:  analogout_read
              definition:  analogout_read_u16
              definition:  analogout_write
              definition:  analogout_write_u16
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/targets/TARGET_STM/can_api.o.
              definition:  CAN1_RX0_IRQHandler
              definition:  CAN1_SCE_IRQHandler
              definition:  CAN1_TX_IRQHandler
              reference :  HAL_CAN_ConfigFilter
              reference :  HAL_CAN_Init
              reference :  HAL_GetTick
              reference :  HAL_RCC_GetPCLK1Freq
              reference :  PinMap_CAN_RD
              reference :  PinMap_CAN_TD
              definition:  can_filter
              definition:  can_free
              definition:  can_frequency
              definition:  can_init
              definition:  can_init_direct
              definition:  can_init_freq
              definition:  can_irq_free
              definition:  can_irq_init
              definition:  can_irq_set
              definition:  can_mode
              definition:  can_monitor
              definition:  can_rd_pinmap
              definition:  can_rderror
              definition:  can_read
              definition:  can_reset
              definition:  can_td_pinmap
              definition:  can_tderror
              definition:  can_write
              reference :  error
              reference :  mbed_assert_internal
              reference :  pin_function
              reference :  pin_mode
              reference :  pinmap_find_function
              reference :  pinmap_merge
              reference :  pinmap_peripheral
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/targets/TARGET_STM/gpio_api.o.
              reference :  HAL_PWREx_EnableVddIO2
              definition:  Set_GPIO_Clock
              reference :  error
              definition:  gpio_dir
              definition:  gpio_init
              definition:  gpio_mode
              definition:  gpio_set
              reference :  ll_pin_defines
              reference :  mbed_assert_internal
              reference :  pin_function
              reference :  pin_mode
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/targets/TARGET_STM/gpio_irq_api.o.
              reference :  Set_GPIO_Clock
              reference :  core_util_critical_section_enter
              reference :  core_util_critical_section_exit
              reference :  error
              definition:  gpio_irq_disable
              definition:  gpio_irq_enable
              definition:  gpio_irq_free
              definition:  gpio_irq_init
              definition:  gpio_irq_set
              reference :  pin_lines_desc
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/targets/TARGET_STM/hal_tick_overrides.o.
              definition:  HAL_GetTick
              definition:  HAL_InitTick
              definition:  HAL_ResumeTick
              definition:  HAL_SuspendTick
              reference :  init_32bit_timer
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/targets/TARGET_STM/i2c_api.o.
              reference :  HAL_I2CEx_ConfigAnalogFilter
              reference :  HAL_I2CEx_EnableFastModePlus
              definition:  HAL_I2C_AbortCpltCallback
              definition:  HAL_I2C_AddrCallback
              reference :  HAL_I2C_DeInit
              reference :  HAL_I2C_DisableListen_IT
              reference :  HAL_I2C_ER_IRQHandler
              reference :  HAL_I2C_EV_IRQHandler
              reference :  HAL_I2C_EnableListen_IT
              definition:  HAL_I2C_ErrorCallback
              reference :  HAL_I2C_Init
              definition:  HAL_I2C_ListenCpltCallback
              definition:  HAL_I2C_MasterRxCpltCallback
              definition:  HAL_I2C_MasterTxCpltCallback
              reference :  HAL_I2C_Master_Abort_IT
              reference :  HAL_I2C_Master_Seq_Receive_IT
              reference :  HAL_I2C_Master_Seq_Transmit_IT
              definition:  HAL_I2C_SlaveRxCpltCallback
              definition:  HAL_I2C_SlaveTxCpltCallback
              reference :  HAL_I2C_Slave_Seq_Receive_IT
              reference :  HAL_I2C_Slave_Seq_Transmit_IT
              reference :  HAL_NVIC_DisableIRQ
              reference :  PinMap_I2C_SCL
              reference :  PinMap_I2C_SDA
              reference :  SystemCoreClock
              reference :  __aeabi_memclr4
              reference :  error
              definition:  get_i2c_obj
              definition:  i2c_abort_asynch
              definition:  i2c_active
              definition:  i2c_byte_read
              definition:  i2c_byte_write
              definition:  i2c_deinit_internal
              definition:  i2c_ev_err_disable
              definition:  i2c_ev_err_enable
              definition:  i2c_free
              definition:  i2c_frequency
              definition:  i2c_get_irq_handler
              definition:  i2c_hw_reset
              definition:  i2c_init
              definition:  i2c_init_internal
              definition:  i2c_irq_handler_asynch
              definition:  i2c_master_scl_pinmap
              definition:  i2c_master_sda_pinmap
              definition:  i2c_read
              definition:  i2c_reset
              definition:  i2c_slave_address
              definition:  i2c_slave_mode
              definition:  i2c_slave_read
              definition:  i2c_slave_receive
              definition:  i2c_slave_scl_pinmap
              definition:  i2c_slave_sda_pinmap
              definition:  i2c_slave_write
              definition:  i2c_start
              definition:  i2c_stop
              definition:  i2c_sw_reset
              definition:  i2c_transfer_asynch
              definition:  i2c_write
              reference :  mbed_assert_internal
              reference :  pin_mode
              reference :  pinmap_find_function
              reference :  pinmap_merge
              reference :  pinmap_peripheral
              reference :  pinmap_pinout
              reference :  wait_us
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/targets/TARGET_STM/lp_ticker.o.
              reference :  HAL_LPTIM_Counter_Start
              reference :  HAL_LPTIM_Init
              reference :  HAL_RCCEx_PeriphCLKConfig
              reference :  HAL_RCC_OscConfig
              definition:  LptimHandle
              reference :  __aeabi_memclr4
              reference :  core_util_critical_section_enter
              reference :  core_util_critical_section_exit
              reference :  error
              definition:  future_event_flag
              definition:  lp_Fired
              definition:  lp_cmpok
              definition:  lp_delayed_counter
              definition:  lp_delayed_prog
              definition:  lp_ticker_clear_interrupt
              definition:  lp_ticker_disable_interrupt
              definition:  lp_ticker_fire_interrupt
              definition:  lp_ticker_free
              definition:  lp_ticker_get_info
              definition:  lp_ticker_init
              reference :  lp_ticker_irq_handler
              definition:  lp_ticker_read
              definition:  lp_ticker_set_interrupt
              definition:  roll_over_flag
              reference :  sleep_manager_lock_deep_sleep_internal
              definition:  sleep_manager_locked
              reference :  sleep_manager_unlock_deep_sleep_internal
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/targets/TARGET_STM/mbed_crc_api.o.
              reference :  HAL_CRC_Accumulate
              reference :  HAL_CRC_Init
              definition:  hal_crc_compute_partial
              definition:  hal_crc_compute_partial_start
              definition:  hal_crc_get_result
              reference :  mbed_assert_internal
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/targets/TARGET_STM/mbed_overrides.o.
              reference :  HAL_Init
              reference :  SetSysClock
              reference :  SystemCoreClockUpdate
              weak defn :  TargetBSP_Init
              definition:  mbed_sdk_init
              definition:  mbed_sdk_inited
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/targets/TARGET_STM/pinmap.o.
              reference :  Set_GPIO_Clock
              definition:  ll_pin_defines
              reference :  mbed_assert_internal
              definition:  pin_function
              definition:  pin_mode
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/targets/TARGET_STM/port_api.o.
              reference :  Set_GPIO_Clock
              reference :  pin_function
              reference :  pin_mode
              definition:  port_dir
              definition:  port_init
              definition:  port_mode
              definition:  port_pin
              definition:  port_read
              definition:  port_write
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/targets/TARGET_STM/pwmout_api.o.
              reference :  HAL_RCC_GetClockConfig
              reference :  HAL_RCC_GetPCLK1Freq
              reference :  HAL_RCC_GetPCLK2Freq
              reference :  HAL_TIMEx_PWMN_Start
              reference :  HAL_TIM_PWM_ConfigChannel
              reference :  HAL_TIM_PWM_Init
              reference :  HAL_TIM_PWM_Start
              reference :  PinMap_PWM
              definition:  TIM_ChannelConvert_HAL2LL
              reference :  __aeabi_d2uiz
              reference :  __aeabi_dadd
              reference :  __aeabi_f2d
              reference :  error
              reference :  mbed_assert_internal
              reference :  pin_function
              reference :  pin_mode
              reference :  pinmap_find_function
              reference :  pinmap_peripheral
              reference :  pwm_apb_map_table
              definition:  pwmout_free
              definition:  pwmout_init
              definition:  pwmout_period
              definition:  pwmout_period_ms
              definition:  pwmout_period_us
              definition:  pwmout_pinmap
              definition:  pwmout_pulsewidth
              definition:  pwmout_pulsewidth_ms
              definition:  pwmout_pulsewidth_us
              definition:  pwmout_read
              definition:  pwmout_read_period_us
              definition:  pwmout_read_pulsewidth_us
              definition:  pwmout_write
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/targets/TARGET_STM/qspi_api.o.
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/targets/TARGET_STM/reset_reason.o.
              definition:  hal_reset_reason_clear
              definition:  hal_reset_reason_get
              definition:  hal_reset_reason_get_raw
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/targets/TARGET_STM/rtc_api.o.
              reference :  HAL_PWR_EnableBkUpAccess
              reference :  HAL_RCCEx_PeriphCLKConfig
              reference :  HAL_RCC_OscConfig
              reference :  HAL_RTCEx_EnableBypassShadow
              reference :  HAL_RTC_Init
              reference :  HAL_RTC_SetDate
              reference :  HAL_RTC_SetTime
              reference :  RTC_Bcd2ToByte
              reference :  __aeabi_memclr4
              reference :  _rtc_localtime
              reference :  _rtc_maketime
              reference :  core_util_critical_section_enter
              reference :  core_util_critical_section_exit
              reference :  error
              definition:  rtc_free
              definition:  rtc_init
              definition:  rtc_isenabled
              definition:  rtc_read
              definition:  rtc_write
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/targets/TARGET_STM/serial_api.o.
              reference :  HAL_RCCEx_PeriphCLKConfig
              reference :  HAL_RCC_OscConfig
              reference :  HAL_UARTEx_DisableClockStopMode
              reference :  HAL_UARTEx_DisableStopMode
              reference :  HAL_UARTEx_EnableClockStopMode
              reference :  HAL_UARTEx_EnableStopMode
              reference :  HAL_UART_Init
              reference :  PinMap_UART_CTS
              reference :  PinMap_UART_RTS
              reference :  PinMap_UART_RX
              reference :  PinMap_UART_TX
              reference :  __2vfprintf
              reference :  __aeabi_memclr4
              reference :  __aeabi_memcpy4
              reference :  __stderr
              reference :  _printf_int_dec
              reference :  _printf_percent
              reference :  _printf_u
              reference :  error
              definition:  get_uart_index
              definition:  init_uart
              reference :  mbed_assert_internal
              reference :  pin_function
              reference :  pin_mode
              reference :  pinmap_find_function
              reference :  pinmap_merge
              reference :  pinmap_peripheral
              reference :  pinmap_pinout
              definition:  serial_baud
              definition:  serial_break_clear
              definition:  serial_cts_pinmap
              definition:  serial_format
              definition:  serial_free
              definition:  serial_init
              reference :  serial_irq_ids
              definition:  serial_is_tx_ongoing
              definition:  serial_pinout_tx
              definition:  serial_readable
              definition:  serial_rts_pinmap
              definition:  serial_rx_pinmap
              definition:  serial_tx_pinmap
              definition:  serial_writable
              definition:  stdio_uart
              definition:  stdio_uart_inited
              reference :  uart_handlers
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/targets/TARGET_STM/sleep.o.
              reference :  HAL_PWREx_DisableLowPowerRunMode
              reference :  HAL_PWREx_EnableLowPowerRunMode
              reference :  HAL_PWREx_EnterSTOP2Mode
              reference :  HAL_PWR_EnterSLEEPMode
              reference :  HAL_RCC_ClockConfig
              reference :  HAL_RCC_GetClockConfig
              reference :  HAL_RCC_GetOscConfig
              reference :  HAL_RCC_OscConfig
              reference :  SetSysClock
              reference :  __aeabi_memclr4
              reference :  core_util_critical_section_enter
              reference :  core_util_critical_section_exit
              reference :  error
              weak defn :  hal_deepsleep
              definition:  hal_sleep
              reference :  mbed_sdk_inited
              reference :  restore_timer_ctx
              reference :  save_timer_ctx
              reference :  serial_is_tx_ongoing
              reference :  us_ticker_read
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/targets/TARGET_STM/stm_spi_api.o.
              reference :  HAL_SPIEx_FlushRxFifo
              reference :  HAL_SPI_DeInit
              reference :  HAL_SPI_GetState
              reference :  HAL_SPI_IRQHandler
              reference :  HAL_SPI_Init
              reference :  HAL_SPI_Receive
              reference :  HAL_SPI_Receive_IT
              reference :  HAL_SPI_Transmit
              reference :  HAL_SPI_TransmitReceive_IT
              reference :  HAL_SPI_Transmit_IT
              reference :  PinMap_SPI_MISO
              reference :  PinMap_SPI_MOSI
              reference :  PinMap_SPI_SCLK
              reference :  PinMap_SPI_SSEL
              reference :  __2vfprintf
              reference :  __aeabi_memset
              reference :  __stderr
              reference :  error
              definition:  init_spi
              reference :  mbed_assert_internal
              reference :  pin_function
              reference :  pin_mode
              reference :  pinmap_find_function
              reference :  pinmap_merge
              reference :  pinmap_peripheral
              definition:  spi_abort_asynch
              definition:  spi_active
              definition:  spi_busy
              definition:  spi_format
              definition:  spi_free
              definition:  spi_frequency
              definition:  spi_get_capabilities
              reference :  spi_get_clock_freq
              definition:  spi_get_peripheral_name
              definition:  spi_init
              definition:  spi_irq_handler_asynch
              definition:  spi_master_block_write
              definition:  spi_master_clk_pinmap
              definition:  spi_master_cs_pinmap
              definition:  spi_master_miso_pinmap
              definition:  spi_master_mosi_pinmap
              definition:  spi_master_transfer
              definition:  spi_master_write
              definition:  spi_slave_clk_pinmap
              definition:  spi_slave_cs_pinmap
              definition:  spi_slave_miso_pinmap
              definition:  spi_slave_mosi_pinmap
              definition:  spi_slave_read
              definition:  spi_slave_receive
              definition:  spi_slave_write
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/targets/TARGET_STM/trng_api.o.
              reference :  HAL_RCCEx_PeriphCLKConfig
              reference :  HAL_RNG_DeInit
              reference :  HAL_RNG_GenerateRandomNumber
              reference :  HAL_RNG_Init
              reference :  error
              definition:  trng_free
              definition:  trng_get_bytes
              definition:  trng_init
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/targets/TARGET_STM/us_ticker.o.
              reference :  HAL_RCC_GetClockConfig
              reference :  HAL_RCC_GetPCLK1Freq
              reference :  HAL_TIM_OC_Init
              reference :  HAL_TIM_OC_Start
              reference :  HAL_TIM_OC_Stop
              definition:  TimMasterHandle
              definition:  init_32bit_timer
              definition:  restore_timer_ctx
              definition:  save_timer_ctx
              definition:  timer_ccr1_reg
              definition:  timer_cnt_reg
              definition:  timer_dier_reg
              definition:  timer_irq_handler
              definition:  us_ticker_clear_interrupt
              definition:  us_ticker_disable_interrupt
              definition:  us_ticker_fire_interrupt
              definition:  us_ticker_free
              definition:  us_ticker_get_info
              definition:  us_ticker_init
              reference :  us_ticker_irq_handler
              definition:  us_ticker_read
              definition:  us_ticker_set_interrupt
Loading object BUILD/NUCLEO_L476RG/ARMC6/mbed-os/targets/TARGET_STM/watchdog_api.o.
              reference :  HAL_IWDG_Init
              reference :  HAL_IWDG_Refresh
              definition:  IwdgHandle
              reference :  error
              definition:  hal_watchdog_get_platform_features
              definition:  hal_watchdog_get_reload_value
              definition:  hal_watchdog_init
              definition:  hal_watchdog_kick
              definition:  hal_watchdog_stop
Add decompression support symbols.
              reference :  __decompress_flags
              weak ref  :  __decompress_sizes
Adding attributes from cpu and fpu: 

==============================================================================

Loading System Libraries.

Searching for ARM libraries in directory c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\
Searching for ARM libraries in directory c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\libcxx\
Selecting library c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l.
Selecting library c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\fz_wm.l.
Selecting library c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\h_w.l.
Selecting library c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\libcxx\libcpp-experimental_w.l.
Selecting library c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\libcxx\libcpp_w.l.
Selecting library c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\libcxx\libcppabi_w.l.
Selecting library c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\m_wm.l.
Selecting library c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\vfpsupport.l.
Selecting member rt_memclr.o(c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l) to define __aeabi_memclr.
Selecting member rt_memclr_w.o(c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l) to define __aeabi_memclr4.
Selecting member rt_memcpy_v6.o(c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l) to define __aeabi_memcpy.
Selecting member aeabi_memset4.o(c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l) to define __aeabi_memset4.
Selecting member use_no_semi_2.o(c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l) to define __use_no_semihosting.
Selecting member heapauxi.o(c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l) to define __use_two_region_memory.
Running selection script in c_w.l to resolve free.
Selecting member h1_free.o(c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l) to define free.
Selecting member free.o(c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l) to define free$generic.
Selecting member h1_free_threads.o(c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l) to define free$concurrent.
Selecting member heap2.o(c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l) to define free$realtime.
Selecting member heap2_threads.o(c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l) to define free$realtime$concurrent.
Running selection script in c_w.l to resolve malloc.
Selecting member h1_alloc.o(c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l) to define malloc.
Selecting member malloc.o(c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l) to define malloc$generic.
Selecting member h1_alloc_threads.o(c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l) to define malloc$concurrent.
Selecting member heap2.o(c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l) to define malloc$realtime.
Selecting member heap2_threads.o(c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l) to define malloc$realtime$concurrent.
Selecting member strcmpv7em.o(c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l) to define strcmp.
Selecting member strncpy.o(c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l) to define strncpy.
Selecting member rt_ctype_table.o(c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l) to define __rt_ctype_table.
Selecting member memcmp.o(c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l) to define memcmp.
Selecting member strlen.o(c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l) to define strlen.
Selecting member cxa_virtual.cpp.o(c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\libcxx\libcppabi_w.l) to define __cxa_pure_virtual.
Selecting member strchr.o(c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l) to define strchr.
Selecting member strtol.o(c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l) to define strtol.
Running selection script in c_w.l to resolve __aeabi_errno_addr.
Selecting member rt_errno_addr.o(c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l) to define __aeabi_errno_addr.
Selecting member rt_errno_addr_twolibspace.o(c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l) to define __aeabi_errno_addr$twolibspace.
Selecting member rt_errno_addr_intlibspace.o(c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l) to define __aeabi_errno_addr$intlibspace.
Selecting member rt_memmove_v6.o(c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l) to define __aeabi_memmove.
Selecting member printf_stubs.o(c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l) to define _printf_return_value.
Selecting member strcpy.o(c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l) to define strcpy.
Selecting member strncmp.o(c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l) to define strncmp.
Selecting member lludivv7m.o(c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l) to define __aeabi_uldivmod.
Selecting member printf_stubs.o(c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l) to define _printf_flags.
Selecting member _printf_pad.o(c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l) to define _printf_pre_padding.
Selecting member printf_stubs.o(c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l) to define _printf_sizespec.
Selecting member printf_stubs.o(c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l) to define _printf_widthprec.
Selecting member aeabi_memset.o(c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l) to define __aeabi_memset.
Selecting member rand.o(c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l) to define srand.
Selecting member rt_memclr_w.o(c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l) to define __aeabi_memclr8.
Selecting member stdio_streams.o(c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l) to define __stderr.
Selecting member __0sscanf.o(c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l) to define __0sscanf.
Selecting member _scanf_int.o(c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l) to define _scanf_int.
Selecting member _scanf_str.o(c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l) to define _scanf_string.
Selecting member strtoul.o(c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l) to define strtoul.
Selecting member ceilf.o(c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\m_wm.l) to define __hardfp_ceilf.
Selecting member floorf.o(c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\m_wm.l) to define __hardfp_floorf.
Selecting member rand.o(c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l) to define rand.
Selecting member atoi.o(c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l) to define atoi.
Selecting member new.cpp.o(c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\libcxx\libcpp_w.l) to define std::nothrow.
Selecting member putchar.o(c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l) to define putchar.
Running selection script in c_w.l to resolve puts.
Selecting member puts.o(c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l) to define puts.
Selecting member calloc.o(c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l) to define calloc.
Selecting member rt_memcpy_w.o(c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l) to define __aeabi_memcpy4.
Selecting member strstr.o(c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l) to define strstr.
Selecting member memset.o(c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l) to define memset.
Selecting member rt_memcpy_w.o(c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l) to define __aeabi_memcpy8.
Selecting member dfixu.o(c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\fz_wm.l) to define __aeabi_d2uiz.
Selecting member daddsub_clz.o(c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\fz_wm.l) to define __aeabi_dadd.
Selecting member dmul.o(c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\fz_wm.l) to define __aeabi_dmul.
Selecting member dflt_clz.o(c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\fz_wm.l) to define __aeabi_i2d.
Selecting member dflt_clz.o(c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\fz_wm.l) to define __aeabi_ui2d.
Selecting member llsdiv.o(c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l) to define __aeabi_ldivmod.
Selecting member assert.o(c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l) to define __aeabi_assert.
Selecting member memchr.o(c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l) to define memchr.
Selecting member ddiv.o(c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\fz_wm.l) to define __aeabi_ddiv.
Selecting member strcat.o(c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l) to define strcat.
Selecting member strcasecmp.o(c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l) to define strcasecmp.
Selecting member ffltll_clz.o(c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\fz_wm.l) to define __aeabi_l2f.
Selecting member ffltll_clz.o(c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\fz_wm.l) to define __aeabi_ul2f.
Running selection script in c_w.l to resolve fclose.
Selecting member fclose.o(c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l) to define fclose.
Selecting member fclose_locked.o(c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l) to define _fclose$locked.
Running selection script in c_w.l to resolve fopen.
Selecting member fopen.o(c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l) to define fopen.
Selecting member fopen_locked.o(c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l) to define _fopen$locked.
Running selection script in c_w.l to resolve fread.
Selecting member fread.o(c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l) to define fread.
Running selection script in c_w.l to resolve fseek.
Selecting member fseek.o(c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l) to define fseek.
Selecting member fseek_locked.o(c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l) to define _fseek$locked.
Running selection script in c_w.l to resolve ftell.
Selecting member ftell.o(c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l) to define ftell.
Selecting member ftell_locked.o(c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l) to define _ftell$locked.
Running selection script in c_w.l to resolve fwrite.
Selecting member fwrite.o(c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l) to define fwrite.
Selecting member rewind.o(c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l) to define rewind.
Selecting member strcspn.o(c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l) to define strcspn.
Selecting member strtof.o(c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\m_wm.l) to define __hardfp_strtof.
Selecting member stdio_streams.o(c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l) to define __stdout.
Running selection script in c_w.l to resolve fflush.
Selecting member fflush.o(c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l) to define fflush.
Selecting member fflush_locked.o(c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l) to define _fflush$locked.
Selecting member strtok.o(c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l) to define strtok.
Selecting member dcmp.o(c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\fz_wm.l) to define __aeabi_dcmpgt.
Selecting member dcmp.o(c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\fz_wm.l) to define __aeabi_dcmplt.
Selecting member daddsub_clz.o(c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\fz_wm.l) to define __aeabi_dsub.
Selecting member f2d.o(c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\fz_wm.l) to define __aeabi_f2d.
Selecting member setjmp.o(c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\fz_wm.l) to define setjmp.
Selecting member vsscanf.o(c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l) to define vsscanf.
Selecting member strspn.o(c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l) to define strspn.
Running selection script in c_w.l to resolve fgetc.
Selecting member fgetc.o(c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l) to define fgetc.
Selecting member fgetc_locked.o(c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l) to define _fgetc$locked.
Running selection script in c_w.l to resolve fgets.
Selecting member fgets.o(c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l) to define fgets.
Running selection script in c_w.l to resolve fputc.
Selecting member fputc.o(c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l) to define fputc.
Selecting member fputc_locked.o(c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l) to define _fputc$locked.
Running selection script in c_w.l to resolve fputs.
Selecting member fputs.o(c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l) to define fputs.
Selecting member vfscanf.o(c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l) to define vfscanf.
Selecting member libinit.o(c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l) to define $Super$$__rt_lib_init.
Selecting member setbuf.o(c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l) to define setbuf.
Selecting member localtime.o(c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l) to define localtime.
Selecting member strpbrk.o(c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l) to define strpbrk.
Selecting member rt_memmove_w.o(c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l) to define __aeabi_memmove8.
Selecting member __main.o(c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l) to define __main.
Selecting member dc.o(c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l) to define __decompress_flags.
Loading member c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l(dc.o) from c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l.
              definition:  __decompress_flags
              definition:  __decompress_sizes
Loading member c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l(use_no_semi_2.o) from c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l.
              definition:  __use_no_semihosting
              reference :  __use_no_semihosting_swi
Loading member c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l(rt_ctype_table.o) from c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l.
              definition:  __rt_ctype_table
              reference :  __rt_locale
              reference :  _get_lc_ctype
Loading member c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l(rt_errno_addr.o) from c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l.
              definition:  __aeabi_errno_addr
              definition:  __errno
              definition:  __rt_errno_addr
Loading member c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l(rt_errno_addr_intlibspace.o) from c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l.
              definition:  __aeabi_errno_addr$intlibspace
              definition:  __errno$intlibspace
              definition:  __rt_errno_addr$intlibspace
              reference :  __libspace_start
Loading member c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l(rt_errno_addr_twolibspace.o) from c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l.
              definition:  __aeabi_errno_addr$twolibspace
              definition:  __errno$twolibspace
              definition:  __rt_errno_addr$twolibspace
              reference :  __user_perthread_libspace
Loading member c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l(malloc.o) from c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l.
              definition:  malloc$generic
              reference :  __Heap_Alloc
              reference :  __heap$guard
              reference :  __rt_heap_descriptor
              reference :  _init_alloc
Loading member c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l(free.o) from c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l.
              definition:  free$generic
              reference :  __Heap_Free
              reference :  __heap$guard
              reference :  __rt_heap_descriptor
Loading member c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l(calloc.o) from c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l.
              definition:  calloc
              reference :  __aeabi_memclr
              reference :  malloc
Loading member c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l(h1_alloc.o) from c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l.
              definition:  malloc
              reference :  __Heap_Full
              reference :  __Heap_Initialize
              reference :  __rt_heap_descriptor
Loading member c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l(h1_free.o) from c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l.
              definition:  free
              reference :  __rt_heap_descriptor
Loading member c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l(h1_alloc_threads.o) from c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l.
              definition:  malloc_internal$concurrent
              definition:  malloc$concurrent
              reference :  __Heap_Full
              reference :  __Heap_Initialize
              reference :  __rt_heap_descriptor
              weak ref  :  _mutex_acquire
              weak ref  :  _mutex_release
Loading member c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l(h1_free_threads.o) from c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l.
              definition:  free_internal$concurrent
              definition:  free$concurrent
              reference :  __rt_heap_descriptor
              weak ref  :  _mutex_acquire
              weak ref  :  _mutex_release
Loading member c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l(heap2.o) from c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l.
              definition:  __Heap_DescSize$realtime
              definition:  __Heap_Finalize$realtime
              definition:  __Heap_Initialize$realtime
              definition:  __Heap_ProvideMemory$realtime
              definition:  __Heap_Stats$realtime
              definition:  __Heap_Valid$realtime
              definition:  free$realtime
              definition:  malloc$realtime
              definition:  posix_memalign$realtime
              definition:  realloc$realtime
              reference :  _FDTree_Delete
              reference :  _FDTree_FindFirst
              reference :  _FDTree_Insert
              reference :  _FDTree_RemoveNode
              reference :  __Heap_Full
              reference :  __aeabi_memcpy4
              reference :  __rt_heap_descriptor
              reference :  free
              reference :  malloc
              weak ref  :  __user_heap_extent
Loading member c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l(heap2_threads.o) from c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l.
              definition:  __Heap_DescSize$realtime$concurrent
              definition:  __Heap_Finalize$realtime$concurrent
              definition:  __Heap_Initialize$realtime$concurrent
              definition:  __Heap_ProvideMemory$realtime$concurrent
              definition:  __Heap_Stats$realtime$concurrent
              definition:  __Heap_Valid$realtime$concurrent
              definition:  free$realtime$concurrent
              definition:  malloc$realtime$concurrent
              definition:  posix_memalign$realtime$concurrent
              definition:  realloc$realtime$concurrent
              reference :  _FDTree_Delete
              reference :  _FDTree_FindFirst
              reference :  _FDTree_Insert
              reference :  _FDTree_RemoveNode
              reference :  __Heap_Full
              reference :  __aeabi_memcpy4
              reference :  __rt_heap_descriptor
              reference :  _mutex_initialize
              reference :  free
              reference :  malloc
              weak ref  :  __user_heap_extent
              weak ref  :  _mutex_acquire
              weak ref  :  _mutex_free
              weak ref  :  _mutex_release
Loading member c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l(lludivv7m.o) from c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l.
              definition:  __aeabi_uldivmod
              definition:  _ll_udiv
              reference :  __aeabi_ldiv0
Loading member c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l(llsdiv.o) from c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l.
              definition:  __aeabi_ldivmod
              definition:  _ll_sdiv
              reference :  __aeabi_ldiv0
              reference :  __aeabi_uldivmod
Loading member c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l(_printf_pad.o) from c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l.
              definition:  _printf_pre_padding
              definition:  _printf_post_padding
Loading member c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l(vfscanf.o) from c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l.
              definition:  vfscanf
              reference :  __vfscanf_char_file
              reference :  _scanf_int
              reference :  _scanf_longlong
              reference :  _scanf_mbtowc
              reference :  _scanf_real
              reference :  _scanf_string
              reference :  _scanf_wctomb
              reference :  _scanf_wstring
Loading member c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l(vsscanf.o) from c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l.
              definition:  vsscanf
              reference :  __vfscanf_char
              reference :  _sbackspace
              reference :  _scanf_int
              reference :  _scanf_longlong
              reference :  _scanf_mbtowc
              reference :  _scanf_real
              reference :  _scanf_string
              reference :  _scanf_wctomb
              reference :  _scanf_wstring
              reference :  _sgetc
Loading member c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l(__0sscanf.o) from c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l.
              definition:  __0sscanf
              reference :  __vfscanf_char
              reference :  _sbackspace
              reference :  _sgetc
Loading member c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l(_scanf_int.o) from c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l.
              definition:  _scanf_int
              reference :  _chval
Loading member c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l(_scanf_str.o) from c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l.
              definition:  _scanf_string
Loading member c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l(atoi.o) from c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l.
              definition:  atoi
              reference :  __aeabi_errno_addr
              reference :  strtol
Loading member c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l(strtol.o) from c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l.
              definition:  strtol
              reference :  __aeabi_errno_addr
              reference :  __rt_ctype_table
              reference :  _strtoul
Loading member c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l(strtoul.o) from c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l.
              definition:  strtoul
              reference :  __aeabi_errno_addr
              reference :  __rt_ctype_table
              reference :  _strtoul
Loading member c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l(fflush.o) from c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l.
              definition:  _do_fflush
              definition:  fflush
              reference :  __stdin
              reference :  _fflush
              reference :  _fseek
Loading member c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l(fgetc.o) from c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l.
              definition:  _fgetc$unlocked
              definition:  fgetc
              reference :  __filbuf_byte
Loading member c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l(fgets.o) from c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l.
              definition:  fgets
              reference :  ferror
              reference :  fgetc
Loading member c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l(fputc.o) from c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l.
              definition:  _fputc$unlocked
              definition:  fputc
              reference :  __flsbuf_byte
Loading member c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l(fputs.o) from c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l.
              definition:  fputs
              reference :  fputc
Loading member c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l(fread.o) from c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l.
              definition:  fread
              reference :  fgetc
Loading member c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l(fseek.o) from c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l.
              definition:  _fseek
              definition:  fseek
              reference :  _ftell_internal
              reference :  _seterr
              reference :  _sys_flen
              reference :  _sys_istty
Loading member c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l(ftell.o) from c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l.
              definition:  _ftell_internal
              definition:  ftell
              reference :  __aeabi_errno_addr
Loading member c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l(fwrite.o) from c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l.
              definition:  fwrite
              reference :  fputc
Loading member c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l(putchar.o) from c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l.
              definition:  putchar
              reference :  __stdout
              reference :  fputc
Loading member c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l(puts.o) from c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l.
              definition:  puts
              reference :  __stdout
              reference :  fputc
Loading member c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l(rewind.o) from c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l.
              definition:  rewind
              reference :  clearerr
              reference :  fseek
Loading member c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l(fopen.o) from c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l.
              definition:  freopen
              definition:  fopen
              reference :  __aeabi_memclr4
              reference :  __stdin
              reference :  _fclose_internal
              reference :  _fseek
              reference :  _sys_open
              reference :  malloc
Loading member c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l(setbuf.o) from c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l.
              definition:  setbuf
              reference :  setvbuf
Loading member c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l(stdio_streams.o) from c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l.
              definition:  __stderr
              definition:  __stdin
              definition:  __stdout
              definition:  __aeabi_stderr
              definition:  __aeabi_stdin
              definition:  __aeabi_stdout
              reference :  _initio
              reference :  _terminateio
Loading member c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l(fclose.o) from c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l.
              definition:  _fclose_internal
              definition:  fclose
              reference :  __aeabi_memclr4
              reference :  _fflush
              reference :  _sys_close
              reference :  free
Loading member c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l(fgetc_locked.o) from c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l.
              definition:  _fgetc$locked
              reference :  _fgetc$unlocked
              weak ref  :  _mutex_acquire
              weak ref  :  _mutex_release
Loading member c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l(fputc_locked.o) from c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l.
              definition:  _fputc$locked
              reference :  _fputc$unlocked
              weak ref  :  _mutex_acquire
              weak ref  :  _mutex_release
Loading member c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l(ftell_locked.o) from c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l.
              definition:  _ftell$locked
              reference :  _ftell_internal
              weak ref  :  _mutex_acquire
              weak ref  :  _mutex_release
Loading member c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l(fclose_locked.o) from c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l.
              definition:  _fclose$locked
              reference :  _fclose_internal
              reference :  _stream_list_lock
              weak ref  :  _mutex_acquire
              weak ref  :  _mutex_release
Loading member c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l(fseek_locked.o) from c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l.
              definition:  _fseek$locked
              reference :  _fseek
              weak ref  :  _mutex_acquire
              weak ref  :  _mutex_release
Loading member c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l(fflush_locked.o) from c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l.
              definition:  __do_fflush$locked
              definition:  _fflush$locked
              reference :  __stdin
              reference :  _do_fflush
              reference :  _fflush
              reference :  _fseek
              reference :  _stream_list_lock
              weak ref  :  _mutex_acquire
              weak ref  :  _mutex_release
Loading member c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l(fopen_locked.o) from c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l.
              definition:  _freopen$locked
              definition:  _fopen$locked
              reference :  __aeabi_memclr4
              reference :  __stdin
              reference :  _fclose_internal
              reference :  _fseek
              reference :  _mutex_initialize
              reference :  _stream_list_lock
              reference :  _sys_open
              reference :  malloc
              weak ref  :  _mutex_acquire
              weak ref  :  _mutex_release
Loading member c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l(rand.o) from c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l.
              definition:  rand
              definition:  _rand_init
              definition:  _random_number_data
              definition:  srand
              reference :  __rt_lib_init_rand_2
Loading member c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l(assert.o) from c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l.
              definition:  __aeabi_assert
              definition:  __assert
              reference :  __assert_puts
              reference :  abort
Loading member c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l(strtok.o) from c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l.
              definition:  strtok
              reference :  __strtok_internal
Loading member c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l(strchr.o) from c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l.
              definition:  strchr
Loading member c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l(strcspn.o) from c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l.
              definition:  strcspn
Loading member c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l(strpbrk.o) from c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l.
              definition:  strpbrk
Loading member c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l(strspn.o) from c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l.
              definition:  strspn
Loading member c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l(strstr.o) from c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l.
              definition:  strstr
Loading member c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l(memcmp.o) from c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l.
              definition:  memcmp
Loading member c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l(strcpy.o) from c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l.
              definition:  strcpy
Loading member c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l(strcasecmp.o) from c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l.
              definition:  strcasecmp
              reference :  tolower
Loading member c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l(strlen.o) from c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l.
              definition:  strlen
Loading member c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l(memchr.o) from c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l.
              definition:  memchr
Loading member c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l(strncmp.o) from c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l.
              definition:  strncmp
Loading member c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l(strcat.o) from c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l.
              definition:  strcat
Loading member c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l(rt_memcpy_v6.o) from c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l.
              definition:  __aeabi_memcpy
              definition:  __rt_memcpy
              definition:  _memcpy_lastbytes
              reference :  __aeabi_memcpy4
Loading member c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l(rt_memmove_v6.o) from c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l.
              definition:  __aeabi_memmove
              definition:  __rt_memmove
              definition:  __memmove_lastfew
              reference :  __aeabi_memcpy
              reference :  __memmove_aligned
Loading member c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l(rt_memcpy_w.o) from c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l.
              definition:  __aeabi_memcpy4
              definition:  __aeabi_memcpy8
              definition:  __rt_memcpy_w
              definition:  _memcpy_lastbytes_aligned
Loading member c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l(rt_memmove_w.o) from c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l.
              definition:  __aeabi_memmove4
              definition:  __aeabi_memmove8
              definition:  __rt_memmove_w
              definition:  __memmove_aligned
              definition:  __memmove_lastfew_aligned
              reference :  __aeabi_memcpy4
Loading member c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l(memset.o) from c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l.
              definition:  memset
              reference :  _memset
Loading member c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l(aeabi_memset.o) from c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l.
              definition:  __aeabi_memset
              reference :  _memset
Loading member c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l(aeabi_memset4.o) from c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l.
              definition:  __aeabi_memset4
              definition:  __aeabi_memset8
              reference :  _memset_w
Loading member c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l(rt_memclr.o) from c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l.
              definition:  __aeabi_memclr
              definition:  __rt_memclr
              definition:  _memset
              reference :  _memset_w
Loading member c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l(rt_memclr_w.o) from c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l.
              definition:  __aeabi_memclr4
              definition:  __aeabi_memclr8
              definition:  __rt_memclr_w
              definition:  _memset_w
Loading member c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l(strncpy.o) from c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l.
              definition:  strncpy
              reference :  __aeabi_memclr
Loading member c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l(strcmpv7em.o) from c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l.
              definition:  strcmp
Loading member c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l(localtime.o) from c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l.
              definition:  localtime
              reference :  _localtime_r
Loading member c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l(heapauxi.o) from c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l.
              definition:  __use_two_region_memory
              definition:  __rt_heap_escrow$2region
              definition:  __rt_heap_expand$2region
Loading member c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l(libinit.o) from c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l.
              definition:  __rt_lib_init
              reference :  __rt_lib_init_alloca_1
              reference :  __rt_lib_init_argv_1
              reference :  __rt_lib_init_atexit_1
              reference :  __rt_lib_init_clock_1
              reference :  __rt_lib_init_cpp_1
              reference :  __rt_lib_init_exceptions_1
              reference :  __rt_lib_init_fp_1
              reference :  __rt_lib_init_fp_trap_1
              reference :  __rt_lib_init_getenv_1
              reference :  __rt_lib_init_heap_1
              reference :  __rt_lib_init_lc_collate_1
              reference :  __rt_lib_init_lc_ctype_1
              reference :  __rt_lib_init_lc_monetary_1
              reference :  __rt_lib_init_lc_numeric_1
              reference :  __rt_lib_init_lc_time_1
              reference :  __rt_lib_init_preinit_1
              reference :  __rt_lib_init_rand_1
              reference :  __rt_lib_init_return
              reference :  __rt_lib_init_signal_1
              reference :  __rt_lib_init_stdio_1
              reference :  __rt_lib_init_user_alloc_1
Loading member c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l(__main.o) from c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l.
              definition:  __main
              reference :  __rt_entry
              weak ref  :  __scatterload
Loading member c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l(printf_stubs.o) from c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l.
              definition:  _printf_flags
              definition:  _printf_return_value
              definition:  _printf_sizespec
              definition:  _printf_widthprec
Loading member c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\fz_wm.l(daddsub_clz.o) from c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\fz_wm.l.
              definition:  __aeabi_dadd
              definition:  _dadd
              definition:  __aeabi_drsub
              definition:  _drsb
              definition:  __aeabi_dsub
              definition:  _dsub
              reference :  __I$use$fp
              reference :  __fpl_dnaninf
              reference :  __fpl_dretinf
Loading member c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\fz_wm.l(dcmp.o) from c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\fz_wm.l.
              definition:  __aeabi_dcmpeq
              definition:  _deq
              definition:  _dneq
              definition:  __aeabi_dcmpgt
              definition:  _dgr
              definition:  __aeabi_dcmpge
              definition:  _dgeq
              definition:  __aeabi_dcmple
              definition:  _dleq
              definition:  __aeabi_dcmplt
              definition:  _dls
              reference :  __I$use$fp
              reference :  _dcmpeq
              reference :  _dcmpge
              reference :  _dcmple
Loading member c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\fz_wm.l(ddiv.o) from c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\fz_wm.l.
              definition:  __aeabi_ddiv
              definition:  _ddiv
              definition:  _drdiv
              reference :  __I$use$fp
              reference :  __fpl_dnaninf
              reference :  __fpl_dretinf
Loading member c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\fz_wm.l(dfixu.o) from c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\fz_wm.l.
              definition:  __aeabi_d2uiz
              definition:  _dfixu
              definition:  _dfixu_r
              reference :  __I$use$fp
              reference :  __fpl_dnaninf
Loading member c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\fz_wm.l(dflt_clz.o) from c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\fz_wm.l.
              definition:  __aeabi_i2d
              definition:  _dflt
              definition:  __dflt_normalise
              definition:  __aeabi_ui2d
              definition:  _dfltu
              reference :  __I$use$fp
Loading member c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\fz_wm.l(dmul.o) from c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\fz_wm.l.
              definition:  __aeabi_dmul
              definition:  _dmul
              reference :  __I$use$fp
              reference :  __fpl_dnaninf
              reference :  __fpl_dretinf
Loading member c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\fz_wm.l(f2d.o) from c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\fz_wm.l.
              definition:  __aeabi_f2d
              definition:  _f2d
              reference :  __I$use$fp
              reference :  __fpl_dretinf
              reference :  __fpl_fnaninf
Loading member c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\fz_wm.l(ffltll_clz.o) from c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\fz_wm.l.
              definition:  __aeabi_ul2f
              definition:  _ll_uto_f
              definition:  __aeabi_l2f
              definition:  _ll_sto_f
              reference :  __I$use$fp
Loading member c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\fz_wm.l(setjmp.o) from c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\fz_wm.l.
              definition:  setjmp
              definition:  longjmp
              weak ref  :  __alloca_longjmp
              weak ref  :  __alloca_setjmp
Loading member c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\libcxx\libcpp_w.l(new.cpp.o) from c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\libcxx\libcpp_w.l.
              definition:  std::nothrow
              definition:  std::__throw_bad_alloc()
              reference :  std::get_new_handler()
              reference :  abort
              reference :  free
              reference :  malloc
              reference :  posix_memalign
              weak defn :  operator delete[] (void*)
              weak defn :  operator delete[] (void*, const std::nothrow_t&)
              weak defn :  operator delete[] (void*, std::align_val_t)
              weak defn :  operator delete[] (void*, std::align_val_t, const std::nothrow_t&)
              weak defn :  operator delete[] (void*, unsigned)
              weak defn :  operator delete[] (void*, unsigned, std::align_val_t)
              weak defn :  operator delete (void*)
              weak defn :  operator delete (void*, const std::nothrow_t&)
              weak defn :  operator delete (void*, std::align_val_t)
              weak defn :  operator delete (void*, std::align_val_t, const std::nothrow_t&)
              weak defn :  operator delete (void*, unsigned)
              weak defn :  operator delete (void*, unsigned, std::align_val_t)
              weak defn :  operator new[] (unsigned)
              weak defn :  operator new[] (unsigned, const std::nothrow_t&)
              weak defn :  operator new[] (unsigned, std::align_val_t)
              weak defn :  operator new[] (unsigned, std::align_val_t, const std::nothrow_t&)
              weak defn :  operator new(unsigned)
              weak defn :  operator new(unsigned, const std::nothrow_t&)
              weak defn :  operator new(unsigned, std::align_val_t)
              weak defn :  operator new(unsigned, std::align_val_t, const std::nothrow_t&)
Loading member c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\libcxx\libcppabi_w.l(cxa_virtual.cpp.o) from c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\libcxx\libcppabi_w.l.
              definition:  __cxa_deleted_virtual
              definition:  __cxa_pure_virtual
              reference :  abort_message
Loading member c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\m_wm.l(ceilf.o) from c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\m_wm.l.
              definition:  __hardfp_ceilf
              definition:  __mathlib_ceilf
              definition:  __softfp_ceilf
              definition:  ceilf
              reference :  __I$use$fp
Loading member c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\m_wm.l(floorf.o) from c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\m_wm.l.
              definition:  __hardfp_floorf
              definition:  __softfp_floorf
              definition:  floorf
              reference :  __I$use$fp
Loading member c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\m_wm.l(strtof.o) from c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\m_wm.l.
              definition:  __hardfp_strtof
              definition:  __softfp_strtof
              definition:  strtof
              reference :  __I$use$fp
              reference :  __strtof_int
Running selection script in c_w.l to resolve free.
Running selection script in c_w.l to resolve malloc.
Running selection script in c_w.l to resolve __aeabi_errno_addr.
Running selection script in c_w.l to resolve fseek.
Running selection script in c_w.l to resolve fgetc.
Running selection script in c_w.l to resolve fputc.
Running selection script in c_w.l to resolve __use_no_semihosting_swi.
Selecting member use_no_semi.o(c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l) to define __use_no_semihosting_swi.
Running selection script in c_w.l to resolve __rt_locale.
Selecting member rt_locale.o(c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l) to define __rt_locale.
Selecting member rt_locale_twolibspace.o(c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l) to define __rt_locale$twolibspace.
Selecting member rt_locale_intlibspace.o(c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l) to define __rt_locale$intlibspace.
Running selection script in c_w.l to resolve _get_lc_ctype.
Selecting member lc_ctype_c.o(c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l) to define _get_lc_ctype.
Selecting member libspace.o(c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l) to define __libspace_start.
Selecting member heapstubs.o(c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l) to define __Heap_Alloc.
Running selection script in c_w.l to resolve __heap$guard.
Selecting member hguard.o(c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l) to define __use_no_heap.
Running selection script in c_w.l to resolve __rt_heap_descriptor.
Selecting member rt_heap_descriptor.o(c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l) to define __rt_heap_descriptor.
Selecting member rt_heap_descriptor_twolibspace.o(c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l) to define __rt_heap_descriptor$twolibspace.
Selecting member rt_heap_descriptor_intlibspace.o(c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l) to define __rt_heap_descriptor$intlibspace.
Running selection script in c_w.l to resolve _init_alloc.
Selecting member init_alloc.o(c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l) to define _init_alloc.
Selecting member libinit2.o(c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l) to define __rt_lib_init_argv_1.
Selecting member _get_argv.o(c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l) to define __ARM_get_argv.
Selecting member heapstubs.o(c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l) to define __Heap_Free.
Selecting member init_alloc.o(c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l) to define __Heap_Full.
Running selection script in c_w.l to resolve __Heap_Initialize.
Selecting member h1_init.o(c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l) to define __Heap_Initialize.
Selecting member h1_init_threads.o(c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l) to define __Heap_Initialize$concurrent.
Selecting member fdtree.o(c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l) to define _FDTree_Delete.
Selecting member fdtree.o(c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l) to define _FDTree_FindFirst.
Selecting member fdtree.o(c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l) to define _FDTree_Insert.
Selecting member fdtree.o(c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l) to define _FDTree_RemoveNode.
Running selection script in c_w.l to resolve __aeabi_ldiv0.
Selecting member aeabi_ldiv0.o(c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l) to define __aeabi_ldiv0.
Selecting member aeabi_ldiv0_sigfpe.o(c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l) to define __aeabi_ldiv0$sigfpe.
Running selection script in c_w.l to resolve __vfscanf_char_file.
Selecting member scanf_char_file.o(c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l) to define __vfscanf_char_file.
Selecting member _scanf_longlong.o(c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l) to define _scanf_longlong.
Selecting member scanf1.o(c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\fz_wm.l) to define _scanf_real.
Selecting member _scanf_wctomb.o(c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l) to define _scanf_wctomb.
Selecting member _scanf_wstr.o(c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l) to define _scanf_wstring.
Selecting member scanf_char.o(c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l) to define __vfscanf_char.
Selecting member _sgetc.o(c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l) to define _sbackspace.
Selecting member _sgetc.o(c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l) to define _sgetc.
Selecting member _chval.o(c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l) to define _chval.
Selecting member _strtoul.o(c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l) to define _strtoul.
Selecting member stdio.o(c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l) to define _fflush.
Running selection script in c_w.l to resolve __filbuf_byte.
Selecting member filbuf.o(c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l) to define __filbuf_byte.
Selecting member filbuf_fwide.o(c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l) to define __filbuf_byte$fwide.
Running selection script in c_w.l to resolve ferror.
Selecting member ferror.o(c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l) to define ferror.
Selecting member ferror_locked.o(c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l) to define _ferror$locked.
Running selection script in c_w.l to resolve __flsbuf_byte.
Selecting member flsbuf.o(c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l) to define __flsbuf_byte.
Selecting member flsbuf_fwide.o(c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l) to define __flsbuf_byte$fwide.
Selecting member stdio.o(c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l) to define _seterr.
Running selection script in c_w.l to resolve clearerr.
Selecting member clearerr.o(c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l) to define clearerr.
Selecting member clearerr_locked.o(c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l) to define _clearerr$locked.
Running selection script in c_w.l to resolve _fclose_internal.
Running selection script in c_w.l to resolve setvbuf.
Selecting member setvbuf.o(c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l) to define setvbuf.
Selecting member setvbuf_locked.o(c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l) to define _setvbuf$locked.
Running selection script in c_w.l to resolve _initio.
Selecting member initio.o(c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l) to define _initio.
Selecting member initio_locked.o(c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l) to define __initio$locked.
Running selection script in c_w.l to resolve _terminateio.
Selecting member initio.o(c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l) to define _terminateio.
Selecting member initio_locked.o(c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l) to define __terminateio$locked.
Selecting member streamlock.o(c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l) to define _stream_list_lock.
Running selection script in c_w.l to resolve _do_fflush.
Selecting member libinit2.o(c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l) to define __rt_lib_init_rand_2.
Running selection script in c_w.l to resolve __assert_puts.
Selecting member assert_puts.o(c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l) to define __assert_puts.
Selecting member abort.o(c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l) to define abort.
Selecting member strtok_int.o(c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l) to define __strtok_internal.
Selecting member tolower.o(c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l) to define tolower.
Selecting member localtime_internal.o(c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l) to define _localtime_r.
Running selection script in c_w.l to resolve __rt_lib_init_alloca_1.
Selecting member libinit2.o(c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l) to define __rt_lib_init_alloca_1.
Selecting member libinit2.o(c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l) to define __rt_lib_init_alloca_2.
Running selection script in c_w.l to resolve __rt_lib_init_argv_1.
Selecting member libinit2.o(c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l) to define __rt_lib_init_argv_1$b.
Selecting member libinit5.o(c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l) to define __rt_lib_init_argv_1$b$tworegion.
Selecting member libinit2.o(c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l) to define __rt_lib_init_argv_2.
Running selection script in c_w.l to resolve __rt_lib_init_atexit_1.
Selecting member libinit2.o(c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l) to define __rt_lib_init_atexit_1.
Selecting member libinit2.o(c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l) to define __rt_lib_init_atexit_2.
Running selection script in c_w.l to resolve __rt_lib_init_clock_1.
Selecting member libinit2.o(c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l) to define __rt_lib_init_clock_1.
Selecting member libinit2.o(c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l) to define __rt_lib_init_clock_2.
Running selection script in c_w.l to resolve __rt_lib_init_cpp_1.
Selecting member libinit2.o(c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l) to define __rt_lib_init_cpp_1.
Selecting member libinit2.o(c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l) to define __rt_lib_init_cpp_2.
Running selection script in c_w.l to resolve __rt_lib_init_exceptions_1.
Selecting member libinit2.o(c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l) to define __rt_lib_init_exceptions_1.
Selecting member libinit2.o(c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l) to define __rt_lib_init_exceptions_2.
Running selection script in c_w.l to resolve __rt_lib_init_fp_1.
Selecting member libinit2.o(c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l) to define __rt_lib_init_fp_1.
Selecting member libinit2.o(c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l) to define __rt_lib_init_fp_2.
Running selection script in c_w.l to resolve __rt_lib_init_fp_trap_1.
Selecting member libinit2.o(c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l) to define __rt_lib_init_fp_trap_1.
Selecting member libinit2.o(c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l) to define __rt_lib_init_fp_trap_2.
Running selection script in c_w.l to resolve __rt_lib_init_getenv_1.
Selecting member libinit2.o(c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l) to define __rt_lib_init_getenv_1.
Selecting member libinit2.o(c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l) to define __rt_lib_init_getenv_2.
Running selection script in c_w.l to resolve __rt_lib_init_heap_1.
Selecting member libinit2.o(c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l) to define __rt_lib_init_heap_1.
Selecting member libinit2.o(c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l) to define __rt_lib_init_heap_2.
Selecting member libinit5.o(c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l) to define __rt_lib_init_heap_1$b$tworegion.
Running selection script in c_w.l to resolve __rt_lib_init_lc_collate_1.
Selecting member libinit2.o(c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l) to define __rt_lib_init_lc_collate_1.
Selecting member libinit2.o(c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l) to define __rt_lib_init_lc_collate_2.
Running selection script in c_w.l to resolve __rt_lib_init_lc_ctype_1.
Selecting member libinit2.o(c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l) to define __rt_lib_init_lc_ctype_1.
Selecting member libinit2.o(c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l) to define __rt_lib_init_lc_ctype_2.
Running selection script in c_w.l to resolve __rt_lib_init_lc_monetary_1.
Selecting member libinit2.o(c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l) to define __rt_lib_init_lc_monetary_1.
Selecting member libinit2.o(c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l) to define __rt_lib_init_lc_monetary_2.
Running selection script in c_w.l to resolve __rt_lib_init_lc_numeric_1.
Selecting member libinit2.o(c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l) to define __rt_lib_init_lc_numeric_1.
Selecting member libinit2.o(c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l) to define __rt_lib_init_lc_numeric_2.
Running selection script in c_w.l to resolve __rt_lib_init_lc_time_1.
Selecting member libinit2.o(c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l) to define __rt_lib_init_lc_time_1.
Selecting member libinit2.o(c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l) to define __rt_lib_init_lc_time_2.
Running selection script in c_w.l to resolve __rt_lib_init_preinit_1.
Selecting member libinit2.o(c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l) to define __rt_lib_init_preinit_1.
Selecting member libinit2.o(c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l) to define __rt_lib_init_preinit_2.
Running selection script in c_w.l to resolve __rt_lib_init_rand_1.
Selecting member libinit2.o(c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l) to define __rt_lib_init_rand_1.
Selecting member libinit2.o(c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l) to define __rt_lib_init_rand_2.
Selecting member libinit2.o(c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l) to define __rt_lib_init_return.
Running selection script in c_w.l to resolve __rt_lib_init_signal_1.
Selecting member libinit2.o(c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l) to define __rt_lib_init_signal_1.
Selecting member libinit2.o(c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l) to define __rt_lib_init_signal_2.
Running selection script in c_w.l to resolve __rt_lib_init_stdio_1.
Selecting member libinit2.o(c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l) to define __rt_lib_init_stdio_1.
Selecting member libinit2.o(c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l) to define __rt_lib_init_stdio_2.
Running selection script in c_w.l to resolve __rt_lib_init_user_alloc_1.
Selecting member libinit2.o(c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l) to define __rt_lib_init_user_alloc_1.
Selecting member libinit2.o(c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l) to define __rt_lib_init_user_alloc_2.
Selecting member usenofp.o(c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\fz_wm.l) to define __I$use$fp.
Selecting member dnaninf.o(c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\fz_wm.l) to define __fpl_dnaninf.
Selecting member dretinf.o(c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\fz_wm.l) to define __fpl_dretinf.
Selecting member deqf.o(c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\fz_wm.l) to define _dcmpeq.
Selecting member dgeqf.o(c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\fz_wm.l) to define _dcmpge.
Selecting member dleqf.o(c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\fz_wm.l) to define _dcmple.
Selecting member fnaninf.o(c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\fz_wm.l) to define __fpl_fnaninf.
Selecting member cxa_handlers.cpp.o(c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\libcxx\libcppabi_w.l) to define std::get_new_handler().
Running selection script in c_w.l to resolve posix_memalign.
Selecting member h1_memalign.o(c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l) to define posix_memalign.
Selecting member h1_memalign_threads.o(c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l) to define posix_memalign$concurrent.
Selecting member abort_message.cpp.o(c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\libcxx\libcppabi_w.l) to define abort_message.
Selecting member strtof.o(c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l) to define __strtof_int.
Loading member c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l(libspace.o) from c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l.
              definition:  __libspace_start
              definition:  __temporary_stack_top$libspace
              weak defn :  __user_libspace
              weak defn :  __user_perproc_libspace
              weak defn :  __user_perthread_libspace
Loading member c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l(use_no_semi.o) from c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l.
              definition:  __semihosting$guard
              definition:  __use_no_semihosting_swi
Loading member c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l(aeabi_ldiv0.o) from c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l.
              definition:  __aeabi_ldiv0
Loading member c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l(aeabi_ldiv0_sigfpe.o) from c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l.
              definition:  __aeabi_ldiv0$sigfpe
              reference :  __rt_div0
Loading member c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l(rt_heap_descriptor.o) from c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l.
              definition:  __rt_heap_descriptor
Loading member c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l(rt_heap_descriptor_intlibspace.o) from c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l.
              definition:  __rt_heap_descriptor$intlibspace
              reference :  __libspace_start
Loading member c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l(rt_heap_descriptor_twolibspace.o) from c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l.
              definition:  __rt_heap_descriptor$twolibspace
              reference :  __user_perproc_libspace
Loading member c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l(rt_locale.o) from c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l.
              definition:  __rt_locale
Loading member c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l(rt_locale_intlibspace.o) from c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l.
              definition:  __rt_locale$intlibspace
              reference :  __libspace_start
Loading member c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l(rt_locale_twolibspace.o) from c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l.
              definition:  __rt_locale$twolibspace
              reference :  __user_perproc_libspace
Loading member c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l(hguard.o) from c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l.
              definition:  __use_no_heap
              definition:  __I$use$heap
Loading member c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l(init_alloc.o) from c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l.
              definition:  _terminate_user_alloc
              definition:  _init_user_alloc
              definition:  __Heap_Full
              definition:  __Heap_Broken
              definition:  _init_alloc
              reference :  __Heap_DescSize
              reference :  __Heap_Initialize
              reference :  __Heap_ProvideMemory
              reference :  __heap$guard
              reference :  __rt_SIGRTMEM
              reference :  __rt_heap_descriptor
              reference :  __rt_heap_escrow
              reference :  __rt_heap_expand
              reference :  __rt_lib_init_heap_2
              reference :  _maybe_terminate_alloc
Loading member c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l(heapstubs.o) from c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l.
              definition:  __Heap_Alloc
              definition:  __Heap_Free
              definition:  __Heap_Realloc
Loading member c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l(h1_init.o) from c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l.
              definition:  __Heap_Initialize
              definition:  __Heap_DescSize
Loading member c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l(h1_memalign.o) from c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l.
              definition:  posix_memalign
              reference :  __Heap_Full
              reference :  __Heap_Initialize
              reference :  __rt_heap_descriptor
Loading member c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l(h1_init_threads.o) from c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l.
              definition:  __Heap_Initialize$concurrent
              definition:  __Heap_DescSize$concurrent
              reference :  _mutex_initialize
Loading member c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l(h1_memalign_threads.o) from c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l.
              definition:  posix_memalign$concurrent
              reference :  __Heap_Full
              reference :  __Heap_Initialize
              reference :  __rt_heap_descriptor
              weak ref  :  _mutex_acquire
              weak ref  :  _mutex_release
Loading member c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l(fdtree.o) from c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l.
              definition:  _FDTree_Delete
              definition:  _FDTree_FindFirst
              definition:  _FDTree_Insert
              definition:  _FDTree_RemoveNode
Loading member c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l(tolower.o) from c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l.
              definition:  tolower
              reference :  __rt_ctype_table
Loading member c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l(_chval.o) from c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l.
              definition:  _chval
Loading member c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l(_scanf_longlong.o) from c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l.
              definition:  _scanf_longlong
              reference :  _chval
Loading member c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l(scanf_char.o) from c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l.
              definition:  __vfscanf_char
              reference :  __vfscanf
              reference :  isspace
Loading member c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l(_sgetc.o) from c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l.
              definition:  _sgetc
              definition:  _sbackspace
Loading member c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l(scanf_char_file.o) from c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l.
              definition:  __vfscanf_char_file
              reference :  __backspace
              reference :  __vfscanf_char
              reference :  fgetc
Loading member c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l(_strtoul.o) from c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l.
              definition:  _strtoul
              reference :  __aeabi_errno_addr
              reference :  _chval
Loading member c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l(strtof.o) from c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l.
              definition:  __strtof_int
              reference :  __strtod_int
Loading member c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l(_scanf_wctomb.o) from c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l.
              definition:  _scanf_wctomb
              reference :  _scanf_wcharmap
              reference :  _wcrtomb
Loading member c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l(_scanf_wstr.o) from c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l.
              definition:  _scanf_wstring
              reference :  _scanf_wcharmap
Loading member c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l(clearerr.o) from c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l.
              definition:  clearerr
Loading member c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l(ferror.o) from c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l.
              definition:  ferror
Loading member c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l(filbuf.o) from c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l.
              definition:  _readbuf
              definition:  _seteof
              definition:  __filbuf
              definition:  __filbuf_byte
              definition:  __filbuf_wide
              reference :  _deferredlazyseek
              reference :  _fflush
              reference :  _flushlinebuffered
              reference :  _seterr
              reference :  _sys_read
              reference :  _sys_seek
              reference :  malloc
Loading member c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l(flsbuf.o) from c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l.
              definition:  __flsbuf
              definition:  __flsbuf_byte
              definition:  __flsbuf_wide
              reference :  _deferredlazyseek
              reference :  _seterr
              reference :  _sys_flen
              reference :  _sys_istty
              reference :  _writebuf
              reference :  malloc
Loading member c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l(setvbuf.o) from c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l.
              definition:  setvbuf
Loading member c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l(stdio.o) from c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l.
              definition:  _seterr
              definition:  _writebuf
              definition:  _fflush
              definition:  _deferredlazyseek
              reference :  _sys_seek
              reference :  _sys_write
Loading member c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l(streamlock.o) from c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l.
              definition:  _stream_list_lock
              reference :  _initio
              reference :  _terminateio
Loading member c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l(initio.o) from c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l.
              definition:  _initio
              definition:  _terminateio
              reference :  __aeabi_memclr4
              reference :  __aeabi_stderr
              reference :  __aeabi_stdin
              reference :  __aeabi_stdout
              reference :  __rt_SIGRTRED
              reference :  __rt_lib_init_stdio_2
              reference :  __rt_lib_shutdown_stdio_2
              reference :  __stderr
              reference :  __stderr_name
              reference :  __stdin
              reference :  __stdin_name
              reference :  __stdout
              reference :  __stdout_name
              reference :  _fclose_internal
              reference :  free
              reference :  freopen
              reference :  setvbuf
Loading member c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l(clearerr_locked.o) from c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l.
              definition:  _clearerr$locked
              weak ref  :  _mutex_acquire
              weak ref  :  _mutex_release
Loading member c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l(ferror_locked.o) from c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l.
              definition:  _ferror$locked
              weak ref  :  _mutex_acquire
              weak ref  :  _mutex_release
Loading member c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l(setvbuf_locked.o) from c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l.
              definition:  _setvbuf$locked
              weak ref  :  _mutex_acquire
              weak ref  :  _mutex_release
Loading member c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l(initio_locked.o) from c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l.
              definition:  __initio$locked
              definition:  __terminateio$locked
              reference :  __aeabi_memclr4
              reference :  __aeabi_stderr
              reference :  __aeabi_stdin
              reference :  __aeabi_stdout
              reference :  __rt_SIGRTRED
              reference :  __rt_lib_init_stdio_2
              reference :  __rt_lib_shutdown_stdio_2
              reference :  __stderr
              reference :  __stderr_name
              reference :  __stdin
              reference :  __stdin_name
              reference :  __stdout
              reference :  __stdout_name
              reference :  _fclose_internal
              reference :  _mutex_initialize
              reference :  _stream_list_lock
              reference :  free
              reference :  freopen
              reference :  setvbuf
              weak ref  :  _mutex_acquire
              weak ref  :  _mutex_free
              weak ref  :  _mutex_release
Loading member c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l(lc_ctype_c.o) from c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l.
              definition:  _get_lc_ctype
              definition:  __ctype
              reference :  __rt_lib_init_lc_ctype_2
              reference :  strcmp
Loading member c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l(abort.o) from c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l.
              definition:  abort
              reference :  __rt_SIGABRT
              reference :  _sys_exit
              weak ref  :  __rt_lib_shutdown
Loading member c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l(assert_puts.o) from c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l.
              definition:  __assert_puts
              reference :  _ttywrch
Loading member c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l(strtok_int.o) from c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l.
              definition:  __strtok_internal
              reference :  strcspn
              reference :  strspn
Loading member c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l(localtime_internal.o) from c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l.
              definition:  _localtime_r
              definition:  _n$localtime_r
              reference :  __aeabi_memclr4
              reference :  _monlen
Loading member c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l(_get_argv.o) from c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l.
              definition:  __ARM_get_argv
              reference :  __heap_region$guard
              reference :  __rt_SIGRTMEM
              reference :  _sys_command_string
              reference :  malloc
              weak ref  :  _handle_redirection
Loading member c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l(libinit2.o) from c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l.
              definition:  __rt_lib_init_fp_1
              definition:  __rt_lib_init_fp_2
              definition:  __rt_lib_init_preinit_1
              definition:  __rt_lib_init_preinit_2
              definition:  __rt_lib_init_heap_1
              definition:  __rt_lib_init_heap_1$b$error
              definition:  __rt_lib_init_heap_error
              definition:  __rt_lib_init_heap_2
              definition:  __rt_lib_init_user_alloc_1
              definition:  __rt_lib_init_user_alloc_2
              definition:  __rt_lib_init_rand_1
              definition:  __rt_lib_init_rand_2
              definition:  __rt_lib_init_lc_common
              definition:  __rt_lib_init_lc_collate_1
              definition:  __rt_lib_init_lc_collate_2
              definition:  __rt_lib_init_lc_ctype_1
              definition:  __rt_lib_init_lc_ctype_2
              definition:  __rt_lib_init_lc_monetary_1
              definition:  __rt_lib_init_lc_monetary_2
              definition:  __rt_lib_init_lc_numeric_1
              definition:  __rt_lib_init_lc_numeric_2
              definition:  __rt_lib_init_lc_time_1
              definition:  __rt_lib_init_lc_time_2
              definition:  __rt_lib_init_atexit_1
              definition:  __rt_lib_init_atexit_2
              definition:  __rt_lib_init_signal_1
              definition:  __rt_lib_init_signal_2
              definition:  __rt_lib_init_fp_trap_1
              definition:  __rt_lib_init_fp_trap_2
              definition:  __rt_lib_init_clock_1
              definition:  __rt_lib_init_clock_2
              definition:  __rt_lib_init_getenv_1
              definition:  __rt_lib_init_getenv_2
              definition:  __rt_lib_init_stdio_1
              definition:  __rt_lib_init_stdio_2
              definition:  __rt_lib_init_argv_1
              definition:  __rt_lib_init_argv_1$b
              definition:  __rt_lib_init_heapregion_libspace_used
              definition:  __rt_lib_init_argv_1$b$error
              definition:  __rt_lib_init_heapregion_error
              definition:  __rt_lib_init_argv_2
              definition:  __rt_lib_init_alloca_1
              definition:  __rt_lib_init_alloca_2
              definition:  __rt_lib_init_exceptions_1
              definition:  __rt_lib_init_exceptions_2
              definition:  __rt_lib_init_cpp_1
              definition:  __rt_lib_init_cpp_2
              definition:  __rt_lib_init_return
              reference :  __ARM_argv_veneer
              reference :  _fp_init
              weak ref  :  __ARM_exceptions_init
              weak ref  :  __alloca_initialize
              weak ref  :  __arm_preinit_
              weak ref  :  __cpp_initialize__aeabi_
              weak ref  :  __rt_locale
              weak ref  :  _atexit_init
              weak ref  :  _clock_init
              weak ref  :  _fp_trap_init
              weak ref  :  _get_lc_collate
              weak ref  :  _get_lc_ctype
              weak ref  :  _get_lc_monetary
              weak ref  :  _get_lc_numeric
              weak ref  :  _get_lc_time
              weak ref  :  _getenv_init
              weak ref  :  _init_alloc
              weak ref  :  _init_user_alloc
              weak ref  :  _initio
              weak ref  :  _rand_init
              weak ref  :  _signal_init
Loading member c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l(libinit5.o) from c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l.
              definition:  __rt_lib_init_heap_1$b$tworegion
              definition:  __rt_lib_init_argv_1$b$tworegion
              reference :  Image$$ARM_LIB_HEAP$$ZI$$Base
              reference :  Image$$ARM_LIB_HEAP$$ZI$$Limit
              reference :  __ARM_argv_veneer
              weak ref  :  _init_alloc
Loading member c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l(filbuf_fwide.o) from c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l.
              definition:  __filbuf_wide$fwide
              definition:  __filbuf_byte$fwide
              reference :  __filbuf
Loading member c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l(flsbuf_fwide.o) from c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l.
              definition:  __flsbuf_wide$fwide
              definition:  __flsbuf_byte$fwide
              reference :  __flsbuf
Loading member c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\fz_wm.l(deqf.o) from c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\fz_wm.l.
              definition:  __aeabi_cdcmpeq
              definition:  _dcmpeq
              reference :  __I$use$fp
              reference :  __fpl_dcmp_Inf
              reference :  __fpl_dnaninf
Loading member c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\fz_wm.l(dgeqf.o) from c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\fz_wm.l.
              definition:  __aeabi_cdcmpge
              definition:  _dcmpge
              reference :  __I$use$fp
              reference :  __fpl_dcmp_Inf
              reference :  __fpl_dnaninf
Loading member c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\fz_wm.l(dleqf.o) from c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\fz_wm.l.
              definition:  __aeabi_cdcmple
              definition:  _dcmple
              definition:  __fpl_dcmple_InfNaN
              reference :  __I$use$fp
              reference :  __fpl_dcmp_Inf
              reference :  __fpl_dnaninf
Loading member c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\fz_wm.l(dnaninf.o) from c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\fz_wm.l.
              definition:  __fpl_dnaninf
              reference :  __I$use$fp
Loading member c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\fz_wm.l(dretinf.o) from c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\fz_wm.l.
              definition:  __fpl_dretinf
              reference :  __I$use$fp
Loading member c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\fz_wm.l(fnaninf.o) from c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\fz_wm.l.
              definition:  __fpl_fnaninf
              reference :  __I$use$fp
Loading member c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\fz_wm.l(scanf1.o) from c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\fz_wm.l.
              definition:  _scanf_real
              reference :  _scanf_really_real
Loading member c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\fz_wm.l(usenofp.o) from c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\fz_wm.l.
              definition:  __I$use$fp
Loading member c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\libcxx\libcppabi_w.l(abort_message.cpp.o) from c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\libcxx\libcppabi_w.l.
              definition:  abort_message
              reference :  abort
Loading member c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\libcxx\libcppabi_w.l(cxa_handlers.cpp.o) from c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\libcxx\libcppabi_w.l.
              definition:  __cxa_new_handler
              definition:  std::unexpected()
              definition:  std::__terminate(void(*)())
              definition:  std::__unexpected(void(*)())
              definition:  std::get_terminate()
              definition:  std::get_unexpected()
              definition:  std::get_new_handler()
              definition:  std::set_new_handler(void(*)())
              definition:  std::terminate()
              reference :  __cxa_terminate_handler
              reference :  __cxa_unexpected_handler
              reference :  abort_message
Running selection script in c_w.l to resolve free.
Running selection script in c_w.l to resolve malloc.
Running selection script in c_w.l to resolve __aeabi_errno_addr.
Running selection script in c_w.l to resolve fgetc.
Running selection script in c_w.l to resolve __rt_locale.
Running selection script in c_w.l to resolve _get_lc_ctype.
Running selection script in c_w.l to resolve __heap$guard.
Running selection script in c_w.l to resolve __rt_heap_descriptor.
Running selection script in c_w.l to resolve _init_alloc.
Running selection script in c_w.l to resolve __Heap_Initialize.
Running selection script in c_w.l to resolve _fclose_internal.
Running selection script in c_w.l to resolve setvbuf.
Running selection script in c_w.l to resolve _initio.
Running selection script in c_w.l to resolve _terminateio.
Selecting member rt_div0.o(c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l) to define __rt_div0.
Running selection script in c_w.l to resolve __Heap_DescSize.
Running selection script in c_w.l to resolve __Heap_ProvideMemory.
Selecting member h1_extend.o(c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l) to define __Heap_ProvideMemory.
Selecting member h1_extend_threads.o(c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l) to define __Heap_ProvideMemory$concurrent.
Running selection script in c_w.l to resolve __rt_SIGRTMEM.
Selecting member defsig_rtmem_outer.o(c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l) to define __rt_SIGRTMEM.
Selecting member defsig_rtmem_formal.o(c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l) to define __rt_SIGRTMEM$formal.
Running selection script in c_w.l to resolve __rt_heap_escrow.
Selecting member heapauxa.o(c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l) to define __rt_heap_escrow.
Running selection script in c_w.l to resolve __rt_heap_expand.
Selecting member heapauxa.o(c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l) to define __rt_heap_expand.
Running selection script in c_w.l to resolve _maybe_terminate_alloc.
Selecting member maybetermalloc1.o(c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l) to define _maybe_terminate_alloc.
Selecting member maybetermalloc2.o(c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l) to define _maybe_terminate_alloc$mutexfree.
Selecting member _scanf.o(c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l) to define __vfscanf.
Running selection script in c_w.l to resolve __backspace.
Selecting member backspace.o(c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l) to define __backspace.
Selecting member backspace_locked.o(c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l) to define ___backspace$locked.
Selecting member strtod.o(c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l) to define __strtod_int.
Selecting member _scanf_wcharmap.o(c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l) to define _scanf_wcharmap.
Selecting member _c16rtomb.o(c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l) to define _wcrtomb.
Running selection script in c_w.l to resolve _flushlinebuffered.
Selecting member flushlinebuffered.o(c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l) to define _flushlinebuffered.
Selecting member flushlinebuffered_locked.o(c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l) to define __flushlinebuffered$locked.
Running selection script in c_w.l to resolve __rt_SIGRTRED.
Selecting member defsig_rtred_outer.o(c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l) to define __rt_SIGRTRED.
Selecting member defsig_rtred_formal.o(c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l) to define __rt_SIGRTRED$formal.
Selecting member libshutdown2.o(c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l) to define __rt_lib_shutdown_stdio_2.
Running selection script in c_w.l to resolve freopen.
Running selection script in c_w.l to resolve __rt_SIGABRT.
Selecting member defsig_abrt_outer.o(c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l) to define __rt_SIGABRT.
Selecting member defsig_abrt_formal.o(c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l) to define __rt_SIGABRT$formal.
Selecting member _monlen.o(c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l) to define _monlen.
Running selection script in c_w.l to resolve __heap_region$guard.
Selecting member hrguard.o(c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l) to define __use_no_heap_region.
Selecting member argv_veneer.o(c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l) to define __ARM_argv_veneer.
Selecting member fpinit.o(c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\fz_wm.l) to define _fp_init.
Running selection script in c_w.l to resolve __filbuf.
Selecting member fgets_locked.o(c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l) to define _fgets$locked.
Selecting member scanf_char_file_locked.o(c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l) to define ___vfscanf_char_file$locked.
Selecting member freadfast.o(c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l) to define _fread$fast.
Selecting member freadfast_locked.o(c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l) to define __fread$fast$locked.
Selecting member fread_bytes_avail.o(c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l) to define ___fread_bytes_avail$fast.
Selecting member fread_bytes_avail_locked.o(c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l) to define ____fread_bytes_avail$fast$locked.
Running selection script in c_w.l to resolve __flsbuf.
Selecting member fputs_locked.o(c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l) to define _fputs$locked.
Selecting member puts_locked.o(c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l) to define _puts$locked.
Selecting member assert_stdio.o(c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l) to define __assert_puts$stdio.
Selecting member fwritefast.o(c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l) to define _fwrite$fast.
Selecting member fwritefast_locked.o(c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l) to define __fwrite$fast$locked.
Selecting member dcmpi.o(c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\fz_wm.l) to define __fpl_dcmp_Inf.
Running selection script in c_w.l to resolve _scanf_really_real.
Selecting member scanf_fp.o(c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l) to define _scanf_really_real.
Selecting member scanf_fp_accurate.o(c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l) to define _scanf_really_real$accurate.
Selecting member cxa_default_handlers.cpp.o(c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\libcxx\libcppabi_w.l) to define __cxa_terminate_handler.
Selecting member cxa_default_handlers.cpp.o(c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\libcxx\libcppabi_w.l) to define __cxa_unexpected_handler.
Loading member c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l(rt_div0.o) from c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l.
              definition:  __rt_div0
              reference :  __rt_SIGFPE
Loading member c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l(hrguard.o) from c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l.
              definition:  __use_no_heap_region
              definition:  __I$use$heap_region
Loading member c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l(maybetermalloc1.o) from c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l.
              definition:  _maybe_terminate_alloc
Loading member c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l(maybetermalloc2.o) from c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l.
              definition:  _maybe_terminate_alloc$mutexfree
              reference :  _terminate_alloc
Loading member c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l(h1_extend.o) from c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l.
              definition:  __Heap_ProvideMemory
              reference :  free
Loading member c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l(h1_extend_threads.o) from c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l.
              definition:  __Heap_ProvideMemory$concurrent
              reference :  free_internal$concurrent
Loading member c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l(_scanf.o) from c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l.
              definition:  __vfscanf
              weak ref  :  _scanf_int
              weak ref  :  _scanf_longlong
              weak ref  :  _scanf_mbtowc
              weak ref  :  _scanf_real
              weak ref  :  _scanf_string
              weak ref  :  _scanf_wctomb
              weak ref  :  _scanf_wstring
Loading member c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l(scanf_fp.o) from c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l.
              definition:  __ARM_grp_.debug_frame$_is_digit
              definition:  _scanf_really_real
              definition:  _is_digit
              reference :  __I$use$fp
              reference :  __I$use$fp
              reference :  __aeabi_errno_addr
              reference :  __dbl_max
              reference :  __huge_val
              reference :  __ieee_status
              reference :  __mathlib_narrow
              reference :  __rt_locale
              reference :  _btod_edivd
              reference :  _btod_emuld
              reference :  _btod_etento
              reference :  _get_lc_numeric
              reference :  _scanf_hex_real
              reference :  _scanf_infnan
Loading member c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l(scanf_fp_accurate.o) from c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l.
              definition:  _scanf_really_real$accurate
              reference :  __I$use$fp
              reference :  __I$use$fp
              reference :  __aeabi_errno_addr
              reference :  __aeabi_llsl
              reference :  __ieee_status
              reference :  __mathlib_narrow
              reference :  __rt_locale
              reference :  _dtob
              reference :  _get_lc_numeric
              reference :  _scanf_hex_real
              reference :  _scanf_infnan
              reference :  strlen
              reference :  _is_digit
Loading member c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l(scanf_char_file_locked.o) from c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l.
              definition:  ___vfscanf_char_file$locked
              reference :  ___backspace$unlocked
              reference :  __vfscanf_char
              reference :  _fgetc$unlocked
              weak ref  :  _mutex_acquire
              weak ref  :  _mutex_release
Loading member c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l(strtod.o) from c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l.
              definition:  __strtod_int
              reference :  _get_lc_numeric
              reference :  _sbackspace
              reference :  _scanf_real
              reference :  _sgetc
              reference :  isspace
Loading member c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l(_scanf_wcharmap.o) from c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l.
              definition:  _scanf_wcharmap
Loading member c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l(backspace.o) from c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l.
              definition:  ___backspace$unlocked
              definition:  __backspace
              reference :  _ungetc_internal
Loading member c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l(freadfast.o) from c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l.
              definition:  _fread$fast
              reference :  __aeabi_memcpy
              reference :  __filbuf_byte
              reference :  _readbuf
              reference :  _seteof
Loading member c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l(fread_bytes_avail.o) from c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l.
              definition:  ___fread_bytes_avail$fast
              reference :  __aeabi_memcpy
              reference :  __filbuf_byte
              reference :  _readbuf
              reference :  _seteof
Loading member c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l(fwritefast.o) from c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l.
              definition:  _fwrite$fast
              reference :  __aeabi_memcpy
              reference :  __flsbuf_byte
              reference :  _writebuf
Loading member c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l(flushlinebuffered.o) from c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l.
              definition:  _flushlinebuffered
              reference :  __stdin
              reference :  _do_fflush
Loading member c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l(fgets_locked.o) from c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l.
              definition:  _fgets$locked
              reference :  _fgetc$unlocked
              weak ref  :  _mutex_acquire
              weak ref  :  _mutex_release
Loading member c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l(fputs_locked.o) from c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l.
              definition:  _fputs$locked
              reference :  _fputc$unlocked
              weak ref  :  _mutex_acquire
              weak ref  :  _mutex_release
Loading member c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l(puts_locked.o) from c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l.
              definition:  _puts$locked
              reference :  __stdout
              reference :  _fputc$unlocked
              weak ref  :  _mutex_acquire
              weak ref  :  _mutex_release
Loading member c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l(backspace_locked.o) from c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l.
              definition:  ___backspace$locked
              reference :  ___backspace$unlocked
              weak ref  :  _mutex_acquire
              weak ref  :  _mutex_release
Loading member c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l(freadfast_locked.o) from c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l.
              definition:  __fread$fast$locked
              reference :  __aeabi_memcpy
              reference :  __filbuf_byte
              reference :  _readbuf
              reference :  _seteof
              weak ref  :  _mutex_acquire
              weak ref  :  _mutex_release
Loading member c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l(fread_bytes_avail_locked.o) from c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l.
              definition:  ____fread_bytes_avail$fast$locked
              reference :  __aeabi_memcpy
              reference :  __filbuf_byte
              reference :  _readbuf
              reference :  _seteof
              weak ref  :  _mutex_acquire
              weak ref  :  _mutex_release
Loading member c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l(fwritefast_locked.o) from c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l.
              definition:  __fwrite$fast$locked
              reference :  __aeabi_memcpy
              reference :  __flsbuf_byte
              reference :  _writebuf
              weak ref  :  _mutex_acquire
              weak ref  :  _mutex_release
Loading member c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l(flushlinebuffered_locked.o) from c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l.
              definition:  __flushlinebuffered$locked
              reference :  __stdin
              reference :  _do_fflush
              reference :  _stream_list_lock
              weak ref  :  _mutex_acquire
              weak ref  :  _mutex_release
Loading member c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l(_c16rtomb.o) from c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l.
              definition:  _c16rtomb
              definition:  _wcrtomb
              reference :  __rt_ctype_table
Loading member c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l(defsig_abrt_outer.o) from c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l.
              definition:  __rt_SIGABRT
              reference :  __rt_SIGABRT_inner
              reference :  __sig_exit
Loading member c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l(defsig_abrt_formal.o) from c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l.
              definition:  __rt_SIGABRT$formal
              reference :  __rt_raise
Loading member c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l(defsig_rtred_outer.o) from c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l.
              definition:  __rt_SIGRTRED
              reference :  __rt_SIGRTRED_inner
              reference :  __sig_exit
Loading member c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l(defsig_rtred_formal.o) from c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l.
              definition:  __rt_SIGRTRED$formal
              reference :  __rt_raise
Loading member c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l(defsig_rtmem_outer.o) from c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l.
              definition:  __rt_SIGRTMEM
              reference :  __rt_SIGRTMEM_inner
              reference :  __sig_exit
Loading member c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l(defsig_rtmem_formal.o) from c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l.
              definition:  __rt_SIGRTMEM$formal
              reference :  __rt_raise
Loading member c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l(assert_stdio.o) from c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l.
              definition:  __assert_puts$stdio
              reference :  __stderr
              reference :  fflush
              reference :  fputs
Loading member c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l(_monlen.o) from c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l.
              definition:  _monlen
Loading member c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l(heapauxa.o) from c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l.
              definition:  __rt_heap_escrow
              definition:  __rt_heap_expand
Loading member c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l(argv_veneer.o) from c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l.
              definition:  __ARM_argv_veneer
              reference :  __ARM_get_argv
Loading member c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l(libshutdown2.o) from c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l.
              definition:  __rt_lib_shutdown_cpp_1
              definition:  __rt_lib_shutdown_cpp_2
              definition:  __rt_lib_shutdown_stdio_1
              definition:  __rt_lib_shutdown_stdio_2
              definition:  __rt_lib_shutdown_fp_trap_1
              definition:  __rt_lib_shutdown_fp_trap_1$b
              definition:  __rt_lib_shutdown_fp_trap_2
              definition:  __rt_lib_shutdown_signal_1
              definition:  __rt_lib_shutdown_signal_1$b
              definition:  __rt_lib_shutdown_signal_2
              definition:  __rt_lib_shutdown_user_alloc_1
              definition:  __rt_lib_shutdown_user_alloc_2
              definition:  __rt_lib_shutdown_heap_1
              definition:  __rt_lib_shutdown_heap_1$b
              definition:  __rt_lib_shutdown_heap_2
              definition:  __rt_lib_shutdown_return
              weak ref  :  __cxa_finalize
              weak ref  :  _fp_trap_shutdown
              weak ref  :  _signal_finish
              weak ref  :  _terminate_alloc
              weak ref  :  _terminate_user_alloc
              weak ref  :  _terminateio
Loading member c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\fz_wm.l(dcmpi.o) from c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\fz_wm.l.
              definition:  __fpl_dcmp_Inf
              reference :  __I$use$fp
Loading member c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\fz_wm.l(fpinit.o) from c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\fz_wm.l.
              definition:  _fp_init
              definition:  __fplib_config_fpu_vfp
              definition:  __fplib_config_pureend_doubles
Loading member c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\libcxx\libcppabi_w.l(cxa_default_handlers.cpp.o) from c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\libcxx\libcppabi_w.l.
              definition:  __cxa_terminate_handler
              definition:  __cxa_unexpected_handler
              definition:  std::set_terminate(void(*)())
              definition:  std::set_unexpected(void(*)())
              reference :  std::terminate()
              reference :  abort
Running selection script in c_w.l to resolve free.
Running selection script in c_w.l to resolve __aeabi_errno_addr.
Running selection script in c_w.l to resolve fflush.
Running selection script in c_w.l to resolve fputs.
Running selection script in c_w.l to resolve __rt_locale.
Running selection script in c_w.l to resolve __filbuf_byte.
Running selection script in c_w.l to resolve __flsbuf_byte.
Running selection script in c_w.l to resolve _terminateio.
Running selection script in c_w.l to resolve _do_fflush.
Running selection script in c_w.l to resolve _get_lc_numeric.
Selecting member lc_numeric_c.o(c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l) to define _get_lc_numeric.
Running selection script in c_w.l to resolve __rt_SIGFPE.
Selecting member defsig_fpe_outer.o(c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l) to define __rt_SIGFPE.
Selecting member defsig_fpe_formal.o(c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l) to define __rt_SIGFPE$formal.
Selecting member term_alloc.o(c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l) to define _terminate_alloc.
Selecting member fpconst.o(c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\fz_wm.l) to define __dbl_max.
Selecting member fpconst.o(c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\fz_wm.l) to define __huge_val.
Selecting member istatus.o(c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\fz_wm.l) to define __ieee_status.
Selecting member narrow.o(c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\m_wm.l) to define __mathlib_narrow.
Selecting member btod.o(c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l) to define _btod_edivd.
Selecting member btod.o(c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l) to define _btod_emuld.
Selecting member bigflt0.o(c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l) to define _btod_etento.
Running selection script in fz_wm.l to resolve _scanf_hex_real.
Selecting member scanf2.o(c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\fz_wm.l) to define _scanf_hex_real.
Selecting member scanf2a.o(c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\fz_wm.l) to define _scanf_hex_real$c89.
Selecting member scanf2b.o(c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\fz_wm.l) to define _scanf_hex_real$c99.
Running selection script in fz_wm.l to resolve _scanf_infnan.
Selecting member scanf2.o(c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\fz_wm.l) to define _scanf_infnan.
Selecting member scanf2a.o(c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\fz_wm.l) to define _scanf_infnan$c89.
Selecting member scanf2b.o(c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\fz_wm.l) to define _scanf_infnan$c99.
Selecting member llshl.o(c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l) to define __aeabi_llsl.
Selecting member dtob_accurate.o(c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l) to define _dtob.
Selecting member __printf_wp.o(c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l) to define _is_digit.
Selecting member ungetc.o(c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l) to define _ungetc_internal.
Running selection script in c_w.l to resolve __rt_SIGABRT_inner.
Selecting member defsig_abrt_inner.o(c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l) to define __rt_SIGABRT_inner.
Selecting member defsig_exit.o(c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l) to define __sig_exit.
Running selection script in c_w.l to resolve __rt_raise.
Selecting member rt_raise.o(c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l) to define __rt_raise.
Running selection script in c_w.l to resolve __rt_SIGRTRED_inner.
Selecting member defsig_rtred_inner.o(c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l) to define __rt_SIGRTRED_inner.
Running selection script in c_w.l to resolve __rt_SIGRTMEM_inner.
Selecting member defsig_rtmem_inner.o(c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l) to define __rt_SIGRTMEM_inner.
Running selection script in c_w.l to resolve __ARM_get_argv.
Selecting member no_argv.o(c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l) to define __ARM_get_argv$stub.
Selecting member _get_argv_nomalloc.o(c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l) to define __ARM_get_argv$nomalloc.
Loading member c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l(rt_raise.o) from c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l.
              definition:  __rt_raise
              reference :  __raise
              reference :  _sys_exit
Loading member c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l(term_alloc.o) from c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l.
              definition:  _terminate_alloc
              reference :  __Heap_Finalize
              reference :  __rt_heap_descriptor
              reference :  __rt_lib_shutdown_heap_2
Loading member c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l(llshl.o) from c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l.
              definition:  __aeabi_llsl
              definition:  _ll_shift_l
Loading member c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l(__printf_wp.o) from c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l.
              definition:  __printf$widthprec
              reference :  _printf_percent
              reference :  _is_digit
Loading member c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l(bigflt0.o) from c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l.
              definition:  _btod_etento
              reference :  __I$use$fp
              reference :  _btod_ediv
              reference :  _btod_emul
Loading member c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l(btod.o) from c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l.
              definition:  _btod_d2e
              definition:  _d2e_denorm_low
              definition:  _d2e_norm_op1
              definition:  __btod_div_common
              definition:  _e2d
              definition:  _e2e
              definition:  _btod_ediv
              definition:  _btod_edivd
              definition:  _btod_emul
              definition:  _btod_emuld
              definition:  __btod_mult_common
              reference :  __I$use$fp
              reference :  __ieee_status
Loading member c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l(dtob_accurate.o) from c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l.
              definition:  _dtob
              reference :  __aeabi_llsl
              reference :  _bcd2digits
              reference :  _btod_common
              reference :  _btod_mul
              reference :  _btod_pow
Loading member c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l(ungetc.o) from c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l.
              definition:  _ungetc_internal
              definition:  ungetc
Loading member c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l(lc_numeric_c.o) from c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l.
              definition:  _get_lc_numeric
              reference :  __rt_lib_init_lc_numeric_2
              reference :  strcmp
Loading member c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l(defsig_exit.o) from c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l.
              definition:  __sig_exit
              reference :  _sys_exit
Loading member c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l(defsig_abrt_inner.o) from c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l.
              definition:  __rt_SIGABRT_inner
              reference :  __default_signal_display
Loading member c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l(defsig_fpe_outer.o) from c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l.
              definition:  __rt_SIGFPE
              reference :  __rt_SIGFPE_inner
              reference :  __sig_exit
Loading member c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l(defsig_fpe_formal.o) from c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l.
              definition:  __rt_SIGFPE$formal
              reference :  __rt_raise
Loading member c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l(defsig_rtred_inner.o) from c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l.
              definition:  __rt_SIGRTRED_inner
              reference :  __default_signal_display
Loading member c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l(defsig_rtmem_inner.o) from c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l.
              definition:  __rt_SIGRTMEM_inner
              reference :  __default_signal_display
Loading member c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l(_get_argv_nomalloc.o) from c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l.
              definition:  __argv_alloc
              definition:  __ARM_get_argv$nomalloc
              reference :  __heap_region$guard
              reference :  __rt_SIGRTMEM
              reference :  _sys_command_string
              weak ref  :  _handle_redirection
Loading member c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l(no_argv.o) from c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l.
              definition:  __ARM_get_argv$stub
Loading member c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\fz_wm.l(fpconst.o) from c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\fz_wm.l.
              definition:  __aeabi_HUGE_VAL
              definition:  __aeabi_HUGE_VALL
              definition:  __aeabi_INFINITY
              definition:  __dInf
              definition:  __huge_val
              definition:  __dbl_max
              definition:  __aeabi_NAN
              definition:  __dNaN
              definition:  __aeabi_HUGE_VALF
              definition:  __fInf
              reference :  __I$use$fp
Loading member c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\fz_wm.l(istatus.o) from c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\fz_wm.l.
              definition:  __ieee_status
              reference :  __I$use$fp
Loading member c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\fz_wm.l(scanf2.o) from c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\fz_wm.l.
              definition:  _scanf_hex_real
              definition:  _scanf_infnan
              reference :  _scanf_really_hex_real
              reference :  _scanf_really_infnan
Loading member c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\fz_wm.l(scanf2a.o) from c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\fz_wm.l.
              definition:  _scanf_hex_real$c89
              definition:  _scanf_infnan$c89
Loading member c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\fz_wm.l(scanf2b.o) from c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\fz_wm.l.
              definition:  _scanf_hex_real$c99
              definition:  _scanf_infnan$c99
              reference :  _scanf_really_hex_real
              reference :  _scanf_really_infnan
Loading member c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\m_wm.l(narrow.o) from c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\m_wm.l.
              definition:  __hardfp___mathlib_tofloat
              definition:  __mathlib_narrow
              definition:  __mathlib_tofloat
              definition:  __softfp___mathlib_tofloat
              reference :  __I$use$fp
              reference :  __aeabi_cdcmpeq
              reference :  __aeabi_cdrcmple
              reference :  __aeabi_d2f
              reference :  __ieee_status
              reference :  __set_errno
              reference :  frexp
Running selection script in c_w.l to resolve __rt_heap_descriptor.
Running selection script in c_w.l to resolve __rt_SIGRTMEM.
Running selection script in c_w.l to resolve __heap_region$guard.
Running selection script in c_w.l to resolve __rt_raise.
Selecting member __raise.o(c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l) to define __raise.
Running selection script in c_w.l to resolve __Heap_Finalize.
Selecting member h1_final.o(c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l) to define __Heap_Finalize.
Selecting member h1_final_threads.o(c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l) to define __Heap_Finalize$concurrent.
Selecting member btod_accurate_common.o(c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l) to define _bcd2digits.
Selecting member btod_accurate_common.o(c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l) to define _btod_common.
Selecting member btod_accurate_common.o(c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l) to define _btod_mul.
Selecting member btod_accurate_common.o(c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l) to define _btod_pow.
Selecting member defsig_general.o(c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l) to define __default_signal_display.
Running selection script in c_w.l to resolve __rt_SIGFPE_inner.
Selecting member defsig_fpe_inner.o(c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l) to define __rt_SIGFPE_inner.
Selecting member scanf_hexfp.o(c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l) to define _scanf_really_hex_real.
Running selection script in c_w.l to resolve _scanf_really_infnan.
Selecting member scanf_infnan.o(c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l) to define _scanf_really_infnan.
Selecting member drleqf.o(c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\fz_wm.l) to define __aeabi_cdrcmple.
Selecting member d2f.o(c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\fz_wm.l) to define __aeabi_d2f.
Selecting member _rserrno.o(c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l) to define __set_errno.
Selecting member frexp.o(c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\m_wm.l) to define frexp.
Loading member c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l(h1_final.o) from c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l.
              definition:  __Heap_Finalize
Loading member c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l(h1_final_threads.o) from c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l.
              definition:  __Heap_Finalize$concurrent
              weak ref  :  _mutex_free
Loading member c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l(_rserrno.o) from c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l.
              definition:  __read_errno
              definition:  __set_errno
              reference :  __aeabi_errno_addr
Loading member c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l(scanf_hexfp.o) from c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l.
              definition:  _scanf_really_hex_real
              reference :  __aeabi_llsl
              reference :  __ieee_status
              reference :  __mathlib_narrow
              reference :  __support_ldexp
              reference :  _chval
Loading member c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l(scanf_infnan.o) from c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l.
              definition:  _scanf_really_infnan
Loading member c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l(btod_accurate_common.o) from c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l.
              definition:  _btod_approx_div10000
              definition:  _btod_mul
              definition:  _btod_pow
              definition:  _bcd2digits
              definition:  _btod_common
              reference :  __aeabi_llsr
Loading member c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l(__raise.o) from c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l.
              definition:  __raise
              reference :  __default_signal_handler
              weak ref  :  __sigvec_lookup
Loading member c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l(defsig_general.o) from c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l.
              definition:  __default_signal_display
              reference :  _ttywrch
Loading member c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l(defsig_fpe_inner.o) from c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l.
              definition:  __rt_SIGFPE_inner
              reference :  __default_signal_display
Loading member c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\fz_wm.l(d2f.o) from c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\fz_wm.l.
              definition:  __aeabi_d2f
              definition:  _d2f
              reference :  __I$use$fp
              reference :  __fpl_dnaninf
              reference :  __fpl_fretinf
Loading member c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\fz_wm.l(drleqf.o) from c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\fz_wm.l.
              definition:  __aeabi_cdrcmple
              definition:  _drcmple
              reference :  __I$use$fp
              reference :  __fpl_dcmple_InfNaN
Loading member c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\m_wm.l(frexp.o) from c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\m_wm.l.
              definition:  __hardfp_frexp
              definition:  __softfp_frexp
              definition:  frexp
              reference :  __I$use$fp
              reference :  __aeabi_dmul
Running selection script in c_w.l to resolve __aeabi_errno_addr.
Running selection script in m_wm.l to resolve __support_ldexp.
Selecting member ldexp.o(c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\m_wm.l) to define __support_ldexp.
Selecting member ldexp_x.o(c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\m_wm.l) to define ____support_ldexp$lsc.
Selecting member llushr.o(c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l) to define __aeabi_llsr.
Selecting member defsig.o(c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l) to define __default_signal_handler.
Selecting member fretinf.o(c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\fz_wm.l) to define __fpl_fretinf.
Loading member c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l(llushr.o) from c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l.
              definition:  __aeabi_llsr
              definition:  _ll_ushift_r
Loading member c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l(defsig.o) from c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l.
              definition:  __default_signal_handler
              definition:  __rt_SIGABRT_inner$null
              definition:  __rt_SIGCPPL_inner$null
              definition:  __rt_SIGFPE_inner$null
              definition:  __rt_SIGILL_inner$null
              definition:  __rt_SIGINT_inner$null
              definition:  __rt_SIGPVFN_inner$null
              definition:  __rt_SIGRTMEM_inner$null
              definition:  __rt_SIGRTRED_inner$null
              definition:  __rt_SIGSEGV_inner$null
              definition:  __rt_SIGSTAK_inner$null
              definition:  __rt_SIGTERM_inner$null
              definition:  __rt_SIGUSR1_inner$null
              definition:  __rt_SIGUSR2_inner$null
              definition:  __rt_sigother_inner$null
              reference :  __rt_SIGABRT_inner
              reference :  __rt_SIGCPPL_inner
              reference :  __rt_SIGFPE_inner
              reference :  __rt_SIGILL_inner
              reference :  __rt_SIGINT_inner
              reference :  __rt_SIGPVFN_inner
              reference :  __rt_SIGRTMEM_inner
              reference :  __rt_SIGRTRED_inner
              reference :  __rt_SIGSEGV_inner
              reference :  __rt_SIGSTAK_inner
              reference :  __rt_SIGTERM_inner
              reference :  __rt_SIGUSR1_inner
              reference :  __rt_SIGUSR2_inner
              reference :  __rt_sigother_inner
Loading member c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\fz_wm.l(fretinf.o) from c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\fz_wm.l.
              definition:  __fpl_fretinf
              reference :  __I$use$fp
Loading member c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\m_wm.l(ldexp.o) from c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\m_wm.l.
              definition:  __hardfp_ldexp
              definition:  __softfp_ldexp
              definition:  __support_ldexp
              definition:  ldexp
              reference :  __ARM_scalbn
              reference :  __I$use$fp
              reference :  __aeabi_cdcmpeq
              reference :  __mathlib_dbl_overflow
              reference :  __mathlib_dbl_underflow
              reference :  __set_errno
Loading member c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\m_wm.l(ldexp_x.o) from c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\m_wm.l.
              definition:  ____hardfp_ldexp$lsc
              definition:  ____softfp_ldexp$lsc
              definition:  ____support_ldexp$lsc
              definition:  __ldexp$lsc
              reference :  __ARM_scalbn
              reference :  __I$use$fp
              reference :  __aeabi_cdcmpeq
              reference :  __ieee_status
              reference :  __mathlib_zero
              reference :  __set_errno
Running selection script in c_w.l to resolve __rt_SIGABRT_inner.
Running selection script in c_w.l to resolve __rt_SIGRTRED_inner.
Running selection script in c_w.l to resolve __rt_SIGRTMEM_inner.
Running selection script in c_w.l to resolve __rt_SIGFPE_inner.
Running selection script in c_w.l to resolve __rt_SIGCPPL_inner.
Selecting member defsig_cppl_inner.o(c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l) to define __rt_SIGCPPL_inner.
Running selection script in c_w.l to resolve __rt_SIGILL_inner.
Selecting member defsig_other.o(c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l) to define __rt_SIGILL_inner.
Running selection script in c_w.l to resolve __rt_SIGINT_inner.
Selecting member defsig_other.o(c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l) to define __rt_SIGINT_inner.
Running selection script in c_w.l to resolve __rt_SIGPVFN_inner.
Selecting member defsig_pvfn_inner.o(c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l) to define __rt_SIGPVFN_inner.
Running selection script in c_w.l to resolve __rt_SIGSEGV_inner.
Selecting member defsig_segv_inner.o(c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l) to define __rt_SIGSEGV_inner.
Running selection script in c_w.l to resolve __rt_SIGSTAK_inner.
Selecting member defsig_stak_inner.o(c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l) to define __rt_SIGSTAK_inner.
Running selection script in c_w.l to resolve __rt_SIGTERM_inner.
Selecting member defsig_other.o(c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l) to define __rt_SIGTERM_inner.
Running selection script in c_w.l to resolve __rt_SIGUSR1_inner.
Selecting member defsig_other.o(c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l) to define __rt_SIGUSR1_inner.
Running selection script in c_w.l to resolve __rt_SIGUSR2_inner.
Selecting member defsig_other.o(c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l) to define __rt_SIGUSR2_inner.
Running selection script in c_w.l to resolve __rt_sigother_inner.
Selecting member defsig_other.o(c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l) to define __rt_sigother_inner.
Selecting member scalbn.o(c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\fz_wm.l) to define __ARM_scalbn.
Selecting member dunder.o(c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\m_wm.l) to define __mathlib_dbl_overflow.
Selecting member dunder.o(c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\m_wm.l) to define __mathlib_dbl_underflow.
Selecting member qnan.o(c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\m_wm.l) to define __mathlib_zero.
Loading member c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l(defsig_stak_inner.o) from c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l.
              definition:  __rt_SIGSTAK_inner
              reference :  __default_signal_display
Loading member c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l(defsig_pvfn_inner.o) from c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l.
              definition:  __rt_SIGPVFN_inner
              reference :  __default_signal_display
Loading member c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l(defsig_cppl_inner.o) from c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l.
              definition:  __rt_SIGCPPL_inner
              reference :  __default_signal_display
Loading member c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l(defsig_segv_inner.o) from c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l.
              definition:  __rt_SIGSEGV_inner
              reference :  __default_signal_display
Loading member c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l(defsig_other.o) from c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l.
              definition:  __rt_SIGILL_inner
              definition:  __rt_SIGINT_inner
              definition:  __rt_SIGTERM_inner
              definition:  __rt_SIGUSR1_inner
              definition:  __rt_SIGUSR2_inner
              definition:  __rt_sigother_inner
              reference :  __default_signal_display
Loading member c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\fz_wm.l(scalbn.o) from c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\fz_wm.l.
              definition:  __ARM_scalbn
              reference :  __I$use$fp
              reference :  __fpl_dcheck_NaN1
Loading member c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\m_wm.l(dunder.o) from c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\m_wm.l.
              definition:  __mathlib_dbl_divzero
              definition:  __mathlib_dbl_infnan
              definition:  __mathlib_dbl_infnan2
              definition:  __mathlib_dbl_invalid
              definition:  __mathlib_dbl_overflow
              definition:  __mathlib_dbl_posinfnan
              definition:  __mathlib_dbl_underflow
              reference :  __aeabi_dadd
              reference :  __aeabi_ddiv
              reference :  __aeabi_dmul
Loading member c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\m_wm.l(qnan.o) from c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\m_wm.l.
              definition:  __mathlib_zero
              reference :  __I$use$fp
Selecting member dcheck1.o(c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\fz_wm.l) to define __fpl_dcheck_NaN1.
Loading member c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\fz_wm.l(dcheck1.o) from c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\fz_wm.l.
              definition:  __fpl_dcheck_NaN1
              reference :  __I$use$fp
              reference :  __fpl_return_NaN
Selecting member retnan.o(c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\fz_wm.l) to define __fpl_return_NaN.
Loading member c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\fz_wm.l(retnan.o) from c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\fz_wm.l.
              definition:  __fpl_return_NaN
              reference :  __I$use$fp
              reference :  __fpl_cmpreturn
Selecting member trapv.o(c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\fz_wm.l) to define __fpl_cmpreturn.
Loading member c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\fz_wm.l(trapv.o) from c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\fz_wm.l.
              definition:  __fpl_cmpreturn
              reference :  __I$use$fp
Cleaning up Comdat Group Sections
Renaming symbol free to free$base.
Renaming symbol free$concurrent to free.
Renaming symbol malloc to malloc$base.
Renaming symbol malloc$concurrent to malloc.
Renaming symbol __aeabi_errno_addr to __aeabi_errno_addr$default.
Renaming symbol __aeabi_errno_addr$twolibspace to __aeabi_errno_addr.
Renaming symbol puts to _puts$portable.
Renaming symbol _puts$locked to puts.
Renaming symbol fclose to _fclose$unlocked.
Renaming symbol _fclose$locked to fclose.
Not renaming symbol _fopen$unlocked to _fopen$unlocked$orig due to its absence.
Renaming symbol fopen to _fopen$unlocked.
Renaming symbol _fopen$locked to fopen.
Renaming symbol fread to _fread$portable.
Renaming symbol __fread$fast$locked to fread.
Not renaming symbol _fseek$unlocked to _fseek$unlocked$orig due to its absence.
Renaming symbol fseek to _fseek$unlocked.
Renaming symbol _fseek$locked to fseek.
Not renaming symbol _ftell$unlocked to _ftell$unlocked$orig due to its absence.
Renaming symbol ftell to _ftell$unlocked.
Renaming symbol _ftell$locked to ftell.
Renaming symbol fwrite to _fwrite$portable.
Renaming symbol __fwrite$fast$locked to fwrite.
Not renaming symbol _fflush$unlocked to _fflush$unlocked$orig due to its absence.
Renaming symbol fflush to _fflush$unlocked.
Renaming symbol _fflush$locked to fflush.
Renaming symbol _fgetc$unlocked to _fgetc$unlocked$orig.
Renaming symbol fgetc to _fgetc$unlocked.
Renaming symbol _fgetc$locked to fgetc.
Renaming symbol fgets to _fgets$portable.
Renaming symbol _fgets$locked to fgets.
Renaming symbol _fputc$unlocked to _fputc$unlocked$orig.
Renaming symbol fputc to _fputc$unlocked.
Renaming symbol _fputc$locked to fputc.
Renaming symbol fputs to _fputs$portable.
Renaming symbol _fputs$locked to fputs.
Renaming symbol __rt_locale to __rt_locale$default.
Renaming symbol __rt_locale$twolibspace to __rt_locale.
Renaming symbol __I$use$heap to __heap$guard.
Renaming symbol __rt_heap_descriptor to __rt_heap_descriptor$default.
Renaming symbol __rt_heap_descriptor$twolibspace to __rt_heap_descriptor.
Renaming symbol __Heap_Initialize to __Heap_Initialize$base.
Renaming symbol __Heap_Initialize$concurrent to __Heap_Initialize.
Renaming symbol __vfscanf_char_file to ___vfscanf_char_file$portable.
Renaming symbol ___vfscanf_char_file$locked to __vfscanf_char_file.
Not renaming symbol _ferror$unlocked to _ferror$unlocked$orig due to its absence.
Renaming symbol ferror to _ferror$unlocked.
Renaming symbol _ferror$locked to ferror.
Not renaming symbol _clearerr$unlocked to _clearerr$unlocked$orig due to its absence.
Renaming symbol clearerr to _clearerr$unlocked.
Renaming symbol _clearerr$locked to clearerr.
Not renaming symbol _setvbuf$unlocked to _setvbuf$unlocked$orig due to its absence.
Renaming symbol setvbuf to _setvbuf$unlocked.
Renaming symbol _setvbuf$locked to setvbuf.
Not renaming symbol __initio$unlocked to __initio$unlocked$orig due to its absence.
Renaming symbol _initio to __initio$unlocked.
Renaming symbol __initio$locked to _initio.
Not renaming symbol __terminateio$unlocked to __terminateio$unlocked$orig due to its absence.
Renaming symbol _terminateio to __terminateio$unlocked.
Renaming symbol __terminateio$locked to _terminateio.
Not renaming symbol __do_fflush$unlocked to __do_fflush$unlocked$orig due to its absence.
Renaming symbol _do_fflush to __do_fflush$unlocked.
Renaming symbol __do_fflush$locked to _do_fflush.
Renaming symbol __assert_puts to __assert_puts$ttywrch.
Renaming symbol __assert_puts$stdio to __assert_puts.
Renaming symbol posix_memalign to posix_memalign$base.
Renaming symbol posix_memalign$concurrent to posix_memalign.
Renaming symbol __Heap_DescSize to __Heap_DescSize$base.
Renaming symbol __Heap_DescSize$concurrent to __Heap_DescSize.
Renaming symbol __Heap_ProvideMemory to __Heap_ProvideMemory$base.
Renaming symbol __Heap_ProvideMemory$concurrent to __Heap_ProvideMemory.
Renaming symbol __rt_heap_escrow to __rt_heap_escrow$base.
Renaming symbol __rt_heap_escrow$2region to __rt_heap_escrow.
Renaming symbol __rt_heap_expand to __rt_heap_expand$base.
Renaming symbol __rt_heap_expand$2region to __rt_heap_expand.
Renaming symbol _maybe_terminate_alloc to _maybe_terminate_alloc$base.
Renaming symbol _maybe_terminate_alloc$mutexfree to _maybe_terminate_alloc.
Renaming symbol ___backspace$unlocked to ___backspace$unlocked$orig.
Renaming symbol __backspace to ___backspace$unlocked.
Renaming symbol ___backspace$locked to __backspace.
Not renaming symbol __flushlinebuffered$unlocked to __flushlinebuffered$unlocked$orig due to its absence.
Renaming symbol _flushlinebuffered to __flushlinebuffered$unlocked.
Renaming symbol __flushlinebuffered$locked to _flushlinebuffered.
Not renaming symbol _freopen$unlocked to _freopen$unlocked$orig due to its absence.
Renaming symbol freopen to _freopen$unlocked.
Renaming symbol _freopen$locked to freopen.
Renaming symbol __I$use$heap_region to __heap_region$guard.
Renaming symbol __ARM_get_argv to __ARM_get_argv$full.
Renaming symbol __ARM_get_argv$stub to __ARM_get_argv.
Renaming symbol __Heap_Finalize to __Heap_Finalize$base.
Renaming symbol __Heap_Finalize$concurrent to __Heap_Finalize.
Renaming symbol __rt_SIGCPPL_inner to __rt_SIGCPPL_inner$real.
Renaming symbol __rt_SIGCPPL_inner$null to __rt_SIGCPPL_inner.
Renaming symbol __rt_SIGILL_inner to __rt_SIGILL_inner$real.
Renaming symbol __rt_SIGILL_inner$null to __rt_SIGILL_inner.
Renaming symbol __rt_SIGINT_inner to __rt_SIGINT_inner$real.
Renaming symbol __rt_SIGINT_inner$null to __rt_SIGINT_inner.
Renaming symbol __rt_SIGPVFN_inner to __rt_SIGPVFN_inner$real.
Renaming symbol __rt_SIGPVFN_inner$null to __rt_SIGPVFN_inner.
Renaming symbol __rt_SIGSEGV_inner to __rt_SIGSEGV_inner$real.
Renaming symbol __rt_SIGSEGV_inner$null to __rt_SIGSEGV_inner.
Renaming symbol __rt_SIGSTAK_inner to __rt_SIGSTAK_inner$real.
Renaming symbol __rt_SIGSTAK_inner$null to __rt_SIGSTAK_inner.
Renaming symbol __rt_SIGTERM_inner to __rt_SIGTERM_inner$real.
Renaming symbol __rt_SIGTERM_inner$null to __rt_SIGTERM_inner.
Renaming symbol __rt_SIGUSR1_inner to __rt_SIGUSR1_inner$real.
Renaming symbol __rt_SIGUSR1_inner$null to __rt_SIGUSR1_inner.
Renaming symbol __rt_SIGUSR2_inner to __rt_SIGUSR2_inner$real.
Renaming symbol __rt_SIGUSR2_inner$null to __rt_SIGUSR2_inner.
Renaming symbol __rt_sigother_inner to __rt_sigother_inner$real.
Renaming symbol __rt_sigother_inner$null to __rt_sigother_inner.
Renaming symbol __rt_lib_init_alloca_1 to $$Temp.
Renaming symbol __rt_lib_init_alloca_2 to __rt_lib_init_alloca_1.
Renaming symbol $$Temp to __rt_lib_init_alloca_2.
Renaming symbol __rt_lib_init_argv_1 to $$Temp.
Renaming symbol __rt_lib_init_argv_2 to __rt_lib_init_argv_1.
Renaming symbol $$Temp to __rt_lib_init_argv_2.
Renaming symbol __rt_lib_init_atexit_1 to $$Temp.
Renaming symbol __rt_lib_init_atexit_2 to __rt_lib_init_atexit_1.
Renaming symbol $$Temp to __rt_lib_init_atexit_2.
Renaming symbol __rt_lib_init_clock_1 to $$Temp.
Renaming symbol __rt_lib_init_clock_2 to __rt_lib_init_clock_1.
Renaming symbol $$Temp to __rt_lib_init_clock_2.
Renaming symbol __rt_lib_init_cpp_1 to $$Temp.
Renaming symbol __rt_lib_init_cpp_2 to __rt_lib_init_cpp_1.
Renaming symbol $$Temp to __rt_lib_init_cpp_2.
Renaming symbol __rt_lib_init_exceptions_1 to $$Temp.
Renaming symbol __rt_lib_init_exceptions_2 to __rt_lib_init_exceptions_1.
Renaming symbol $$Temp to __rt_lib_init_exceptions_2.
Renaming symbol __rt_lib_init_fp_trap_1 to $$Temp.
Renaming symbol __rt_lib_init_fp_trap_2 to __rt_lib_init_fp_trap_1.
Renaming symbol $$Temp to __rt_lib_init_fp_trap_2.
Renaming symbol __rt_lib_init_getenv_1 to $$Temp.
Renaming symbol __rt_lib_init_getenv_2 to __rt_lib_init_getenv_1.
Renaming symbol $$Temp to __rt_lib_init_getenv_2.
Renaming symbol __rt_lib_init_heap_1 to $$Temp.
Renaming symbol __rt_lib_init_heap_2 to __rt_lib_init_heap_1.
Renaming symbol $$Temp to __rt_lib_init_heap_2.
Renaming symbol __rt_lib_init_lc_collate_1 to $$Temp.
Renaming symbol __rt_lib_init_lc_collate_2 to __rt_lib_init_lc_collate_1.
Renaming symbol $$Temp to __rt_lib_init_lc_collate_2.
Renaming symbol __rt_lib_init_lc_ctype_1 to $$Temp.
Renaming symbol __rt_lib_init_lc_ctype_2 to __rt_lib_init_lc_ctype_1.
Renaming symbol $$Temp to __rt_lib_init_lc_ctype_2.
Renaming symbol __rt_lib_init_lc_monetary_1 to $$Temp.
Renaming symbol __rt_lib_init_lc_monetary_2 to __rt_lib_init_lc_monetary_1.
Renaming symbol $$Temp to __rt_lib_init_lc_monetary_2.
Renaming symbol __rt_lib_init_lc_numeric_1 to $$Temp.
Renaming symbol __rt_lib_init_lc_numeric_2 to __rt_lib_init_lc_numeric_1.
Renaming symbol $$Temp to __rt_lib_init_lc_numeric_2.
Renaming symbol __rt_lib_init_lc_time_1 to $$Temp.
Renaming symbol __rt_lib_init_lc_time_2 to __rt_lib_init_lc_time_1.
Renaming symbol $$Temp to __rt_lib_init_lc_time_2.
Renaming symbol __rt_lib_init_preinit_1 to $$Temp.
Renaming symbol __rt_lib_init_preinit_2 to __rt_lib_init_preinit_1.
Renaming symbol $$Temp to __rt_lib_init_preinit_2.
Renaming symbol __rt_lib_init_rand_1 to $$Temp.
Renaming symbol __rt_lib_init_rand_2 to __rt_lib_init_rand_1.
Renaming symbol $$Temp to __rt_lib_init_rand_2.
Renaming symbol __rt_lib_init_signal_1 to $$Temp.
Renaming symbol __rt_lib_init_signal_2 to __rt_lib_init_signal_1.
Renaming symbol $$Temp to __rt_lib_init_signal_2.
Renaming symbol __rt_lib_init_stdio_1 to $$Temp.
Renaming symbol __rt_lib_init_stdio_2 to __rt_lib_init_stdio_1.
Renaming symbol $$Temp to __rt_lib_init_stdio_2.
Renaming symbol __rt_lib_init_user_alloc_1 to $$Temp.
Renaming symbol __rt_lib_init_user_alloc_2 to __rt_lib_init_user_alloc_1.
Renaming symbol $$Temp to __rt_lib_init_user_alloc_2.
Resolving $Sub$$ and $Super$$ Symbols.
              definition:  $Super$$__rt_lib_init
              definition:  BuildAttributes$$THM_ISAv4$E$P$D$K$B$S$7EM$VFPi3$EXTD16$VFPS$VFMA$PE$A:L22UL41UL21$X:L11$S22US41US21$IEEE1$IW$~IW$USESV6$~STKCKD$USESV7$~SHL$OTIME$ROPI$IEEEX$EBA8$STANDARDLIB$REQ8$PRES8$EABIv2
Building image.
Checking duplicate symbol definitions
Using Worst Fit .ANY placement algorithm.
              reference :  __scatterload_copy
              reference :  __scatterload_zeroinit
              reference :  __scatterload_copy
              reference :  __scatterload_zeroinit
              reference :  __scatterload_null
              reference :  __scatterload_rt2
Choosing data area compressor
Data area too small to benefit from compression.
Selecting member __scatter_copy.o(c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l) to define __scatterload_copy.
Selecting member __scatter_zi.o(c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l) to define __scatterload_zeroinit.
Selecting member __scatter.o(c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l) to define __scatterload_null.
Selecting member __scatter.o(c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l) to define __scatterload_rt2.
Loading member c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l(__scatter.o) from c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l.
              definition:  __scatterload
              definition:  __scatterload_rt2
              definition:  __scatterload_rt2_thumb_only
              definition:  __scatterload_null
              reference :  Region$$Table$$Base
              reference :  Region$$Table$$Limit
              reference :  __rt_entry
Loading member c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l(__scatter_copy.o) from c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l.
              definition:  __scatterload_copy
Loading member c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l(__scatter_zi.o) from c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l.
              definition:  __scatterload_zeroinit
Resolving $Sub$$ and $Super$$ Symbols.
Patching/Reducing relocations
Creating output file BUILD/NUCLEO_L476RG/ARMC6/mbed-os-example-blinky-5.elf.

==============================================================================

Memory Map of the image

  Image Entry point : 0x08000189

  Load Region LR_IROM1 (Base: 0x08000000, Size: 0x00009e40, Max: 0x00100000, ABSOLUTE)

    Execution Region ER_IROM1 (Base: 0x08000000, Size: 0x00009d38, Max: 0x00100000, ABSOLUTE)

    Base Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x08000000   0x00000188   Data   RO        36389    RESET               BUILD/NUCLEO_L476RG/ARMC6/mbed-os/targets/TARGET_STM/TARGET_STM32L4/TARGET_STM32L476xG/device/TOOLCHAIN_ARM/startup_stm32l476xx.o
    0x08000188   0x00000008   Code   RO        42278  * !!!main             c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l(__main.o)
    0x08000190   0x00000034   Code   RO        42827    !!!scatter          c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l(__scatter.o)
    0x080001c4   0x0000001a   Code   RO        42829    !!handler_copy      c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l(__scatter_copy.o)
    0x080001de   0x00000002   PAD
    0x080001e0   0x0000001c   Code   RO        42831    !!handler_zi        c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l(__scatter_zi.o)
    0x080001fc   0x00000002   Code   RO        42277    .ARM.Collect$$libinit$$00000000  c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l(libinit.o)
    0x080001fe   0x00000004   Code   RO        42478    .ARM.Collect$$libinit$$00000001  c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l(libinit2.o)
    0x08000202   0x00000000   Code   RO        42481    .ARM.Collect$$libinit$$00000004  c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l(libinit2.o)
    0x08000202   0x00000008   Code   RO        42482    .ARM.Collect$$libinit$$00000005  c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l(libinit2.o)
    0x0800020a   0x00000000   Code   RO        42484    .ARM.Collect$$libinit$$0000000A  c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l(libinit2.o)
    0x0800020a   0x00000000   Code   RO        42486    .ARM.Collect$$libinit$$0000000C  c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l(libinit2.o)
    0x0800020a   0x00000000   Code   RO        42488    .ARM.Collect$$libinit$$0000000E  c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l(libinit2.o)
    0x0800020a   0x00000000   Code   RO        42491    .ARM.Collect$$libinit$$00000011  c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l(libinit2.o)
    0x0800020a   0x00000000   Code   RO        42493    .ARM.Collect$$libinit$$00000013  c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l(libinit2.o)
    0x0800020a   0x00000000   Code   RO        42495    .ARM.Collect$$libinit$$00000015  c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l(libinit2.o)
    0x0800020a   0x00000000   Code   RO        42497    .ARM.Collect$$libinit$$00000017  c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l(libinit2.o)
    0x0800020a   0x00000000   Code   RO        42499    .ARM.Collect$$libinit$$00000019  c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l(libinit2.o)
    0x0800020a   0x00000000   Code   RO        42501    .ARM.Collect$$libinit$$0000001B  c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l(libinit2.o)
    0x0800020a   0x00000000   Code   RO        42503    .ARM.Collect$$libinit$$0000001D  c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l(libinit2.o)
    0x0800020a   0x00000000   Code   RO        42505    .ARM.Collect$$libinit$$0000001F  c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l(libinit2.o)
    0x0800020a   0x00000000   Code   RO        42507    .ARM.Collect$$libinit$$00000021  c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l(libinit2.o)
    0x0800020a   0x00000000   Code   RO        42509    .ARM.Collect$$libinit$$00000023  c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l(libinit2.o)
    0x0800020a   0x00000004   Code   RO        42510    .ARM.Collect$$libinit$$00000024  c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l(libinit2.o)
    0x0800020e   0x00000000   Code   RO        42511    .ARM.Collect$$libinit$$00000025  c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l(libinit2.o)
    0x0800020e   0x00000000   Code   RO        42515    .ARM.Collect$$libinit$$0000002C  c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l(libinit2.o)
    0x0800020e   0x00000000   Code   RO        42517    .ARM.Collect$$libinit$$0000002E  c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l(libinit2.o)
    0x0800020e   0x00000000   Code   RO        42519    .ARM.Collect$$libinit$$00000030  c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l(libinit2.o)
    0x0800020e   0x00000000   Code   RO        42521    .ARM.Collect$$libinit$$00000032  c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l(libinit2.o)
    0x0800020e   0x00000002   Code   RO        42522    .ARM.Collect$$libinit$$00000033  c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l(libinit2.o)
    0x08000210   0x00000000   Code   RO        42642    .ARM.Collect$$libshutdown$$00000004  c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l(libshutdown2.o)
    0x08000210   0x00000000   Code   RO        42653    .ARM.Collect$$libshutdown$$0000000F  c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l(libshutdown2.o)
    0x08000210   0x000000c4   Code   RO           96    .text               BUILD/NUCLEO_L476RG/ARMC6/mbed-os/cmsis/CMSIS_5/CMSIS/RTOS2/RTX/Source/TOOLCHAIN_ARM/TARGET_RTOS_M4_M7/irq_cm4f.o
    0x080002d4   0x0000005c   Code   RO        33196    .text               BUILD/NUCLEO_L476RG/ARMC6/mbed-os/platform/source/TARGET_CORTEX_M/TOOLCHAIN_ARM/except.o
    0x08000330   0x00000024   Code   RO        36390    .text               BUILD/NUCLEO_L476RG/ARMC6/mbed-os/targets/TARGET_STM/TARGET_STM32L4/TARGET_STM32L476xG/device/TOOLCHAIN_ARM/startup_stm32l476xx.o
    0x08000354   0x00000002   Code   RO        42065    .text               c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l(use_no_semi_2.o)
    0x08000356   0x00000004   Code   RO        42074    .text               c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l(rt_errno_addr_twolibspace.o)
    0x0800035a   0x000000a6   Code   RO        42086    .text               c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l(h1_alloc_threads.o)
    0x08000400   0x00000076   Code   RO        42088    .text               c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l(h1_free_threads.o)
    0x08000476   0x000000f0   Code   RO        42140    .text               c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l(lludivv7m.o)
    0x08000566   0x00000002   PAD
    0x08000568   0x000000f8   Code   RO        42178    .text               c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l(fseek.o)
    0x08000660   0x00000042   Code   RO        42180    .text               c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l(ftell.o)
    0x080006a2   0x0000004c   Code   RO        42200    .text               c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l(fclose.o)
    0x080006ee   0x00000024   Code   RO        42204    .text               c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l(fputc_locked.o)
    0x08000712   0x00000002   PAD
    0x08000714   0x00000090   Code   RO        42212    .text               c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l(fflush_locked.o)
    0x080007a4   0x0000014c   Code   RO        42214    .text               c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l(fopen_locked.o)
    0x080008f0   0x0000001c   Code   RO        42232    .text               c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l(strspn.o)
    0x0800090c   0x00000058   Code   RO        42236    .text               c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l(memcmp.o)
    0x08000964   0x0000003e   Code   RO        42242    .text               c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l(strlen.o)
    0x080009a2   0x0000008a   Code   RO        42250    .text               c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l(rt_memcpy_v6.o)
    0x08000a2c   0x00000064   Code   RO        42254    .text               c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l(rt_memcpy_w.o)
    0x08000a90   0x00000010   Code   RO        42262    .text               c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l(aeabi_memset4.o)
    0x08000aa0   0x00000044   Code   RO        42264    .text               c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l(rt_memclr.o)
    0x08000ae4   0x0000004e   Code   RO        42266    .text               c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l(rt_memclr_w.o)
    0x08000b32   0x00000006   PAD
    0x08000b38   0x0000007c   Code   RO        42270    .text               c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l(strcmpv7em.o)
    0x08000bb4   0x00000006   Code   RO        42275    .text               c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l(heapauxi.o)
    0x08000bba   0x00000002   PAD
    0x08000bbc   0x00000008   Code   RO        42377    .text               c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l(libspace.o)
    0x08000bc4   0x00000002   Code   RO        42380    .text               c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l(use_no_semi.o)
    0x08000bc6   0x0000000a   Code   RO        42391    .text               c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l(rt_heap_descriptor_twolibspace.o)
    0x08000bd0   0x00000004   Code   RO        42400    .text               c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l(hguard.o)
    0x08000bd4   0x0000008a   Code   RO        42402    .text               c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l(init_alloc.o)
    0x08000c5e   0x00000012   Code   RO        42410    .text               c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l(h1_init_threads.o)
    0x08000c70   0x000001d6   Code   RO        42448    .text               c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l(flsbuf.o)
    0x08000e46   0x00000002   PAD
    0x08000e48   0x000000f0   Code   RO        42452    .text               c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l(stdio.o)
    0x08000f38   0x00000068   Code   RO        42461    .text               c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l(setvbuf_locked.o)
    0x08000fa0   0x000001c8   Code   RO        42463    .text               c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l(initio_locked.o)
    0x08001168   0x00000016   Code   RO        42468    .text               c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l(abort.o)
    0x0800117e   0x00000000   Code   RO        42572    .text               c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l(maybetermalloc2.o)
    0x0800117e   0x00000052   Code   RO        42575    .text               c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l(h1_extend_threads.o)
    0x080011d0   0x0000000e   Code   RO        42619    .text               c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l(defsig_abrt_outer.o)
    0x080011de   0x0000000e   Code   RO        42623    .text               c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l(defsig_rtred_outer.o)
    0x080011ec   0x0000000e   Code   RO        42627    .text               c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l(defsig_rtmem_outer.o)
    0x080011fa   0x00000010   Code   RO        42668    .text               c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l(term_alloc.o)
    0x0800120a   0x0000000a   Code   RO        42707    .text               c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l(defsig_exit.o)
    0x08001214   0x00000030   Code   RO        42709    .text               c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l(defsig_abrt_inner.o)
    0x08001244   0x00000034   Code   RO        42715    .text               c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l(defsig_rtred_inner.o)
    0x08001278   0x00000050   Code   RO        42717    .text               c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l(defsig_rtmem_inner.o)
    0x080012c8   0x0000000a   Code   RO        42745    .text               c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l(h1_final_threads.o)
    0x080012d2   0x00000032   Code   RO        42757    .text               c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l(defsig_general.o)
    0x08001304   0x0000001c   Code   RO        33943    .text.$Sub$$__2vfprintf  BUILD/NUCLEO_L476RG/ARMC6/mbed-os/platform/source/minimal-printf/mbed_printf_armlink_overrides.o
    0x08001320   0x0000002e   Code   RO        33703    .text.$Sub$$__rt_lib_init  BUILD/NUCLEO_L476RG/ARMC6/mbed-os/platform/source/mbed_retarget.o
    0x0800134e   0x00000002   PAD
    0x08001350   0x00000004   Code   RO        33987    .text.$Sub$$_printf_int_dec  BUILD/NUCLEO_L476RG/ARMC6/mbed-os/platform/source/minimal-printf/mbed_printf_armlink_overrides.o
    0x08001354   0x00000004   Code   RO        34033    .text.$Sub$$_printf_percent  BUILD/NUCLEO_L476RG/ARMC6/mbed-os/platform/source/minimal-printf/mbed_printf_armlink_overrides.o
    0x08001358   0x00000004   Code   RO        34049    .text.$Sub$$_printf_u  BUILD/NUCLEO_L476RG/ARMC6/mbed-os/platform/source/minimal-printf/mbed_printf_armlink_overrides.o
    0x0800135c   0x00000014   Code   RO        34102    .text.$Sub$$vsnprintf  BUILD/NUCLEO_L476RG/ARMC6/mbed-os/platform/source/minimal-printf/mbed_printf_wrapper.o
    0x08001370   0x00000010   Code   RO        32575    .text.ARM_MPU_ClrRegion  BUILD/NUCLEO_L476RG/ARMC6/mbed-os/hal/source/mpu/mbed_mpu_v7m.o
    0x08001380   0x0000000e   Code   RO        32577    .text.ARM_MPU_SetRegion  BUILD/NUCLEO_L476RG/ARMC6/mbed-os/hal/source/mpu/mbed_mpu_v7m.o
    0x0800138e   0x00000002   PAD
    0x08001390   0x00000004   Code   RO        41359    .text.CAN1_RX0_IRQHandler  BUILD/NUCLEO_L476RG/ARMC6/mbed-os/targets/TARGET_STM/can_api.o
    0x08001394   0x00000004   Code   RO        41365    .text.CAN1_SCE_IRQHandler  BUILD/NUCLEO_L476RG/ARMC6/mbed-os/targets/TARGET_STM/can_api.o
    0x08001398   0x00000004   Code   RO        41363    .text.CAN1_TX_IRQHandler  BUILD/NUCLEO_L476RG/ARMC6/mbed-os/targets/TARGET_STM/can_api.o
    0x0800139c   0x00000010   Code   RO          289    .text.ClrPendSV     BUILD/NUCLEO_L476RG/ARMC6/mbed-os/cmsis/CMSIS_5/CMSIS/RTOS2/RTX/Source/rtx_kernel.o
    0x080013ac   0x00000002   Code   RO          199    .text.EvrRtxDelayError  BUILD/NUCLEO_L476RG/ARMC6/mbed-os/cmsis/CMSIS_5/CMSIS/RTOS2/RTX/Source/rtx_evr.o
    0x080013ae   0x00000002   PAD
    0x080013b0   0x0000000e   Code   RO          981    .text.EvrRtxKernelError  BUILD/NUCLEO_L476RG/ARMC6/mbed-os/cmsis/device/rtos/source/mbed_rtx_handlers.o
    0x080013be   0x00000002   PAD
    0x080013c0   0x0000000c   Code   RO          997    .text.EvrRtxMessageQueueError  BUILD/NUCLEO_L476RG/ARMC6/mbed-os/cmsis/device/rtos/source/mbed_rtx_handlers.o
    0x080013cc   0x0000000c   Code   RO          991    .text.EvrRtxMutexError  BUILD/NUCLEO_L476RG/ARMC6/mbed-os/cmsis/device/rtos/source/mbed_rtx_handlers.o
    0x080013d8   0x0000000c   Code   RO          985    .text.EvrRtxThreadError  BUILD/NUCLEO_L476RG/ARMC6/mbed-os/cmsis/device/rtos/source/mbed_rtx_handlers.o
    0x080013e4   0x0000000e   Code   RO          999    .text.EvrRtxThreadExit  BUILD/NUCLEO_L476RG/ARMC6/mbed-os/cmsis/device/rtos/source/mbed_rtx_handlers.o
    0x080013f2   0x00000002   PAD
    0x080013f4   0x00000012   Code   RO          287    .text.GetPendSV     BUILD/NUCLEO_L476RG/ARMC6/mbed-os/cmsis/CMSIS_5/CMSIS/RTOS2/RTX/Source/rtx_kernel.o
    0x08001406   0x00000002   PAD
    0x08001408   0x00000092   Code   RO        41473    .text.HAL_GetTick   BUILD/NUCLEO_L476RG/ARMC6/mbed-os/targets/TARGET_STM/hal_tick_overrides.o
    0x0800149a   0x00000002   PAD
    0x0800149c   0x0000001e   Code   RO        36433    .text.HAL_Init      BUILD/NUCLEO_L476RG/ARMC6/mbed-os/targets/TARGET_STM/TARGET_STM32L4/device/stm32l4xx_hal.o
    0x080014ba   0x00000002   PAD
    0x080014bc   0x0000000a   Code   RO        41471    .text.HAL_InitTick  BUILD/NUCLEO_L476RG/ARMC6/mbed-os/targets/TARGET_STM/hal_tick_overrides.o
    0x080014c6   0x00000002   PAD
    0x080014c8   0x0000003e   Code   RO        37866    .text.HAL_LPTIM_Counter_Start  BUILD/NUCLEO_L476RG/ARMC6/mbed-os/targets/TARGET_STM/TARGET_STM32L4/device/stm32l4xx_hal_lptim.o
    0x08001506   0x00000002   PAD
    0x08001508   0x000000d0   Code   RO        37816    .text.HAL_LPTIM_Init  BUILD/NUCLEO_L476RG/ARMC6/mbed-os/targets/TARGET_STM/TARGET_STM32L4/device/stm32l4xx_hal_lptim.o
    0x080015d8   0x00000002   Code   RO        37818    .text.HAL_LPTIM_MspInit  BUILD/NUCLEO_L476RG/ARMC6/mbed-os/targets/TARGET_STM/TARGET_STM32L4/device/stm32l4xx_hal_lptim.o
    0x080015da   0x00000002   PAD
    0x080015dc   0x00000002   Code   RO        36437    .text.HAL_MspInit   BUILD/NUCLEO_L476RG/ARMC6/mbed-os/targets/TARGET_STM/TARGET_STM32L4/device/stm32l4xx_hal.o
    0x080015de   0x00000002   PAD
    0x080015e0   0x00000004   Code   RO        36864    .text.HAL_NVIC_SetPriorityGrouping  BUILD/NUCLEO_L476RG/ARMC6/mbed-os/targets/TARGET_STM/TARGET_STM32L4/device/stm32l4xx_hal_cortex.o
    0x080015e4   0x0000004c   Code   RO        38342    .text.HAL_PWREx_DisableLowPowerRunMode  BUILD/NUCLEO_L476RG/ARMC6/mbed-os/targets/TARGET_STM/TARGET_STM32L4/device/stm32l4xx_hal_pwr_ex.o
    0x08001630   0x00000012   Code   RO        38340    .text.HAL_PWREx_EnableLowPowerRunMode  BUILD/NUCLEO_L476RG/ARMC6/mbed-os/targets/TARGET_STM/TARGET_STM32L4/device/stm32l4xx_hal_pwr_ex.o
    0x08001642   0x00000002   PAD
    0x08001644   0x00000012   Code   RO        38298    .text.HAL_PWREx_EnableVddIO2  BUILD/NUCLEO_L476RG/ARMC6/mbed-os/targets/TARGET_STM/TARGET_STM32L4/device/stm32l4xx_hal_pwr_ex.o
    0x08001656   0x00000002   PAD
    0x08001658   0x00000010   Code   RO        38286    .text.HAL_PWREx_GetVoltageRange  BUILD/NUCLEO_L476RG/ARMC6/mbed-os/targets/TARGET_STM/TARGET_STM32L4/device/stm32l4xx_hal_pwr_ex.o
    0x08001668   0x0000004c   Code   RO        38261    .text.HAL_PWR_EnterSLEEPMode  BUILD/NUCLEO_L476RG/ARMC6/mbed-os/targets/TARGET_STM/TARGET_STM32L4/device/stm32l4xx_hal_pwr.o
    0x080016b4   0x0000001a   Code   RO        38525    .text.HAL_RCCEx_DisableLSECSS  BUILD/NUCLEO_L476RG/ARMC6/mbed-os/targets/TARGET_STM/TARGET_STM32L4/device/stm32l4xx_hal_rcc_ex.o
    0x080016ce   0x00000002   PAD
    0x080016d0   0x00000012   Code   RO        38537    .text.HAL_RCCEx_EnableMSIPLLMode  BUILD/NUCLEO_L476RG/ARMC6/mbed-os/targets/TARGET_STM/TARGET_STM32L4/device/stm32l4xx_hal_rcc_ex.o
    0x080016e2   0x00000002   PAD
    0x080016e4   0x000003ac   Code   RO        38499    .text.HAL_RCCEx_PeriphCLKConfig  BUILD/NUCLEO_L476RG/ARMC6/mbed-os/targets/TARGET_STM/TARGET_STM32L4/device/stm32l4xx_hal_rcc_ex.o
    0x08001a90   0x00000160   Code   RO        38470    .text.HAL_RCC_ClockConfig  BUILD/NUCLEO_L476RG/ARMC6/mbed-os/targets/TARGET_STM/TARGET_STM32L4/device/stm32l4xx_hal_rcc.o
    0x08001bf0   0x00000042   Code   RO        38482    .text.HAL_RCC_GetClockConfig  BUILD/NUCLEO_L476RG/ARMC6/mbed-os/targets/TARGET_STM/TARGET_STM32L4/device/stm32l4xx_hal_rcc.o
    0x08001c32   0x00000002   PAD
    0x08001c34   0x0000000c   Code   RO        38474    .text.HAL_RCC_GetHCLKFreq  BUILD/NUCLEO_L476RG/ARMC6/mbed-os/targets/TARGET_STM/TARGET_STM32L4/device/stm32l4xx_hal_rcc.o
    0x08001c40   0x00000026   Code   RO        38476    .text.HAL_RCC_GetPCLK1Freq  BUILD/NUCLEO_L476RG/ARMC6/mbed-os/targets/TARGET_STM/TARGET_STM32L4/device/stm32l4xx_hal_rcc.o
    0x08001c66   0x00000002   PAD
    0x08001c68   0x00000026   Code   RO        38478    .text.HAL_RCC_GetPCLK2Freq  BUILD/NUCLEO_L476RG/ARMC6/mbed-os/targets/TARGET_STM/TARGET_STM32L4/device/stm32l4xx_hal_rcc.o
    0x08001c8e   0x00000002   PAD
    0x08001c90   0x000000bc   Code   RO        38468    .text.HAL_RCC_GetSysClockFreq  BUILD/NUCLEO_L476RG/ARMC6/mbed-os/targets/TARGET_STM/TARGET_STM32L4/device/stm32l4xx_hal_rcc.o
    0x08001d4c   0x0000054e   Code   RO        38464    .text.HAL_RCC_OscConfig  BUILD/NUCLEO_L476RG/ARMC6/mbed-os/targets/TARGET_STM/TARGET_STM32L4/device/stm32l4xx_hal_rcc.o
    0x0800229a   0x00000002   PAD
    0x0800229c   0x00000036   Code   RO        39387    .text.HAL_TIM_OC_Init  BUILD/NUCLEO_L476RG/ARMC6/mbed-os/targets/TARGET_STM/TARGET_STM32L4/device/stm32l4xx_hal_tim.o
    0x080022d2   0x00000002   PAD
    0x080022d4   0x00000002   Code   RO        39389    .text.HAL_TIM_OC_MspInit  BUILD/NUCLEO_L476RG/ARMC6/mbed-os/targets/TARGET_STM/TARGET_STM32L4/device/stm32l4xx_hal_tim.o
    0x080022d6   0x00000002   PAD
    0x080022d8   0x00000064   Code   RO        39395    .text.HAL_TIM_OC_Start  BUILD/NUCLEO_L476RG/ARMC6/mbed-os/targets/TARGET_STM/TARGET_STM32L4/device/stm32l4xx_hal_tim.o
    0x0800233c   0x00000022   Code   RO        39873    .text.HAL_UARTEx_DisableClockStopMode  BUILD/NUCLEO_L476RG/ARMC6/mbed-os/targets/TARGET_STM/TARGET_STM32L4/device/stm32l4xx_hal_uart_ex.o
    0x0800235e   0x00000002   PAD
    0x08002360   0x00000022   Code   RO        39883    .text.HAL_UARTEx_DisableStopMode  BUILD/NUCLEO_L476RG/ARMC6/mbed-os/targets/TARGET_STM/TARGET_STM32L4/device/stm32l4xx_hal_uart_ex.o
    0x08002382   0x00000002   PAD
    0x08002384   0x00000022   Code   RO        39871    .text.HAL_UARTEx_EnableClockStopMode  BUILD/NUCLEO_L476RG/ARMC6/mbed-os/targets/TARGET_STM/TARGET_STM32L4/device/stm32l4xx_hal_uart_ex.o
    0x080023a6   0x00000002   PAD
    0x080023a8   0x00000022   Code   RO        39881    .text.HAL_UARTEx_EnableStopMode  BUILD/NUCLEO_L476RG/ARMC6/mbed-os/targets/TARGET_STM/TARGET_STM32L4/device/stm32l4xx_hal_uart_ex.o
    0x080023ca   0x00000002   PAD
    0x080023cc   0x00000060   Code   RO        39738    .text.HAL_UART_Init  BUILD/NUCLEO_L476RG/ARMC6/mbed-os/targets/TARGET_STM/TARGET_STM32L4/device/stm32l4xx_hal_uart.o
    0x0800242c   0x00000002   Code   RO        39740    .text.HAL_UART_MspInit  BUILD/NUCLEO_L476RG/ARMC6/mbed-os/targets/TARGET_STM/TARGET_STM32L4/device/stm32l4xx_hal_uart.o
    0x0800242e   0x00000002   PAD
    0x08002430   0x00000018   Code   RO          103    .text.IsIrqMasked   BUILD/NUCLEO_L476RG/ARMC6/mbed-os/cmsis/CMSIS_5/CMSIS/RTOS2/RTX/Source/rtx_delay.o
    0x08002448   0x00000018   Code   RO          227    .text.IsIrqMasked   BUILD/NUCLEO_L476RG/ARMC6/mbed-os/cmsis/CMSIS_5/CMSIS/RTOS2/RTX/Source/rtx_kernel.o
    0x08002460   0x00000018   Code   RO          427    .text.IsIrqMasked   BUILD/NUCLEO_L476RG/ARMC6/mbed-os/cmsis/CMSIS_5/CMSIS/RTOS2/RTX/Source/rtx_msgqueue.o
    0x08002478   0x00000018   Code   RO          510    .text.IsIrqMasked   BUILD/NUCLEO_L476RG/ARMC6/mbed-os/cmsis/CMSIS_5/CMSIS/RTOS2/RTX/Source/rtx_mutex.o
    0x08002490   0x00000018   Code   RO          699    .text.IsIrqMasked   BUILD/NUCLEO_L476RG/ARMC6/mbed-os/cmsis/CMSIS_5/CMSIS/RTOS2/RTX/Source/rtx_thread.o
    0x080024a8   0x0000000c   Code   RO          101    .text.IsIrqMode     BUILD/NUCLEO_L476RG/ARMC6/mbed-os/cmsis/CMSIS_5/CMSIS/RTOS2/RTX/Source/rtx_delay.o
    0x080024b4   0x0000000c   Code   RO          225    .text.IsIrqMode     BUILD/NUCLEO_L476RG/ARMC6/mbed-os/cmsis/CMSIS_5/CMSIS/RTOS2/RTX/Source/rtx_kernel.o
    0x080024c0   0x0000000c   Code   RO          425    .text.IsIrqMode     BUILD/NUCLEO_L476RG/ARMC6/mbed-os/cmsis/CMSIS_5/CMSIS/RTOS2/RTX/Source/rtx_msgqueue.o
    0x080024cc   0x0000000c   Code   RO          508    .text.IsIrqMode     BUILD/NUCLEO_L476RG/ARMC6/mbed-os/cmsis/CMSIS_5/CMSIS/RTOS2/RTX/Source/rtx_mutex.o
    0x080024d8   0x0000000c   Code   RO          697    .text.IsIrqMode     BUILD/NUCLEO_L476RG/ARMC6/mbed-os/cmsis/CMSIS_5/CMSIS/RTOS2/RTX/Source/rtx_thread.o
    0x080024e4   0x0000000c   Code   RO          231    .text.IsPrivileged  BUILD/NUCLEO_L476RG/ARMC6/mbed-os/cmsis/CMSIS_5/CMSIS/RTOS2/RTX/Source/rtx_kernel.o
    0x080024f0   0x00000028   Code   RO          285    .text.KernelBlock   BUILD/NUCLEO_L476RG/ARMC6/mbed-os/cmsis/CMSIS_5/CMSIS/RTOS2/RTX/Source/rtx_kernel.o
    0x08002518   0x00000024   Code   RO          293    .text.KernelUnblock  BUILD/NUCLEO_L476RG/ARMC6/mbed-os/cmsis/CMSIS_5/CMSIS/RTOS2/RTX/Source/rtx_kernel.o
    0x0800253c   0x0000000a   Code   RO        41688    .text.LL_GPIO_DisablePinAnalogControl  BUILD/NUCLEO_L476RG/ARMC6/mbed-os/targets/TARGET_STM/pinmap.o
    0x08002546   0x00000002   PAD
    0x08002548   0x00000008   Code   RO        41686    .text.LL_GPIO_EnablePinAnalogControl  BUILD/NUCLEO_L476RG/ARMC6/mbed-os/targets/TARGET_STM/pinmap.o
    0x08002550   0x00000016   Code   RO        41696    .text.LL_GPIO_GetPinMode  BUILD/NUCLEO_L476RG/ARMC6/mbed-os/targets/TARGET_STM/pinmap.o
    0x08002566   0x00000002   PAD
    0x08002568   0x00000020   Code   RO        41700    .text.LL_GPIO_SetAFPin_0_7  BUILD/NUCLEO_L476RG/ARMC6/mbed-os/targets/TARGET_STM/pinmap.o
    0x08002588   0x00000022   Code   RO        41698    .text.LL_GPIO_SetAFPin_8_15  BUILD/NUCLEO_L476RG/ARMC6/mbed-os/targets/TARGET_STM/pinmap.o
    0x080025aa   0x00000002   PAD
    0x080025ac   0x00000020   Code   RO        41399    .text.LL_GPIO_SetPinMode  BUILD/NUCLEO_L476RG/ARMC6/mbed-os/targets/TARGET_STM/gpio_api.o
    0x080025cc   0x00000020   Code   RO        41684    .text.LL_GPIO_SetPinMode  BUILD/NUCLEO_L476RG/ARMC6/mbed-os/targets/TARGET_STM/pinmap.o
    0x080025ec   0x0000000c   Code   RO        41690    .text.LL_GPIO_SetPinOutputType  BUILD/NUCLEO_L476RG/ARMC6/mbed-os/targets/TARGET_STM/pinmap.o
    0x080025f8   0x00000020   Code   RO        41702    .text.LL_GPIO_SetPinPull  BUILD/NUCLEO_L476RG/ARMC6/mbed-os/targets/TARGET_STM/pinmap.o
    0x08002618   0x00000020   Code   RO        41680    .text.LL_GPIO_SetPinSpeed  BUILD/NUCLEO_L476RG/ARMC6/mbed-os/targets/TARGET_STM/pinmap.o
    0x08002638   0x00000010   Code   RO        41868    .text.LL_PWR_IsEnabledLowPowerRunMode  BUILD/NUCLEO_L476RG/ARMC6/mbed-os/targets/TARGET_STM/sleep.o
    0x08002648   0x0000000a   Code   RO        42016    .text.LL_TIM_GenerateEvent_CC1  BUILD/NUCLEO_L476RG/ARMC6/mbed-os/targets/TARGET_STM/us_ticker.o
    0x08002652   0x00000002   PAD
    0x08002654   0x000000fe   Code   RO        41604    .text.LPTIM_IRQHandler  BUILD/NUCLEO_L476RG/ARMC6/mbed-os/targets/TARGET_STM/lp_ticker.o
    0x08002752   0x00000002   PAD
    0x08002754   0x00000004   Code   RO          333    .text.MemBlockPtr   BUILD/NUCLEO_L476RG/ARMC6/mbed-os/cmsis/CMSIS_5/CMSIS/RTOS2/RTX/Source/rtx_memory.o
    0x08002758   0x00000002   Code   RO          331    .text.MemHeadPtr    BUILD/NUCLEO_L476RG/ARMC6/mbed-os/cmsis/CMSIS_5/CMSIS/RTOS2/RTX/Source/rtx_memory.o
    0x0800275a   0x00000002   PAD
    0x0800275c   0x0000002a   Code   RO          479    .text.MessageQueueGet  BUILD/NUCLEO_L476RG/ARMC6/mbed-os/cmsis/CMSIS_5/CMSIS/RTOS2/RTX/Source/rtx_msgqueue.o
    0x08002786   0x00000002   PAD
    0x08002788   0x00000056   Code   RO          467    .text.MessageQueuePut  BUILD/NUCLEO_L476RG/ARMC6/mbed-os/cmsis/CMSIS_5/CMSIS/RTOS2/RTX/Source/rtx_msgqueue.o
    0x080027de   0x00000002   PAD
    0x080027e0   0x00000026   Code   RO          463    .text.MessageQueueRemove  BUILD/NUCLEO_L476RG/ARMC6/mbed-os/cmsis/CMSIS_5/CMSIS/RTOS2/RTX/Source/rtx_msgqueue.o
    0x08002806   0x00000002   PAD
    0x08002808   0x0000000e   Code   RO         1032    .text.OS_Tick_AcknowledgeIRQ  BUILD/NUCLEO_L476RG/ARMC6/mbed-os/cmsis/device/rtos/source/mbed_rtx_idle.o
    0x08002816   0x00000002   PAD
    0x08002818   0x0000000e   Code   RO         1030    .text.OS_Tick_Disable  BUILD/NUCLEO_L476RG/ARMC6/mbed-os/cmsis/device/rtos/source/mbed_rtx_idle.o
    0x08002826   0x00000002   PAD
    0x08002828   0x0000000e   Code   RO         1028    .text.OS_Tick_Enable  BUILD/NUCLEO_L476RG/ARMC6/mbed-os/cmsis/device/rtos/source/mbed_rtx_idle.o
    0x08002836   0x00000002   PAD
    0x08002838   0x00000008   Code   RO         1036    .text.OS_Tick_GetIRQn  BUILD/NUCLEO_L476RG/ARMC6/mbed-os/cmsis/device/rtos/source/mbed_rtx_idle.o
    0x08002840   0x00000094   Code   RO         1018    .text.OS_Tick_Setup  BUILD/NUCLEO_L476RG/ARMC6/mbed-os/cmsis/device/rtos/source/mbed_rtx_idle.o
    0x080028d4   0x00000138   Code   RO        38501    .text.RCCEx_PLLSAI1_Config  BUILD/NUCLEO_L476RG/ARMC6/mbed-os/targets/TARGET_STM/TARGET_STM32L4/device/stm32l4xx_hal_rcc_ex.o
    0x08002a0c   0x00000114   Code   RO        38503    .text.RCCEx_PLLSAI2_Config  BUILD/NUCLEO_L476RG/ARMC6/mbed-os/targets/TARGET_STM/TARGET_STM32L4/device/stm32l4xx_hal_rcc_ex.o
    0x08002b20   0x0000008e   Code   RO        38466    .text.RCC_SetFlashLatencyFromMSIRange  BUILD/NUCLEO_L476RG/ARMC6/mbed-os/targets/TARGET_STM/TARGET_STM32L4/device/stm32l4xx_hal_rcc.o
    0x08002bae   0x00000002   PAD
    0x08002bb0   0x00000030   Code   RO          273    .text.SVC_Setup     BUILD/NUCLEO_L476RG/ARMC6/mbed-os/cmsis/CMSIS_5/CMSIS/RTOS2/RTX/Source/rtx_kernel.o
    0x08002be0   0x00000010   Code   RO          295    .text.SetPendSV     BUILD/NUCLEO_L476RG/ARMC6/mbed-os/cmsis/CMSIS_5/CMSIS/RTOS2/RTX/Source/rtx_kernel.o
    0x08002bf0   0x00000010   Code   RO          626    .text.SetPendSV     BUILD/NUCLEO_L476RG/ARMC6/mbed-os/cmsis/CMSIS_5/CMSIS/RTOS2/RTX/Source/rtx_system.o
    0x08002c00   0x00000028   Code   RO        36378    .text.SetSysClock   BUILD/NUCLEO_L476RG/ARMC6/mbed-os/targets/TARGET_STM/TARGET_STM32L4/TARGET_STM32L476xG/TARGET_NUCLEO_L476RG/system_clock.o
    0x08002c28   0x00000086   Code   RO        36380    .text.SetSysClock_PLL_MSI  BUILD/NUCLEO_L476RG/ARMC6/mbed-os/targets/TARGET_STM/TARGET_STM32L4/TARGET_STM32L476xG/TARGET_NUCLEO_L476RG/system_clock.o
    0x08002cae   0x00000002   PAD
    0x08002cb0   0x0000019c   Code   RO        41389    .text.Set_GPIO_Clock  BUILD/NUCLEO_L476RG/ARMC6/mbed-os/targets/TARGET_STM/gpio_api.o
    0x08002e4c   0x0000000c   Code   RO          667    .text.StackOffsetR0  BUILD/NUCLEO_L476RG/ARMC6/mbed-os/cmsis/CMSIS_5/CMSIS/RTOS2/RTX/Source/rtx_thread.o
    0x08002e58   0x000000be   Code   RO        41133    .text.SystemCoreClockUpdate  BUILD/NUCLEO_L476RG/ARMC6/mbed-os/targets/TARGET_STM/TARGET_STM32L4/device/system_stm32l4xx.o
    0x08002f16   0x00000002   PAD
    0x08002f18   0x00000056   Code   RO        41131    .text.SystemInit    BUILD/NUCLEO_L476RG/ARMC6/mbed-os/targets/TARGET_STM/TARGET_STM32L4/device/system_stm32l4xx.o
    0x08002f6e   0x00000002   PAD
    0x08002f70   0x00000122   Code   RO        39363    .text.TIM_Base_SetConfig  BUILD/NUCLEO_L476RG/ARMC6/mbed-os/targets/TARGET_STM/TARGET_STM32L4/device/stm32l4xx_hal_tim.o
    0x08003092   0x00000002   PAD
    0x08003094   0x00000024   Code   RO        39397    .text.TIM_CCxChannelCmd  BUILD/NUCLEO_L476RG/ARMC6/mbed-os/targets/TARGET_STM/TARGET_STM32L4/device/stm32l4xx_hal_tim.o
    0x080030b8   0x00000002   Code   RO        41665    .text.TargetBSP_Init  BUILD/NUCLEO_L476RG/ARMC6/mbed-os/targets/TARGET_STM/mbed_overrides.o
    0x080030ba   0x00000002   PAD
    0x080030bc   0x0000003a   Code   RO          747    .text.ThreadFlagsCheck  BUILD/NUCLEO_L476RG/ARMC6/mbed-os/cmsis/CMSIS_5/CMSIS/RTOS2/RTX/Source/rtx_thread.o
    0x080030f6   0x00000002   PAD
    0x080030f8   0x00000056   Code   RO          842    .text.TimerInsert   BUILD/NUCLEO_L476RG/ARMC6/mbed-os/cmsis/CMSIS_5/CMSIS/RTOS2/RTX/Source/rtx_timer.o
    0x0800314e   0x00000002   PAD
    0x08003150   0x00000018   Code   RO          840    .text.TimerUnlink   BUILD/NUCLEO_L476RG/ARMC6/mbed-os/cmsis/CMSIS_5/CMSIS/RTOS2/RTX/Source/rtx_timer.o
    0x08003168   0x000000e6   Code   RO        39744    .text.UART_AdvFeatureConfig  BUILD/NUCLEO_L476RG/ARMC6/mbed-os/targets/TARGET_STM/TARGET_STM32L4/device/stm32l4xx_hal_uart.o
    0x0800324e   0x00000002   PAD
    0x08003250   0x00000066   Code   RO        39746    .text.UART_CheckIdleState  BUILD/NUCLEO_L476RG/ARMC6/mbed-os/targets/TARGET_STM/TARGET_STM32L4/device/stm32l4xx_hal_uart.o
    0x080032b6   0x00000002   PAD
    0x080032b8   0x00000298   Code   RO        39742    .text.UART_SetConfig  BUILD/NUCLEO_L476RG/ARMC6/mbed-os/targets/TARGET_STM/TARGET_STM32L4/device/stm32l4xx_hal_uart.o
    0x08003550   0x00000082   Code   RO        39760    .text.UART_WaitOnFlagUntilTimeout  BUILD/NUCLEO_L476RG/ARMC6/mbed-os/targets/TARGET_STM/TARGET_STM32L4/device/stm32l4xx_hal_uart.o
    0x080035d2   0x00000002   PAD
    0x080035d4   0x00000004   Code   RO         9023    .text._Z21core_util_atomic_loadIN4rtos5MutexEEPT_PKS3_  BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/mbedtls/platform/src/mbed_trng.o
    0x080035d8   0x00000004   Code   RO         9025    .text._Z22core_util_atomic_storeIN4rtos5MutexEEvPPT_S3_  BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/mbedtls/platform/src/mbed_trng.o
    0x080035dc   0x00000010   Code   RO            9    .text._ZL10gpio_writeP6gpio_ti  BUILD/NUCLEO_L476RG/ARMC6/main.o
    0x080035ec   0x00000026   Code   RO        33645    .text._ZL11get_consolei  BUILD/NUCLEO_L476RG/ARMC6/mbed-os/platform/source/mbed_retarget.o
    0x08003612   0x00000002   PAD
    0x08003614   0x0000000e   Code   RO        33675    .text._ZL12convert_crlfi  BUILD/NUCLEO_L476RG/ARMC6/mbed-os/platform/source/mbed_retarget.o
    0x08003622   0x00000002   PAD
    0x08003624   0x00000018   Code   RO        27446    .text._ZL14singleton_lockv  BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/netsocket/source/nsapi_dns.o
    0x0800363c   0x00000018   Code   RO        33767    .text._ZL14singleton_lockv  BUILD/NUCLEO_L476RG/ARMC6/mbed-os/platform/source/mbed_retarget.o
    0x08003654   0x0000004e   Code   RO        33799    .text._ZL15default_consolev  BUILD/NUCLEO_L476RG/ARMC6/mbed-os/platform/source/mbed_retarget.o
    0x080036a2   0x00000002   PAD
    0x080036a4   0x00000020   Code   RO         1026    .text._ZL16__NVIC_EnableIRQ9IRQn_Type  BUILD/NUCLEO_L476RG/ARMC6/mbed-os/cmsis/device/rtos/source/mbed_rtx_idle.o
    0x080036c4   0x00000012   Code   RO         1024    .text._ZL16__NVIC_GetVector9IRQn_Type  BUILD/NUCLEO_L476RG/ARMC6/mbed-os/cmsis/device/rtos/source/mbed_rtx_idle.o
    0x080036d6   0x00000002   PAD
    0x080036d8   0x00000012   Code   RO         1022    .text._ZL16__NVIC_SetVector9IRQn_Typej  BUILD/NUCLEO_L476RG/ARMC6/mbed-os/cmsis/device/rtos/source/mbed_rtx_idle.o
    0x080036ea   0x00000002   PAD
    0x080036ec   0x00000014   Code   RO        27448    .text._ZL16singleton_unlockv  BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/netsocket/source/nsapi_dns.o
    0x08003700   0x00000014   Code   RO        33769    .text._ZL16singleton_unlockv  BUILD/NUCLEO_L476RG/ARMC6/mbed-os/platform/source/mbed_retarget.o
    0x08003714   0x00000064   Code   RO         1046    .text._ZL17default_idle_hookv  BUILD/NUCLEO_L476RG/ARMC6/mbed-os/cmsis/device/rtos/source/mbed_rtx_idle.o
    0x08003778   0x00000024   Code   RO         1020    .text._ZL18__NVIC_SetPriority9IRQn_Typej  BUILD/NUCLEO_L476RG/ARMC6/mbed-os/cmsis/device/rtos/source/mbed_rtx_idle.o
    0x0800379c   0x0000001c   Code   RO        33667    .text._ZL18handle_open_errorsij  BUILD/NUCLEO_L476RG/ARMC6/mbed-os/platform/source/mbed_retarget.o
    0x080037b8   0x0000002a   Code   RO        33665    .text._ZL18openflags_to_posixi  BUILD/NUCLEO_L476RG/ARMC6/mbed-os/platform/source/mbed_retarget.o
    0x080037e2   0x00000002   PAD
    0x080037e4   0x00000052   Code   RO        33649    .text._ZL18reserve_filehandlev  BUILD/NUCLEO_L476RG/ARMC6/mbed-os/platform/source/mbed_retarget.o
    0x08003836   0x00000002   PAD
    0x08003838   0x00000012   Code   RO         1050    .text._ZL18rtos_event_pendingPv  BUILD/NUCLEO_L476RG/ARMC6/mbed-os/cmsis/device/rtos/source/mbed_rtx_idle.o
    0x0800384a   0x00000002   PAD
    0x0800384c   0x00000004   Code   RO        33551    .text._ZL5sleepv    BUILD/NUCLEO_L476RG/ARMC6/mbed-os/platform/source/mbed_os_timer.o
    0x08003850   0x0000000e   Code   RO            7    .text._ZL9gpio_readP6gpio_t  BUILD/NUCLEO_L476RG/ARMC6/main.o
    0x0800385e   0x00000002   PAD
    0x08003860   0x0000001e   Code   RO        33631    .text._ZN12DirectSerial4readEPvj  BUILD/NUCLEO_L476RG/ARMC6/mbed-os/platform/source/mbed_retarget.o
    0x0800387e   0x00000002   PAD
    0x08003880   0x00000006   Code   RO        33831    .text._ZN12DirectSerial4seekEli  BUILD/NUCLEO_L476RG/ARMC6/mbed-os/platform/source/mbed_retarget.o
    0x08003886   0x00000002   PAD
    0x08003888   0x00000006   Code   RO        33837    .text._ZN12DirectSerial4sizeEv  BUILD/NUCLEO_L476RG/ARMC6/mbed-os/platform/source/mbed_retarget.o
    0x0800388e   0x00000002   PAD
    0x08003890   0x00000004   Code   RO        33833    .text._ZN12DirectSerial5closeEv  BUILD/NUCLEO_L476RG/ARMC6/mbed-os/platform/source/mbed_retarget.o
    0x08003894   0x00000028   Code   RO        33629    .text._ZN12DirectSerial5writeEPKvj  BUILD/NUCLEO_L476RG/ARMC6/mbed-os/platform/source/mbed_retarget.o
    0x080038bc   0x00000004   Code   RO        33835    .text._ZN12DirectSerial6isattyEv  BUILD/NUCLEO_L476RG/ARMC6/mbed-os/platform/source/mbed_retarget.o
    0x080038c0   0x00000044   Code   RO        33627    .text._ZN12DirectSerialC2ERK15serial_pinmap_ti  BUILD/NUCLEO_L476RG/ARMC6/mbed-os/platform/source/mbed_retarget.o
    0x08003904   0x0000000e   Code   RO        33829    .text._ZN12DirectSerialD0Ev  BUILD/NUCLEO_L476RG/ARMC6/mbed-os/platform/source/mbed_retarget.o
    0x08003912   0x00000002   PAD
    0x08003914   0x00000004   Code   RO           27    .text._ZN4mbed10DigitalOut4readEv  BUILD/NUCLEO_L476RG/ARMC6/main.o
    0x08003918   0x00000004   Code   RO           29    .text._ZN4mbed10DigitalOut5writeEi  BUILD/NUCLEO_L476RG/ARMC6/main.o
    0x0800391c   0x0000001e   Code   RO           21    .text._ZN4mbed10DigitalOutC2E7PinName  BUILD/NUCLEO_L476RG/ARMC6/main.o
    0x0800393a   0x00000002   PAD
    0x0800393c   0x0000000c   Code   RO           25    .text._ZN4mbed10DigitalOutaSEi  BUILD/NUCLEO_L476RG/ARMC6/main.o
    0x08003948   0x00000004   Code   RO           23    .text._ZN4mbed10DigitalOutcviEv  BUILD/NUCLEO_L476RG/ARMC6/main.o
    0x0800394c   0x00000006   Code   RO        30009    .text._ZN4mbed10FileHandle12enable_inputEb  BUILD/NUCLEO_L476RG/ARMC6/mbed-os/drivers/source/UnbufferedSerial.o
    0x08003952   0x00000002   PAD
    0x08003954   0x0000000c   Code   RO        30005    .text._ZN4mbed10FileHandle12set_blockingEb  BUILD/NUCLEO_L476RG/ARMC6/mbed-os/drivers/source/UnbufferedSerial.o
    0x08003960   0x00000006   Code   RO        30011    .text._ZN4mbed10FileHandle13enable_outputEb  BUILD/NUCLEO_L476RG/ARMC6/mbed-os/drivers/source/UnbufferedSerial.o
    0x08003966   0x00000002   PAD
    0x08003968   0x00000038   Code   RO        32907    .text._ZN4mbed10FileHandle4sizeEv  BUILD/NUCLEO_L476RG/ARMC6/mbed-os/platform/source/FileHandle.o
    0x080039a0   0x00000004   Code   RO        29999    .text._ZN4mbed10FileHandle4syncEv  BUILD/NUCLEO_L476RG/ARMC6/mbed-os/drivers/source/UnbufferedSerial.o
    0x080039a4   0x0000000a   Code   RO        28912    .text._ZN4mbed10FileHandle4tellEv  BUILD/NUCLEO_L476RG/ARMC6/mbed-os/drivers/source/BufferedSerial.o
    0x080039ae   0x00000002   PAD
    0x080039b0   0x00000002   Code   RO        30013    .text._ZN4mbed10FileHandle5sigioENS_8CallbackIFvvEEE  BUILD/NUCLEO_L476RG/ARMC6/mbed-os/drivers/source/UnbufferedSerial.o
    0x080039b2   0x00000002   PAD
    0x080039b4   0x00000004   Code   RO        32920    .text._ZN4mbed10FileHandle6isattyEv  BUILD/NUCLEO_L476RG/ARMC6/mbed-os/platform/source/FileHandle.o
    0x080039b8   0x0000000a   Code   RO        28914    .text._ZN4mbed10FileHandle6rewindEv  BUILD/NUCLEO_L476RG/ARMC6/mbed-os/drivers/source/BufferedSerial.o
    0x080039c2   0x00000002   PAD
    0x080039c4   0x00000006   Code   RO        28916    .text._ZN4mbed10FileHandle8truncateEl  BUILD/NUCLEO_L476RG/ARMC6/mbed-os/drivers/source/BufferedSerial.o
    0x080039ca   0x00000002   PAD
    0x080039cc   0x0000000e   Code   RO        28890    .text._ZN4mbed10FileHandleC2Ev  BUILD/NUCLEO_L476RG/ARMC6/mbed-os/drivers/source/BufferedSerial.o
    0x080039da   0x00000002   PAD
    0x080039dc   0x00000002   Code   RO        32918    .text._ZN4mbed10FileHandleD0Ev  BUILD/NUCLEO_L476RG/ARMC6/mbed-os/platform/source/FileHandle.o
    0x080039de   0x00000002   PAD
    0x080039e0   0x00000002   Code   RO        28896    .text._ZN4mbed10FileHandleD2Ev  BUILD/NUCLEO_L476RG/ARMC6/mbed-os/drivers/source/BufferedSerial.o
    0x080039e2   0x00000002   PAD
    0x080039e4   0x00000018   Code   RO        29930    .text._ZN4mbed10TimerEvent15insert_absoluteENSt3__16chrono10time_pointINS_15TickerDataClockENS2_8durationIxNS1_5ratioILx1ELx1000000EEEEEEE  BUILD/NUCLEO_L476RG/ARMC6/mbed-os/drivers/source/TimerEvent.o
    0x080039fc   0x00000006   Code   RO        29920    .text._ZN4mbed10TimerEvent3irqEj  BUILD/NUCLEO_L476RG/ARMC6/mbed-os/drivers/source/TimerEvent.o
    0x08003a02   0x00000002   PAD
    0x08003a04   0x0000000e   Code   RO        29924    .text._ZN4mbed10TimerEvent6removeEv  BUILD/NUCLEO_L476RG/ARMC6/mbed-os/drivers/source/TimerEvent.o
    0x08003a12   0x00000002   PAD
    0x08003a14   0x00000032   Code   RO        29918    .text._ZN4mbed10TimerEventC2EPK13ticker_data_t  BUILD/NUCLEO_L476RG/ARMC6/mbed-os/drivers/source/TimerEvent.o
    0x08003a46   0x00000002   PAD
    0x08003a48   0x00000006   Code   RO        29942    .text._ZN4mbed15TickerDataClock11set_handlerEPFvjE  BUILD/NUCLEO_L476RG/ARMC6/mbed-os/drivers/source/TimerEvent.o
    0x08003a4e   0x00000002   PAD
    0x08003a50   0x00000006   Code   RO        29946    .text._ZN4mbed15TickerDataClock12insert_eventEP14ticker_event_sNSt3__16chrono10time_pointIS0_NS4_8durationIxNS3_5ratioILx1ELx1000000EEEEEEEj  BUILD/NUCLEO_L476RG/ARMC6/mbed-os/drivers/source/TimerEvent.o
    0x08003a56   0x00000002   PAD
    0x08003a58   0x00000006   Code   RO        29948    .text._ZN4mbed15TickerDataClock12remove_eventEP14ticker_event_s  BUILD/NUCLEO_L476RG/ARMC6/mbed-os/drivers/source/TimerEvent.o
    0x08003a5e   0x00000002   PAD
    0x08003a60   0x00000004   Code   RO        29911    .text._ZN4mbed15TickerDataClockC2EPK13ticker_data_t  BUILD/NUCLEO_L476RG/ARMC6/mbed-os/drivers/source/Timer.o
    0x08003a64   0x0000002e   Code   RO        33643    .text._ZN4mbed16mbed_file_handleEi  BUILD/NUCLEO_L476RG/ARMC6/mbed-os/platform/source/mbed_retarget.o
    0x08003a92   0x00000002   PAD
    0x08003a94   0x0000000c   Code   RO        32836    .text._ZN4mbed19CriticalSectionLockC2Ev  BUILD/NUCLEO_L476RG/ARMC6/mbed-os/platform/source/CriticalSectionLock.o
    0x08003aa0   0x0000000c   Code   RO        32838    .text._ZN4mbed19CriticalSectionLockD2Ev  BUILD/NUCLEO_L476RG/ARMC6/mbed-os/platform/source/CriticalSectionLock.o
    0x08003aac   0x00000004   Code   RO        33641    .text._ZN4mbed21mbed_override_consoleEi  BUILD/NUCLEO_L476RG/ARMC6/mbed-os/platform/source/mbed_retarget.o
    0x08003ab0   0x00000004   Code   RO        33639    .text._ZN4mbed28mbed_target_override_consoleEi  BUILD/NUCLEO_L476RG/ARMC6/mbed-os/platform/source/mbed_retarget.o
    0x08003ab4   0x00000002   Code   RO        29375    .text._ZN4mbed4impl7MbedCRCILj79764919ELh32ELNS_7CrcModeE2EE10shift_leftEj  BUILD/NUCLEO_L476RG/ARMC6/mbed-os/drivers/source/MbedCRC.o
    0x08003ab6   0x00000002   PAD
    0x08003ab8   0x00000004   Code   RO        29373    .text._ZN4mbed4impl7MbedCRCILj79764919ELh32ELNS_7CrcModeE2EE11reflect_crcEj  BUILD/NUCLEO_L476RG/ARMC6/mbed-os/drivers/source/MbedCRC.o
    0x08003abc   0x00000002   Code   RO        29395    .text._ZN4mbed4impl7MbedCRCILj79764919ELh32ELNS_7CrcModeE2EE11shift_rightEj  BUILD/NUCLEO_L476RG/ARMC6/mbed-os/drivers/source/MbedCRC.o
    0x08003abe   0x00000002   PAD
    0x08003ac0   0x00000006   Code   RO        29401    .text._ZN4mbed4impl7MbedCRCILj79764919ELh32ELNS_7CrcModeE2EE12get_crc_maskEv  BUILD/NUCLEO_L476RG/ARMC6/mbed-os/drivers/source/MbedCRC.o
    0x08003ac6   0x00000002   PAD
    0x08003ac8   0x00000004   Code   RO        29383    .text._ZN4mbed4impl7MbedCRCILj79764919ELh32ELNS_7CrcModeE2EE15compute_partialEPKvjPj  BUILD/NUCLEO_L476RG/ARMC6/mbed-os/drivers/source/MbedCRC.o
    0x08003acc   0x00000012   Code   RO        29391    .text._ZN4mbed4impl7MbedCRCILj79764919ELh32ELNS_7CrcModeE2EE15do_1_bit_normalEj  BUILD/NUCLEO_L476RG/ARMC6/mbed-os/drivers/source/MbedCRC.o
    0x08003ade   0x00000002   PAD
    0x08003ae0   0x00000006   Code   RO        29397    .text._ZN4mbed4impl7MbedCRCILj79764919ELh32ELNS_7CrcModeE2EE16reflect_constantEj  BUILD/NUCLEO_L476RG/ARMC6/mbed-os/drivers/source/MbedCRC.o
    0x08003ae6   0x00000002   PAD
    0x08003ae8   0x00000012   Code   RO        29389    .text._ZN4mbed4impl7MbedCRCILj79764919ELh32ELNS_7CrcModeE2EE18do_1_bit_reflectedEj  BUILD/NUCLEO_L476RG/ARMC6/mbed-os/drivers/source/MbedCRC.o
    0x08003afa   0x00000002   PAD
    0x08003afc   0x0000000c   Code   RO        29399    .text._ZN4mbed4impl7MbedCRCILj79764919ELh32ELNS_7CrcModeE2EE18get_top_polynomialEv  BUILD/NUCLEO_L476RG/ARMC6/mbed-os/drivers/source/MbedCRC.o
    0x08003b08   0x0000000c   Code   RO        29371    .text._ZN4mbed4impl7MbedCRCILj79764919ELh32ELNS_7CrcModeE2EE20adjust_initial_valueEjb  BUILD/NUCLEO_L476RG/ARMC6/mbed-os/drivers/source/MbedCRC.o
    0x08003b14   0x00000036   Code   RO        29385    .text._ZN4mbed4impl7MbedCRCILj79764919ELh32ELNS_7CrcModeE2EE20compute_partial_stopEPj  BUILD/NUCLEO_L476RG/ARMC6/mbed-os/drivers/source/MbedCRC.o
    0x08003b4a   0x00000002   PAD
    0x08003b4c   0x00000008   Code   RO        29381    .text._ZN4mbed4impl7MbedCRCILj79764919ELh32ELNS_7CrcModeE2EE21compute_partial_startEPj  BUILD/NUCLEO_L476RG/ARMC6/mbed-os/drivers/source/MbedCRC.o
    0x08003b54   0x00000016   Code   RO        29393    .text._ZN4mbed4impl7MbedCRCILj79764919ELh32ELNS_7CrcModeE2EE24get_reflected_polynomialEv  BUILD/NUCLEO_L476RG/ARMC6/mbed-os/drivers/source/MbedCRC.o
    0x08003b6a   0x00000002   PAD
    0x08003b6c   0x00000034   Code   RO        29379    .text._ZN4mbed4impl7MbedCRCILj79764919ELh32ELNS_7CrcModeE2EE7computeEPKvjPj  BUILD/NUCLEO_L476RG/ARMC6/mbed-os/drivers/source/MbedCRC.o
    0x08003ba0   0x00000006   Code   RO        29377    .text._ZN4mbed4impl7MbedCRCILj79764919ELh32ELNS_7CrcModeE2EE7reflectEj  BUILD/NUCLEO_L476RG/ARMC6/mbed-os/drivers/source/MbedCRC.o
    0x08003ba6   0x00000002   PAD
    0x08003ba8   0x00000022   Code   RO        29369    .text._ZN4mbed4impl7MbedCRCILj79764919ELh32ELNS_7CrcModeE2EEC2Ejjbb  BUILD/NUCLEO_L476RG/ARMC6/mbed-os/drivers/source/MbedCRC.o
    0x08003bca   0x00000002   PAD
    0x08003bcc   0x00000004   Code   RO        29367    .text._ZN4mbed7MbedCRCILj79764919ELh32ELNS_7CrcModeE2EE7computeEPKvjPj  BUILD/NUCLEO_L476RG/ARMC6/mbed-os/drivers/source/MbedCRC.o
    0x08003bd0   0x00000014   Code   RO        29365    .text._ZN4mbed7MbedCRCILj79764919ELh32ELNS_7CrcModeE2EEC2Ejjbb  BUILD/NUCLEO_L476RG/ARMC6/mbed-os/drivers/source/MbedCRC.o
    0x08003be4   0x00000004   Code   RO        32878    .text._ZN4mbed8FileBase11getPathTypeEv  BUILD/NUCLEO_L476RG/ARMC6/mbed-os/platform/source/FileBase.o
    0x08003be8   0x000000a8   Code   RO        32884    .text._ZN4mbed8FileBase6lookupEPKcj  BUILD/NUCLEO_L476RG/ARMC6/mbed-os/platform/source/FileBase.o
    0x08003c90   0x0000001a   Code   RO        32929    .text._ZN4mbed8FilePath10fileSystemEv  BUILD/NUCLEO_L476RG/ARMC6/mbed-os/platform/source/FilePath.o
    0x08003caa   0x00000002   PAD
    0x08003cac   0x00000018   Code   RO        32927    .text._ZN4mbed8FilePath12isFileSystemEv  BUILD/NUCLEO_L476RG/ARMC6/mbed-os/platform/source/FilePath.o
    0x08003cc4   0x0000001a   Code   RO        32933    .text._ZN4mbed8FilePath4fileEv  BUILD/NUCLEO_L476RG/ARMC6/mbed-os/platform/source/FilePath.o
    0x08003cde   0x00000002   PAD
    0x08003ce0   0x0000000a   Code   RO        32935    .text._ZN4mbed8FilePath6existsEv  BUILD/NUCLEO_L476RG/ARMC6/mbed-os/platform/source/FilePath.o
    0x08003cea   0x00000002   PAD
    0x08003cec   0x00000016   Code   RO        32931    .text._ZN4mbed8FilePath6isFileEv  BUILD/NUCLEO_L476RG/ARMC6/mbed-os/platform/source/FilePath.o
    0x08003d02   0x00000002   PAD
    0x08003d04   0x00000004   Code   RO        32925    .text._ZN4mbed8FilePath8fileNameEv  BUILD/NUCLEO_L476RG/ARMC6/mbed-os/platform/source/FilePath.o
    0x08003d08   0x00000080   Code   RO        32923    .text._ZN4mbed8FilePathC2EPKc  BUILD/NUCLEO_L476RG/ARMC6/mbed-os/platform/source/FilePath.o
    0x08003d88   0x0000002a   Code   RO        33545    .text._ZN4mbed8internal13init_os_timerEv  BUILD/NUCLEO_L476RG/ARMC6/mbed-os/platform/source/mbed_os_timer.o
    0x08003db2   0x00000002   PAD
    0x08003db4   0x00000054   Code   RO        33565    .text._ZN4mbed8internal18do_sleep_operationINS0_18timed_predicate_opEEEvRT_  BUILD/NUCLEO_L476RG/ARMC6/mbed-os/platform/source/mbed_os_timer.o
    0x08003e08   0x0000001c   Code   RO        33577    .text._ZN4mbed8internal18timed_predicate_op13sleep_prepareEv  BUILD/NUCLEO_L476RG/ARMC6/mbed-os/platform/source/mbed_os_timer.o
    0x08003e24   0x00000024   Code   RO        33579    .text._ZN4mbed8internal18timed_predicate_op14sleep_preparedEv  BUILD/NUCLEO_L476RG/ARMC6/mbed-os/platform/source/mbed_os_timer.o
    0x08003e48   0x00000018   Code   RO        33563    .text._ZN4mbed8internal18timed_predicate_opC2ENSt3__16chrono10time_pointINS0_7OsClockENS3_8durationIxNS2_5ratioILx1ELx1000EEEEEEEPFbPvESB_  BUILD/NUCLEO_L476RG/ARMC6/mbed-os/platform/source/mbed_os_timer.o
    0x08003e60   0x00000018   Code   RO        33567    .text._ZN4mbed8internal18timed_predicate_opD2Ev  BUILD/NUCLEO_L476RG/ARMC6/mbed-os/platform/source/mbed_os_timer.o
    0x08003e78   0x0000002c   Code   RO        33547    .text._ZN4mbed8internal23do_timed_sleep_absoluteENSt3__16chrono10time_pointINS0_7OsClockENS2_8durationIxNS1_5ratioILx1ELx1000EEEEEEEPFbPvESA_  BUILD/NUCLEO_L476RG/ARMC6/mbed-os/platform/source/mbed_os_timer.o
    0x08003ea4   0x0000002e   Code   RO        33549    .text._ZN4mbed8internal45do_timed_sleep_relative_to_acknowledged_ticksENSt3__16chrono8durationIjNS1_5ratioILx1ELx1000EEEEEPFbPvES7_  BUILD/NUCLEO_L476RG/ARMC6/mbed-os/platform/source/mbed_os_timer.o
    0x08003ed2   0x00000002   PAD
    0x08003ed4   0x00000016   Code   RO        33581    .text._ZN4mbed8internal7OsClock13set_wake_timeENSt3__16chrono10time_pointIS1_NS3_8durationIxNS2_5ratioILx1ELx1000EEEEEEE  BUILD/NUCLEO_L476RG/ARMC6/mbed-os/platform/source/mbed_os_timer.o
    0x08003eea   0x00000002   PAD
    0x08003eec   0x00000022   Code   RO        33573    .text._ZN4mbed8internal7OsClock14reported_ticksEv  BUILD/NUCLEO_L476RG/ARMC6/mbed-os/platform/source/mbed_os_timer.o
    0x08003f0e   0x00000002   PAD
    0x08003f10   0x0000002c   Code   RO        33571    .text._ZN4mbed8internal7OsClock18acknowledged_ticksEv  BUILD/NUCLEO_L476RG/ARMC6/mbed-os/platform/source/mbed_os_timer.o
    0x08003f3c   0x00000022   Code   RO        33569    .text._ZN4mbed8internal7OsClock18now_with_init_doneEv  BUILD/NUCLEO_L476RG/ARMC6/mbed-os/platform/source/mbed_os_timer.o
    0x08003f5e   0x00000002   PAD
    0x08003f60   0x00000020   Code   RO        33075    .text._ZN4mbed8internal8SysTimerINSt3__15ratioILx1ELx1000EEELb1EE10start_tickEv  BUILD/NUCLEO_L476RG/ARMC6/mbed-os/platform/source/SysTimer.o
    0x08003f80   0x00000016   Code   RO        33057    .text._ZN4mbed8internal8SysTimerINSt3__15ratioILx1ELx1000EEELb1EE11cancel_tickEv  BUILD/NUCLEO_L476RG/ARMC6/mbed-os/platform/source/SysTimer.o
    0x08003f96   0x00000002   PAD
    0x08003f98   0x00000042   Code   RO        33059    .text._ZN4mbed8internal8SysTimerINSt3__15ratioILx1ELx1000EEELb1EE11cancel_wakeEv  BUILD/NUCLEO_L476RG/ARMC6/mbed-os/platform/source/SysTimer.o
    0x08003fda   0x00000002   PAD
    0x08003fdc   0x000000f2   Code   RO        33063    .text._ZN4mbed8internal8SysTimerINSt3__15ratioILx1ELx1000EEELb1EE13set_wake_timeENS2_6chrono10time_pointIS5_NS6_8durationIyS4_EEEE  BUILD/NUCLEO_L476RG/ARMC6/mbed-os/platform/source/SysTimer.o
    0x080040ce   0x00000002   PAD
    0x080040d0   0x00000010   Code   RO        33079    .text._ZN4mbed8internal8SysTimerINSt3__15ratioILx1ELx1000EEELb1EE14_schedule_tickEv  BUILD/NUCLEO_L476RG/ARMC6/mbed-os/platform/source/SysTimer.o
    0x080040e0   0x00000006   Code   RO        33061    .text._ZN4mbed8internal8SysTimerINSt3__15ratioILx1ELx1000EEELb1EE14get_irq_numberEv  BUILD/NUCLEO_L476RG/ARMC6/mbed-os/platform/source/SysTimer.o
    0x080040e6   0x00000002   PAD
    0x080040e8   0x00000022   Code   RO        33099    .text._ZN4mbed8internal8SysTimerINSt3__15ratioILx1ELx1000EEELb1EE15_increment_tickEv  BUILD/NUCLEO_L476RG/ARMC6/mbed-os/platform/source/SysTimer.o
    0x0800410a   0x00000002   PAD
    0x0800410c   0x00000010   Code   RO        33077    .text._ZN4mbed8internal8SysTimerINSt3__15ratioILx1ELx1000EEELb1EE16_set_irq_pendingEv  BUILD/NUCLEO_L476RG/ARMC6/mbed-os/platform/source/SysTimer.o
    0x0800411c   0x00000018   Code   RO        33081    .text._ZN4mbed8internal8SysTimerINSt3__15ratioILx1ELx1000EEELb1EE16acknowledge_tickEv  BUILD/NUCLEO_L476RG/ARMC6/mbed-os/platform/source/SysTimer.o
    0x08004134   0x00000010   Code   RO        33085    .text._ZN4mbed8internal8SysTimerINSt3__15ratioILx1ELx1000EEELb1EE18_clear_irq_pendingEv  BUILD/NUCLEO_L476RG/ARMC6/mbed-os/platform/source/SysTimer.o
    0x08004144   0x0000006e   Code   RO        33065    .text._ZN4mbed8internal8SysTimerINSt3__15ratioILx1ELx1000EEELb1EE19update_and_get_tickEv  BUILD/NUCLEO_L476RG/ARMC6/mbed-os/platform/source/SysTimer.o
    0x080041b2   0x00000002   PAD
    0x080041b4   0x00000048   Code   RO        33097    .text._ZN4mbed8internal8SysTimerINSt3__15ratioILx1ELx1000EEELb1EE7handlerEv  BUILD/NUCLEO_L476RG/ARMC6/mbed-os/platform/source/SysTimer.o
    0x080041fc   0x00000036   Code   RO        33053    .text._ZN4mbed8internal8SysTimerINSt3__15ratioILx1ELx1000EEELb1EEC2EPK13ticker_data_t  BUILD/NUCLEO_L476RG/ARMC6/mbed-os/platform/source/SysTimer.o
    0x08004232   0x00000002   PAD
    0x08004234   0x00000022   Code   RO        34310    .text._ZN4rtos10ThisThread9sleep_forENSt3__16chrono8durationIjNS1_5ratioILx1ELx1000EEEEE  BUILD/NUCLEO_L476RG/ARMC6/mbed-os/rtos/source/ThisThread.o
    0x08004256   0x00000002   PAD
    0x08004258   0x000000a0   Code   RO        34214    .text._ZN4rtos5Mutex11constructorEPKc  BUILD/NUCLEO_L476RG/ARMC6/mbed-os/rtos/source/Mutex.o
    0x080042f8   0x00000044   Code   RO        34218    .text._ZN4rtos5Mutex4lockEv  BUILD/NUCLEO_L476RG/ARMC6/mbed-os/rtos/source/Mutex.o
    0x0800433c   0x00000050   Code   RO        34230    .text._ZN4rtos5Mutex6unlockEv  BUILD/NUCLEO_L476RG/ARMC6/mbed-os/rtos/source/Mutex.o
    0x0800438c   0x0000000e   Code   RO        34212    .text._ZN4rtos5MutexC2Ev  BUILD/NUCLEO_L476RG/ARMC6/mbed-os/rtos/source/Mutex.o
    0x0800439a   0x00000002   PAD
    0x0800439c   0x0000003e   Code   RO        33633    .text._ZNK12DirectSerial4pollEs  BUILD/NUCLEO_L476RG/ARMC6/mbed-os/platform/source/mbed_retarget.o
    0x080043da   0x00000002   PAD
    0x080043dc   0x00000048   Code   RO        27556    .text._ZNK12SingletonPtrIN4rtos5MutexEE3getEv  BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/netsocket/source/nsapi_dns.o
    0x08004424   0x00000004   Code   RO         9019    .text._ZNK12SingletonPtrIN4rtos5MutexEEptEv  BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/mbedtls/platform/src/mbed_trng.o
    0x08004428   0x00000004   Code   RO        30007    .text._ZNK4mbed10FileHandle11is_blockingEv  BUILD/NUCLEO_L476RG/ARMC6/mbed-os/drivers/source/UnbufferedSerial.o
    0x0800442c   0x00000004   Code   RO        30956    .text._ZNK4mbed10FileHandle4pollEs  BUILD/NUCLEO_L476RG/ARMC6/mbed-os/drivers/source/usb/USBKeyboard.o
    0x08004430   0x00000012   Code   RO        13137    .text._ZNK4mbed15TickerDataClock3nowEv  BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/nanostack/nanostack-hal-mbed-cmsis-rtos/arm_hal_fhss_timer.o
    0x08004442   0x00000002   PAD
    0x08004444   0x00000004   Code   RO        33069    .text._ZNK4mbed15TickerDataClockptEv  BUILD/NUCLEO_L476RG/ARMC6/mbed-os/platform/source/SysTimer.o
    0x08004448   0x0000005c   Code   RO        29387    .text._ZNK4mbed4impl7MbedCRCILj79764919ELh32ELNS_7CrcModeE2EE18do_compute_partialILS2_2EEENSt3__19enable_ifIXeqT_LS2_2EEiE4typeEPKhjPj  BUILD/NUCLEO_L476RG/ARMC6/mbed-os/drivers/source/MbedCRC.o
    0x080044a4   0x00000024   Code   RO        33575    .text._ZNK4mbed8internal18timed_predicate_op14wake_conditionEv  BUILD/NUCLEO_L476RG/ARMC6/mbed-os/platform/source/mbed_os_timer.o
    0x080044c8   0x00000006   Code   RO        33073    .text._ZNK4mbed8internal8SysTimerINSt3__15ratioILx1ELx1000EEELb1EE13wake_time_setEv  BUILD/NUCLEO_L476RG/ARMC6/mbed-os/platform/source/SysTimer.o
    0x080044ce   0x00000002   PAD
    0x080044d0   0x00000066   Code   RO        33091    .text._ZNK4mbed8internal8SysTimerINSt3__15ratioILx1ELx1000EEELb1EE14_elapsed_ticksEv  BUILD/NUCLEO_L476RG/ARMC6/mbed-os/platform/source/SysTimer.o
    0x08004536   0x00000002   PAD
    0x08004538   0x00000006   Code   RO        33071    .text._ZNK4mbed8internal8SysTimerINSt3__15ratioILx1ELx1000EEELb1EE16wake_time_passedEv  BUILD/NUCLEO_L476RG/ARMC6/mbed-os/platform/source/SysTimer.o
    0x0800453e   0x00000002   PAD
    0x08004540   0x00000006   Code   RO        33089    .text._ZNK4mbed8internal8SysTimerINSt3__15ratioILx1ELx1000EEELb1EE20unacknowledged_ticksEv  BUILD/NUCLEO_L476RG/ARMC6/mbed-os/platform/source/SysTimer.o
    0x08004546   0x00000002   PAD
    0x08004548   0x00000012   Code   RO        33067    .text._ZNK4mbed8internal8SysTimerINSt3__15ratioILx1ELx1000EEELb1EE8get_tickEv  BUILD/NUCLEO_L476RG/ARMC6/mbed-os/platform/source/SysTimer.o
    0x0800455a   0x00000002   PAD
    0x0800455c   0x00000004   Code   RO        33783    .text._ZdlPv        BUILD/NUCLEO_L476RG/ARMC6/mbed-os/platform/source/mbed_retarget.o
    0x08004560   0x0000000e   Code   RO        41620    .text.__NVIC_ClearPendingIRQ  BUILD/NUCLEO_L476RG/ARMC6/mbed-os/targets/TARGET_STM/lp_ticker.o
    0x0800456e   0x00000002   PAD
    0x08004570   0x00000016   Code   RO        41618    .text.__NVIC_DisableIRQ  BUILD/NUCLEO_L476RG/ARMC6/mbed-os/targets/TARGET_STM/lp_ticker.o
    0x08004586   0x00000002   PAD
    0x08004588   0x0000000e   Code   RO        41610    .text.__NVIC_EnableIRQ  BUILD/NUCLEO_L476RG/ARMC6/mbed-os/targets/TARGET_STM/lp_ticker.o
    0x08004596   0x00000002   PAD
    0x08004598   0x00000010   Code   RO        42006    .text.__NVIC_EnableIRQ  BUILD/NUCLEO_L476RG/ARMC6/mbed-os/targets/TARGET_STM/us_ticker.o
    0x080045a8   0x00000010   Code   RO          275    .text.__NVIC_GetPriorityGrouping  BUILD/NUCLEO_L476RG/ARMC6/mbed-os/cmsis/CMSIS_5/CMSIS/RTOS2/RTX/Source/rtx_kernel.o
    0x080045b8   0x0000000e   Code   RO        41616    .text.__NVIC_SetPendingIRQ  BUILD/NUCLEO_L476RG/ARMC6/mbed-os/targets/TARGET_STM/lp_ticker.o
    0x080045c6   0x00000002   PAD
    0x080045c8   0x00000020   Code   RO        36866    .text.__NVIC_SetPriorityGrouping  BUILD/NUCLEO_L476RG/ARMC6/mbed-os/targets/TARGET_STM/TARGET_STM32L4/device/stm32l4xx_hal_cortex.o
    0x080045e8   0x00000018   Code   RO        41602    .text.__NVIC_SetVector  BUILD/NUCLEO_L476RG/ARMC6/mbed-os/targets/TARGET_STM/lp_ticker.o
    0x08004600   0x00000018   Code   RO        42004    .text.__NVIC_SetVector  BUILD/NUCLEO_L476RG/ARMC6/mbed-os/targets/TARGET_STM/us_ticker.o
    0x08004618   0x00000024   Code   RO        33440    .text.__NVIC_SystemReset  BUILD/NUCLEO_L476RG/ARMC6/mbed-os/platform/source/mbed_error.o
    0x0800463c   0x00000068   Code   RO        33765    .text.__cxa_guard_acquire  BUILD/NUCLEO_L476RG/ARMC6/mbed-os/platform/source/mbed_retarget.o
    0x080046a4   0x00000034   Code   RO        33771    .text.__cxa_guard_release  BUILD/NUCLEO_L476RG/ARMC6/mbed-os/platform/source/mbed_retarget.o
    0x080046d8   0x00000028   Code   RO        42355    .text.__cxa_pure_virtual  c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\libcxx\libcppabi_w.l(cxa_virtual.cpp.o)
    0x08004700   0x0000004e   Code   RO          899    .text.__rt_entry    BUILD/NUCLEO_L476RG/ARMC6/mbed-os/cmsis/device/rtos/TOOLCHAIN_ARM_STD/mbed_boot_arm_std.o
    0x0800474e   0x00000002   PAD
    0x08004750   0x00000050   Code   RO          903    .text.__user_perthread_libspace  BUILD/NUCLEO_L476RG/ARMC6/mbed-os/cmsis/device/rtos/TOOLCHAIN_ARM_STD/mbed_boot_arm_std.o
    0x080047a0   0x00000004   Code   RO        33705    .text.__user_setup_stackheap  BUILD/NUCLEO_L476RG/ARMC6/mbed-os/platform/source/mbed_retarget.o
    0x080047a4   0x00000036   Code   RO        32396    .text._gpio_init_out  BUILD/NUCLEO_L476RG/ARMC6/mbed-os/hal/source/mbed_gpio.o
    0x080047da   0x00000002   PAD
    0x080047dc   0x00000032   Code   RO        33701    .text._mbed_user_setup_stackheap  BUILD/NUCLEO_L476RG/ARMC6/mbed-os/platform/source/mbed_retarget.o
    0x0800480e   0x00000002   PAD
    0x08004810   0x0000001c   Code   RO          909    .text._mutex_acquire  BUILD/NUCLEO_L476RG/ARMC6/mbed-os/cmsis/device/rtos/TOOLCHAIN_ARM_STD/mbed_boot_arm_std.o
    0x0800482c   0x00000042   Code   RO          913    .text._mutex_free   BUILD/NUCLEO_L476RG/ARMC6/mbed-os/cmsis/device/rtos/TOOLCHAIN_ARM_STD/mbed_boot_arm_std.o
    0x0800486e   0x00000002   PAD
    0x08004870   0x000000a4   Code   RO          907    .text._mutex_initialize  BUILD/NUCLEO_L476RG/ARMC6/mbed-os/cmsis/device/rtos/TOOLCHAIN_ARM_STD/mbed_boot_arm_std.o
    0x08004914   0x00000018   Code   RO          911    .text._mutex_release  BUILD/NUCLEO_L476RG/ARMC6/mbed-os/cmsis/device/rtos/TOOLCHAIN_ARM_STD/mbed_boot_arm_std.o
    0x0800492c   0x00000004   Code   RO          308    .text._platform_post_stackheap_init  BUILD/NUCLEO_L476RG/ARMC6/mbed-os/cmsis/CMSIS_5/CMSIS/RTOS2/RTX/Source/rtx_lib.o
    0x08004930   0x000001c8   Code   RO        41818    .text._serial_init_direct  BUILD/NUCLEO_L476RG/ARMC6/mbed-os/targets/TARGET_STM/serial_api.o
    0x08004af8   0x00000004   Code   RO        33669    .text._sys_close    BUILD/NUCLEO_L476RG/ARMC6/mbed-os/platform/source/mbed_retarget.o
    0x08004afc   0x00000002   Code   RO        33679    .text._sys_exit     BUILD/NUCLEO_L476RG/ARMC6/mbed-os/platform/source/mbed_retarget.o
    0x08004afe   0x00000002   PAD
    0x08004b00   0x00000028   Code   RO        33699    .text._sys_flen     BUILD/NUCLEO_L476RG/ARMC6/mbed-os/platform/source/mbed_retarget.o
    0x08004b28   0x00000004   Code   RO        33687    .text._sys_istty    BUILD/NUCLEO_L476RG/ARMC6/mbed-os/platform/source/mbed_retarget.o
    0x08004b2c   0x0000006c   Code   RO        33661    .text._sys_open     BUILD/NUCLEO_L476RG/ARMC6/mbed-os/platform/source/mbed_retarget.o
    0x08004b98   0x00000006   Code   RO        33689    .text._sys_seek     BUILD/NUCLEO_L476RG/ARMC6/mbed-os/platform/source/mbed_retarget.o
    0x08004b9e   0x00000002   PAD
    0x08004ba0   0x00000144   Code   RO        33673    .text._sys_write    BUILD/NUCLEO_L476RG/ARMC6/mbed-os/platform/source/mbed_retarget.o
    0x08004ce4   0x00000030   Code   RO        32507    .text._ticker_match_interval_passed  BUILD/NUCLEO_L476RG/ARMC6/mbed-os/hal/source/mbed_ticker_api.o
    0x08004d14   0x00000018   Code   RO        33681    .text._ttywrch      BUILD/NUCLEO_L476RG/ARMC6/mbed-os/platform/source/mbed_retarget.o
    0x08004d2c   0x00000004   Code   RO        42547    .text.abort_message  c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\libcxx\libcppabi_w.l(abort_message.cpp.o)
    0x08004d30   0x0000000c   Code   RO        32357    .text.are_interrupts_enabled  BUILD/NUCLEO_L476RG/ARMC6/mbed-os/hal/source/mbed_critical_section_api.o
    0x08004d3c   0x00000026   Code   RO          749    .text.atomic_chk32_all  BUILD/NUCLEO_L476RG/ARMC6/mbed-os/cmsis/CMSIS_5/CMSIS/RTOS2/RTX/Source/rtx_thread.o
    0x08004d62   0x00000002   PAD
    0x08004d64   0x00000022   Code   RO          751    .text.atomic_chk32_any  BUILD/NUCLEO_L476RG/ARMC6/mbed-os/cmsis/CMSIS_5/CMSIS/RTOS2/RTX/Source/rtx_thread.o
    0x08004d86   0x00000002   PAD
    0x08004d88   0x00000024   Code   RO          628    .text.atomic_dec16_nz  BUILD/NUCLEO_L476RG/ARMC6/mbed-os/cmsis/CMSIS_5/CMSIS/RTOS2/RTX/Source/rtx_system.o
    0x08004dac   0x00000010   Code   RO          360    .text.atomic_dec32  BUILD/NUCLEO_L476RG/ARMC6/mbed-os/cmsis/CMSIS_5/CMSIS/RTOS2/RTX/Source/rtx_mempool.o
    0x08004dbc   0x0000001a   Code   RO          481    .text.atomic_dec32_nz  BUILD/NUCLEO_L476RG/ARMC6/mbed-os/cmsis/CMSIS_5/CMSIS/RTOS2/RTX/Source/rtx_msgqueue.o
    0x08004dd6   0x00000002   PAD
    0x08004dd8   0x0000001a   Code   RO          630    .text.atomic_inc16_lim  BUILD/NUCLEO_L476RG/ARMC6/mbed-os/cmsis/CMSIS_5/CMSIS/RTOS2/RTX/Source/rtx_system.o
    0x08004df2   0x00000002   PAD
    0x08004df4   0x00000028   Code   RO          634    .text.atomic_inc16_lt  BUILD/NUCLEO_L476RG/ARMC6/mbed-os/cmsis/CMSIS_5/CMSIS/RTOS2/RTX/Source/rtx_system.o
    0x08004e1c   0x00000010   Code   RO          354    .text.atomic_inc32  BUILD/NUCLEO_L476RG/ARMC6/mbed-os/cmsis/CMSIS_5/CMSIS/RTOS2/RTX/Source/rtx_mempool.o
    0x08004e2c   0x00000010   Code   RO          469    .text.atomic_inc32  BUILD/NUCLEO_L476RG/ARMC6/mbed-os/cmsis/CMSIS_5/CMSIS/RTOS2/RTX/Source/rtx_msgqueue.o
    0x08004e3c   0x0000001a   Code   RO          352    .text.atomic_link_get  BUILD/NUCLEO_L476RG/ARMC6/mbed-os/cmsis/CMSIS_5/CMSIS/RTOS2/RTX/Source/rtx_mempool.o
    0x08004e56   0x00000002   PAD
    0x08004e58   0x0000001e   Code   RO          358    .text.atomic_link_put  BUILD/NUCLEO_L476RG/ARMC6/mbed-os/cmsis/CMSIS_5/CMSIS/RTOS2/RTX/Source/rtx_mempool.o
    0x08004e76   0x00000002   PAD
    0x08004e78   0x00000012   Code   RO          483    .text.atomic_wr8    BUILD/NUCLEO_L476RG/ARMC6/mbed-os/cmsis/CMSIS_5/CMSIS/RTOS2/RTX/Source/rtx_msgqueue.o
    0x08004e8a   0x00000002   PAD
    0x08004e8c   0x00000002   Code   RO        32558    .text.block_us_ticker_free  BUILD/NUCLEO_L476RG/ARMC6/mbed-os/hal/source/mbed_us_ticker_api.o
    0x08004e8e   0x00000002   PAD
    0x08004e90   0x00000140   Code   RO        41361    .text.can_irq       BUILD/NUCLEO_L476RG/ARMC6/mbed-os/targets/TARGET_STM/can_api.o
    0x08004fd0   0x0000003a   Code   RO        33671    .text.close         BUILD/NUCLEO_L476RG/ARMC6/mbed-os/platform/source/mbed_retarget.o
    0x0800500a   0x00000002   PAD
    0x0800500c   0x000000a6   Code   RO        32541    .text.compute_tick_round_up  BUILD/NUCLEO_L476RG/ARMC6/mbed-os/hal/source/mbed_ticker_api.o
    0x080050b2   0x00000002   PAD
    0x080050b4   0x0000000c   Code   RO        33374    .text.core_util_are_interrupts_enabled  BUILD/NUCLEO_L476RG/ARMC6/mbed-os/platform/source/mbed_critical.o
    0x080050c0   0x00000012   Code   RO        33267    .text.core_util_atomic_decr_u16  BUILD/NUCLEO_L476RG/ARMC6/mbed-os/platform/source/mbed_atomic_impl.o
    0x080050d2   0x00000002   PAD
    0x080050d4   0x00000012   Code   RO        33265    .text.core_util_atomic_decr_u8  BUILD/NUCLEO_L476RG/ARMC6/mbed-os/platform/source/mbed_atomic_impl.o
    0x080050e6   0x00000002   PAD
    0x080050e8   0x0000000c   Code   RO        33253    .text.core_util_atomic_exchange_u8  BUILD/NUCLEO_L476RG/ARMC6/mbed-os/platform/source/mbed_atomic_impl.o
    0x080050f4   0x00000016   Code   RO        33251    .text.core_util_atomic_flag_test_and_set  BUILD/NUCLEO_L476RG/ARMC6/mbed-os/platform/source/mbed_atomic_impl.o
    0x0800510a   0x00000002   PAD
    0x0800510c   0x00000012   Code   RO        33261    .text.core_util_atomic_incr_u16  BUILD/NUCLEO_L476RG/ARMC6/mbed-os/platform/source/mbed_atomic_impl.o
    0x0800511e   0x00000002   PAD
    0x08005120   0x00000016   Code   RO        33313    .text.core_util_atomic_load_u64  BUILD/NUCLEO_L476RG/ARMC6/mbed-os/platform/source/mbed_atomic_impl.o
    0x08005136   0x00000002   PAD
    0x08005138   0x00000084   Code   RO        33380    .text.core_util_critical_section_enter  BUILD/NUCLEO_L476RG/ARMC6/mbed-os/platform/source/mbed_critical.o
    0x080051bc   0x0000001c   Code   RO        33382    .text.core_util_critical_section_exit  BUILD/NUCLEO_L476RG/ARMC6/mbed-os/platform/source/mbed_critical.o
    0x080051d8   0x0000000c   Code   RO        33376    .text.core_util_is_isr_active  BUILD/NUCLEO_L476RG/ARMC6/mbed-os/platform/source/mbed_critical.o
    0x080051e4   0x00000054   Code   RO        41826    .text.debug         BUILD/NUCLEO_L476RG/ARMC6/mbed-os/targets/TARGET_STM/serial_api.o
    0x08005238   0x00000068   Code   RO        33394    .text.error         BUILD/NUCLEO_L476RG/ARMC6/mbed-os/platform/source/mbed_error.o
    0x080052a0   0x00000030   Code   RO         1005    .text.error_msg     BUILD/NUCLEO_L476RG/ARMC6/mbed-os/cmsis/device/rtos/source/mbed_rtx_handlers.o
    0x080052d0   0x0000002e   Code   RO        33741    .text.exit          BUILD/NUCLEO_L476RG/ARMC6/mbed-os/platform/source/mbed_retarget.o
    0x080052fe   0x00000002   PAD
    0x08005300   0x0000002a   Code   RO        33697    .text.fsync         BUILD/NUCLEO_L476RG/ARMC6/mbed-os/platform/source/mbed_retarget.o
    0x0800532a   0x00000002   PAD
    0x0800532c   0x0000000a   Code   RO        32424    .text.get_lp_ticker_data  BUILD/NUCLEO_L476RG/ARMC6/mbed-os/hal/source/mbed_lp_ticker_api.o
    0x08005336   0x00000002   PAD
    0x08005338   0x00000080   Code   RO        41846    .text.get_uart_index  BUILD/NUCLEO_L476RG/ARMC6/mbed-os/targets/TARGET_STM/serial_api.o
    0x080053b8   0x0000000a   Code   RO        32552    .text.get_us_ticker_data  BUILD/NUCLEO_L476RG/ARMC6/mbed-os/hal/source/mbed_us_ticker_api.o
    0x080053c2   0x00000002   PAD
    0x080053c4   0x00000012   Code   RO        41397    .text.gpio_dir      BUILD/NUCLEO_L476RG/ARMC6/mbed-os/targets/TARGET_STM/gpio_api.o
    0x080053d6   0x00000002   PAD
    0x080053d8   0x0000004a   Code   RO        41393    .text.gpio_init     BUILD/NUCLEO_L476RG/ARMC6/mbed-os/targets/TARGET_STM/gpio_api.o
    0x08005422   0x00000002   PAD
    0x08005424   0x00000006   Code   RO        32392    .text.gpio_init_out  BUILD/NUCLEO_L476RG/ARMC6/mbed-os/hal/source/mbed_gpio.o
    0x0800542a   0x00000002   PAD
    0x0800542c   0x00000008   Code   RO        32394    .text.gpio_init_out_ex  BUILD/NUCLEO_L476RG/ARMC6/mbed-os/hal/source/mbed_gpio.o
    0x08005434   0x00000008   Code   RO        41395    .text.gpio_mode     BUILD/NUCLEO_L476RG/ARMC6/mbed-os/targets/TARGET_STM/gpio_api.o
    0x0800543c   0x00000064   Code   RO        41391    .text.gpio_set      BUILD/NUCLEO_L476RG/ARMC6/mbed-os/targets/TARGET_STM/gpio_api.o
    0x080054a0   0x00000010   Code   RO        32384    .text.gpio_write    BUILD/NUCLEO_L476RG/ARMC6/mbed-os/hal/source/mbed_gpio.o
    0x080054b0   0x00000010   Code   RO        33354    .text.gpio_write    BUILD/NUCLEO_L476RG/ARMC6/mbed-os/platform/source/mbed_board.o
    0x080054c0   0x0000002c   Code   RO        32355    .text.hal_critical_section_enter  BUILD/NUCLEO_L476RG/ARMC6/mbed-os/hal/source/mbed_critical_section_api.o
    0x080054ec   0x00000084   Code   RO        32359    .text.hal_critical_section_exit  BUILD/NUCLEO_L476RG/ARMC6/mbed-os/hal/source/mbed_critical_section_api.o
    0x08005570   0x00000020   Code   RO        41866    .text.hal_sleep     BUILD/NUCLEO_L476RG/ARMC6/mbed-os/targets/TARGET_STM/sleep.o
    0x08005590   0x0000010c   Code   RO        33396    .text.handle_error  BUILD/NUCLEO_L476RG/ARMC6/mbed-os/platform/source/mbed_error.o
    0x0800569c   0x0000009c   Code   RO        42002    .text.init_32bit_timer  BUILD/NUCLEO_L476RG/ARMC6/mbed-os/targets/TARGET_STM/us_ticker.o
    0x08005738   0x00000098   Code   RO        41824    .text.init_uart     BUILD/NUCLEO_L476RG/ARMC6/mbed-os/targets/TARGET_STM/serial_api.o
    0x080057d0   0x00000150   Code   RO        32511    .text.initialize    BUILD/NUCLEO_L476RG/ARMC6/mbed-os/hal/source/mbed_ticker_api.o
    0x08005920   0x00000026   Code   RO        33653    .text.isatty        BUILD/NUCLEO_L476RG/ARMC6/mbed-os/platform/source/mbed_retarget.o
    0x08005946   0x00000002   PAD
    0x08005948   0x00000064   Code   RO          437    .text.isrRtxMessageQueueGet  BUILD/NUCLEO_L476RG/ARMC6/mbed-os/cmsis/CMSIS_5/CMSIS/RTOS2/RTX/Source/rtx_msgqueue.o
    0x080059ac   0x00000070   Code   RO          433    .text.isrRtxMessageQueuePut  BUILD/NUCLEO_L476RG/ARMC6/mbed-os/cmsis/CMSIS_5/CMSIS/RTOS2/RTX/Source/rtx_msgqueue.o
    0x08005a1c   0x00000030   Code   RO          610    .text.isr_queue_get  BUILD/NUCLEO_L476RG/ARMC6/mbed-os/cmsis/CMSIS_5/CMSIS/RTOS2/RTX/Source/rtx_system.o
    0x08005a4c   0x00000032   Code   RO          624    .text.isr_queue_put  BUILD/NUCLEO_L476RG/ARMC6/mbed-os/cmsis/CMSIS_5/CMSIS/RTOS2/RTX/Source/rtx_system.o
    0x08005a7e   0x00000002   PAD
    0x08005a80   0x00000020   Code   RO        41612    .text.lp_ticker_clear_interrupt  BUILD/NUCLEO_L476RG/ARMC6/mbed-os/targets/TARGET_STM/lp_ticker.o
    0x08005aa0   0x00000064   Code   RO        41600    .text.lp_ticker_disable_interrupt  BUILD/NUCLEO_L476RG/ARMC6/mbed-os/targets/TARGET_STM/lp_ticker.o
    0x08005b04   0x0000002e   Code   RO        41614    .text.lp_ticker_fire_interrupt  BUILD/NUCLEO_L476RG/ARMC6/mbed-os/targets/TARGET_STM/lp_ticker.o
    0x08005b32   0x00000002   PAD
    0x08005b34   0x00000004   Code   RO        41622    .text.lp_ticker_free  BUILD/NUCLEO_L476RG/ARMC6/mbed-os/targets/TARGET_STM/lp_ticker.o
    0x08005b38   0x0000000a   Code   RO        41596    .text.lp_ticker_get_info  BUILD/NUCLEO_L476RG/ARMC6/mbed-os/targets/TARGET_STM/lp_ticker.o
    0x08005b42   0x00000002   PAD
    0x08005b44   0x00000184   Code   RO        41598    .text.lp_ticker_init  BUILD/NUCLEO_L476RG/ARMC6/mbed-os/targets/TARGET_STM/lp_ticker.o
    0x08005cc8   0x0000001a   Code   RO        32428    .text.lp_ticker_irq_handler  BUILD/NUCLEO_L476RG/ARMC6/mbed-os/hal/source/mbed_lp_ticker_api.o
    0x08005ce2   0x00000002   PAD
    0x08005ce4   0x00000012   Code   RO        41606    .text.lp_ticker_read  BUILD/NUCLEO_L476RG/ARMC6/mbed-os/targets/TARGET_STM/lp_ticker.o
    0x08005cf6   0x00000002   PAD
    0x08005cf8   0x000000ea   Code   RO        41608    .text.lp_ticker_set_interrupt  BUILD/NUCLEO_L476RG/ARMC6/mbed-os/targets/TARGET_STM/lp_ticker.o
    0x08005de2   0x00000002   PAD
    0x08005de4   0x00000030   Code   RO        33691    .text.lseek         BUILD/NUCLEO_L476RG/ARMC6/mbed-os/platform/source/mbed_retarget.o
    0x08005e14   0x00000028   Code   RO            5    .text.main          BUILD/NUCLEO_L476RG/ARMC6/main.o
    0x08005e3c   0x0000001a   Code   RO        33241    .text.mbed_assert_internal  BUILD/NUCLEO_L476RG/ARMC6/mbed-os/platform/source/mbed_assert.o
    0x08005e56   0x00000002   PAD
    0x08005e58   0x0000002c   Code   RO          930    .text.mbed_cpy_nvic  BUILD/NUCLEO_L476RG/ARMC6/mbed-os/cmsis/device/rtos/source/mbed_boot.o
    0x08005e84   0x0000006c   Code   RO        33356    .text.mbed_die      BUILD/NUCLEO_L476RG/ARMC6/mbed-os/platform/source/mbed_board.o
    0x08005ef0   0x00000120   Code   RO        33418    .text.mbed_error    BUILD/NUCLEO_L476RG/ARMC6/mbed-os/platform/source/mbed_error.o
    0x08006010   0x00000002   Code   RO        33402    .text.mbed_error_hook  BUILD/NUCLEO_L476RG/ARMC6/mbed-os/platform/source/mbed_error.o
    0x08006012   0x00000002   PAD
    0x08006014   0x0000006a   Code   RO        33406    .text.mbed_error_initialize  BUILD/NUCLEO_L476RG/ARMC6/mbed-os/platform/source/mbed_error.o
    0x0800607e   0x00000002   PAD
    0x08006080   0x0000002a   Code   RO        33442    .text.mbed_error_is_handler  BUILD/NUCLEO_L476RG/ARMC6/mbed-os/platform/source/mbed_error.o
    0x080060aa   0x00000002   PAD
    0x080060ac   0x00000014   Code   RO        33438    .text.mbed_error_is_hw_fault  BUILD/NUCLEO_L476RG/ARMC6/mbed-os/platform/source/mbed_error.o
    0x080060c0   0x00000020   Code   RO        33358    .text.mbed_error_printf  BUILD/NUCLEO_L476RG/ARMC6/mbed-os/platform/source/mbed_board.o
    0x080060e0   0x00000054   Code   RO        33362    .text.mbed_error_puts  BUILD/NUCLEO_L476RG/ARMC6/mbed-os/platform/source/mbed_board.o
    0x08006134   0x00000002   Code   RO        33404    .text.mbed_error_reboot_callback  BUILD/NUCLEO_L476RG/ARMC6/mbed-os/platform/source/mbed_error.o
    0x08006136   0x00000002   PAD
    0x08006138   0x00000034   Code   RO        33360    .text.mbed_error_vprintf  BUILD/NUCLEO_L476RG/ARMC6/mbed-os/platform/source/mbed_board.o
    0x0800616c   0x000000f8   Code   RO        33199    .text.mbed_fault_handler  BUILD/NUCLEO_L476RG/ARMC6/mbed-os/platform/source/TARGET_CORTEX_M/mbed_fault_handler.o
    0x08006264   0x0000000c   Code   RO        33414    .text.mbed_get_error_in_progress  BUILD/NUCLEO_L476RG/ARMC6/mbed-os/platform/source/mbed_error.o
    0x08006270   0x00000038   Code   RO        33400    .text.mbed_halt_system  BUILD/NUCLEO_L476RG/ARMC6/mbed-os/platform/source/mbed_error.o
    0x080062a8   0x0000002a   Code   RO          928    .text.mbed_init     BUILD/NUCLEO_L476RG/ARMC6/mbed-os/cmsis/device/rtos/source/mbed_boot.o
    0x080062d2   0x00000002   PAD
    0x080062d4   0x00000002   Code   RO          938    .text.mbed_main     BUILD/NUCLEO_L476RG/ARMC6/mbed-os/cmsis/device/rtos/source/mbed_boot.o
    0x080062d6   0x00000002   PAD
    0x080062d8   0x000002fe   Code   RO        34068    .text.mbed_minimal_formatted_string  BUILD/NUCLEO_L476RG/ARMC6/mbed-os/platform/source/minimal-printf/mbed_printf_implementation.o
    0x080065d6   0x00000002   PAD
    0x080065d8   0x000000ac   Code   RO        34074    .text.mbed_minimal_formatted_string_hexadecimal  BUILD/NUCLEO_L476RG/ARMC6/mbed-os/platform/source/minimal-printf/mbed_printf_implementation.o
    0x08006684   0x0000004c   Code   RO        34070    .text.mbed_minimal_formatted_string_signed  BUILD/NUCLEO_L476RG/ARMC6/mbed-os/platform/source/minimal-printf/mbed_printf_implementation.o
    0x080066d0   0x0000003e   Code   RO        34078    .text.mbed_minimal_formatted_string_string  BUILD/NUCLEO_L476RG/ARMC6/mbed-os/platform/source/minimal-printf/mbed_printf_implementation.o
    0x0800670e   0x00000002   PAD
    0x08006710   0x0000009c   Code   RO        34072    .text.mbed_minimal_formatted_string_unsigned  BUILD/NUCLEO_L476RG/ARMC6/mbed-os/platform/source/minimal-printf/mbed_printf_implementation.o
    0x080067ac   0x0000004a   Code   RO        34080    .text.mbed_minimal_formatted_string_void_pointer  BUILD/NUCLEO_L476RG/ARMC6/mbed-os/platform/source/minimal-printf/mbed_printf_implementation.o
    0x080067f6   0x00000002   PAD
    0x080067f8   0x00000042   Code   RO        34076    .text.mbed_minimal_putchar  BUILD/NUCLEO_L476RG/ARMC6/mbed-os/platform/source/minimal-printf/mbed_printf_implementation.o
    0x0800683a   0x00000002   PAD
    0x0800683c   0x000000b4   Code   RO        32573    .text.mbed_mpu_init  BUILD/NUCLEO_L476RG/ARMC6/mbed-os/hal/source/mpu/mbed_mpu_v7m.o
    0x080068f0   0x00000004   Code   RO          953    .text.mbed_rtos_init  BUILD/NUCLEO_L476RG/ARMC6/mbed-os/cmsis/device/rtos/source/mbed_rtos_rtx.o
    0x080068f4   0x00000030   Code   RO          957    .text.mbed_rtos_init_singleton_mutex  BUILD/NUCLEO_L476RG/ARMC6/mbed-os/cmsis/device/rtos/source/mbed_rtos_rtx.o
    0x08006924   0x000000a8   Code   RO          955    .text.mbed_rtos_start  BUILD/NUCLEO_L476RG/ARMC6/mbed-os/cmsis/device/rtos/source/mbed_rtos_rtx.o
    0x080069cc   0x00000024   Code   RO        41667    .text.mbed_sdk_init  BUILD/NUCLEO_L476RG/ARMC6/mbed-os/targets/TARGET_STM/mbed_overrides.o
    0x080069f0   0x0000001e   Code   RO          934    .text.mbed_start    BUILD/NUCLEO_L476RG/ARMC6/mbed-os/cmsis/device/rtos/source/mbed_boot.o
    0x08006a0e   0x00000002   PAD
    0x08006a10   0x00000002   Code   RO          936    .text.mbed_tfm_init  BUILD/NUCLEO_L476RG/ARMC6/mbed-os/cmsis/device/rtos/source/mbed_boot.o
    0x08006a12   0x00000002   PAD
    0x08006a14   0x0000002c   Code   RO        29349    .text.mbed_tiny_compute_crc32  BUILD/NUCLEO_L476RG/ARMC6/mbed-os/drivers/source/MbedCRC.o
    0x08006a40   0x0000001a   Code   RO          901    .text.mbed_toolchain_init  BUILD/NUCLEO_L476RG/ARMC6/mbed-os/cmsis/device/rtos/TOOLCHAIN_ARM_STD/mbed_boot_arm_std.o
    0x08006a5a   0x00000002   PAD
    0x08006a5c   0x0000001a   Code   RO        33444    .text.name_or_unnamed  BUILD/NUCLEO_L476RG/ARMC6/mbed-os/platform/source/mbed_error.o
    0x08006a76   0x00000002   PAD
    0x08006a78   0x00000092   Code   RO        33663    .text.open          BUILD/NUCLEO_L476RG/ARMC6/mbed-os/platform/source/mbed_retarget.o
    0x08006b0a   0x00000002   PAD
    0x08006b0c   0x0000002c   Code   RO           99    .text.osDelay       BUILD/NUCLEO_L476RG/ARMC6/mbed-os/cmsis/CMSIS_5/CMSIS/RTOS2/RTX/Source/rtx_delay.o
    0x08006b38   0x00000028   Code   RO          235    .text.osKernelGetState  BUILD/NUCLEO_L476RG/ARMC6/mbed-os/cmsis/CMSIS_5/CMSIS/RTOS2/RTX/Source/rtx_kernel.o
    0x08006b60   0x0000002c   Code   RO          223    .text.osKernelInitialize  BUILD/NUCLEO_L476RG/ARMC6/mbed-os/cmsis/CMSIS_5/CMSIS/RTOS2/RTX/Source/rtx_kernel.o
    0x08006b8c   0x0000002a   Code   RO          249    .text.osKernelResume  BUILD/NUCLEO_L476RG/ARMC6/mbed-os/cmsis/CMSIS_5/CMSIS/RTOS2/RTX/Source/rtx_kernel.o
    0x08006bb6   0x00000002   PAD
    0x08006bb8   0x00000028   Code   RO          239    .text.osKernelStart  BUILD/NUCLEO_L476RG/ARMC6/mbed-os/cmsis/CMSIS_5/CMSIS/RTOS2/RTX/Source/rtx_kernel.o
    0x08006be0   0x00000026   Code   RO          247    .text.osKernelSuspend  BUILD/NUCLEO_L476RG/ARMC6/mbed-os/cmsis/CMSIS_5/CMSIS/RTOS2/RTX/Source/rtx_kernel.o
    0x08006c06   0x00000002   PAD
    0x08006c08   0x00000040   Code   RO          435    .text.osMessageQueueGet  BUILD/NUCLEO_L476RG/ARMC6/mbed-os/cmsis/CMSIS_5/CMSIS/RTOS2/RTX/Source/rtx_msgqueue.o
    0x08006c48   0x00000036   Code   RO          423    .text.osMessageQueueNew  BUILD/NUCLEO_L476RG/ARMC6/mbed-os/cmsis/CMSIS_5/CMSIS/RTOS2/RTX/Source/rtx_msgqueue.o
    0x08006c7e   0x00000002   PAD
    0x08006c80   0x00000040   Code   RO          431    .text.osMessageQueuePut  BUILD/NUCLEO_L476RG/ARMC6/mbed-os/cmsis/CMSIS_5/CMSIS/RTOS2/RTX/Source/rtx_msgqueue.o
    0x08006cc0   0x00000032   Code   RO          514    .text.osMutexAcquire  BUILD/NUCLEO_L476RG/ARMC6/mbed-os/cmsis/CMSIS_5/CMSIS/RTOS2/RTX/Source/rtx_mutex.o
    0x08006cf2   0x00000002   PAD
    0x08006cf4   0x0000002e   Code   RO          520    .text.osMutexDelete  BUILD/NUCLEO_L476RG/ARMC6/mbed-os/cmsis/CMSIS_5/CMSIS/RTOS2/RTX/Source/rtx_mutex.o
    0x08006d22   0x00000002   PAD
    0x08006d24   0x0000002e   Code   RO          506    .text.osMutexNew    BUILD/NUCLEO_L476RG/ARMC6/mbed-os/cmsis/CMSIS_5/CMSIS/RTOS2/RTX/Source/rtx_mutex.o
    0x08006d52   0x00000002   PAD
    0x08006d54   0x0000002e   Code   RO          516    .text.osMutexRelease  BUILD/NUCLEO_L476RG/ARMC6/mbed-os/cmsis/CMSIS_5/CMSIS/RTOS2/RTX/Source/rtx_mutex.o
    0x08006d82   0x00000002   PAD
    0x08006d84   0x000000f4   Code   RO          979    .text.osRtxErrorNotify  BUILD/NUCLEO_L476RG/ARMC6/mbed-os/cmsis/device/rtos/source/mbed_rtx_handlers.o
    0x08006e78   0x00000002   Code   RO          614    .text.osRtxEventFlagsObject  BUILD/NUCLEO_L476RG/ARMC6/mbed-os/cmsis/CMSIS_5/CMSIS/RTOS2/RTX/Source/rtx_system.o
    0x08006e7a   0x00000002   PAD
    0x08006e7c   0x00000004   Code   RO          977    .text.osRtxIdleThread  BUILD/NUCLEO_L476RG/ARMC6/mbed-os/cmsis/device/rtos/source/mbed_rtx_handlers.o
    0x08006e80   0x0000000c   Code   RO          606    .text.osRtxKernelGetState  BUILD/NUCLEO_L476RG/ARMC6/mbed-os/cmsis/CMSIS_5/CMSIS/RTOS2/RTX/Source/rtx_system.o
    0x08006e8c   0x0000000c   Code   RO          675    .text.osRtxKernelGetState  BUILD/NUCLEO_L476RG/ARMC6/mbed-os/cmsis/CMSIS_5/CMSIS/RTOS2/RTX/Source/rtx_thread.o
    0x08006e98   0x00000002   Code   RO          221    .text.osRtxKernelPreInit  BUILD/NUCLEO_L476RG/ARMC6/mbed-os/cmsis/CMSIS_5/CMSIS/RTOS2/RTX/Source/rtx_kernel.o
    0x08006e9a   0x00000002   PAD
    0x08006e9c   0x0000000c   Code   RO          269    .text.osRtxKernelState  BUILD/NUCLEO_L476RG/ARMC6/mbed-os/cmsis/CMSIS_5/CMSIS/RTOS2/RTX/Source/rtx_kernel.o
    0x08006ea8   0x00000096   Code   RO          335    .text.osRtxMemoryAlloc  BUILD/NUCLEO_L476RG/ARMC6/mbed-os/cmsis/CMSIS_5/CMSIS/RTOS2/RTX/Source/rtx_memory.o
    0x08006f3e   0x00000002   PAD
    0x08006f40   0x0000006a   Code   RO          337    .text.osRtxMemoryFree  BUILD/NUCLEO_L476RG/ARMC6/mbed-os/cmsis/CMSIS_5/CMSIS/RTOS2/RTX/Source/rtx_memory.o
    0x08006faa   0x00000002   PAD
    0x08006fac   0x00000054   Code   RO          329    .text.osRtxMemoryInit  BUILD/NUCLEO_L476RG/ARMC6/mbed-os/cmsis/CMSIS_5/CMSIS/RTOS2/RTX/Source/rtx_memory.o
    0x08007000   0x00000020   Code   RO          350    .text.osRtxMemoryPoolAlloc  BUILD/NUCLEO_L476RG/ARMC6/mbed-os/cmsis/CMSIS_5/CMSIS/RTOS2/RTX/Source/rtx_mempool.o
    0x08007020   0x0000002a   Code   RO          356    .text.osRtxMemoryPoolFree  BUILD/NUCLEO_L476RG/ARMC6/mbed-os/cmsis/CMSIS_5/CMSIS/RTOS2/RTX/Source/rtx_mempool.o
    0x0800704a   0x00000002   PAD
    0x0800704c   0x00000054   Code   RO          348    .text.osRtxMemoryPoolInit  BUILD/NUCLEO_L476RG/ARMC6/mbed-os/cmsis/CMSIS_5/CMSIS/RTOS2/RTX/Source/rtx_mempool.o
    0x080070a0   0x00000002   Code   RO          618    .text.osRtxMemoryPoolObject  BUILD/NUCLEO_L476RG/ARMC6/mbed-os/cmsis/CMSIS_5/CMSIS/RTOS2/RTX/Source/rtx_system.o
    0x080070a2   0x00000002   PAD
    0x080070a4   0x00000002   Code   RO          620    .text.osRtxMessageObject  BUILD/NUCLEO_L476RG/ARMC6/mbed-os/cmsis/CMSIS_5/CMSIS/RTOS2/RTX/Source/rtx_system.o
    0x080070a6   0x00000002   PAD
    0x080070a8   0x00000002   Code   RO          473    .text.osRtxMessageQueueId  BUILD/NUCLEO_L476RG/ARMC6/mbed-os/cmsis/CMSIS_5/CMSIS/RTOS2/RTX/Source/rtx_msgqueue.o
    0x080070aa   0x00000002   PAD
    0x080070ac   0x00000002   Code   RO          820    .text.osRtxMessageQueueId  BUILD/NUCLEO_L476RG/ARMC6/mbed-os/cmsis/CMSIS_5/CMSIS/RTOS2/RTX/Source/rtx_timer.o
    0x080070ae   0x00000002   PAD
    0x080070b0   0x000000d4   Code   RO          461    .text.osRtxMessageQueuePostProcess  BUILD/NUCLEO_L476RG/ARMC6/mbed-os/cmsis/CMSIS_5/CMSIS/RTOS2/RTX/Source/rtx_msgqueue.o
    0x08007184   0x00000002   Code   RO          526    .text.osRtxMutexId  BUILD/NUCLEO_L476RG/ARMC6/mbed-os/cmsis/CMSIS_5/CMSIS/RTOS2/RTX/Source/rtx_mutex.o
    0x08007186   0x00000002   PAD
    0x08007188   0x00000002   Code   RO          663    .text.osRtxMutexObject  BUILD/NUCLEO_L476RG/ARMC6/mbed-os/cmsis/CMSIS_5/CMSIS/RTOS2/RTX/Source/rtx_thread.o
    0x0800718a   0x00000002   PAD
    0x0800718c   0x0000005a   Code   RO          500    .text.osRtxMutexOwnerRelease  BUILD/NUCLEO_L476RG/ARMC6/mbed-os/cmsis/CMSIS_5/CMSIS/RTOS2/RTX/Source/rtx_mutex.o
    0x080071e6   0x00000002   PAD
    0x080071e8   0x0000004c   Code   RO          504    .text.osRtxMutexOwnerRestore  BUILD/NUCLEO_L476RG/ARMC6/mbed-os/cmsis/CMSIS_5/CMSIS/RTOS2/RTX/Source/rtx_mutex.o
    0x08007234   0x00000002   Code   RO          465    .text.osRtxObject   BUILD/NUCLEO_L476RG/ARMC6/mbed-os/cmsis/CMSIS_5/CMSIS/RTOS2/RTX/Source/rtx_msgqueue.o
    0x08007236   0x00000002   PAD
    0x08007238   0x00000002   Code   RO          502    .text.osRtxObject   BUILD/NUCLEO_L476RG/ARMC6/mbed-os/cmsis/CMSIS_5/CMSIS/RTOS2/RTX/Source/rtx_mutex.o
    0x0800723a   0x00000002   PAD
    0x0800723c   0x00000002   Code   RO          632    .text.osRtxObject   BUILD/NUCLEO_L476RG/ARMC6/mbed-os/cmsis/CMSIS_5/CMSIS/RTOS2/RTX/Source/rtx_system.o
    0x0800723e   0x00000002   PAD
    0x08007240   0x00000002   Code   RO          653    .text.osRtxObject   BUILD/NUCLEO_L476RG/ARMC6/mbed-os/cmsis/CMSIS_5/CMSIS/RTOS2/RTX/Source/rtx_thread.o
    0x08007242   0x00000002   PAD
    0x08007244   0x00000066   Code   RO          608    .text.osRtxPendSV_Handler  BUILD/NUCLEO_L476RG/ARMC6/mbed-os/cmsis/CMSIS_5/CMSIS/RTOS2/RTX/Source/rtx_system.o
    0x080072aa   0x00000002   PAD
    0x080072ac   0x00000030   Code   RO          622    .text.osRtxPostProcess  BUILD/NUCLEO_L476RG/ARMC6/mbed-os/cmsis/CMSIS_5/CMSIS/RTOS2/RTX/Source/rtx_system.o
    0x080072dc   0x00000002   Code   RO          616    .text.osRtxSemaphoreObject  BUILD/NUCLEO_L476RG/ARMC6/mbed-os/cmsis/CMSIS_5/CMSIS/RTOS2/RTX/Source/rtx_system.o
    0x080072de   0x00000002   PAD
    0x080072e0   0x00000044   Code   RO          679    .text.osRtxThreadBlock  BUILD/NUCLEO_L476RG/ARMC6/mbed-os/cmsis/CMSIS_5/CMSIS/RTOS2/RTX/Source/rtx_thread.o
    0x08007324   0x0000009e   Code   RO          687    .text.osRtxThreadDelayInsert  BUILD/NUCLEO_L476RG/ARMC6/mbed-os/cmsis/CMSIS_5/CMSIS/RTOS2/RTX/Source/rtx_thread.o
    0x080073c2   0x00000002   PAD
    0x080073c4   0x00000048   Code   RO          683    .text.osRtxThreadDelayRemove  BUILD/NUCLEO_L476RG/ARMC6/mbed-os/cmsis/CMSIS_5/CMSIS/RTOS2/RTX/Source/rtx_thread.o
    0x0800740c   0x00000058   Code   RO          659    .text.osRtxThreadDelayTick  BUILD/NUCLEO_L476RG/ARMC6/mbed-os/cmsis/CMSIS_5/CMSIS/RTOS2/RTX/Source/rtx_thread.o
    0x08007464   0x00000062   Code   RO          673    .text.osRtxThreadDispatch  BUILD/NUCLEO_L476RG/ARMC6/mbed-os/cmsis/CMSIS_5/CMSIS/RTOS2/RTX/Source/rtx_thread.o
    0x080074c6   0x00000002   PAD
    0x080074c8   0x00000064   Code   RO          779    .text.osRtxThreadFree  BUILD/NUCLEO_L476RG/ARMC6/mbed-os/cmsis/CMSIS_5/CMSIS/RTOS2/RTX/Source/rtx_thread.o
    0x0800752c   0x0000000c   Code   RO          477    .text.osRtxThreadGetRunning  BUILD/NUCLEO_L476RG/ARMC6/mbed-os/cmsis/CMSIS_5/CMSIS/RTOS2/RTX/Source/rtx_msgqueue.o
    0x08007538   0x0000000c   Code   RO          530    .text.osRtxThreadGetRunning  BUILD/NUCLEO_L476RG/ARMC6/mbed-os/cmsis/CMSIS_5/CMSIS/RTOS2/RTX/Source/rtx_mutex.o
    0x08007544   0x0000000c   Code   RO          677    .text.osRtxThreadGetRunning  BUILD/NUCLEO_L476RG/ARMC6/mbed-os/cmsis/CMSIS_5/CMSIS/RTOS2/RTX/Source/rtx_thread.o
    0x08007550   0x00000002   Code   RO          691    .text.osRtxThreadId  BUILD/NUCLEO_L476RG/ARMC6/mbed-os/cmsis/CMSIS_5/CMSIS/RTOS2/RTX/Source/rtx_thread.o
    0x08007552   0x00000002   PAD
    0x08007554   0x00000018   Code   RO          649    .text.osRtxThreadListGet  BUILD/NUCLEO_L476RG/ARMC6/mbed-os/cmsis/CMSIS_5/CMSIS/RTOS2/RTX/Source/rtx_thread.o
    0x0800756c   0x00000034   Code   RO          645    .text.osRtxThreadListPut  BUILD/NUCLEO_L476RG/ARMC6/mbed-os/cmsis/CMSIS_5/CMSIS/RTOS2/RTX/Source/rtx_thread.o
    0x080075a0   0x0000001c   Code   RO          655    .text.osRtxThreadListRemove  BUILD/NUCLEO_L476RG/ARMC6/mbed-os/cmsis/CMSIS_5/CMSIS/RTOS2/RTX/Source/rtx_thread.o
    0x080075bc   0x00000012   Code   RO          661    .text.osRtxThreadListRoot  BUILD/NUCLEO_L476RG/ARMC6/mbed-os/cmsis/CMSIS_5/CMSIS/RTOS2/RTX/Source/rtx_thread.o
    0x080075ce   0x00000002   PAD
    0x080075d0   0x00000034   Code   RO          651    .text.osRtxThreadListSort  BUILD/NUCLEO_L476RG/ARMC6/mbed-os/cmsis/CMSIS_5/CMSIS/RTOS2/RTX/Source/rtx_thread.o
    0x08007604   0x00000002   Code   RO          612    .text.osRtxThreadObject  BUILD/NUCLEO_L476RG/ARMC6/mbed-os/cmsis/CMSIS_5/CMSIS/RTOS2/RTX/Source/rtx_system.o
    0x08007606   0x00000002   PAD
    0x08007608   0x00000002   Code   RO          647    .text.osRtxThreadObject  BUILD/NUCLEO_L476RG/ARMC6/mbed-os/cmsis/CMSIS_5/CMSIS/RTOS2/RTX/Source/rtx_thread.o
    0x0800760a   0x00000002   PAD
    0x0800760c   0x0000002a   Code   RO          745    .text.osRtxThreadPostProcess  BUILD/NUCLEO_L476RG/ARMC6/mbed-os/cmsis/CMSIS_5/CMSIS/RTOS2/RTX/Source/rtx_thread.o
    0x08007636   0x00000002   PAD
    0x08007638   0x00000014   Code   RO          657    .text.osRtxThreadReadyPut  BUILD/NUCLEO_L476RG/ARMC6/mbed-os/cmsis/CMSIS_5/CMSIS/RTOS2/RTX/Source/rtx_thread.o
    0x0800764c   0x00000010   Code   RO          665    .text.osRtxThreadRegPtr  BUILD/NUCLEO_L476RG/ARMC6/mbed-os/cmsis/CMSIS_5/CMSIS/RTOS2/RTX/Source/rtx_thread.o
    0x0800765c   0x0000000e   Code   RO          785    .text.osRtxThreadSetRunning  BUILD/NUCLEO_L476RG/ARMC6/mbed-os/cmsis/CMSIS_5/CMSIS/RTOS2/RTX/Source/rtx_thread.o
    0x0800766a   0x00000002   PAD
    0x0800766c   0x00000030   Code   RO          671    .text.osRtxThreadStackCheck  BUILD/NUCLEO_L476RG/ARMC6/mbed-os/cmsis/CMSIS_5/CMSIS/RTOS2/RTX/Source/rtx_thread.o
    0x0800769c   0x0000004e   Code   RO          689    .text.osRtxThreadStartup  BUILD/NUCLEO_L476RG/ARMC6/mbed-os/cmsis/CMSIS_5/CMSIS/RTOS2/RTX/Source/rtx_thread.o
    0x080076ea   0x00000002   PAD
    0x080076ec   0x00000012   Code   RO          669    .text.osRtxThreadSwitch  BUILD/NUCLEO_L476RG/ARMC6/mbed-os/cmsis/CMSIS_5/CMSIS/RTOS2/RTX/Source/rtx_thread.o
    0x080076fe   0x00000002   PAD
    0x08007700   0x0000003e   Code   RO          685    .text.osRtxThreadWaitEnter  BUILD/NUCLEO_L476RG/ARMC6/mbed-os/cmsis/CMSIS_5/CMSIS/RTOS2/RTX/Source/rtx_thread.o
    0x0800773e   0x00000002   PAD
    0x08007740   0x00000028   Code   RO          681    .text.osRtxThreadWaitExit  BUILD/NUCLEO_L476RG/ARMC6/mbed-os/cmsis/CMSIS_5/CMSIS/RTOS2/RTX/Source/rtx_thread.o
    0x08007768   0x00000076   Code   RO          604    .text.osRtxTick_Handler  BUILD/NUCLEO_L476RG/ARMC6/mbed-os/cmsis/CMSIS_5/CMSIS/RTOS2/RTX/Source/rtx_system.o
    0x080077de   0x00000002   PAD
    0x080077e0   0x0000004a   Code   RO          818    .text.osRtxTimerThread  BUILD/NUCLEO_L476RG/ARMC6/mbed-os/cmsis/CMSIS_5/CMSIS/RTOS2/RTX/Source/rtx_timer.o
    0x0800782a   0x00000002   PAD
    0x0800782c   0x00000056   Code   RO          822    .text.osRtxTimerTick  BUILD/NUCLEO_L476RG/ARMC6/mbed-os/cmsis/CMSIS_5/CMSIS/RTOS2/RTX/Source/rtx_timer.o
    0x08007882   0x00000002   PAD
    0x08007884   0x0000001a   Code   RO          727    .text.osThreadExit  BUILD/NUCLEO_L476RG/ARMC6/mbed-os/cmsis/CMSIS_5/CMSIS/RTOS2/RTX/Source/rtx_thread.o
    0x0800789e   0x00000002   PAD
    0x080078a0   0x00000022   Code   RO          703    .text.osThreadGetId  BUILD/NUCLEO_L476RG/ARMC6/mbed-os/cmsis/CMSIS_5/CMSIS/RTOS2/RTX/Source/rtx_thread.o
    0x080078c2   0x00000002   PAD
    0x080078c4   0x00000036   Code   RO          695    .text.osThreadNew   BUILD/NUCLEO_L476RG/ARMC6/mbed-os/cmsis/CMSIS_5/CMSIS/RTOS2/RTX/Source/rtx_thread.o
    0x080078fa   0x00000002   PAD
    0x080078fc   0x0000001e   Code   RO          905    .text.os_kernel_is_active  BUILD/NUCLEO_L476RG/ARMC6/mbed-os/cmsis/device/rtos/TOOLCHAIN_ARM_STD/mbed_boot_arm_std.o
    0x0800791a   0x00000002   PAD
    0x0800791c   0x000000e4   Code   RO        41678    .text.pin_function  BUILD/NUCLEO_L476RG/ARMC6/mbed-os/targets/TARGET_STM/pinmap.o
    0x08007a00   0x00000078   Code   RO        41694    .text.pin_mode      BUILD/NUCLEO_L476RG/ARMC6/mbed-os/targets/TARGET_STM/pinmap.o
    0x08007a78   0x00000028   Code   RO        32457    .text.pinmap_find_function  BUILD/NUCLEO_L476RG/ARMC6/mbed-os/hal/source/mbed_pinmap_common.o
    0x08007aa0   0x0000002a   Code   RO        32453    .text.pinmap_find_peripheral  BUILD/NUCLEO_L476RG/ARMC6/mbed-os/hal/source/mbed_pinmap_common.o
    0x08007aca   0x00000002   PAD
    0x08007acc   0x00000048   Code   RO        32451    .text.pinmap_merge  BUILD/NUCLEO_L476RG/ARMC6/mbed-os/hal/source/mbed_pinmap_common.o
    0x08007b14   0x0000005c   Code   RO        32455    .text.pinmap_peripheral  BUILD/NUCLEO_L476RG/ARMC6/mbed-os/hal/source/mbed_pinmap_common.o
    0x08007b70   0x00000170   Code   RO        33201    .text.print_context_info  BUILD/NUCLEO_L476RG/ARMC6/mbed-os/platform/source/TARGET_CORTEX_M/mbed_fault_handler.o
    0x08007ce0   0x0000020c   Code   RO        33398    .text.print_error_report  BUILD/NUCLEO_L476RG/ARMC6/mbed-os/platform/source/mbed_error.o
    0x08007eec   0x0000000e   Code   RO         1048    .text.rtos_idle_loop  BUILD/NUCLEO_L476RG/ARMC6/mbed-os/cmsis/device/rtos/source/mbed_rtx_idle.o
    0x08007efa   0x00000002   PAD
    0x08007efc   0x000000d8   Code   RO        32519    .text.schedule_interrupt  BUILD/NUCLEO_L476RG/ARMC6/mbed-os/hal/source/mbed_ticker_api.o
    0x08007fd4   0x0000009e   Code   RO        41822    .text.serial_baud   BUILD/NUCLEO_L476RG/ARMC6/mbed-os/targets/TARGET_STM/serial_api.o
    0x08008072   0x00000002   PAD
    0x08008074   0x00000076   Code   RO        41223    .text.serial_getc   BUILD/NUCLEO_L476RG/ARMC6/mbed-os/targets/TARGET_STM/TARGET_STM32L4/serial_device.o
    0x080080ea   0x00000002   PAD
    0x080080ec   0x000000d0   Code   RO        41816    .text.serial_init   BUILD/NUCLEO_L476RG/ARMC6/mbed-os/targets/TARGET_STM/serial_api.o
    0x080081bc   0x0000000e   Code   RO        32607    .text.serial_init_direct  BUILD/NUCLEO_L476RG/ARMC6/mbed-os/hal/source/static_pinmap.o
    0x080081ca   0x00000002   PAD
    0x080081cc   0x00000026   Code   RO        41225    .text.serial_putc   BUILD/NUCLEO_L476RG/ARMC6/mbed-os/targets/TARGET_STM/TARGET_STM32L4/serial_device.o
    0x080081f2   0x00000002   PAD
    0x080081f4   0x00000020   Code   RO        41838    .text.serial_readable  BUILD/NUCLEO_L476RG/ARMC6/mbed-os/targets/TARGET_STM/serial_api.o
    0x08008214   0x00000016   Code   RO        41840    .text.serial_writable  BUILD/NUCLEO_L476RG/ARMC6/mbed-os/targets/TARGET_STM/serial_api.o
    0x0800822a   0x00000002   PAD
    0x0800822c   0x00000006   Code   RO        32513    .text.set_handler   BUILD/NUCLEO_L476RG/ARMC6/mbed-os/hal/source/mbed_ticker_api.o
    0x08008232   0x00000002   PAD
    0x08008234   0x00000058   Code   RO        33603    .text.sleep_manager_lock_deep_sleep_internal  BUILD/NUCLEO_L476RG/ARMC6/mbed-os/platform/source/mbed_power_mgmt.o
    0x0800828c   0x00000012   Code   RO        33611    .text.sleep_manager_sleep_auto  BUILD/NUCLEO_L476RG/ARMC6/mbed-os/platform/source/mbed_power_mgmt.o
    0x0800829e   0x00000002   PAD
    0x080082a0   0x00000058   Code   RO        33605    .text.sleep_manager_unlock_deep_sleep_internal  BUILD/NUCLEO_L476RG/ARMC6/mbed-os/platform/source/mbed_power_mgmt.o
    0x080082f8   0x00000012   Code   RO        41692    .text.stm_pin_PullConfig  BUILD/NUCLEO_L476RG/ARMC6/mbed-os/targets/TARGET_STM/pinmap.o
    0x0800830a   0x00000002   PAD
    0x0800830c   0x0000001c   Code   RO        41682    .text.stm_pin_SetAFPin  BUILD/NUCLEO_L476RG/ARMC6/mbed-os/targets/TARGET_STM/pinmap.o
    0x08008328   0x00000014   Code   RO          107    .text.svcRtxDelay   BUILD/NUCLEO_L476RG/ARMC6/mbed-os/cmsis/CMSIS_5/CMSIS/RTOS2/RTX/Source/rtx_delay.o
    0x0800833c   0x00000004   Code   RO          237    .text.svcRtxKernelGetState  BUILD/NUCLEO_L476RG/ARMC6/mbed-os/cmsis/CMSIS_5/CMSIS/RTOS2/RTX/Source/rtx_kernel.o
    0x08008340   0x00000160   Code   RO          267    .text.svcRtxKernelInitialize  BUILD/NUCLEO_L476RG/ARMC6/mbed-os/cmsis/CMSIS_5/CMSIS/RTOS2/RTX/Source/rtx_kernel.o
    0x080084a0   0x0000007c   Code   RO          291    .text.svcRtxKernelResume  BUILD/NUCLEO_L476RG/ARMC6/mbed-os/cmsis/CMSIS_5/CMSIS/RTOS2/RTX/Source/rtx_kernel.o
    0x0800851c   0x00000080   Code   RO          271    .text.svcRtxKernelStart  BUILD/NUCLEO_L476RG/ARMC6/mbed-os/cmsis/CMSIS_5/CMSIS/RTOS2/RTX/Source/rtx_kernel.o
    0x0800859c   0x0000003e   Code   RO          283    .text.svcRtxKernelSuspend  BUILD/NUCLEO_L476RG/ARMC6/mbed-os/cmsis/CMSIS_5/CMSIS/RTOS2/RTX/Source/rtx_kernel.o
    0x080085da   0x00000002   PAD
    0x080085dc   0x00000106   Code   RO          485    .text.svcRtxMessageQueueGet  BUILD/NUCLEO_L476RG/ARMC6/mbed-os/cmsis/CMSIS_5/CMSIS/RTOS2/RTX/Source/rtx_msgqueue.o
    0x080086e2   0x00000002   PAD
    0x080086e4   0x00000190   Code   RO          459    .text.svcRtxMessageQueueNew  BUILD/NUCLEO_L476RG/ARMC6/mbed-os/cmsis/CMSIS_5/CMSIS/RTOS2/RTX/Source/rtx_msgqueue.o
    0x08008874   0x000000ea   Code   RO          475    .text.svcRtxMessageQueuePut  BUILD/NUCLEO_L476RG/ARMC6/mbed-os/cmsis/CMSIS_5/CMSIS/RTOS2/RTX/Source/rtx_msgqueue.o
    0x0800895e   0x00000002   PAD
    0x08008960   0x000000c0   Code   RO          528    .text.svcRtxMutexAcquire  BUILD/NUCLEO_L476RG/ARMC6/mbed-os/cmsis/CMSIS_5/CMSIS/RTOS2/RTX/Source/rtx_mutex.o
    0x08008a20   0x000000dc   Code   RO          536    .text.svcRtxMutexDelete  BUILD/NUCLEO_L476RG/ARMC6/mbed-os/cmsis/CMSIS_5/CMSIS/RTOS2/RTX/Source/rtx_mutex.o
    0x08008afc   0x0000007c   Code   RO          522    .text.svcRtxMutexNew  BUILD/NUCLEO_L476RG/ARMC6/mbed-os/cmsis/CMSIS_5/CMSIS/RTOS2/RTX/Source/rtx_mutex.o
    0x08008b78   0x000000ee   Code   RO          532    .text.svcRtxMutexRelease  BUILD/NUCLEO_L476RG/ARMC6/mbed-os/cmsis/CMSIS_5/CMSIS/RTOS2/RTX/Source/rtx_mutex.o
    0x08008c66   0x00000002   PAD
    0x08008c68   0x0000006e   Code   RO          783    .text.svcRtxThreadExit  BUILD/NUCLEO_L476RG/ARMC6/mbed-os/cmsis/CMSIS_5/CMSIS/RTOS2/RTX/Source/rtx_thread.o
    0x08008cd6   0x00000002   PAD
    0x08008cd8   0x00000004   Code   RO          705    .text.svcRtxThreadGetId  BUILD/NUCLEO_L476RG/ARMC6/mbed-os/cmsis/CMSIS_5/CMSIS/RTOS2/RTX/Source/rtx_thread.o
    0x08008cdc   0x00000260   Code   RO          693    .text.svcRtxThreadNew  BUILD/NUCLEO_L476RG/ARMC6/mbed-os/cmsis/CMSIS_5/CMSIS/RTOS2/RTX/Source/rtx_thread.o
    0x08008f3c   0x00000004   Code   RO        33420    .text.system_reset  BUILD/NUCLEO_L476RG/ARMC6/mbed-os/platform/source/mbed_error.o
    0x08008f40   0x00000004   Code   RO        33902    .text.thread_sleep_for  BUILD/NUCLEO_L476RG/ARMC6/mbed-os/platform/source/mbed_thread.o
    0x08008f44   0x00000012   Code   RO         1001    .text.thread_terminate_hook  BUILD/NUCLEO_L476RG/ARMC6/mbed-os/cmsis/device/rtos/source/mbed_rtx_handlers.o
    0x08008f56   0x00000002   PAD
    0x08008f58   0x00000076   Code   RO        32525    .text.ticker_insert_event_us  BUILD/NUCLEO_L476RG/ARMC6/mbed-os/hal/source/mbed_ticker_api.o
    0x08008fce   0x00000002   PAD
    0x08008fd0   0x00000072   Code   RO        32515    .text.ticker_irq_handler  BUILD/NUCLEO_L476RG/ARMC6/mbed-os/hal/source/mbed_ticker_api.o
    0x08009042   0x00000002   PAD
    0x08009044   0x00000008   Code   RO        32529    .text.ticker_read   BUILD/NUCLEO_L476RG/ARMC6/mbed-os/hal/source/mbed_ticker_api.o
    0x0800904c   0x00000022   Code   RO        32531    .text.ticker_read_us  BUILD/NUCLEO_L476RG/ARMC6/mbed-os/hal/source/mbed_ticker_api.o
    0x0800906e   0x00000002   PAD
    0x08009070   0x0000003c   Code   RO        32527    .text.ticker_remove_event  BUILD/NUCLEO_L476RG/ARMC6/mbed-os/hal/source/mbed_ticker_api.o
    0x080090ac   0x0000001e   Code   RO        32509    .text.ticker_set_handler  BUILD/NUCLEO_L476RG/ARMC6/mbed-os/hal/source/mbed_ticker_api.o
    0x080090ca   0x00000002   PAD
    0x080090cc   0x00000030   Code   RO        42000    .text.timer_irq_handler  BUILD/NUCLEO_L476RG/ARMC6/mbed-os/targets/TARGET_STM/us_ticker.o
    0x080090fc   0x0000002c   Code   RO          983    .text.trap_rtx_error  BUILD/NUCLEO_L476RG/ARMC6/mbed-os/cmsis/device/rtos/source/mbed_rtx_handlers.o
    0x08009128   0x000000ec   Code   RO        32517    .text.update_present_time  BUILD/NUCLEO_L476RG/ARMC6/mbed-os/hal/source/mbed_ticker_api.o
    0x08009214   0x00000012   Code   RO        42020    .text.us_ticker_clear_interrupt  BUILD/NUCLEO_L476RG/ARMC6/mbed-os/targets/TARGET_STM/us_ticker.o
    0x08009226   0x00000002   PAD
    0x08009228   0x00000014   Code   RO        42018    .text.us_ticker_disable_interrupt  BUILD/NUCLEO_L476RG/ARMC6/mbed-os/targets/TARGET_STM/us_ticker.o
    0x0800923c   0x00000022   Code   RO        42014    .text.us_ticker_fire_interrupt  BUILD/NUCLEO_L476RG/ARMC6/mbed-os/targets/TARGET_STM/us_ticker.o
    0x0800925e   0x00000002   PAD
    0x08009260   0x0000000a   Code   RO        41998    .text.us_ticker_get_info  BUILD/NUCLEO_L476RG/ARMC6/mbed-os/targets/TARGET_STM/us_ticker.o
    0x0800926a   0x00000002   PAD
    0x0800926c   0x00000018   Code   RO        42008    .text.us_ticker_init  BUILD/NUCLEO_L476RG/ARMC6/mbed-os/targets/TARGET_STM/us_ticker.o
    0x08009284   0x0000001a   Code   RO        32556    .text.us_ticker_irq_handler  BUILD/NUCLEO_L476RG/ARMC6/mbed-os/hal/source/mbed_us_ticker_api.o
    0x0800929e   0x00000002   PAD
    0x080092a0   0x0000000c   Code   RO        42010    .text.us_ticker_read  BUILD/NUCLEO_L476RG/ARMC6/mbed-os/targets/TARGET_STM/us_ticker.o
    0x080092ac   0x0000001c   Code   RO        42012    .text.us_ticker_set_interrupt  BUILD/NUCLEO_L476RG/ARMC6/mbed-os/targets/TARGET_STM/us_ticker.o
    0x080092c8   0x0000001e   Code   RO        33915    .text.wait_us       BUILD/NUCLEO_L476RG/ARMC6/mbed-os/platform/source/mbed_wait_api_no_rtos.o
    0x080092e6   0x00000002   PAD
    0x080092e8   0x00000030   Code   RO        33677    .text.write         BUILD/NUCLEO_L476RG/ARMC6/mbed-os/platform/source/mbed_retarget.o
    0x08009318   0x0000001a   Code   RO        42171    i.fputc             c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l(fputc.o)
    0x08009332   0x0000001a   Code   RO        42657    x$fpl$fpinit        c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\fz_wm.l(fpinit.o)
    0x0800934c   0x000000a0   Data   RO          314    .rodata             BUILD/NUCLEO_L476RG/ARMC6/mbed-os/cmsis/CMSIS_5/CMSIS/RTOS2/RTX/Source/rtx_lib.o
    0x080093ec   0x00000010   Data   RO          964    .rodata..L__const.mbed_rtos_init_singleton_mutex.singleton_mutex_attr  BUILD/NUCLEO_L476RG/ARMC6/mbed-os/cmsis/device/rtos/source/mbed_rtos_rtx.o
    0x080093fc   0x00000010   Data   RO        41136    .rodata.AHBPrescTable  BUILD/NUCLEO_L476RG/ARMC6/mbed-os/targets/TARGET_STM/TARGET_STM32L4/device/system_stm32l4xx.o
    0x0800940c   0x00000008   Data   RO        41137    .rodata.APBPrescTable  BUILD/NUCLEO_L476RG/ARMC6/mbed-os/targets/TARGET_STM/TARGET_STM32L4/device/system_stm32l4xx.o
    0x08009414   0x00000030   Data   RO        41138    .rodata.MSIRangeTable  BUILD/NUCLEO_L476RG/ARMC6/mbed-os/targets/TARGET_STM/TARGET_STM32L4/device/system_stm32l4xx.o
    0x08009444   0x00000090   Data   RO        36356    .rodata.PinMap_UART_RX  BUILD/NUCLEO_L476RG/ARMC6/mbed-os/targets/TARGET_STM/TARGET_STM32L4/TARGET_STM32L476xG/TARGET_NUCLEO_L476RG/PeripheralPins.o
    0x080094d4   0x00000090   Data   RO        36355    .rodata.PinMap_UART_TX  BUILD/NUCLEO_L476RG/ARMC6/mbed-os/targets/TARGET_STM/TARGET_STM32L4/TARGET_STM32L476xG/TARGET_NUCLEO_L476RG/PeripheralPins.o
    0x08009564   0x00000050   Data   RO        33807    .rodata._ZTV12DirectSerial  BUILD/NUCLEO_L476RG/ARMC6/mbed-os/platform/source/mbed_retarget.o
    0x080095b4   0x00000050   Data   RO        32909    .rodata._ZTVN4mbed10FileHandleE  BUILD/NUCLEO_L476RG/ARMC6/mbed-os/platform/source/FileHandle.o
    0x08009604   0x0000000c   Data   RO        29950    .rodata._ZTVN4mbed10TimerEventE  BUILD/NUCLEO_L476RG/ARMC6/mbed-os/drivers/source/TimerEvent.o
    0x08009610   0x0000000c   Data   RO        33193    .rodata._ZTVN4mbed8internal8SysTimerINSt3__15ratioILx1ELx1000EEELb1EEE  BUILD/NUCLEO_L476RG/ARMC6/mbed-os/platform/source/SysTimer.o
    0x0800961c   0x00000018   Data   RO        33818    .rodata._ZZL15default_consolevE14console_pinmap  BUILD/NUCLEO_L476RG/ARMC6/mbed-os/platform/source/mbed_retarget.o
    0x08009634   0x00000008   Data   RO        33803    .rodata.__stderr_name  BUILD/NUCLEO_L476RG/ARMC6/mbed-os/platform/source/mbed_retarget.o
    0x0800963c   0x00000007   Data   RO        33801    .rodata.__stdin_name  BUILD/NUCLEO_L476RG/ARMC6/mbed-os/platform/source/mbed_retarget.o
    0x08009643   0x00000008   Data   RO        33802    .rodata.__stdout_name  BUILD/NUCLEO_L476RG/ARMC6/mbed-os/platform/source/mbed_retarget.o
    0x0800964b   0x00000020   Data   RO        34082    .rodata.cst16       BUILD/NUCLEO_L476RG/ARMC6/mbed-os/platform/source/minimal-printf/mbed_printf_implementation.o
    0x0800966b   0x00000001   PAD
    0x0800966c   0x00000040   Data   RO        41704    .rodata.ll_pin_defines  BUILD/NUCLEO_L476RG/ARMC6/mbed-os/targets/TARGET_STM/pinmap.o
    0x080096ac   0x00000008   Data   RO        32430    .rodata.lp_data     BUILD/NUCLEO_L476RG/ARMC6/mbed-os/hal/source/mbed_lp_ticker_api.o
    0x080096b4   0x00000024   Data   RO        32432    .rodata.lp_interface  BUILD/NUCLEO_L476RG/ARMC6/mbed-os/hal/source/mbed_lp_ticker_api.o
    0x080096d8   0x00000008   Data   RO        41624    .rodata.lp_ticker_get_info.info  BUILD/NUCLEO_L476RG/ARMC6/mbed-os/targets/TARGET_STM/lp_ticker.o
    0x080096e0   0x00000004   Data   RO          316    .rodata.osRtxUserSVC  BUILD/NUCLEO_L476RG/ARMC6/mbed-os/cmsis/CMSIS_5/CMSIS/RTOS2/RTX/Source/rtx_lib.o
    0x080096e4   0x00000024   Data   RO          311    .rodata.os_idle_thread_attr  BUILD/NUCLEO_L476RG/ARMC6/mbed-os/cmsis/CMSIS_5/CMSIS/RTOS2/RTX/Source/rtx_lib.o
    0x08009708   0x00000018   Data   RO          313    .rodata.os_timer_mq_attr  BUILD/NUCLEO_L476RG/ARMC6/mbed-os/cmsis/CMSIS_5/CMSIS/RTOS2/RTX/Source/rtx_lib.o
    0x08009720   0x00000024   Data   RO          312    .rodata.os_timer_thread_attr  BUILD/NUCLEO_L476RG/ARMC6/mbed-os/cmsis/CMSIS_5/CMSIS/RTOS2/RTX/Source/rtx_lib.o
    0x08009744   0x00000013   Data   RO          317    .rodata.str1.1      BUILD/NUCLEO_L476RG/ARMC6/mbed-os/cmsis/CMSIS_5/CMSIS/RTOS2/RTX/Source/rtx_lib.o
    0x08009757   0x00000010   Data   RO          962    .rodata.str1.1      BUILD/NUCLEO_L476RG/ARMC6/mbed-os/cmsis/device/rtos/source/mbed_rtos_rtx.o
    0x08009767   0x00000138   Data   RO         1008    .rodata.str1.1      BUILD/NUCLEO_L476RG/ARMC6/mbed-os/cmsis/device/rtos/source/mbed_rtx_handlers.o
    0x0800989f   0x00000035   Data   RO         1052    .rodata.str1.1      BUILD/NUCLEO_L476RG/ARMC6/mbed-os/cmsis/device/rtos/source/mbed_rtx_idle.o
    0x080098d4   0x00000056   Data   RO        27459    .rodata.str1.1      BUILD/NUCLEO_L476RG/ARMC6/mbed-os/connectivity/netsocket/source/nsapi_dns.o
    0x0800992a   0x0000004e   Data   RO        33042    .rodata.str1.1      BUILD/NUCLEO_L476RG/ARMC6/mbed-os/platform/source/SysTimer.o
    0x08009978   0x000000c8   Data   RO        33205    .rodata.str1.1      BUILD/NUCLEO_L476RG/ARMC6/mbed-os/platform/source/TARGET_CORTEX_M/mbed_fault_handler.o
    0x08009a40   0x000001a4   Data   RO        33451    .rodata.str1.1      BUILD/NUCLEO_L476RG/ARMC6/mbed-os/platform/source/mbed_error.o
    0x08009be4   0x00000063   Data   RO        33812    .rodata.str1.1      BUILD/NUCLEO_L476RG/ARMC6/mbed-os/platform/source/mbed_retarget.o
    0x08009c47   0x00000012   Data   RO        34236    .rodata.str1.1      BUILD/NUCLEO_L476RG/ARMC6/mbed-os/rtos/source/Mutex.o
    0x08009c59   0x00000034   Data   RO        34322    .rodata.str1.1      BUILD/NUCLEO_L476RG/ARMC6/mbed-os/rtos/source/ThisThread.o
    0x08009c8d   0x0000002a   Data   RO        41856    .rodata.str1.1      BUILD/NUCLEO_L476RG/ARMC6/mbed-os/targets/TARGET_STM/serial_api.o
    0x08009cb7   0x00000001   PAD
    0x08009cb8   0x0000000b   Data   RO          297    .rodata.str1.4      BUILD/NUCLEO_L476RG/ARMC6/mbed-os/cmsis/CMSIS_5/CMSIS/RTOS2/RTX/Source/rtx_kernel.o
    0x08009cc3   0x00000001   PAD
    0x08009cc4   0x00000008   Data   RO        32560    .rodata.us_data     BUILD/NUCLEO_L476RG/ARMC6/mbed-os/hal/source/mbed_us_ticker_api.o
    0x08009ccc   0x00000024   Data   RO        32562    .rodata.us_interface  BUILD/NUCLEO_L476RG/ARMC6/mbed-os/hal/source/mbed_us_ticker_api.o
    0x08009cf0   0x00000008   Data   RO        42028    .rodata.us_ticker_get_info.info  BUILD/NUCLEO_L476RG/ARMC6/mbed-os/targets/TARGET_STM/us_ticker.o
    0x08009cf8   0x00000040   Data   RO        42826    Region$$Table       anon$$obj.o


    Execution Region RW_m_crash_data (Base: 0x10000188, Size: 0x00000100, Max: 0x00000100, ABSOLUTE)

    Base Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x10000188   0x00000100   Zero   RW            1    RW_m_crash_data.bss  anon$$obj.o


    Execution Region RW_IRAM2 (Base: 0x10000288, Size: 0x00002030, Max: 0x00007d78, ABSOLUTE)

    Base Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x10000288   0x00000004   Data   RW        42198    .data               c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l(stdio_streams.o)
    0x1000028c   0x00000004   Data   RW        42454    .data               c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l(streamlock.o)
    0x10000290   0x00000004   Data   RW        32431    .data.irq_handler   BUILD/NUCLEO_L476RG/ARMC6/mbed-os/hal/source/mbed_lp_ticker_api.o
    0x10000294   0x000000a4   Data   RW          298    .data.os            BUILD/NUCLEO_L476RG/ARMC6/mbed-os/cmsis/CMSIS_5/CMSIS/RTOS2/RTX/Source/rtx_kernel.o
    0x10000338   0x00000004   Data   RW        36503    .data.uwTickPrio    BUILD/NUCLEO_L476RG/ARMC6/mbed-os/targets/TARGET_STM/TARGET_STM32L4/device/stm32l4xx_hal.o
    0x1000033c   0x00000054   Zero   RW        42194    .bss                c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l(stdio_streams.o)
    0x10000390   0x00000054   Zero   RW        42196    .bss                c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l(stdio_streams.o)
    0x100003e4   0x00000060   Zero   RW        42378    .bss                c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l(libspace.o)
    0x10000444   0x00000040   Zero   RW        42029    .bss.TimMasterHandle  BUILD/NUCLEO_L476RG/ARMC6/mbed-os/targets/TARGET_STM/us_ticker.o
    0x10000484   0x00000010   Zero   RW        33809    .bss._ZL13stdio_in_prev  BUILD/NUCLEO_L476RG/ARMC6/mbed-os/platform/source/mbed_retarget.o
    0x10000494   0x00000010   Zero   RW        33810    .bss._ZL14stdio_out_prev  BUILD/NUCLEO_L476RG/ARMC6/mbed-os/platform/source/mbed_retarget.o
    0x100004a4   0x00000028   Zero   RW        33806    .bss._ZL16filehandle_mutex  BUILD/NUCLEO_L476RG/ARMC6/mbed-os/platform/source/mbed_retarget.o
    0x100004cc   0x00000004   Zero   RW        32894    .bss._ZN4mbed8FileBase5_headE  BUILD/NUCLEO_L476RG/ARMC6/mbed-os/platform/source/FileBase.o
    0x100004d0   0x00000040   Zero   RW        33554    .bss._ZN4mbed8internal12_GLOBAL__N_113os_timer_dataE  BUILD/NUCLEO_L476RG/ARMC6/mbed-os/platform/source/mbed_os_timer.o
    0x10000510   0x00000004   Zero   RW        33819    .bss._ZZL15default_consolevE7console  BUILD/NUCLEO_L476RG/ARMC6/mbed-os/platform/source/mbed_retarget.o
    0x10000514   0x00000004   PAD
    0x10000518   0x00001000   Zero   RW          959    .bss._main_stack    BUILD/NUCLEO_L476RG/ARMC6/mbed-os/cmsis/device/rtos/source/mbed_rtos_rtx.o
    0x10001518   0x00000020   Zero   RW          916    .bss._static_mutexes  BUILD/NUCLEO_L476RG/ARMC6/mbed-os/cmsis/device/rtos/TOOLCHAIN_ARM_STD/mbed_boot_arm_std.o
    0x10001538   0x000000e0   Zero   RW          917    .bss._static_mutexes_mem  BUILD/NUCLEO_L476RG/ARMC6/mbed-os/cmsis/device/rtos/TOOLCHAIN_ARM_STD/mbed_boot_arm_std.o
    0x10001618   0x00000004   Zero   RW        33384    .bss.critical_section_reentrancy_counter  BUILD/NUCLEO_L476RG/ARMC6/mbed-os/platform/source/mbed_critical.o
    0x1000161c   0x00000004   Zero   RW        33452    .bss.error_hook     BUILD/NUCLEO_L476RG/ARMC6/mbed-os/platform/source/mbed_error.o
    0x10001620   0x00000040   Zero   RW        32433    .bss.events         BUILD/NUCLEO_L476RG/ARMC6/mbed-os/hal/source/mbed_lp_ticker_api.o
    0x10001660   0x00000001   Zero   RW        33453    .bss.halt_in_progress  BUILD/NUCLEO_L476RG/ARMC6/mbed-os/platform/source/mbed_error.o
    0x10001661   0x00000003   PAD
    0x10001664   0x00000004   Zero   RW        41377    .bss.irq_handler    BUILD/NUCLEO_L476RG/ARMC6/mbed-os/targets/TARGET_STM/can_api.o
    0x10001668   0x00000040   Zero   RW        33447    .bss.last_error_ctx  BUILD/NUCLEO_L476RG/ARMC6/mbed-os/platform/source/mbed_error.o
    0x100016a8   0x00000004   Zero   RW        41630    .bss.lp_delayed_counter  BUILD/NUCLEO_L476RG/ARMC6/mbed-os/targets/TARGET_STM/lp_ticker.o
    0x100016ac   0x00000001   Zero   RW        41626    .bss.lp_delayed_prog  BUILD/NUCLEO_L476RG/ARMC6/mbed-os/targets/TARGET_STM/lp_ticker.o
    0x100016ad   0x00000001   Zero   RW        33446    .bss.mbed_error_in_progress  BUILD/NUCLEO_L476RG/ARMC6/mbed-os/platform/source/mbed_error.o
    0x100016ae   0x00000002   PAD
    0x100016b0   0x00000004   Zero   RW        33804    .bss.mbed_heap_start  BUILD/NUCLEO_L476RG/ARMC6/mbed-os/platform/source/mbed_retarget.o
    0x100016b4   0x000001f0   Zero   RW          915    .bss.os.libspace    BUILD/NUCLEO_L476RG/ARMC6/mbed-os/cmsis/device/rtos/TOOLCHAIN_ARM_STD/mbed_boot_arm_std.o
    0x100018a4   0x00000034   Zero   RW          320    .bss.os.msgqueue.cb  BUILD/NUCLEO_L476RG/ARMC6/mbed-os/cmsis/CMSIS_5/CMSIS/RTOS2/RTX/Source/rtx_lib.o
    0x100018d8   0x00000680   Zero   RW          319    .bss.os.thread.stack  BUILD/NUCLEO_L476RG/ARMC6/mbed-os/cmsis/CMSIS_5/CMSIS/RTOS2/RTX/Source/rtx_lib.o
    0x10001f58   0x00000002   Zero   RW        41480    .bss.prev_tick_remainder  BUILD/NUCLEO_L476RG/ARMC6/mbed-os/targets/TARGET_STM/hal_tick_overrides.o
    0x10001f5a   0x00000002   PAD
    0x10001f5c   0x00000004   Zero   RW        41479    .bss.prev_time      BUILD/NUCLEO_L476RG/ARMC6/mbed-os/targets/TARGET_STM/hal_tick_overrides.o
    0x10001f60   0x00000001   Zero   RW        41628    .bss.roll_over_flag  BUILD/NUCLEO_L476RG/ARMC6/mbed-os/targets/TARGET_STM/lp_ticker.o
    0x10001f61   0x00000001   Zero   RW        41631    .bss.sleep_manager_locked  BUILD/NUCLEO_L476RG/ARMC6/mbed-os/targets/TARGET_STM/lp_ticker.o
    0x10001f62   0x00000001   Zero   RW        32363    .bss.state_saved    BUILD/NUCLEO_L476RG/ARMC6/mbed-os/hal/source/mbed_critical_section_api.o
    0x10001f63   0x00000001   PAD
    0x10001f64   0x0000004c   Zero   RW        41855    .bss.stdio_uart     BUILD/NUCLEO_L476RG/ARMC6/mbed-os/targets/TARGET_STM/serial_api.o
    0x10001fb0   0x00000004   Zero   RW        41854    .bss.stdio_uart_inited  BUILD/NUCLEO_L476RG/ARMC6/mbed-os/targets/TARGET_STM/serial_api.o
    0x10001fb4   0x00000004   Zero   RW         1007    .bss.terminate_hook  BUILD/NUCLEO_L476RG/ARMC6/mbed-os/cmsis/device/rtos/source/mbed_rtx_handlers.o
    0x10001fb8   0x00000300   Zero   RW        41267    .bss.uart_handlers  BUILD/NUCLEO_L476RG/ARMC6/mbed-os/targets/TARGET_STM/TARGET_STM32L4/serial_device.o


    Execution Region RW_IRAM1 (Base: 0x20000000, Size: 0x00000360, Max: 0x00006000, ABSOLUTE)

    Base Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x20000000   0x00000004   Data   RW        42197    .data               c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l(stdio_streams.o)
    0x20000004   0x00000004   Data   RW        42199    .data               c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l(stdio_streams.o)
    0x20000008   0x00000004   Data   RW        41135    .data.SystemCoreClock  BUILD/NUCLEO_L476RG/ARMC6/mbed-os/targets/TARGET_STM/TARGET_STM32L4/device/system_stm32l4xx.o
    0x2000000c   0x00000040   Data   RW        33817    .data._ZL11filehandles  BUILD/NUCLEO_L476RG/ARMC6/mbed-os/platform/source/mbed_retarget.o
    0x2000004c   0x00000004   Data   RW         1053    .data._ZL14idle_hook_fptr  BUILD/NUCLEO_L476RG/ARMC6/mbed-os/cmsis/device/rtos/source/mbed_rtx_idle.o
    0x20000050   0x00000004   Data   RW        32561    .data.irq_handler   BUILD/NUCLEO_L476RG/ARMC6/mbed-os/hal/source/mbed_us_ticker_api.o
    0x20000054   0x00000054   Zero   RW        42195    .bss                c:\ProgramData\Mbed Studio\mbed-studio-tools\ac6\bin\..\lib\armlib\c_w.l(stdio_streams.o)
    0x200000a8   0x00000001   Zero   RW        41632    .bss.LPTICKER_inited  BUILD/NUCLEO_L476RG/ARMC6/mbed-os/targets/TARGET_STM/lp_ticker.o
    0x200000a9   0x00000003   PAD
    0x200000ac   0x00000038   Zero   RW        41633    .bss.LptimHandle    BUILD/NUCLEO_L476RG/ARMC6/mbed-os/targets/TARGET_STM/lp_ticker.o
    0x200000e4   0x00000004   Zero   RW        33820    .bss._ZGVZL15default_consolevE7console  BUILD/NUCLEO_L476RG/ARMC6/mbed-os/platform/source/mbed_retarget.o
    0x200000e8   0x00000028   Zero   RW        32895    .bss._ZN4mbed8FileBase6_mutexE  BUILD/NUCLEO_L476RG/ARMC6/mbed-os/platform/source/FileBase.o
    0x20000110   0x00000004   Zero   RW        32896    .bss._ZN4mbed8FileBase8_defaultE  BUILD/NUCLEO_L476RG/ARMC6/mbed-os/platform/source/FileBase.o
    0x20000114   0x00000004   Zero   RW        33553    .bss._ZN4mbed8internal8os_timerE  BUILD/NUCLEO_L476RG/ARMC6/mbed-os/platform/source/mbed_os_timer.o
    0x20000118   0x00000024   Zero   RW          960    .bss._main_thread_attr  BUILD/NUCLEO_L476RG/ARMC6/mbed-os/cmsis/device/rtos/source/mbed_rtos_rtx.o
    0x2000013c   0x00000004   Zero   RW        41378    .bss.can_irq_ids    BUILD/NUCLEO_L476RG/ARMC6/mbed-os/targets/TARGET_STM/can_api.o
    0x20000140   0x00000001   Zero   RW        32364    .bss.critical_interrupts_enabled  BUILD/NUCLEO_L476RG/ARMC6/mbed-os/hal/source/mbed_critical_section_api.o
    0x20000141   0x00000001   PAD
    0x20000142   0x00000002   Zero   RW        33613    .bss.deep_sleep_lock  BUILD/NUCLEO_L476RG/ARMC6/mbed-os/platform/source/mbed_power_mgmt.o
    0x20000144   0x00000004   Zero   RW        33450    .bss.error_count    BUILD/NUCLEO_L476RG/ARMC6/mbed-os/platform/source/mbed_error.o
    0x20000148   0x00000040   Zero   RW        32563    .bss.events         BUILD/NUCLEO_L476RG/ARMC6/mbed-os/hal/source/mbed_us_ticker_api.o
    0x20000188   0x00000040   Zero   RW        33449    .bss.first_error_ctx  BUILD/NUCLEO_L476RG/ARMC6/mbed-os/platform/source/mbed_error.o
    0x200001c8   0x00000001   Zero   RW        41627    .bss.future_event_flag  BUILD/NUCLEO_L476RG/ARMC6/mbed-os/targets/TARGET_STM/lp_ticker.o
    0x200001c9   0x00000001   Zero   RW        33448    .bss.is_reboot_error_valid  BUILD/NUCLEO_L476RG/ARMC6/mbed-os/platform/source/mbed_error.o
    0x200001ca   0x00000001   Zero   RW        41625    .bss.lp_Fired       BUILD/NUCLEO_L476RG/ARMC6/mbed-os/targets/TARGET_STM/lp_ticker.o
    0x200001cb   0x00000001   Zero   RW        41629    .bss.lp_cmpok       BUILD/NUCLEO_L476RG/ARMC6/mbed-os/targets/TARGET_STM/lp_ticker.o
    0x200001cc   0x00000004   Zero   RW        33805    .bss.mbed_heap_size  BUILD/NUCLEO_L476RG/ARMC6/mbed-os/platform/source/mbed_retarget.o
    0x200001d0   0x00000004   Zero   RW        41669    .bss.mbed_sdk_inited  BUILD/NUCLEO_L476RG/ARMC6/mbed-os/targets/TARGET_STM/mbed_overrides.o
    0x200001d4   0x00000004   Zero   RW          943    .bss.mbed_stack_isr_size  BUILD/NUCLEO_L476RG/ARMC6/mbed-os/cmsis/device/rtos/source/mbed_boot.o
    0x200001d8   0x00000004   Zero   RW          942    .bss.mbed_stack_isr_start  BUILD/NUCLEO_L476RG/ARMC6/mbed-os/cmsis/device/rtos/source/mbed_boot.o
    0x200001dc   0x00000040   Zero   RW          310    .bss.os             BUILD/NUCLEO_L476RG/ARMC6/mbed-os/cmsis/CMSIS_5/CMSIS/RTOS2/RTX/Source/rtx_lib.o
    0x2000021c   0x00000050   Zero   RW          321    .bss.os.msgqueue.mem  BUILD/NUCLEO_L476RG/ARMC6/mbed-os/cmsis/CMSIS_5/CMSIS/RTOS2/RTX/Source/rtx_lib.o
    0x2000026c   0x00000088   Zero   RW          318    .bss.os.thread.cb   BUILD/NUCLEO_L476RG/ARMC6/mbed-os/cmsis/CMSIS_5/CMSIS/RTOS2/RTX/Source/rtx_lib.o
    0x200002f4   0x00000044   Zero   RW          961    .bss.os.thread.cb   BUILD/NUCLEO_L476RG/ARMC6/mbed-os/cmsis/device/rtos/source/mbed_rtos_rtx.o
    0x20000338   0x00000001   Zero   RW          918    .bss.os_kernel_is_active.os_kernel_active  BUILD/NUCLEO_L476RG/ARMC6/mbed-os/cmsis/device/rtos/TOOLCHAIN_ARM_STD/mbed_boot_arm_std.o
    0x20000339   0x00000003   PAD
    0x2000033c   0x00000004   Zero   RW          965    .bss.singleton_mutex_id  BUILD/NUCLEO_L476RG/ARMC6/mbed-os/cmsis/device/rtos/source/mbed_rtos_rtx.o
    0x20000340   0x0000001c   Zero   RW          963    .bss.singleton_mutex_obj  BUILD/NUCLEO_L476RG/ARMC6/mbed-os/cmsis/device/rtos/source/mbed_rtos_rtx.o
    0x2000035c   0x00000004   Zero   RW        41481    .bss.total_ticks    BUILD/NUCLEO_L476RG/ARMC6/mbed-os/targets/TARGET_STM/hal_tick_overrides.o


    Execution Region ARM_LIB_HEAP (Base: 0x20000360, Size: 0x000178a0, Max: 0x000178a0, ABSOLUTE)

    Base Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x20000360   0x000178a0   Zero   RW            2    ARM_LIB_HEAP.bss    anon$$obj.o


    Execution Region ARM_LIB_STACK (Base: 0x20017c00, Size: 0x00000400, Max: 0x00000400, ABSOLUTE)

    Base Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x20017c00   0x00000400   Zero   RW            3    ARM_LIB_STACK.bss   anon$$obj.o


==============================================================================

Image component sizes


      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   

     33068       2290       2932        248     106188    1469828   Object Totals
         0          0         64          0      97696          0   (incl. Generated)
       476          0          3          0         19          0   (incl. Padding)
      4248        254          0         16        348       4196   Library Totals
        16          0          0          0          0          0   (incl. Padding)

==============================================================================


      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   

     37316       2544       2932        264     106536    1470120   Grand Totals
     37316       2544       2932        264     106536    1470120   ELF Image Totals
     37316       2544       2932        264          0          0   ROM Totals

==============================================================================

    Total RO  Size (Code + RO Data)                40248 (  39.30kB)
    Total RW  Size (RW Data + ZI Data)            106800 ( 104.30kB)
    Total ROM Size (Code + RO Data + RW Data)      40512 (  39.56kB)

==============================================================================

