/*
 * debug.h
 *
 *  Created on: 13 mrt. 2021
 *      Author: evers
 */

#ifndef SRC_DEBUG_H_
#define SRC_DEBUG_H_
#include "stdio.h"
// SEND NEW LINE (CR/LF) CALL => UART_SEND_NL(&huart2);
void UART_SEND_NL(UART_HandleTypeDef *huart)
{
	HAL_UART_Transmit(huart, (uint8_t*)"\n\r", 2, HAL_MAX_DELAY);
}

// SEND CHARACTER CALL => UART_SEND_NL(&huart2, "x", 0);
void UART_SEND_CHR(UART_HandleTypeDef *huart, char c, int m)
{
	HAL_UART_Transmit(huart, (uint8_t*)&c, 1, HAL_MAX_DELAY);
	if(m==1) HAL_UART_Transmit(huart, (uint8_t*)"\n\r", 2, HAL_MAX_DELAY);
}

// SEND Integer Number CALL => UART_SEND_NL(&huart2, Count, 0);
void UART_SEND_INT(UART_HandleTypeDef *huart, int i, int m)
{
	char buffer[10];
	itoa(i, buffer, 10);
	HAL_UART_Transmit(huart, (uint8_t*) buffer, strlen(buffer), HAL_MAX_DELAY);
	if(m==1) HAL_UART_Transmit(huart, (uint8_t*)"\n\r", 2, HAL_MAX_DELAY);
}

// SEND Floating point Number CALL => UART_SEND_NL(&huart2, q, 0);
void UART_SEND_FLT(UART_HandleTypeDef *huart, int p, int m)
{
	char buffer[10];
	sprintf(buffer, "%5.2f", p);
	HAL_UART_Transmit(huart, (uint8_t*) buffer, strlen(buffer), HAL_MAX_DELAY);
	if(m==1) HAL_UART_Transmit(huart, (uint8_t*)"\n\r", 2, HAL_MAX_DELAY);
}

// SEND TEXT CALL => UART_SEND_NL(&huart2, "Test, 0);
void UART_SEND_TXT(UART_HandleTypeDef *huart, char buffer[], int m)
{
	HAL_UART_Transmit(huart, (uint8_t*) buffer, strlen(buffer), HAL_MAX_DELAY);
	if(m==1) HAL_UART_Transmit(huart, (uint8_t*)"\n\r", 2, HAL_MAX_DELAY);
}

// SEND Floating point Number CALL => UART_SEND_NL(&huart2, p, "%5.2f", 0);
void UART_SEND_Any(UART_HandleTypeDef *huart, float p, char *mode, int m)
{
	char buffer[10];
	sprintf(buffer, mode, p);
	HAL_UART_Transmit(huart, (uint8_t*) buffer, strlen(buffer), HAL_MAX_DELAY);
	if(m==1) HAL_UART_Transmit(huart, (uint8_t*)"\n\r", 2, HAL_MAX_DELAY);
}


#endif /* SRC_DEBUG_H_ */
