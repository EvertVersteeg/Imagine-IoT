/*
 * init.c
 *
 *  Created on: May 15, 2021
 *      Author: evers
 */
#include "main.h"
#include "main.c"

extern uint32_t volatile *pEXTI_Pending_Reg			= (uint32_t*)(0x40013C00 + 0x14);    // EXTI => Pending register => Base address from the memory map + offset
extern uint32_t volatile *pEXTI_Int_Mask_Reg			= (uint32_t*)(0x40013C00 + 0x00);    // EXTI => Interrupt mask register (EXTI_IMR)
extern uint32_t volatile *pEXTI_Rising_Trig_Sel_Reg	= (uint32_t*)(0x40013C00 + 0x08);    // EXTI => Rising trigger delection register (EXTI_RTSR)
uint32_t volatile *pGPIOA_Mode_Reg				= (uint32_t*)(0x40020000 + 0x00);    // GPIOA => Mode register
uint32_t volatile *pNVIC_IRQ_EN_Reg				= (uint32_t*)(0xE000E100);   		 // MVIC => IRQ enable register
uint32_t volatile *pCLK_Ctrl_Reg				= (uint32_t*)(0x40023800 + 0x30);    // RCC => GPIOAEN peripheral clock register (RCC_AHB1ENR) (bit 0 = 1 => GPIOA enable
uint32_t volatile *pCLK_Ctrl_Reg_Abp2			= (uint32_t*)(0x40023800 + 0x44);    // RCC => ABP2 peripheral clock enable register (RCC_ABP2ENR) (bit 14 = 1 => system configuration controller clock enable


void init(void)
{
	// GPIOA clock enable
	*pCLK_Ctrl_Reg |= (1 << 0);   // Enable clock GPIOA

	// syscfg clock enabl
	*pCLK_Ctrl_Reg_Abp2 |= (1 << 14);

	// Edge detection riding edge button setting
	*pEXTI_Rising_Trig_Sel_Reg |= ( 1 << 0);

	// EXTI interrupt enable
	*pEXTI_Int_Mask_Reg |= (1 << 0);

	// NVIC irq enable, EXTI0 enable (IRQ 6)
	*pNVIC_IRQ_EN_Reg |= (1 << 6);
}
