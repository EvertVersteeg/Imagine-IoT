/**
  ******************************************************************************
  * @file    main.c
  * @author  Auto-generated by STM32CubeIDE
  * @version V1.0
  * @brief   Default main function.
  ******************************************************************************
*/

#include "main.h"

/*
	uint32_t *pClkCtrlReg =   (uint32_t*)0x40023830;
	uint32_t *pPortDModeReg = (uint32_t*)0x40020C00;
	uint32_t *pPortDOutReg =  (uint32_t*)0x40020C14; */

int main(void)
{
	RCC_AHB1ENR_t volatile *const pClkCtrlReg   = ADDR_REG_AHB1ENR;
	GPIOx_MODE_t  volatile *const pPortDModeReg = ADDR_REG_GPOID_MODE;
	GPIOx_ODR_t   volatile *const pPortDOutReg  = ADDR_REG_GPIOD_OD;

	//1. enable the clock for GPOID peripheral in the AHB1ENR (SET the 3rd bit position)
	pClkCtrlReg->gpiod_en = CLOCK_ENABLE;


	//2. configure the mode of the IO pin as output
	pPortDModeReg->pin_mode_12 = MODE_CONF_OUTPUT;

	while(1)
	{
		//Set 12th bit of the output data register to make I/O pin-12 as HIGH
		pPortDOutReg->pin_12  = PIN_STATE_HIGH;

		//introduce small human observable delay
		//This loop executes for 300K times
		for(uint32_t i=0 ; i < 300000 ; i++ ){
			;
		}

		//Reset 12th bit of the output data register to make I/O pin-12 as LOW
		pPortDOutReg->pin_12  = PIN_STATE_LOW;

		for(uint32_t i=0 ; i < 300000 ; i++ ){
			;
		}
	}


	for(;;);
}
