Analyse objectfile

Object dump:
arm-none-eabi-objdump.exe

With option  -h Dusplay the contents of the section headers:

arm-none-eabi-objdump.exe -h main.o

main.o:     file format elf32-littlearm

Result:
Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000004f4  00000000  00000000  00000034  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
  1 .data         00000001  00000000  00000000  00000528  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000054  00000000  00000000  0000052c  2**2
                  ALLOC
  3 .rodata       00000045  00000000  00000000  0000052c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 .comment      0000004e  00000000  00000000  00000571  2**0
                  CONTENTS, READONLY
  5 .ARM.attributes 0000002e  00000000  00000000  000005bf  2**0
                  CONTENTS, READONLY

This is in elf32 format!

Standard section
text =. section with text (code), data => section with data, rodata = read only data, bss => uninitialized data

With option -d Display assembler contents of executable section (text), sent output to log file

arm-none-eabi-objdump.exe -d main.o > main_log

Compleet display full contents:
arm-none-eabi-objdump.exe -s main.o

Alle sections to log
arm-none-eabi-objdump.exe -D main.o > main_log_2


Make all added to Makefile:
make all

Alle sections to log (led.o)
arm-none-eabi-objdump.exe -D led.o > led_log