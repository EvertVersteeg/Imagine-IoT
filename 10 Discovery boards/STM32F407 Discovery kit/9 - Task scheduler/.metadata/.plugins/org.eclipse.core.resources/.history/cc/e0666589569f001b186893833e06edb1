/**
 ******************************************************************************
 * @file           : main.c
 * @author         : Auto-generated by STM32CubeIDE
 * @brief          : Main program body
 ******************************************************************************
 * @attention
 *
 * <h2><center>&copy; Copyright (c) 2021 STMicroelectronics.
 * All rights reserved.</center></h2>
 *
 * This software component is licensed by ST under BSD 3-Clause license,
 * the "License"; You may not use this file except in compliance with the
 * License. You may obtain a copy of the License at:
 *                        opensource.org/licenses/BSD-3-Clause
 *
 ******************************************************************************
 */

#include <stdint.h>

#if !defined(__SOFT_FP__) && defined(__ARM_FP)
  #warning "FPU is not initialized, but the project is compiling for an FPU. Please initialize the FPU before use."
#endif

#include<stdio.h>

void task1_handler(void);   // This is task 1
void task2_handler(void);   // This is task 2
void task3_handler(void);   // This is task 3
void task4_handler(void);   // This is task 4

/* Some stack memory calulations */
#define SIZE_TASK_STACK		1024U
#define SIZE_SCHED_STACK	1024U

#define SRAM_START			0x20000000U
#define SIZE_SRAM			( (128) * (1024) )
#define SRAM_END			( (SRAM_START) + (SIZE_SRAM) )

#define T1_STACK_START		(SRAM_END)
#define T2_STACK_START		( (SRAM_END) - (1 * SIZE_TASK_STACK))
#define T3_STACK_START		( (SRAM_END) - (2 * SIZE_TASK_STACK))
#define T4_STACK_START		( (SRAM_END) - (3 * SIZE_TASK_STACK))
#define SCHED_STACK_START		( (SRAM_END) - (4 * SIZE_TASK_STACK))

int main(void)
{
    /* Loop forever */
	for(;;);
}


void task1_handler(void)
{
	while(1)
	{
		printf("This is task 1\n");
	}
}
void task2_handler(void)
{
	while(1)
	{
		printf("This is task 2\n");
	}
}
void task3_handler(void)
{
	while(1)
	{
		printf("This is task 3\n");
	}
}
void task4_handler(void)
{
	while(1)
	{
		printf("This is task 4\n");
	}
}



